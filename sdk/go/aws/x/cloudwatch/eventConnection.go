// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudwatch

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an EventBridge connection resource.
//
// > **Note:** EventBridge was formerly known as CloudWatch Events. The functionality is identical.
type EventConnection struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) of the connection.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// Parameters used for authorization. A maximum of 1 are allowed. Documented below.
	AuthParameters pulumix.GPtrOutput[EventConnectionAuthParameters, EventConnectionAuthParametersOutput] `pulumi:"authParameters"`
	// Choose the type of authorization to use for the connection. One of `API_KEY`,`BASIC`,`OAUTH_CLIENT_CREDENTIALS`.
	AuthorizationType pulumix.Output[string] `pulumi:"authorizationType"`
	// Enter a description for the connection. Maximum of 512 characters.
	Description pulumix.Output[*string] `pulumi:"description"`
	// The name of the new connection. Maximum of 64 characters consisting of numbers, lower/upper case letters, .,-,_.
	Name pulumix.Output[string] `pulumi:"name"`
	// The Amazon Resource Name (ARN) of the secret created from the authorization parameters specified for the connection.
	SecretArn pulumix.Output[string] `pulumi:"secretArn"`
}

// NewEventConnection registers a new resource with the given unique name, arguments, and options.
func NewEventConnection(ctx *pulumi.Context,
	name string, args *EventConnectionArgs, opts ...pulumi.ResourceOption) (*EventConnection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AuthParameters == nil {
		return nil, errors.New("invalid value for required argument 'AuthParameters'")
	}
	if args.AuthorizationType == nil {
		return nil, errors.New("invalid value for required argument 'AuthorizationType'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource EventConnection
	err := ctx.RegisterResource("aws:cloudwatch/eventConnection:EventConnection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEventConnection gets an existing EventConnection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEventConnection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EventConnectionState, opts ...pulumi.ResourceOption) (*EventConnection, error) {
	var resource EventConnection
	err := ctx.ReadResource("aws:cloudwatch/eventConnection:EventConnection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EventConnection resources.
type eventConnectionState struct {
	// The Amazon Resource Name (ARN) of the connection.
	Arn *string `pulumi:"arn"`
	// Parameters used for authorization. A maximum of 1 are allowed. Documented below.
	AuthParameters *EventConnectionAuthParameters `pulumi:"authParameters"`
	// Choose the type of authorization to use for the connection. One of `API_KEY`,`BASIC`,`OAUTH_CLIENT_CREDENTIALS`.
	AuthorizationType *string `pulumi:"authorizationType"`
	// Enter a description for the connection. Maximum of 512 characters.
	Description *string `pulumi:"description"`
	// The name of the new connection. Maximum of 64 characters consisting of numbers, lower/upper case letters, .,-,_.
	Name *string `pulumi:"name"`
	// The Amazon Resource Name (ARN) of the secret created from the authorization parameters specified for the connection.
	SecretArn *string `pulumi:"secretArn"`
}

type EventConnectionState struct {
	// The Amazon Resource Name (ARN) of the connection.
	Arn pulumix.Input[*string]
	// Parameters used for authorization. A maximum of 1 are allowed. Documented below.
	AuthParameters pulumix.Input[*EventConnectionAuthParametersArgs]
	// Choose the type of authorization to use for the connection. One of `API_KEY`,`BASIC`,`OAUTH_CLIENT_CREDENTIALS`.
	AuthorizationType pulumix.Input[*string]
	// Enter a description for the connection. Maximum of 512 characters.
	Description pulumix.Input[*string]
	// The name of the new connection. Maximum of 64 characters consisting of numbers, lower/upper case letters, .,-,_.
	Name pulumix.Input[*string]
	// The Amazon Resource Name (ARN) of the secret created from the authorization parameters specified for the connection.
	SecretArn pulumix.Input[*string]
}

func (EventConnectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*eventConnectionState)(nil)).Elem()
}

type eventConnectionArgs struct {
	// Parameters used for authorization. A maximum of 1 are allowed. Documented below.
	AuthParameters EventConnectionAuthParameters `pulumi:"authParameters"`
	// Choose the type of authorization to use for the connection. One of `API_KEY`,`BASIC`,`OAUTH_CLIENT_CREDENTIALS`.
	AuthorizationType string `pulumi:"authorizationType"`
	// Enter a description for the connection. Maximum of 512 characters.
	Description *string `pulumi:"description"`
	// The name of the new connection. Maximum of 64 characters consisting of numbers, lower/upper case letters, .,-,_.
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a EventConnection resource.
type EventConnectionArgs struct {
	// Parameters used for authorization. A maximum of 1 are allowed. Documented below.
	AuthParameters pulumix.Input[*EventConnectionAuthParametersArgs]
	// Choose the type of authorization to use for the connection. One of `API_KEY`,`BASIC`,`OAUTH_CLIENT_CREDENTIALS`.
	AuthorizationType pulumix.Input[string]
	// Enter a description for the connection. Maximum of 512 characters.
	Description pulumix.Input[*string]
	// The name of the new connection. Maximum of 64 characters consisting of numbers, lower/upper case letters, .,-,_.
	Name pulumix.Input[*string]
}

func (EventConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*eventConnectionArgs)(nil)).Elem()
}

type EventConnectionOutput struct{ *pulumi.OutputState }

func (EventConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventConnection)(nil)).Elem()
}

func (o EventConnectionOutput) ToEventConnectionOutput() EventConnectionOutput {
	return o
}

func (o EventConnectionOutput) ToEventConnectionOutputWithContext(ctx context.Context) EventConnectionOutput {
	return o
}

func (o EventConnectionOutput) ToOutput(ctx context.Context) pulumix.Output[EventConnection] {
	return pulumix.Output[EventConnection]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) of the connection.
func (o EventConnectionOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[EventConnection](o, func(v EventConnection) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Parameters used for authorization. A maximum of 1 are allowed. Documented below.
func (o EventConnectionOutput) AuthParameters() pulumix.GPtrOutput[EventConnectionAuthParameters, EventConnectionAuthParametersOutput] {
	value := pulumix.Apply[EventConnection](o, func(v EventConnection) pulumix.GPtrOutput[EventConnectionAuthParameters, EventConnectionAuthParametersOutput] {
		return v.AuthParameters
	})
	unwrapped := pulumix.Flatten[*EventConnectionAuthParameters, pulumix.GPtrOutput[EventConnectionAuthParameters, EventConnectionAuthParametersOutput]](value)
	return pulumix.GPtrOutput[EventConnectionAuthParameters, EventConnectionAuthParametersOutput]{OutputState: unwrapped.OutputState}
}

// Choose the type of authorization to use for the connection. One of `API_KEY`,`BASIC`,`OAUTH_CLIENT_CREDENTIALS`.
func (o EventConnectionOutput) AuthorizationType() pulumix.Output[string] {
	value := pulumix.Apply[EventConnection](o, func(v EventConnection) pulumix.Output[string] { return v.AuthorizationType })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Enter a description for the connection. Maximum of 512 characters.
func (o EventConnectionOutput) Description() pulumix.Output[*string] {
	value := pulumix.Apply[EventConnection](o, func(v EventConnection) pulumix.Output[*string] { return v.Description })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The name of the new connection. Maximum of 64 characters consisting of numbers, lower/upper case letters, .,-,_.
func (o EventConnectionOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[EventConnection](o, func(v EventConnection) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The Amazon Resource Name (ARN) of the secret created from the authorization parameters specified for the connection.
func (o EventConnectionOutput) SecretArn() pulumix.Output[string] {
	value := pulumix.Apply[EventConnection](o, func(v EventConnection) pulumix.Output[string] { return v.SecretArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(EventConnectionOutput{})
}
