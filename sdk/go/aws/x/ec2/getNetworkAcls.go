// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

func GetNetworkAcls(ctx *pulumi.Context, args *GetNetworkAclsArgs, opts ...pulumi.InvokeOption) (*GetNetworkAclsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetNetworkAclsResult
	err := ctx.Invoke("aws:ec2/getNetworkAcls:getNetworkAcls", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNetworkAcls.
type GetNetworkAclsArgs struct {
	// Custom filter block as described below.
	//
	// More complex filters can be expressed using one or more `filter` sub-blocks,
	// which take the following arguments:
	Filters []GetNetworkAclsFilter `pulumi:"filters"`
	// Map of tags, each pair of which must exactly match
	// a pair on the desired network ACLs.
	Tags map[string]string `pulumi:"tags"`
	// VPC ID that you want to filter from.
	VpcId *string `pulumi:"vpcId"`
}

// A collection of values returned by getNetworkAcls.
type GetNetworkAclsResult struct {
	Filters []GetNetworkAclsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// List of all the network ACL ids found.
	Ids   []string          `pulumi:"ids"`
	Tags  map[string]string `pulumi:"tags"`
	VpcId *string           `pulumi:"vpcId"`
}

func GetNetworkAclsOutput(ctx *pulumi.Context, args GetNetworkAclsOutputArgs, opts ...pulumi.InvokeOption) GetNetworkAclsResultOutput {
	outputResult := pulumix.ApplyErr[*GetNetworkAclsArgs](args.ToOutput(), func(plainArgs *GetNetworkAclsArgs) (*GetNetworkAclsResult, error) {
		return GetNetworkAcls(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[GetNetworkAclsResultOutput, *GetNetworkAclsResult](outputResult)
}

// A collection of arguments for invoking getNetworkAcls.
type GetNetworkAclsOutputArgs struct {
	// Custom filter block as described below.
	//
	// More complex filters can be expressed using one or more `filter` sub-blocks,
	// which take the following arguments:
	Filters pulumix.Input[[]*GetNetworkAclsFilterArgs] `pulumi:"filters"`
	// Map of tags, each pair of which must exactly match
	// a pair on the desired network ACLs.
	Tags pulumix.Input[map[string]string] `pulumi:"tags"`
	// VPC ID that you want to filter from.
	VpcId pulumix.Input[*string] `pulumi:"vpcId"`
}

func (args GetNetworkAclsOutputArgs) ToOutput() pulumix.Output[*GetNetworkAclsArgs] {
	allArgs := pulumix.All(
		args.Filters.ToOutput(context.Background()).AsAny(),
		args.Tags.ToOutput(context.Background()).AsAny(),
		args.VpcId.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *GetNetworkAclsArgs {
		return &GetNetworkAclsArgs{
			Filters: resolvedArgs[0].([]GetNetworkAclsFilter),
			Tags:    resolvedArgs[1].(map[string]string),
			VpcId:   resolvedArgs[2].(*string),
		}
	})
}

type GetNetworkAclsResultOutput struct{ *pulumi.OutputState }

func (GetNetworkAclsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkAclsResult)(nil)).Elem()
}

func (o GetNetworkAclsResultOutput) ToOutput(context.Context) pulumix.Output[*GetNetworkAclsResult] {
	return pulumix.Output[*GetNetworkAclsResult]{
		OutputState: o.OutputState,
	}
}

func (o GetNetworkAclsResultOutput) Filters() pulumix.GArrayOutput[GetNetworkAclsFilter, GetNetworkAclsFilterOutput] {
	value := pulumix.Apply[*GetNetworkAclsResult](o, func(v *GetNetworkAclsResult) []GetNetworkAclsFilter { return v.Filters })
	return pulumix.GArrayOutput[GetNetworkAclsFilter, GetNetworkAclsFilterOutput]{
		OutputState: value.OutputState,
	}
}

func (o GetNetworkAclsResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*GetNetworkAclsResult](o, func(v *GetNetworkAclsResult) string { return v.Id })
}

func (o GetNetworkAclsResultOutput) Ids() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[*GetNetworkAclsResult](o, func(v *GetNetworkAclsResult) []string { return v.Ids })
	return pulumix.ArrayOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o GetNetworkAclsResultOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[*GetNetworkAclsResult](o, func(v *GetNetworkAclsResult) map[string]string { return v.Tags })
	return pulumix.MapOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o GetNetworkAclsResultOutput) VpcId() pulumix.Output[*string] {
	return pulumix.Apply[*GetNetworkAclsResult](o, func(v *GetNetworkAclsResult) *string { return v.VpcId })
}
