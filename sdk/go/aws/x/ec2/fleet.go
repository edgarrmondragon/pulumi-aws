// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a resource to manage EC2 Fleets.
type Fleet struct {
	pulumi.CustomResourceState

	// The ARN of the fleet
	Arn pulumix.Output[string] `pulumi:"arn"`
	// Reserved.
	Context pulumix.Output[*string] `pulumi:"context"`
	// Whether running instances should be terminated if the total target capacity of the EC2 Fleet is decreased below the current size of the EC2. Valid values: `no-termination`, `termination`. Defaults to `termination`. Supported only for fleets of type `maintain`.
	ExcessCapacityTerminationPolicy pulumix.Output[*string] `pulumi:"excessCapacityTerminationPolicy"`
	// Information about the instances that were launched by the fleet. Available only when `type` is set to `instant`.
	FleetInstanceSets pulumix.GArrayOutput[FleetFleetInstanceSet, FleetFleetInstanceSetOutput] `pulumi:"fleetInstanceSets"`
	// The state of the EC2 Fleet.
	FleetState pulumix.Output[string] `pulumi:"fleetState"`
	// The number of units fulfilled by this request compared to the set target capacity.
	FulfilledCapacity pulumix.Output[float64] `pulumi:"fulfilledCapacity"`
	// The number of units fulfilled by this request compared to the set target On-Demand capacity.
	FulfilledOnDemandCapacity pulumix.Output[float64] `pulumi:"fulfilledOnDemandCapacity"`
	// Nested argument containing EC2 Launch Template configurations. Defined below.
	LaunchTemplateConfigs pulumix.GArrayOutput[FleetLaunchTemplateConfig, FleetLaunchTemplateConfigOutput] `pulumi:"launchTemplateConfigs"`
	// Nested argument containing On-Demand configurations. Defined below.
	OnDemandOptions pulumix.GPtrOutput[FleetOnDemandOptions, FleetOnDemandOptionsOutput] `pulumi:"onDemandOptions"`
	// Whether EC2 Fleet should replace unhealthy instances. Defaults to `false`. Supported only for fleets of type `maintain`.
	ReplaceUnhealthyInstances pulumix.Output[*bool] `pulumi:"replaceUnhealthyInstances"`
	// Nested argument containing Spot configurations. Defined below.
	SpotOptions pulumix.GPtrOutput[FleetSpotOptions, FleetSpotOptionsOutput] `pulumi:"spotOptions"`
	// Map of Fleet tags. To tag instances at launch, specify the tags in the Launch Template. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// Nested argument containing target capacity configurations. Defined below.
	TargetCapacitySpecification pulumix.GPtrOutput[FleetTargetCapacitySpecification, FleetTargetCapacitySpecificationOutput] `pulumi:"targetCapacitySpecification"`
	// Whether to terminate instances for an EC2 Fleet if it is deleted successfully. Defaults to `false`.
	TerminateInstances pulumix.Output[*bool] `pulumi:"terminateInstances"`
	// Whether running instances should be terminated when the EC2 Fleet expires. Defaults to `false`.
	TerminateInstancesWithExpiration pulumix.Output[*bool] `pulumi:"terminateInstancesWithExpiration"`
	// The type of request. Indicates whether the EC2 Fleet only requests the target capacity, or also attempts to maintain it. Valid values: `maintain`, `request`, `instant`. Defaults to `maintain`.
	Type pulumix.Output[*string] `pulumi:"type"`
	// The start date and time of the request, in UTC format (for example, YYYY-MM-DDTHH:MM:SSZ). The default is to start fulfilling the request immediately.
	ValidFrom pulumix.Output[*string] `pulumi:"validFrom"`
	// The end date and time of the request, in UTC format (for example, YYYY-MM-DDTHH:MM:SSZ). At this point, no new EC2 Fleet requests are placed or able to fulfill the request. If no value is specified, the request remains until you cancel it.
	ValidUntil pulumix.Output[*string] `pulumi:"validUntil"`
}

// NewFleet registers a new resource with the given unique name, arguments, and options.
func NewFleet(ctx *pulumi.Context,
	name string, args *FleetArgs, opts ...pulumi.ResourceOption) (*Fleet, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.LaunchTemplateConfigs == nil {
		return nil, errors.New("invalid value for required argument 'LaunchTemplateConfigs'")
	}
	if args.TargetCapacitySpecification == nil {
		return nil, errors.New("invalid value for required argument 'TargetCapacitySpecification'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Fleet
	err := ctx.RegisterResource("aws:ec2/fleet:Fleet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFleet gets an existing Fleet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFleet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FleetState, opts ...pulumi.ResourceOption) (*Fleet, error) {
	var resource Fleet
	err := ctx.ReadResource("aws:ec2/fleet:Fleet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Fleet resources.
type fleetState struct {
	// The ARN of the fleet
	Arn *string `pulumi:"arn"`
	// Reserved.
	Context *string `pulumi:"context"`
	// Whether running instances should be terminated if the total target capacity of the EC2 Fleet is decreased below the current size of the EC2. Valid values: `no-termination`, `termination`. Defaults to `termination`. Supported only for fleets of type `maintain`.
	ExcessCapacityTerminationPolicy *string `pulumi:"excessCapacityTerminationPolicy"`
	// Information about the instances that were launched by the fleet. Available only when `type` is set to `instant`.
	FleetInstanceSets []FleetFleetInstanceSet `pulumi:"fleetInstanceSets"`
	// The state of the EC2 Fleet.
	FleetState *string `pulumi:"fleetState"`
	// The number of units fulfilled by this request compared to the set target capacity.
	FulfilledCapacity *float64 `pulumi:"fulfilledCapacity"`
	// The number of units fulfilled by this request compared to the set target On-Demand capacity.
	FulfilledOnDemandCapacity *float64 `pulumi:"fulfilledOnDemandCapacity"`
	// Nested argument containing EC2 Launch Template configurations. Defined below.
	LaunchTemplateConfigs []FleetLaunchTemplateConfig `pulumi:"launchTemplateConfigs"`
	// Nested argument containing On-Demand configurations. Defined below.
	OnDemandOptions *FleetOnDemandOptions `pulumi:"onDemandOptions"`
	// Whether EC2 Fleet should replace unhealthy instances. Defaults to `false`. Supported only for fleets of type `maintain`.
	ReplaceUnhealthyInstances *bool `pulumi:"replaceUnhealthyInstances"`
	// Nested argument containing Spot configurations. Defined below.
	SpotOptions *FleetSpotOptions `pulumi:"spotOptions"`
	// Map of Fleet tags. To tag instances at launch, specify the tags in the Launch Template. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// Nested argument containing target capacity configurations. Defined below.
	TargetCapacitySpecification *FleetTargetCapacitySpecification `pulumi:"targetCapacitySpecification"`
	// Whether to terminate instances for an EC2 Fleet if it is deleted successfully. Defaults to `false`.
	TerminateInstances *bool `pulumi:"terminateInstances"`
	// Whether running instances should be terminated when the EC2 Fleet expires. Defaults to `false`.
	TerminateInstancesWithExpiration *bool `pulumi:"terminateInstancesWithExpiration"`
	// The type of request. Indicates whether the EC2 Fleet only requests the target capacity, or also attempts to maintain it. Valid values: `maintain`, `request`, `instant`. Defaults to `maintain`.
	Type *string `pulumi:"type"`
	// The start date and time of the request, in UTC format (for example, YYYY-MM-DDTHH:MM:SSZ). The default is to start fulfilling the request immediately.
	ValidFrom *string `pulumi:"validFrom"`
	// The end date and time of the request, in UTC format (for example, YYYY-MM-DDTHH:MM:SSZ). At this point, no new EC2 Fleet requests are placed or able to fulfill the request. If no value is specified, the request remains until you cancel it.
	ValidUntil *string `pulumi:"validUntil"`
}

type FleetState struct {
	// The ARN of the fleet
	Arn pulumix.Input[*string]
	// Reserved.
	Context pulumix.Input[*string]
	// Whether running instances should be terminated if the total target capacity of the EC2 Fleet is decreased below the current size of the EC2. Valid values: `no-termination`, `termination`. Defaults to `termination`. Supported only for fleets of type `maintain`.
	ExcessCapacityTerminationPolicy pulumix.Input[*string]
	// Information about the instances that were launched by the fleet. Available only when `type` is set to `instant`.
	FleetInstanceSets pulumix.Input[[]*FleetFleetInstanceSetArgs]
	// The state of the EC2 Fleet.
	FleetState pulumix.Input[*string]
	// The number of units fulfilled by this request compared to the set target capacity.
	FulfilledCapacity pulumix.Input[*float64]
	// The number of units fulfilled by this request compared to the set target On-Demand capacity.
	FulfilledOnDemandCapacity pulumix.Input[*float64]
	// Nested argument containing EC2 Launch Template configurations. Defined below.
	LaunchTemplateConfigs pulumix.Input[[]*FleetLaunchTemplateConfigArgs]
	// Nested argument containing On-Demand configurations. Defined below.
	OnDemandOptions pulumix.Input[*FleetOnDemandOptionsArgs]
	// Whether EC2 Fleet should replace unhealthy instances. Defaults to `false`. Supported only for fleets of type `maintain`.
	ReplaceUnhealthyInstances pulumix.Input[*bool]
	// Nested argument containing Spot configurations. Defined below.
	SpotOptions pulumix.Input[*FleetSpotOptionsArgs]
	// Map of Fleet tags. To tag instances at launch, specify the tags in the Launch Template. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// Nested argument containing target capacity configurations. Defined below.
	TargetCapacitySpecification pulumix.Input[*FleetTargetCapacitySpecificationArgs]
	// Whether to terminate instances for an EC2 Fleet if it is deleted successfully. Defaults to `false`.
	TerminateInstances pulumix.Input[*bool]
	// Whether running instances should be terminated when the EC2 Fleet expires. Defaults to `false`.
	TerminateInstancesWithExpiration pulumix.Input[*bool]
	// The type of request. Indicates whether the EC2 Fleet only requests the target capacity, or also attempts to maintain it. Valid values: `maintain`, `request`, `instant`. Defaults to `maintain`.
	Type pulumix.Input[*string]
	// The start date and time of the request, in UTC format (for example, YYYY-MM-DDTHH:MM:SSZ). The default is to start fulfilling the request immediately.
	ValidFrom pulumix.Input[*string]
	// The end date and time of the request, in UTC format (for example, YYYY-MM-DDTHH:MM:SSZ). At this point, no new EC2 Fleet requests are placed or able to fulfill the request. If no value is specified, the request remains until you cancel it.
	ValidUntil pulumix.Input[*string]
}

func (FleetState) ElementType() reflect.Type {
	return reflect.TypeOf((*fleetState)(nil)).Elem()
}

type fleetArgs struct {
	// Reserved.
	Context *string `pulumi:"context"`
	// Whether running instances should be terminated if the total target capacity of the EC2 Fleet is decreased below the current size of the EC2. Valid values: `no-termination`, `termination`. Defaults to `termination`. Supported only for fleets of type `maintain`.
	ExcessCapacityTerminationPolicy *string `pulumi:"excessCapacityTerminationPolicy"`
	// Information about the instances that were launched by the fleet. Available only when `type` is set to `instant`.
	FleetInstanceSets []FleetFleetInstanceSet `pulumi:"fleetInstanceSets"`
	// The state of the EC2 Fleet.
	FleetState *string `pulumi:"fleetState"`
	// The number of units fulfilled by this request compared to the set target capacity.
	FulfilledCapacity *float64 `pulumi:"fulfilledCapacity"`
	// The number of units fulfilled by this request compared to the set target On-Demand capacity.
	FulfilledOnDemandCapacity *float64 `pulumi:"fulfilledOnDemandCapacity"`
	// Nested argument containing EC2 Launch Template configurations. Defined below.
	LaunchTemplateConfigs []FleetLaunchTemplateConfig `pulumi:"launchTemplateConfigs"`
	// Nested argument containing On-Demand configurations. Defined below.
	OnDemandOptions *FleetOnDemandOptions `pulumi:"onDemandOptions"`
	// Whether EC2 Fleet should replace unhealthy instances. Defaults to `false`. Supported only for fleets of type `maintain`.
	ReplaceUnhealthyInstances *bool `pulumi:"replaceUnhealthyInstances"`
	// Nested argument containing Spot configurations. Defined below.
	SpotOptions *FleetSpotOptions `pulumi:"spotOptions"`
	// Map of Fleet tags. To tag instances at launch, specify the tags in the Launch Template. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Nested argument containing target capacity configurations. Defined below.
	TargetCapacitySpecification FleetTargetCapacitySpecification `pulumi:"targetCapacitySpecification"`
	// Whether to terminate instances for an EC2 Fleet if it is deleted successfully. Defaults to `false`.
	TerminateInstances *bool `pulumi:"terminateInstances"`
	// Whether running instances should be terminated when the EC2 Fleet expires. Defaults to `false`.
	TerminateInstancesWithExpiration *bool `pulumi:"terminateInstancesWithExpiration"`
	// The type of request. Indicates whether the EC2 Fleet only requests the target capacity, or also attempts to maintain it. Valid values: `maintain`, `request`, `instant`. Defaults to `maintain`.
	Type *string `pulumi:"type"`
	// The start date and time of the request, in UTC format (for example, YYYY-MM-DDTHH:MM:SSZ). The default is to start fulfilling the request immediately.
	ValidFrom *string `pulumi:"validFrom"`
	// The end date and time of the request, in UTC format (for example, YYYY-MM-DDTHH:MM:SSZ). At this point, no new EC2 Fleet requests are placed or able to fulfill the request. If no value is specified, the request remains until you cancel it.
	ValidUntil *string `pulumi:"validUntil"`
}

// The set of arguments for constructing a Fleet resource.
type FleetArgs struct {
	// Reserved.
	Context pulumix.Input[*string]
	// Whether running instances should be terminated if the total target capacity of the EC2 Fleet is decreased below the current size of the EC2. Valid values: `no-termination`, `termination`. Defaults to `termination`. Supported only for fleets of type `maintain`.
	ExcessCapacityTerminationPolicy pulumix.Input[*string]
	// Information about the instances that were launched by the fleet. Available only when `type` is set to `instant`.
	FleetInstanceSets pulumix.Input[[]*FleetFleetInstanceSetArgs]
	// The state of the EC2 Fleet.
	FleetState pulumix.Input[*string]
	// The number of units fulfilled by this request compared to the set target capacity.
	FulfilledCapacity pulumix.Input[*float64]
	// The number of units fulfilled by this request compared to the set target On-Demand capacity.
	FulfilledOnDemandCapacity pulumix.Input[*float64]
	// Nested argument containing EC2 Launch Template configurations. Defined below.
	LaunchTemplateConfigs pulumix.Input[[]*FleetLaunchTemplateConfigArgs]
	// Nested argument containing On-Demand configurations. Defined below.
	OnDemandOptions pulumix.Input[*FleetOnDemandOptionsArgs]
	// Whether EC2 Fleet should replace unhealthy instances. Defaults to `false`. Supported only for fleets of type `maintain`.
	ReplaceUnhealthyInstances pulumix.Input[*bool]
	// Nested argument containing Spot configurations. Defined below.
	SpotOptions pulumix.Input[*FleetSpotOptionsArgs]
	// Map of Fleet tags. To tag instances at launch, specify the tags in the Launch Template. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// Nested argument containing target capacity configurations. Defined below.
	TargetCapacitySpecification pulumix.Input[*FleetTargetCapacitySpecificationArgs]
	// Whether to terminate instances for an EC2 Fleet if it is deleted successfully. Defaults to `false`.
	TerminateInstances pulumix.Input[*bool]
	// Whether running instances should be terminated when the EC2 Fleet expires. Defaults to `false`.
	TerminateInstancesWithExpiration pulumix.Input[*bool]
	// The type of request. Indicates whether the EC2 Fleet only requests the target capacity, or also attempts to maintain it. Valid values: `maintain`, `request`, `instant`. Defaults to `maintain`.
	Type pulumix.Input[*string]
	// The start date and time of the request, in UTC format (for example, YYYY-MM-DDTHH:MM:SSZ). The default is to start fulfilling the request immediately.
	ValidFrom pulumix.Input[*string]
	// The end date and time of the request, in UTC format (for example, YYYY-MM-DDTHH:MM:SSZ). At this point, no new EC2 Fleet requests are placed or able to fulfill the request. If no value is specified, the request remains until you cancel it.
	ValidUntil pulumix.Input[*string]
}

func (FleetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*fleetArgs)(nil)).Elem()
}

type FleetOutput struct{ *pulumi.OutputState }

func (FleetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Fleet)(nil)).Elem()
}

func (o FleetOutput) ToFleetOutput() FleetOutput {
	return o
}

func (o FleetOutput) ToFleetOutputWithContext(ctx context.Context) FleetOutput {
	return o
}

func (o FleetOutput) ToOutput(ctx context.Context) pulumix.Output[Fleet] {
	return pulumix.Output[Fleet]{
		OutputState: o.OutputState,
	}
}

// The ARN of the fleet
func (o FleetOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Fleet](o, func(v Fleet) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Reserved.
func (o FleetOutput) Context() pulumix.Output[*string] {
	value := pulumix.Apply[Fleet](o, func(v Fleet) pulumix.Output[*string] { return v.Context })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Whether running instances should be terminated if the total target capacity of the EC2 Fleet is decreased below the current size of the EC2. Valid values: `no-termination`, `termination`. Defaults to `termination`. Supported only for fleets of type `maintain`.
func (o FleetOutput) ExcessCapacityTerminationPolicy() pulumix.Output[*string] {
	value := pulumix.Apply[Fleet](o, func(v Fleet) pulumix.Output[*string] { return v.ExcessCapacityTerminationPolicy })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Information about the instances that were launched by the fleet. Available only when `type` is set to `instant`.
func (o FleetOutput) FleetInstanceSets() pulumix.GArrayOutput[FleetFleetInstanceSet, FleetFleetInstanceSetOutput] {
	value := pulumix.Apply[Fleet](o, func(v Fleet) pulumix.GArrayOutput[FleetFleetInstanceSet, FleetFleetInstanceSetOutput] {
		return v.FleetInstanceSets
	})
	unwrapped := pulumix.Flatten[[]FleetFleetInstanceSet, pulumix.GArrayOutput[FleetFleetInstanceSet, FleetFleetInstanceSetOutput]](value)
	return pulumix.GArrayOutput[FleetFleetInstanceSet, FleetFleetInstanceSetOutput]{OutputState: unwrapped.OutputState}
}

// The state of the EC2 Fleet.
func (o FleetOutput) FleetState() pulumix.Output[string] {
	value := pulumix.Apply[Fleet](o, func(v Fleet) pulumix.Output[string] { return v.FleetState })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The number of units fulfilled by this request compared to the set target capacity.
func (o FleetOutput) FulfilledCapacity() pulumix.Output[float64] {
	value := pulumix.Apply[Fleet](o, func(v Fleet) pulumix.Output[float64] { return v.FulfilledCapacity })
	return pulumix.Flatten[float64, pulumix.Output[float64]](value)
}

// The number of units fulfilled by this request compared to the set target On-Demand capacity.
func (o FleetOutput) FulfilledOnDemandCapacity() pulumix.Output[float64] {
	value := pulumix.Apply[Fleet](o, func(v Fleet) pulumix.Output[float64] { return v.FulfilledOnDemandCapacity })
	return pulumix.Flatten[float64, pulumix.Output[float64]](value)
}

// Nested argument containing EC2 Launch Template configurations. Defined below.
func (o FleetOutput) LaunchTemplateConfigs() pulumix.GArrayOutput[FleetLaunchTemplateConfig, FleetLaunchTemplateConfigOutput] {
	value := pulumix.Apply[Fleet](o, func(v Fleet) pulumix.GArrayOutput[FleetLaunchTemplateConfig, FleetLaunchTemplateConfigOutput] {
		return v.LaunchTemplateConfigs
	})
	unwrapped := pulumix.Flatten[[]FleetLaunchTemplateConfig, pulumix.GArrayOutput[FleetLaunchTemplateConfig, FleetLaunchTemplateConfigOutput]](value)
	return pulumix.GArrayOutput[FleetLaunchTemplateConfig, FleetLaunchTemplateConfigOutput]{OutputState: unwrapped.OutputState}
}

// Nested argument containing On-Demand configurations. Defined below.
func (o FleetOutput) OnDemandOptions() pulumix.GPtrOutput[FleetOnDemandOptions, FleetOnDemandOptionsOutput] {
	value := pulumix.Apply[Fleet](o, func(v Fleet) pulumix.GPtrOutput[FleetOnDemandOptions, FleetOnDemandOptionsOutput] {
		return v.OnDemandOptions
	})
	unwrapped := pulumix.Flatten[*FleetOnDemandOptions, pulumix.GPtrOutput[FleetOnDemandOptions, FleetOnDemandOptionsOutput]](value)
	return pulumix.GPtrOutput[FleetOnDemandOptions, FleetOnDemandOptionsOutput]{OutputState: unwrapped.OutputState}
}

// Whether EC2 Fleet should replace unhealthy instances. Defaults to `false`. Supported only for fleets of type `maintain`.
func (o FleetOutput) ReplaceUnhealthyInstances() pulumix.Output[*bool] {
	value := pulumix.Apply[Fleet](o, func(v Fleet) pulumix.Output[*bool] { return v.ReplaceUnhealthyInstances })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// Nested argument containing Spot configurations. Defined below.
func (o FleetOutput) SpotOptions() pulumix.GPtrOutput[FleetSpotOptions, FleetSpotOptionsOutput] {
	value := pulumix.Apply[Fleet](o, func(v Fleet) pulumix.GPtrOutput[FleetSpotOptions, FleetSpotOptionsOutput] { return v.SpotOptions })
	unwrapped := pulumix.Flatten[*FleetSpotOptions, pulumix.GPtrOutput[FleetSpotOptions, FleetSpotOptionsOutput]](value)
	return pulumix.GPtrOutput[FleetSpotOptions, FleetSpotOptionsOutput]{OutputState: unwrapped.OutputState}
}

// Map of Fleet tags. To tag instances at launch, specify the tags in the Launch Template. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o FleetOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Fleet](o, func(v Fleet) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o FleetOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[Fleet](o, func(v Fleet) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Nested argument containing target capacity configurations. Defined below.
func (o FleetOutput) TargetCapacitySpecification() pulumix.GPtrOutput[FleetTargetCapacitySpecification, FleetTargetCapacitySpecificationOutput] {
	value := pulumix.Apply[Fleet](o, func(v Fleet) pulumix.GPtrOutput[FleetTargetCapacitySpecification, FleetTargetCapacitySpecificationOutput] {
		return v.TargetCapacitySpecification
	})
	unwrapped := pulumix.Flatten[*FleetTargetCapacitySpecification, pulumix.GPtrOutput[FleetTargetCapacitySpecification, FleetTargetCapacitySpecificationOutput]](value)
	return pulumix.GPtrOutput[FleetTargetCapacitySpecification, FleetTargetCapacitySpecificationOutput]{OutputState: unwrapped.OutputState}
}

// Whether to terminate instances for an EC2 Fleet if it is deleted successfully. Defaults to `false`.
func (o FleetOutput) TerminateInstances() pulumix.Output[*bool] {
	value := pulumix.Apply[Fleet](o, func(v Fleet) pulumix.Output[*bool] { return v.TerminateInstances })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// Whether running instances should be terminated when the EC2 Fleet expires. Defaults to `false`.
func (o FleetOutput) TerminateInstancesWithExpiration() pulumix.Output[*bool] {
	value := pulumix.Apply[Fleet](o, func(v Fleet) pulumix.Output[*bool] { return v.TerminateInstancesWithExpiration })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// The type of request. Indicates whether the EC2 Fleet only requests the target capacity, or also attempts to maintain it. Valid values: `maintain`, `request`, `instant`. Defaults to `maintain`.
func (o FleetOutput) Type() pulumix.Output[*string] {
	value := pulumix.Apply[Fleet](o, func(v Fleet) pulumix.Output[*string] { return v.Type })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The start date and time of the request, in UTC format (for example, YYYY-MM-DDTHH:MM:SSZ). The default is to start fulfilling the request immediately.
func (o FleetOutput) ValidFrom() pulumix.Output[*string] {
	value := pulumix.Apply[Fleet](o, func(v Fleet) pulumix.Output[*string] { return v.ValidFrom })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The end date and time of the request, in UTC format (for example, YYYY-MM-DDTHH:MM:SSZ). At this point, no new EC2 Fleet requests are placed or able to fulfill the request. If no value is specified, the request remains until you cancel it.
func (o FleetOutput) ValidUntil() pulumix.Output[*string] {
	value := pulumix.Apply[Fleet](o, func(v Fleet) pulumix.Output[*string] { return v.ValidUntil })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

func init() {
	pulumi.RegisterOutputType(FleetOutput{})
}
