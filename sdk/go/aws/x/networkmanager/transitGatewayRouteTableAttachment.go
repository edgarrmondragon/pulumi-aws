// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networkmanager

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Creates a transit gateway route table attachment.
type TransitGatewayRouteTableAttachment struct {
	pulumi.CustomResourceState

	// Attachment Amazon Resource Name (ARN).
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The policy rule number associated with the attachment.
	AttachmentPolicyRuleNumber pulumix.Output[int] `pulumi:"attachmentPolicyRuleNumber"`
	// The type of attachment.
	AttachmentType pulumix.Output[string] `pulumi:"attachmentType"`
	// The ARN of the core network.
	CoreNetworkArn pulumix.Output[string] `pulumi:"coreNetworkArn"`
	// The ID of the core network.
	CoreNetworkId pulumix.Output[string] `pulumi:"coreNetworkId"`
	// The edge location for the peer.
	EdgeLocation pulumix.Output[string] `pulumi:"edgeLocation"`
	// The ID of the attachment account owner.
	OwnerAccountId pulumix.Output[string] `pulumi:"ownerAccountId"`
	// The ID of the peer for the attachment.
	PeeringId pulumix.Output[string] `pulumi:"peeringId"`
	// The attachment resource ARN.
	ResourceArn pulumix.Output[string] `pulumi:"resourceArn"`
	// The name of the segment attachment.
	SegmentName pulumix.Output[string] `pulumi:"segmentName"`
	// The state of the attachment.
	State pulumix.Output[string] `pulumi:"state"`
	// Key-value tags for the attachment. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// The ARN of the transit gateway route table for the attachment.
	TransitGatewayRouteTableArn pulumix.Output[string] `pulumi:"transitGatewayRouteTableArn"`
}

// NewTransitGatewayRouteTableAttachment registers a new resource with the given unique name, arguments, and options.
func NewTransitGatewayRouteTableAttachment(ctx *pulumi.Context,
	name string, args *TransitGatewayRouteTableAttachmentArgs, opts ...pulumi.ResourceOption) (*TransitGatewayRouteTableAttachment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PeeringId == nil {
		return nil, errors.New("invalid value for required argument 'PeeringId'")
	}
	if args.TransitGatewayRouteTableArn == nil {
		return nil, errors.New("invalid value for required argument 'TransitGatewayRouteTableArn'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TransitGatewayRouteTableAttachment
	err := ctx.RegisterResource("aws:networkmanager/transitGatewayRouteTableAttachment:TransitGatewayRouteTableAttachment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTransitGatewayRouteTableAttachment gets an existing TransitGatewayRouteTableAttachment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTransitGatewayRouteTableAttachment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TransitGatewayRouteTableAttachmentState, opts ...pulumi.ResourceOption) (*TransitGatewayRouteTableAttachment, error) {
	var resource TransitGatewayRouteTableAttachment
	err := ctx.ReadResource("aws:networkmanager/transitGatewayRouteTableAttachment:TransitGatewayRouteTableAttachment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TransitGatewayRouteTableAttachment resources.
type transitGatewayRouteTableAttachmentState struct {
	// Attachment Amazon Resource Name (ARN).
	Arn *string `pulumi:"arn"`
	// The policy rule number associated with the attachment.
	AttachmentPolicyRuleNumber *int `pulumi:"attachmentPolicyRuleNumber"`
	// The type of attachment.
	AttachmentType *string `pulumi:"attachmentType"`
	// The ARN of the core network.
	CoreNetworkArn *string `pulumi:"coreNetworkArn"`
	// The ID of the core network.
	CoreNetworkId *string `pulumi:"coreNetworkId"`
	// The edge location for the peer.
	EdgeLocation *string `pulumi:"edgeLocation"`
	// The ID of the attachment account owner.
	OwnerAccountId *string `pulumi:"ownerAccountId"`
	// The ID of the peer for the attachment.
	PeeringId *string `pulumi:"peeringId"`
	// The attachment resource ARN.
	ResourceArn *string `pulumi:"resourceArn"`
	// The name of the segment attachment.
	SegmentName *string `pulumi:"segmentName"`
	// The state of the attachment.
	State *string `pulumi:"state"`
	// Key-value tags for the attachment. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// The ARN of the transit gateway route table for the attachment.
	TransitGatewayRouteTableArn *string `pulumi:"transitGatewayRouteTableArn"`
}

type TransitGatewayRouteTableAttachmentState struct {
	// Attachment Amazon Resource Name (ARN).
	Arn pulumix.Input[*string]
	// The policy rule number associated with the attachment.
	AttachmentPolicyRuleNumber pulumix.Input[*int]
	// The type of attachment.
	AttachmentType pulumix.Input[*string]
	// The ARN of the core network.
	CoreNetworkArn pulumix.Input[*string]
	// The ID of the core network.
	CoreNetworkId pulumix.Input[*string]
	// The edge location for the peer.
	EdgeLocation pulumix.Input[*string]
	// The ID of the attachment account owner.
	OwnerAccountId pulumix.Input[*string]
	// The ID of the peer for the attachment.
	PeeringId pulumix.Input[*string]
	// The attachment resource ARN.
	ResourceArn pulumix.Input[*string]
	// The name of the segment attachment.
	SegmentName pulumix.Input[*string]
	// The state of the attachment.
	State pulumix.Input[*string]
	// Key-value tags for the attachment. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// The ARN of the transit gateway route table for the attachment.
	TransitGatewayRouteTableArn pulumix.Input[*string]
}

func (TransitGatewayRouteTableAttachmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*transitGatewayRouteTableAttachmentState)(nil)).Elem()
}

type transitGatewayRouteTableAttachmentArgs struct {
	// The ID of the peer for the attachment.
	PeeringId string `pulumi:"peeringId"`
	// Key-value tags for the attachment. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// The ARN of the transit gateway route table for the attachment.
	TransitGatewayRouteTableArn string `pulumi:"transitGatewayRouteTableArn"`
}

// The set of arguments for constructing a TransitGatewayRouteTableAttachment resource.
type TransitGatewayRouteTableAttachmentArgs struct {
	// The ID of the peer for the attachment.
	PeeringId pulumix.Input[string]
	// Key-value tags for the attachment. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// The ARN of the transit gateway route table for the attachment.
	TransitGatewayRouteTableArn pulumix.Input[string]
}

func (TransitGatewayRouteTableAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*transitGatewayRouteTableAttachmentArgs)(nil)).Elem()
}

type TransitGatewayRouteTableAttachmentOutput struct{ *pulumi.OutputState }

func (TransitGatewayRouteTableAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransitGatewayRouteTableAttachment)(nil)).Elem()
}

func (o TransitGatewayRouteTableAttachmentOutput) ToTransitGatewayRouteTableAttachmentOutput() TransitGatewayRouteTableAttachmentOutput {
	return o
}

func (o TransitGatewayRouteTableAttachmentOutput) ToTransitGatewayRouteTableAttachmentOutputWithContext(ctx context.Context) TransitGatewayRouteTableAttachmentOutput {
	return o
}

func (o TransitGatewayRouteTableAttachmentOutput) ToOutput(ctx context.Context) pulumix.Output[TransitGatewayRouteTableAttachment] {
	return pulumix.Output[TransitGatewayRouteTableAttachment]{
		OutputState: o.OutputState,
	}
}

// Attachment Amazon Resource Name (ARN).
func (o TransitGatewayRouteTableAttachmentOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[TransitGatewayRouteTableAttachment](o, func(v TransitGatewayRouteTableAttachment) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The policy rule number associated with the attachment.
func (o TransitGatewayRouteTableAttachmentOutput) AttachmentPolicyRuleNumber() pulumix.Output[int] {
	value := pulumix.Apply[TransitGatewayRouteTableAttachment](o, func(v TransitGatewayRouteTableAttachment) pulumix.Output[int] { return v.AttachmentPolicyRuleNumber })
	return pulumix.Flatten[int, pulumix.Output[int]](value)
}

// The type of attachment.
func (o TransitGatewayRouteTableAttachmentOutput) AttachmentType() pulumix.Output[string] {
	value := pulumix.Apply[TransitGatewayRouteTableAttachment](o, func(v TransitGatewayRouteTableAttachment) pulumix.Output[string] { return v.AttachmentType })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The ARN of the core network.
func (o TransitGatewayRouteTableAttachmentOutput) CoreNetworkArn() pulumix.Output[string] {
	value := pulumix.Apply[TransitGatewayRouteTableAttachment](o, func(v TransitGatewayRouteTableAttachment) pulumix.Output[string] { return v.CoreNetworkArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The ID of the core network.
func (o TransitGatewayRouteTableAttachmentOutput) CoreNetworkId() pulumix.Output[string] {
	value := pulumix.Apply[TransitGatewayRouteTableAttachment](o, func(v TransitGatewayRouteTableAttachment) pulumix.Output[string] { return v.CoreNetworkId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The edge location for the peer.
func (o TransitGatewayRouteTableAttachmentOutput) EdgeLocation() pulumix.Output[string] {
	value := pulumix.Apply[TransitGatewayRouteTableAttachment](o, func(v TransitGatewayRouteTableAttachment) pulumix.Output[string] { return v.EdgeLocation })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The ID of the attachment account owner.
func (o TransitGatewayRouteTableAttachmentOutput) OwnerAccountId() pulumix.Output[string] {
	value := pulumix.Apply[TransitGatewayRouteTableAttachment](o, func(v TransitGatewayRouteTableAttachment) pulumix.Output[string] { return v.OwnerAccountId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The ID of the peer for the attachment.
func (o TransitGatewayRouteTableAttachmentOutput) PeeringId() pulumix.Output[string] {
	value := pulumix.Apply[TransitGatewayRouteTableAttachment](o, func(v TransitGatewayRouteTableAttachment) pulumix.Output[string] { return v.PeeringId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The attachment resource ARN.
func (o TransitGatewayRouteTableAttachmentOutput) ResourceArn() pulumix.Output[string] {
	value := pulumix.Apply[TransitGatewayRouteTableAttachment](o, func(v TransitGatewayRouteTableAttachment) pulumix.Output[string] { return v.ResourceArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The name of the segment attachment.
func (o TransitGatewayRouteTableAttachmentOutput) SegmentName() pulumix.Output[string] {
	value := pulumix.Apply[TransitGatewayRouteTableAttachment](o, func(v TransitGatewayRouteTableAttachment) pulumix.Output[string] { return v.SegmentName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The state of the attachment.
func (o TransitGatewayRouteTableAttachmentOutput) State() pulumix.Output[string] {
	value := pulumix.Apply[TransitGatewayRouteTableAttachment](o, func(v TransitGatewayRouteTableAttachment) pulumix.Output[string] { return v.State })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Key-value tags for the attachment. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o TransitGatewayRouteTableAttachmentOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[TransitGatewayRouteTableAttachment](o, func(v TransitGatewayRouteTableAttachment) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o TransitGatewayRouteTableAttachmentOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[TransitGatewayRouteTableAttachment](o, func(v TransitGatewayRouteTableAttachment) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// The ARN of the transit gateway route table for the attachment.
func (o TransitGatewayRouteTableAttachmentOutput) TransitGatewayRouteTableArn() pulumix.Output[string] {
	value := pulumix.Apply[TransitGatewayRouteTableAttachment](o, func(v TransitGatewayRouteTableAttachment) pulumix.Output[string] {
		return v.TransitGatewayRouteTableArn
	})
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(TransitGatewayRouteTableAttachmentOutput{})
}
