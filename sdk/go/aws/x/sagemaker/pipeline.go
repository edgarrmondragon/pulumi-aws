// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sagemaker

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a SageMaker Pipeline resource.
type Pipeline struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) assigned by AWS to this Pipeline.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// This is the configuration that controls the parallelism of the pipeline. If specified, it applies to all runs of this pipeline by default. see Parallelism Configuration details below.
	ParallelismConfiguration pulumix.GPtrOutput[PipelineParallelismConfiguration, PipelineParallelismConfigurationOutput] `pulumi:"parallelismConfiguration"`
	// The [JSON pipeline definition](https://aws-sagemaker-mlops.github.io/sagemaker-model-building-pipeline-definition-JSON-schema/) of the pipeline.
	PipelineDefinition pulumix.Output[*string] `pulumi:"pipelineDefinition"`
	// The location of the pipeline definition stored in Amazon S3. If specified, SageMaker will retrieve the pipeline definition from this location. see Pipeline Definition S3 Location details below.
	PipelineDefinitionS3Location pulumix.GPtrOutput[PipelinePipelineDefinitionS3Location, PipelinePipelineDefinitionS3LocationOutput] `pulumi:"pipelineDefinitionS3Location"`
	// A description of the pipeline.
	PipelineDescription pulumix.Output[*string] `pulumi:"pipelineDescription"`
	// The display name of the pipeline.
	PipelineDisplayName pulumix.Output[string] `pulumi:"pipelineDisplayName"`
	// The name of the pipeline.
	PipelineName pulumix.Output[string] `pulumi:"pipelineName"`
	// The name of the Pipeline (must be unique).
	RoleArn pulumix.Output[*string] `pulumi:"roleArn"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
}

// NewPipeline registers a new resource with the given unique name, arguments, and options.
func NewPipeline(ctx *pulumi.Context,
	name string, args *PipelineArgs, opts ...pulumi.ResourceOption) (*Pipeline, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PipelineDisplayName == nil {
		return nil, errors.New("invalid value for required argument 'PipelineDisplayName'")
	}
	if args.PipelineName == nil {
		return nil, errors.New("invalid value for required argument 'PipelineName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Pipeline
	err := ctx.RegisterResource("aws:sagemaker/pipeline:Pipeline", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPipeline gets an existing Pipeline resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPipeline(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PipelineState, opts ...pulumi.ResourceOption) (*Pipeline, error) {
	var resource Pipeline
	err := ctx.ReadResource("aws:sagemaker/pipeline:Pipeline", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Pipeline resources.
type pipelineState struct {
	// The Amazon Resource Name (ARN) assigned by AWS to this Pipeline.
	Arn *string `pulumi:"arn"`
	// This is the configuration that controls the parallelism of the pipeline. If specified, it applies to all runs of this pipeline by default. see Parallelism Configuration details below.
	ParallelismConfiguration *PipelineParallelismConfiguration `pulumi:"parallelismConfiguration"`
	// The [JSON pipeline definition](https://aws-sagemaker-mlops.github.io/sagemaker-model-building-pipeline-definition-JSON-schema/) of the pipeline.
	PipelineDefinition *string `pulumi:"pipelineDefinition"`
	// The location of the pipeline definition stored in Amazon S3. If specified, SageMaker will retrieve the pipeline definition from this location. see Pipeline Definition S3 Location details below.
	PipelineDefinitionS3Location *PipelinePipelineDefinitionS3Location `pulumi:"pipelineDefinitionS3Location"`
	// A description of the pipeline.
	PipelineDescription *string `pulumi:"pipelineDescription"`
	// The display name of the pipeline.
	PipelineDisplayName *string `pulumi:"pipelineDisplayName"`
	// The name of the pipeline.
	PipelineName *string `pulumi:"pipelineName"`
	// The name of the Pipeline (must be unique).
	RoleArn *string `pulumi:"roleArn"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type PipelineState struct {
	// The Amazon Resource Name (ARN) assigned by AWS to this Pipeline.
	Arn pulumix.Input[*string]
	// This is the configuration that controls the parallelism of the pipeline. If specified, it applies to all runs of this pipeline by default. see Parallelism Configuration details below.
	ParallelismConfiguration pulumix.Input[*PipelineParallelismConfigurationArgs]
	// The [JSON pipeline definition](https://aws-sagemaker-mlops.github.io/sagemaker-model-building-pipeline-definition-JSON-schema/) of the pipeline.
	PipelineDefinition pulumix.Input[*string]
	// The location of the pipeline definition stored in Amazon S3. If specified, SageMaker will retrieve the pipeline definition from this location. see Pipeline Definition S3 Location details below.
	PipelineDefinitionS3Location pulumix.Input[*PipelinePipelineDefinitionS3LocationArgs]
	// A description of the pipeline.
	PipelineDescription pulumix.Input[*string]
	// The display name of the pipeline.
	PipelineDisplayName pulumix.Input[*string]
	// The name of the pipeline.
	PipelineName pulumix.Input[*string]
	// The name of the Pipeline (must be unique).
	RoleArn pulumix.Input[*string]
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
}

func (PipelineState) ElementType() reflect.Type {
	return reflect.TypeOf((*pipelineState)(nil)).Elem()
}

type pipelineArgs struct {
	// This is the configuration that controls the parallelism of the pipeline. If specified, it applies to all runs of this pipeline by default. see Parallelism Configuration details below.
	ParallelismConfiguration *PipelineParallelismConfiguration `pulumi:"parallelismConfiguration"`
	// The [JSON pipeline definition](https://aws-sagemaker-mlops.github.io/sagemaker-model-building-pipeline-definition-JSON-schema/) of the pipeline.
	PipelineDefinition *string `pulumi:"pipelineDefinition"`
	// The location of the pipeline definition stored in Amazon S3. If specified, SageMaker will retrieve the pipeline definition from this location. see Pipeline Definition S3 Location details below.
	PipelineDefinitionS3Location *PipelinePipelineDefinitionS3Location `pulumi:"pipelineDefinitionS3Location"`
	// A description of the pipeline.
	PipelineDescription *string `pulumi:"pipelineDescription"`
	// The display name of the pipeline.
	PipelineDisplayName string `pulumi:"pipelineDisplayName"`
	// The name of the pipeline.
	PipelineName string `pulumi:"pipelineName"`
	// The name of the Pipeline (must be unique).
	RoleArn *string `pulumi:"roleArn"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Pipeline resource.
type PipelineArgs struct {
	// This is the configuration that controls the parallelism of the pipeline. If specified, it applies to all runs of this pipeline by default. see Parallelism Configuration details below.
	ParallelismConfiguration pulumix.Input[*PipelineParallelismConfigurationArgs]
	// The [JSON pipeline definition](https://aws-sagemaker-mlops.github.io/sagemaker-model-building-pipeline-definition-JSON-schema/) of the pipeline.
	PipelineDefinition pulumix.Input[*string]
	// The location of the pipeline definition stored in Amazon S3. If specified, SageMaker will retrieve the pipeline definition from this location. see Pipeline Definition S3 Location details below.
	PipelineDefinitionS3Location pulumix.Input[*PipelinePipelineDefinitionS3LocationArgs]
	// A description of the pipeline.
	PipelineDescription pulumix.Input[*string]
	// The display name of the pipeline.
	PipelineDisplayName pulumix.Input[string]
	// The name of the pipeline.
	PipelineName pulumix.Input[string]
	// The name of the Pipeline (must be unique).
	RoleArn pulumix.Input[*string]
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (PipelineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*pipelineArgs)(nil)).Elem()
}

type PipelineOutput struct{ *pulumi.OutputState }

func (PipelineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Pipeline)(nil)).Elem()
}

func (o PipelineOutput) ToPipelineOutput() PipelineOutput {
	return o
}

func (o PipelineOutput) ToPipelineOutputWithContext(ctx context.Context) PipelineOutput {
	return o
}

func (o PipelineOutput) ToOutput(ctx context.Context) pulumix.Output[Pipeline] {
	return pulumix.Output[Pipeline]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) assigned by AWS to this Pipeline.
func (o PipelineOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Pipeline](o, func(v Pipeline) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// This is the configuration that controls the parallelism of the pipeline. If specified, it applies to all runs of this pipeline by default. see Parallelism Configuration details below.
func (o PipelineOutput) ParallelismConfiguration() pulumix.GPtrOutput[PipelineParallelismConfiguration, PipelineParallelismConfigurationOutput] {
	value := pulumix.Apply[Pipeline](o, func(v Pipeline) pulumix.GPtrOutput[PipelineParallelismConfiguration, PipelineParallelismConfigurationOutput] {
		return v.ParallelismConfiguration
	})
	unwrapped := pulumix.Flatten[*PipelineParallelismConfiguration, pulumix.GPtrOutput[PipelineParallelismConfiguration, PipelineParallelismConfigurationOutput]](value)
	return pulumix.GPtrOutput[PipelineParallelismConfiguration, PipelineParallelismConfigurationOutput]{OutputState: unwrapped.OutputState}
}

// The [JSON pipeline definition](https://aws-sagemaker-mlops.github.io/sagemaker-model-building-pipeline-definition-JSON-schema/) of the pipeline.
func (o PipelineOutput) PipelineDefinition() pulumix.Output[*string] {
	value := pulumix.Apply[Pipeline](o, func(v Pipeline) pulumix.Output[*string] { return v.PipelineDefinition })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The location of the pipeline definition stored in Amazon S3. If specified, SageMaker will retrieve the pipeline definition from this location. see Pipeline Definition S3 Location details below.
func (o PipelineOutput) PipelineDefinitionS3Location() pulumix.GPtrOutput[PipelinePipelineDefinitionS3Location, PipelinePipelineDefinitionS3LocationOutput] {
	value := pulumix.Apply[Pipeline](o, func(v Pipeline) pulumix.GPtrOutput[PipelinePipelineDefinitionS3Location, PipelinePipelineDefinitionS3LocationOutput] {
		return v.PipelineDefinitionS3Location
	})
	unwrapped := pulumix.Flatten[*PipelinePipelineDefinitionS3Location, pulumix.GPtrOutput[PipelinePipelineDefinitionS3Location, PipelinePipelineDefinitionS3LocationOutput]](value)
	return pulumix.GPtrOutput[PipelinePipelineDefinitionS3Location, PipelinePipelineDefinitionS3LocationOutput]{OutputState: unwrapped.OutputState}
}

// A description of the pipeline.
func (o PipelineOutput) PipelineDescription() pulumix.Output[*string] {
	value := pulumix.Apply[Pipeline](o, func(v Pipeline) pulumix.Output[*string] { return v.PipelineDescription })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The display name of the pipeline.
func (o PipelineOutput) PipelineDisplayName() pulumix.Output[string] {
	value := pulumix.Apply[Pipeline](o, func(v Pipeline) pulumix.Output[string] { return v.PipelineDisplayName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The name of the pipeline.
func (o PipelineOutput) PipelineName() pulumix.Output[string] {
	value := pulumix.Apply[Pipeline](o, func(v Pipeline) pulumix.Output[string] { return v.PipelineName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The name of the Pipeline (must be unique).
func (o PipelineOutput) RoleArn() pulumix.Output[*string] {
	value := pulumix.Apply[Pipeline](o, func(v Pipeline) pulumix.Output[*string] { return v.RoleArn })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o PipelineOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Pipeline](o, func(v Pipeline) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o PipelineOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[Pipeline](o, func(v Pipeline) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(PipelineOutput{})
}
