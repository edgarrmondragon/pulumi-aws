// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sagemaker

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a SageMaker endpoint configuration resource.
type EndpointConfiguration struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) assigned by AWS to this endpoint configuration.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// Specifies configuration for how an endpoint performs asynchronous inference.
	AsyncInferenceConfig pulumix.GPtrOutput[EndpointConfigurationAsyncInferenceConfig, EndpointConfigurationAsyncInferenceConfigOutput] `pulumi:"asyncInferenceConfig"`
	// Specifies the parameters to capture input/output of SageMaker models endpoints. Fields are documented below.
	DataCaptureConfig pulumix.GPtrOutput[EndpointConfigurationDataCaptureConfig, EndpointConfigurationDataCaptureConfigOutput] `pulumi:"dataCaptureConfig"`
	// Amazon Resource Name (ARN) of a AWS Key Management Service key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance that hosts the endpoint.
	KmsKeyArn pulumix.Output[*string] `pulumi:"kmsKeyArn"`
	// The name of the endpoint configuration. If omitted, this provider will assign a random, unique name. Conflicts with `namePrefix`.
	Name pulumix.Output[string] `pulumi:"name"`
	// Creates a unique endpoint configuration name beginning with the specified prefix. Conflicts with `name`.
	NamePrefix pulumix.Output[string] `pulumi:"namePrefix"`
	// An list of ProductionVariant objects, one for each model that you want to host at this endpoint. Fields are documented below.
	ProductionVariants pulumix.GArrayOutput[EndpointConfigurationProductionVariant, EndpointConfigurationProductionVariantOutput] `pulumi:"productionVariants"`
	// Array of ProductionVariant objects. There is one for each model that you want to host at this endpoint in shadow mode with production traffic replicated from the model specified on ProductionVariants.If you use this field, you can only specify one variant for ProductionVariants and one variant for ShadowProductionVariants. Fields are documented below.
	ShadowProductionVariants pulumix.GArrayOutput[EndpointConfigurationShadowProductionVariant, EndpointConfigurationShadowProductionVariantOutput] `pulumi:"shadowProductionVariants"`
	// A mapping of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
}

// NewEndpointConfiguration registers a new resource with the given unique name, arguments, and options.
func NewEndpointConfiguration(ctx *pulumi.Context,
	name string, args *EndpointConfigurationArgs, opts ...pulumi.ResourceOption) (*EndpointConfiguration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ProductionVariants == nil {
		return nil, errors.New("invalid value for required argument 'ProductionVariants'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource EndpointConfiguration
	err := ctx.RegisterResource("aws:sagemaker/endpointConfiguration:EndpointConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEndpointConfiguration gets an existing EndpointConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEndpointConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EndpointConfigurationState, opts ...pulumi.ResourceOption) (*EndpointConfiguration, error) {
	var resource EndpointConfiguration
	err := ctx.ReadResource("aws:sagemaker/endpointConfiguration:EndpointConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EndpointConfiguration resources.
type endpointConfigurationState struct {
	// The Amazon Resource Name (ARN) assigned by AWS to this endpoint configuration.
	Arn *string `pulumi:"arn"`
	// Specifies configuration for how an endpoint performs asynchronous inference.
	AsyncInferenceConfig *EndpointConfigurationAsyncInferenceConfig `pulumi:"asyncInferenceConfig"`
	// Specifies the parameters to capture input/output of SageMaker models endpoints. Fields are documented below.
	DataCaptureConfig *EndpointConfigurationDataCaptureConfig `pulumi:"dataCaptureConfig"`
	// Amazon Resource Name (ARN) of a AWS Key Management Service key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance that hosts the endpoint.
	KmsKeyArn *string `pulumi:"kmsKeyArn"`
	// The name of the endpoint configuration. If omitted, this provider will assign a random, unique name. Conflicts with `namePrefix`.
	Name *string `pulumi:"name"`
	// Creates a unique endpoint configuration name beginning with the specified prefix. Conflicts with `name`.
	NamePrefix *string `pulumi:"namePrefix"`
	// An list of ProductionVariant objects, one for each model that you want to host at this endpoint. Fields are documented below.
	ProductionVariants []EndpointConfigurationProductionVariant `pulumi:"productionVariants"`
	// Array of ProductionVariant objects. There is one for each model that you want to host at this endpoint in shadow mode with production traffic replicated from the model specified on ProductionVariants.If you use this field, you can only specify one variant for ProductionVariants and one variant for ShadowProductionVariants. Fields are documented below.
	ShadowProductionVariants []EndpointConfigurationShadowProductionVariant `pulumi:"shadowProductionVariants"`
	// A mapping of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type EndpointConfigurationState struct {
	// The Amazon Resource Name (ARN) assigned by AWS to this endpoint configuration.
	Arn pulumix.Input[*string]
	// Specifies configuration for how an endpoint performs asynchronous inference.
	AsyncInferenceConfig pulumix.Input[*EndpointConfigurationAsyncInferenceConfigArgs]
	// Specifies the parameters to capture input/output of SageMaker models endpoints. Fields are documented below.
	DataCaptureConfig pulumix.Input[*EndpointConfigurationDataCaptureConfigArgs]
	// Amazon Resource Name (ARN) of a AWS Key Management Service key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance that hosts the endpoint.
	KmsKeyArn pulumix.Input[*string]
	// The name of the endpoint configuration. If omitted, this provider will assign a random, unique name. Conflicts with `namePrefix`.
	Name pulumix.Input[*string]
	// Creates a unique endpoint configuration name beginning with the specified prefix. Conflicts with `name`.
	NamePrefix pulumix.Input[*string]
	// An list of ProductionVariant objects, one for each model that you want to host at this endpoint. Fields are documented below.
	ProductionVariants pulumix.Input[[]*EndpointConfigurationProductionVariantArgs]
	// Array of ProductionVariant objects. There is one for each model that you want to host at this endpoint in shadow mode with production traffic replicated from the model specified on ProductionVariants.If you use this field, you can only specify one variant for ProductionVariants and one variant for ShadowProductionVariants. Fields are documented below.
	ShadowProductionVariants pulumix.Input[[]*EndpointConfigurationShadowProductionVariantArgs]
	// A mapping of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
}

func (EndpointConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*endpointConfigurationState)(nil)).Elem()
}

type endpointConfigurationArgs struct {
	// Specifies configuration for how an endpoint performs asynchronous inference.
	AsyncInferenceConfig *EndpointConfigurationAsyncInferenceConfig `pulumi:"asyncInferenceConfig"`
	// Specifies the parameters to capture input/output of SageMaker models endpoints. Fields are documented below.
	DataCaptureConfig *EndpointConfigurationDataCaptureConfig `pulumi:"dataCaptureConfig"`
	// Amazon Resource Name (ARN) of a AWS Key Management Service key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance that hosts the endpoint.
	KmsKeyArn *string `pulumi:"kmsKeyArn"`
	// The name of the endpoint configuration. If omitted, this provider will assign a random, unique name. Conflicts with `namePrefix`.
	Name *string `pulumi:"name"`
	// Creates a unique endpoint configuration name beginning with the specified prefix. Conflicts with `name`.
	NamePrefix *string `pulumi:"namePrefix"`
	// An list of ProductionVariant objects, one for each model that you want to host at this endpoint. Fields are documented below.
	ProductionVariants []EndpointConfigurationProductionVariant `pulumi:"productionVariants"`
	// Array of ProductionVariant objects. There is one for each model that you want to host at this endpoint in shadow mode with production traffic replicated from the model specified on ProductionVariants.If you use this field, you can only specify one variant for ProductionVariants and one variant for ShadowProductionVariants. Fields are documented below.
	ShadowProductionVariants []EndpointConfigurationShadowProductionVariant `pulumi:"shadowProductionVariants"`
	// A mapping of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a EndpointConfiguration resource.
type EndpointConfigurationArgs struct {
	// Specifies configuration for how an endpoint performs asynchronous inference.
	AsyncInferenceConfig pulumix.Input[*EndpointConfigurationAsyncInferenceConfigArgs]
	// Specifies the parameters to capture input/output of SageMaker models endpoints. Fields are documented below.
	DataCaptureConfig pulumix.Input[*EndpointConfigurationDataCaptureConfigArgs]
	// Amazon Resource Name (ARN) of a AWS Key Management Service key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance that hosts the endpoint.
	KmsKeyArn pulumix.Input[*string]
	// The name of the endpoint configuration. If omitted, this provider will assign a random, unique name. Conflicts with `namePrefix`.
	Name pulumix.Input[*string]
	// Creates a unique endpoint configuration name beginning with the specified prefix. Conflicts with `name`.
	NamePrefix pulumix.Input[*string]
	// An list of ProductionVariant objects, one for each model that you want to host at this endpoint. Fields are documented below.
	ProductionVariants pulumix.Input[[]*EndpointConfigurationProductionVariantArgs]
	// Array of ProductionVariant objects. There is one for each model that you want to host at this endpoint in shadow mode with production traffic replicated from the model specified on ProductionVariants.If you use this field, you can only specify one variant for ProductionVariants and one variant for ShadowProductionVariants. Fields are documented below.
	ShadowProductionVariants pulumix.Input[[]*EndpointConfigurationShadowProductionVariantArgs]
	// A mapping of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (EndpointConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*endpointConfigurationArgs)(nil)).Elem()
}

type EndpointConfigurationOutput struct{ *pulumi.OutputState }

func (EndpointConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfiguration)(nil)).Elem()
}

func (o EndpointConfigurationOutput) ToEndpointConfigurationOutput() EndpointConfigurationOutput {
	return o
}

func (o EndpointConfigurationOutput) ToEndpointConfigurationOutputWithContext(ctx context.Context) EndpointConfigurationOutput {
	return o
}

func (o EndpointConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[EndpointConfiguration] {
	return pulumix.Output[EndpointConfiguration]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) assigned by AWS to this endpoint configuration.
func (o EndpointConfigurationOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[EndpointConfiguration](o, func(v EndpointConfiguration) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Specifies configuration for how an endpoint performs asynchronous inference.
func (o EndpointConfigurationOutput) AsyncInferenceConfig() pulumix.GPtrOutput[EndpointConfigurationAsyncInferenceConfig, EndpointConfigurationAsyncInferenceConfigOutput] {
	value := pulumix.Apply[EndpointConfiguration](o, func(v EndpointConfiguration) pulumix.GPtrOutput[EndpointConfigurationAsyncInferenceConfig, EndpointConfigurationAsyncInferenceConfigOutput] {
		return v.AsyncInferenceConfig
	})
	unwrapped := pulumix.Flatten[*EndpointConfigurationAsyncInferenceConfig, pulumix.GPtrOutput[EndpointConfigurationAsyncInferenceConfig, EndpointConfigurationAsyncInferenceConfigOutput]](value)
	return pulumix.GPtrOutput[EndpointConfigurationAsyncInferenceConfig, EndpointConfigurationAsyncInferenceConfigOutput]{OutputState: unwrapped.OutputState}
}

// Specifies the parameters to capture input/output of SageMaker models endpoints. Fields are documented below.
func (o EndpointConfigurationOutput) DataCaptureConfig() pulumix.GPtrOutput[EndpointConfigurationDataCaptureConfig, EndpointConfigurationDataCaptureConfigOutput] {
	value := pulumix.Apply[EndpointConfiguration](o, func(v EndpointConfiguration) pulumix.GPtrOutput[EndpointConfigurationDataCaptureConfig, EndpointConfigurationDataCaptureConfigOutput] {
		return v.DataCaptureConfig
	})
	unwrapped := pulumix.Flatten[*EndpointConfigurationDataCaptureConfig, pulumix.GPtrOutput[EndpointConfigurationDataCaptureConfig, EndpointConfigurationDataCaptureConfigOutput]](value)
	return pulumix.GPtrOutput[EndpointConfigurationDataCaptureConfig, EndpointConfigurationDataCaptureConfigOutput]{OutputState: unwrapped.OutputState}
}

// Amazon Resource Name (ARN) of a AWS Key Management Service key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance that hosts the endpoint.
func (o EndpointConfigurationOutput) KmsKeyArn() pulumix.Output[*string] {
	value := pulumix.Apply[EndpointConfiguration](o, func(v EndpointConfiguration) pulumix.Output[*string] { return v.KmsKeyArn })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The name of the endpoint configuration. If omitted, this provider will assign a random, unique name. Conflicts with `namePrefix`.
func (o EndpointConfigurationOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[EndpointConfiguration](o, func(v EndpointConfiguration) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Creates a unique endpoint configuration name beginning with the specified prefix. Conflicts with `name`.
func (o EndpointConfigurationOutput) NamePrefix() pulumix.Output[string] {
	value := pulumix.Apply[EndpointConfiguration](o, func(v EndpointConfiguration) pulumix.Output[string] { return v.NamePrefix })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// An list of ProductionVariant objects, one for each model that you want to host at this endpoint. Fields are documented below.
func (o EndpointConfigurationOutput) ProductionVariants() pulumix.GArrayOutput[EndpointConfigurationProductionVariant, EndpointConfigurationProductionVariantOutput] {
	value := pulumix.Apply[EndpointConfiguration](o, func(v EndpointConfiguration) pulumix.GArrayOutput[EndpointConfigurationProductionVariant, EndpointConfigurationProductionVariantOutput] {
		return v.ProductionVariants
	})
	unwrapped := pulumix.Flatten[[]EndpointConfigurationProductionVariant, pulumix.GArrayOutput[EndpointConfigurationProductionVariant, EndpointConfigurationProductionVariantOutput]](value)
	return pulumix.GArrayOutput[EndpointConfigurationProductionVariant, EndpointConfigurationProductionVariantOutput]{OutputState: unwrapped.OutputState}
}

// Array of ProductionVariant objects. There is one for each model that you want to host at this endpoint in shadow mode with production traffic replicated from the model specified on ProductionVariants.If you use this field, you can only specify one variant for ProductionVariants and one variant for ShadowProductionVariants. Fields are documented below.
func (o EndpointConfigurationOutput) ShadowProductionVariants() pulumix.GArrayOutput[EndpointConfigurationShadowProductionVariant, EndpointConfigurationShadowProductionVariantOutput] {
	value := pulumix.Apply[EndpointConfiguration](o, func(v EndpointConfiguration) pulumix.GArrayOutput[EndpointConfigurationShadowProductionVariant, EndpointConfigurationShadowProductionVariantOutput] {
		return v.ShadowProductionVariants
	})
	unwrapped := pulumix.Flatten[[]EndpointConfigurationShadowProductionVariant, pulumix.GArrayOutput[EndpointConfigurationShadowProductionVariant, EndpointConfigurationShadowProductionVariantOutput]](value)
	return pulumix.GArrayOutput[EndpointConfigurationShadowProductionVariant, EndpointConfigurationShadowProductionVariantOutput]{OutputState: unwrapped.OutputState}
}

// A mapping of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o EndpointConfigurationOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[EndpointConfiguration](o, func(v EndpointConfiguration) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o EndpointConfigurationOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[EndpointConfiguration](o, func(v EndpointConfiguration) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(EndpointConfigurationOutput{})
}
