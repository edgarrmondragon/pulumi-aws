// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a resource to manage VPC peering connection options.
//
// > **NOTE on VPC Peering Connections and VPC Peering Connection Options:** This provider provides
// both a standalone VPC Peering Connection Options and a VPC Peering Connection
// resource with `accepter` and `requester` attributes. Do not manage options for the same VPC peering
// connection in both a VPC Peering Connection resource and a VPC Peering Connection Options resource.
// Doing so will cause a conflict of options and will overwrite the options.
// Using a VPC Peering Connection Options resource decouples management of the connection options from
// management of the VPC Peering Connection and allows options to be set correctly in cross-region and
// cross-account scenarios.
type PeeringConnectionOptions struct {
	pulumi.CustomResourceState

	// An optional configuration block that allows for [VPC Peering Connection](https://docs.aws.amazon.com/vpc/latest/peering/what-is-vpc-peering.html) options to be set for the VPC that acceptsthe peering connection (a maximum of one).
	Accepter pulumix.GPtrOutput[PeeringConnectionOptionsAccepter, PeeringConnectionOptionsAccepterOutput] `pulumi:"accepter"`
	// A optional configuration block that allows for [VPC Peering Connection](https://docs.aws.amazon.com/vpc/latest/peering/what-is-vpc-peering.html) options to be set for the VPC that requeststhe peering connection (a maximum of one).
	Requester pulumix.GPtrOutput[PeeringConnectionOptionsRequester, PeeringConnectionOptionsRequesterOutput] `pulumi:"requester"`
	// The ID of the requester VPC peering connection.
	VpcPeeringConnectionId pulumix.Output[string] `pulumi:"vpcPeeringConnectionId"`
}

// NewPeeringConnectionOptions registers a new resource with the given unique name, arguments, and options.
func NewPeeringConnectionOptions(ctx *pulumi.Context,
	name string, args *PeeringConnectionOptionsArgs, opts ...pulumi.ResourceOption) (*PeeringConnectionOptions, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.VpcPeeringConnectionId == nil {
		return nil, errors.New("invalid value for required argument 'VpcPeeringConnectionId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PeeringConnectionOptions
	err := ctx.RegisterResource("aws:ec2/peeringConnectionOptions:PeeringConnectionOptions", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPeeringConnectionOptions gets an existing PeeringConnectionOptions resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPeeringConnectionOptions(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PeeringConnectionOptionsState, opts ...pulumi.ResourceOption) (*PeeringConnectionOptions, error) {
	var resource PeeringConnectionOptions
	err := ctx.ReadResource("aws:ec2/peeringConnectionOptions:PeeringConnectionOptions", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PeeringConnectionOptions resources.
type peeringConnectionOptionsState struct {
	// An optional configuration block that allows for [VPC Peering Connection](https://docs.aws.amazon.com/vpc/latest/peering/what-is-vpc-peering.html) options to be set for the VPC that acceptsthe peering connection (a maximum of one).
	Accepter *PeeringConnectionOptionsAccepter `pulumi:"accepter"`
	// A optional configuration block that allows for [VPC Peering Connection](https://docs.aws.amazon.com/vpc/latest/peering/what-is-vpc-peering.html) options to be set for the VPC that requeststhe peering connection (a maximum of one).
	Requester *PeeringConnectionOptionsRequester `pulumi:"requester"`
	// The ID of the requester VPC peering connection.
	VpcPeeringConnectionId *string `pulumi:"vpcPeeringConnectionId"`
}

type PeeringConnectionOptionsState struct {
	// An optional configuration block that allows for [VPC Peering Connection](https://docs.aws.amazon.com/vpc/latest/peering/what-is-vpc-peering.html) options to be set for the VPC that acceptsthe peering connection (a maximum of one).
	Accepter pulumix.Input[*PeeringConnectionOptionsAccepterArgs]
	// A optional configuration block that allows for [VPC Peering Connection](https://docs.aws.amazon.com/vpc/latest/peering/what-is-vpc-peering.html) options to be set for the VPC that requeststhe peering connection (a maximum of one).
	Requester pulumix.Input[*PeeringConnectionOptionsRequesterArgs]
	// The ID of the requester VPC peering connection.
	VpcPeeringConnectionId pulumix.Input[*string]
}

func (PeeringConnectionOptionsState) ElementType() reflect.Type {
	return reflect.TypeOf((*peeringConnectionOptionsState)(nil)).Elem()
}

type peeringConnectionOptionsArgs struct {
	// An optional configuration block that allows for [VPC Peering Connection](https://docs.aws.amazon.com/vpc/latest/peering/what-is-vpc-peering.html) options to be set for the VPC that acceptsthe peering connection (a maximum of one).
	Accepter *PeeringConnectionOptionsAccepter `pulumi:"accepter"`
	// A optional configuration block that allows for [VPC Peering Connection](https://docs.aws.amazon.com/vpc/latest/peering/what-is-vpc-peering.html) options to be set for the VPC that requeststhe peering connection (a maximum of one).
	Requester *PeeringConnectionOptionsRequester `pulumi:"requester"`
	// The ID of the requester VPC peering connection.
	VpcPeeringConnectionId string `pulumi:"vpcPeeringConnectionId"`
}

// The set of arguments for constructing a PeeringConnectionOptions resource.
type PeeringConnectionOptionsArgs struct {
	// An optional configuration block that allows for [VPC Peering Connection](https://docs.aws.amazon.com/vpc/latest/peering/what-is-vpc-peering.html) options to be set for the VPC that acceptsthe peering connection (a maximum of one).
	Accepter pulumix.Input[*PeeringConnectionOptionsAccepterArgs]
	// A optional configuration block that allows for [VPC Peering Connection](https://docs.aws.amazon.com/vpc/latest/peering/what-is-vpc-peering.html) options to be set for the VPC that requeststhe peering connection (a maximum of one).
	Requester pulumix.Input[*PeeringConnectionOptionsRequesterArgs]
	// The ID of the requester VPC peering connection.
	VpcPeeringConnectionId pulumix.Input[string]
}

func (PeeringConnectionOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*peeringConnectionOptionsArgs)(nil)).Elem()
}

type PeeringConnectionOptionsOutput struct{ *pulumi.OutputState }

func (PeeringConnectionOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PeeringConnectionOptions)(nil)).Elem()
}

func (o PeeringConnectionOptionsOutput) ToPeeringConnectionOptionsOutput() PeeringConnectionOptionsOutput {
	return o
}

func (o PeeringConnectionOptionsOutput) ToPeeringConnectionOptionsOutputWithContext(ctx context.Context) PeeringConnectionOptionsOutput {
	return o
}

func (o PeeringConnectionOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[PeeringConnectionOptions] {
	return pulumix.Output[PeeringConnectionOptions]{
		OutputState: o.OutputState,
	}
}

// An optional configuration block that allows for [VPC Peering Connection](https://docs.aws.amazon.com/vpc/latest/peering/what-is-vpc-peering.html) options to be set for the VPC that acceptsthe peering connection (a maximum of one).
func (o PeeringConnectionOptionsOutput) Accepter() pulumix.GPtrOutput[PeeringConnectionOptionsAccepter, PeeringConnectionOptionsAccepterOutput] {
	value := pulumix.Apply[PeeringConnectionOptions](o, func(v PeeringConnectionOptions) pulumix.GPtrOutput[PeeringConnectionOptionsAccepter, PeeringConnectionOptionsAccepterOutput] {
		return v.Accepter
	})
	unwrapped := pulumix.Flatten[*PeeringConnectionOptionsAccepter, pulumix.GPtrOutput[PeeringConnectionOptionsAccepter, PeeringConnectionOptionsAccepterOutput]](value)
	return pulumix.GPtrOutput[PeeringConnectionOptionsAccepter, PeeringConnectionOptionsAccepterOutput]{OutputState: unwrapped.OutputState}
}

// A optional configuration block that allows for [VPC Peering Connection](https://docs.aws.amazon.com/vpc/latest/peering/what-is-vpc-peering.html) options to be set for the VPC that requeststhe peering connection (a maximum of one).
func (o PeeringConnectionOptionsOutput) Requester() pulumix.GPtrOutput[PeeringConnectionOptionsRequester, PeeringConnectionOptionsRequesterOutput] {
	value := pulumix.Apply[PeeringConnectionOptions](o, func(v PeeringConnectionOptions) pulumix.GPtrOutput[PeeringConnectionOptionsRequester, PeeringConnectionOptionsRequesterOutput] {
		return v.Requester
	})
	unwrapped := pulumix.Flatten[*PeeringConnectionOptionsRequester, pulumix.GPtrOutput[PeeringConnectionOptionsRequester, PeeringConnectionOptionsRequesterOutput]](value)
	return pulumix.GPtrOutput[PeeringConnectionOptionsRequester, PeeringConnectionOptionsRequesterOutput]{OutputState: unwrapped.OutputState}
}

// The ID of the requester VPC peering connection.
func (o PeeringConnectionOptionsOutput) VpcPeeringConnectionId() pulumix.Output[string] {
	value := pulumix.Apply[PeeringConnectionOptions](o, func(v PeeringConnectionOptions) pulumix.Output[string] { return v.VpcPeeringConnectionId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(PeeringConnectionOptionsOutput{})
}
