// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2transitgateway

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides informations for routes of a specific transit gateway, such as state, type, cidr
func GetRouteTableRoutes(ctx *pulumi.Context, args *GetRouteTableRoutesArgs, opts ...pulumi.InvokeOption) (*GetRouteTableRoutesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetRouteTableRoutesResult
	err := ctx.Invoke("aws:ec2transitgateway/getRouteTableRoutes:getRouteTableRoutes", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRouteTableRoutes.
type GetRouteTableRoutesArgs struct {
	// Custom filter block as described below.
	Filters []GetRouteTableRoutesFilter `pulumi:"filters"`
	// Identifier of EC2 Transit Gateway Route Table.
	//
	// More complex filters can be expressed using one or more `filter` sub-blocks,
	// which take the following arguments:
	TransitGatewayRouteTableId string `pulumi:"transitGatewayRouteTableId"`
}

// A collection of values returned by getRouteTableRoutes.
type GetRouteTableRoutesResult struct {
	Filters []GetRouteTableRoutesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// List of Transit Gateway Routes.
	Routes                     []GetRouteTableRoutesRoute `pulumi:"routes"`
	TransitGatewayRouteTableId string                     `pulumi:"transitGatewayRouteTableId"`
}

func GetRouteTableRoutesOutput(ctx *pulumi.Context, args GetRouteTableRoutesOutputArgs, opts ...pulumi.InvokeOption) GetRouteTableRoutesResultOutput {
	outputResult := pulumix.ApplyErr[*GetRouteTableRoutesArgs](args.ToOutput(), func(plainArgs *GetRouteTableRoutesArgs) (*GetRouteTableRoutesResult, error) {
		return GetRouteTableRoutes(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[GetRouteTableRoutesResultOutput, *GetRouteTableRoutesResult](outputResult)
}

// A collection of arguments for invoking getRouteTableRoutes.
type GetRouteTableRoutesOutputArgs struct {
	// Custom filter block as described below.
	Filters pulumix.Input[[]*GetRouteTableRoutesFilterArgs] `pulumi:"filters"`
	// Identifier of EC2 Transit Gateway Route Table.
	//
	// More complex filters can be expressed using one or more `filter` sub-blocks,
	// which take the following arguments:
	TransitGatewayRouteTableId pulumix.Input[string] `pulumi:"transitGatewayRouteTableId"`
}

func (args GetRouteTableRoutesOutputArgs) ToOutput() pulumix.Output[*GetRouteTableRoutesArgs] {
	allArgs := pulumix.All(
		args.Filters.ToOutput(context.Background()).AsAny(),
		args.TransitGatewayRouteTableId.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *GetRouteTableRoutesArgs {
		return &GetRouteTableRoutesArgs{
			Filters:                    resolvedArgs[0].([]GetRouteTableRoutesFilter),
			TransitGatewayRouteTableId: resolvedArgs[1].(string),
		}
	})
}

type GetRouteTableRoutesResultOutput struct{ *pulumi.OutputState }

func (GetRouteTableRoutesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTableRoutesResult)(nil)).Elem()
}

func (o GetRouteTableRoutesResultOutput) ToOutput(context.Context) pulumix.Output[*GetRouteTableRoutesResult] {
	return pulumix.Output[*GetRouteTableRoutesResult]{
		OutputState: o.OutputState,
	}
}

func (o GetRouteTableRoutesResultOutput) Filters() pulumix.GArrayOutput[GetRouteTableRoutesFilter, GetRouteTableRoutesFilterOutput] {
	value := pulumix.Apply[*GetRouteTableRoutesResult](o, func(v *GetRouteTableRoutesResult) []GetRouteTableRoutesFilter { return v.Filters })
	return pulumix.GArrayOutput[GetRouteTableRoutesFilter, GetRouteTableRoutesFilterOutput]{
		OutputState: value.OutputState,
	}
}

func (o GetRouteTableRoutesResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*GetRouteTableRoutesResult](o, func(v *GetRouteTableRoutesResult) string { return v.Id })
}

func (o GetRouteTableRoutesResultOutput) Routes() pulumix.GArrayOutput[GetRouteTableRoutesRoute, GetRouteTableRoutesRouteOutput] {
	value := pulumix.Apply[*GetRouteTableRoutesResult](o, func(v *GetRouteTableRoutesResult) []GetRouteTableRoutesRoute { return v.Routes })
	return pulumix.GArrayOutput[GetRouteTableRoutesRoute, GetRouteTableRoutesRouteOutput]{
		OutputState: value.OutputState,
	}
}

func (o GetRouteTableRoutesResultOutput) TransitGatewayRouteTableId() pulumix.Output[string] {
	return pulumix.Apply[*GetRouteTableRoutesResult](o, func(v *GetRouteTableRoutesResult) string { return v.TransitGatewayRouteTableId })
}
