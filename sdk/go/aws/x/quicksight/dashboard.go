// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package quicksight

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Resource for managing a QuickSight Dashboard.
type Dashboard struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) of the resource.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// AWS account ID.
	AwsAccountId pulumix.Output[string] `pulumi:"awsAccountId"`
	// The time that the dashboard was created.
	CreatedTime pulumix.Output[string] `pulumi:"createdTime"`
	// Identifier for the dashboard.
	DashboardId pulumix.Output[string] `pulumi:"dashboardId"`
	// Options for publishing the dashboard. See dashboard_publish_options.
	DashboardPublishOptions pulumix.GPtrOutput[DashboardDashboardPublishOptions, DashboardDashboardPublishOptionsOutput] `pulumi:"dashboardPublishOptions"`
	LastPublishedTime       pulumix.Output[string]                                                                       `pulumi:"lastPublishedTime"`
	// The time that the dashboard was last updated.
	LastUpdatedTime pulumix.Output[string] `pulumi:"lastUpdatedTime"`
	// Display name for the dashboard.
	Name pulumix.Output[string] `pulumi:"name"`
	// The parameters for the creation of the dashboard, which you want to use to override the default settings. A dashboard can have any type of parameters, and some parameters might accept multiple values. See parameters.
	Parameters pulumix.GPtrOutput[DashboardParameters, DashboardParametersOutput] `pulumi:"parameters"`
	// A set of resource permissions on the dashboard. Maximum of 64 items. See permissions.
	Permissions pulumix.GArrayOutput[DashboardPermission, DashboardPermissionOutput] `pulumi:"permissions"`
	// The entity that you are using as a source when you create the dashboard (template). Only one of `definition` or `sourceEntity` should be configured. See source_entity.
	SourceEntity pulumix.GPtrOutput[DashboardSourceEntity, DashboardSourceEntityOutput] `pulumi:"sourceEntity"`
	// Amazon Resource Name (ARN) of a template that was used to create this dashboard.
	SourceEntityArn pulumix.Output[string] `pulumi:"sourceEntityArn"`
	// The dashboard creation status.
	Status pulumix.Output[string] `pulumi:"status"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// The Amazon Resource Name (ARN) of the theme that is being used for this dashboard. The theme ARN must exist in the same AWS account where you create the dashboard.
	ThemeArn pulumix.Output[*string] `pulumi:"themeArn"`
	// A description of the current dashboard version being created/updated.
	//
	// The following arguments are optional:
	VersionDescription pulumix.Output[string] `pulumi:"versionDescription"`
	// The version number of the dashboard version.
	VersionNumber pulumix.Output[int] `pulumi:"versionNumber"`
}

// NewDashboard registers a new resource with the given unique name, arguments, and options.
func NewDashboard(ctx *pulumi.Context,
	name string, args *DashboardArgs, opts ...pulumi.ResourceOption) (*Dashboard, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DashboardId == nil {
		return nil, errors.New("invalid value for required argument 'DashboardId'")
	}
	if args.VersionDescription == nil {
		return nil, errors.New("invalid value for required argument 'VersionDescription'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Dashboard
	err := ctx.RegisterResource("aws:quicksight/dashboard:Dashboard", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDashboard gets an existing Dashboard resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDashboard(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DashboardState, opts ...pulumi.ResourceOption) (*Dashboard, error) {
	var resource Dashboard
	err := ctx.ReadResource("aws:quicksight/dashboard:Dashboard", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Dashboard resources.
type dashboardState struct {
	// The Amazon Resource Name (ARN) of the resource.
	Arn *string `pulumi:"arn"`
	// AWS account ID.
	AwsAccountId *string `pulumi:"awsAccountId"`
	// The time that the dashboard was created.
	CreatedTime *string `pulumi:"createdTime"`
	// Identifier for the dashboard.
	DashboardId *string `pulumi:"dashboardId"`
	// Options for publishing the dashboard. See dashboard_publish_options.
	DashboardPublishOptions *DashboardDashboardPublishOptions `pulumi:"dashboardPublishOptions"`
	LastPublishedTime       *string                           `pulumi:"lastPublishedTime"`
	// The time that the dashboard was last updated.
	LastUpdatedTime *string `pulumi:"lastUpdatedTime"`
	// Display name for the dashboard.
	Name *string `pulumi:"name"`
	// The parameters for the creation of the dashboard, which you want to use to override the default settings. A dashboard can have any type of parameters, and some parameters might accept multiple values. See parameters.
	Parameters *DashboardParameters `pulumi:"parameters"`
	// A set of resource permissions on the dashboard. Maximum of 64 items. See permissions.
	Permissions []DashboardPermission `pulumi:"permissions"`
	// The entity that you are using as a source when you create the dashboard (template). Only one of `definition` or `sourceEntity` should be configured. See source_entity.
	SourceEntity *DashboardSourceEntity `pulumi:"sourceEntity"`
	// Amazon Resource Name (ARN) of a template that was used to create this dashboard.
	SourceEntityArn *string `pulumi:"sourceEntityArn"`
	// The dashboard creation status.
	Status *string `pulumi:"status"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// The Amazon Resource Name (ARN) of the theme that is being used for this dashboard. The theme ARN must exist in the same AWS account where you create the dashboard.
	ThemeArn *string `pulumi:"themeArn"`
	// A description of the current dashboard version being created/updated.
	//
	// The following arguments are optional:
	VersionDescription *string `pulumi:"versionDescription"`
	// The version number of the dashboard version.
	VersionNumber *int `pulumi:"versionNumber"`
}

type DashboardState struct {
	// The Amazon Resource Name (ARN) of the resource.
	Arn pulumix.Input[*string]
	// AWS account ID.
	AwsAccountId pulumix.Input[*string]
	// The time that the dashboard was created.
	CreatedTime pulumix.Input[*string]
	// Identifier for the dashboard.
	DashboardId pulumix.Input[*string]
	// Options for publishing the dashboard. See dashboard_publish_options.
	DashboardPublishOptions pulumix.Input[*DashboardDashboardPublishOptionsArgs]
	LastPublishedTime       pulumix.Input[*string]
	// The time that the dashboard was last updated.
	LastUpdatedTime pulumix.Input[*string]
	// Display name for the dashboard.
	Name pulumix.Input[*string]
	// The parameters for the creation of the dashboard, which you want to use to override the default settings. A dashboard can have any type of parameters, and some parameters might accept multiple values. See parameters.
	Parameters pulumix.Input[*DashboardParametersArgs]
	// A set of resource permissions on the dashboard. Maximum of 64 items. See permissions.
	Permissions pulumix.Input[[]*DashboardPermissionArgs]
	// The entity that you are using as a source when you create the dashboard (template). Only one of `definition` or `sourceEntity` should be configured. See source_entity.
	SourceEntity pulumix.Input[*DashboardSourceEntityArgs]
	// Amazon Resource Name (ARN) of a template that was used to create this dashboard.
	SourceEntityArn pulumix.Input[*string]
	// The dashboard creation status.
	Status pulumix.Input[*string]
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// The Amazon Resource Name (ARN) of the theme that is being used for this dashboard. The theme ARN must exist in the same AWS account where you create the dashboard.
	ThemeArn pulumix.Input[*string]
	// A description of the current dashboard version being created/updated.
	//
	// The following arguments are optional:
	VersionDescription pulumix.Input[*string]
	// The version number of the dashboard version.
	VersionNumber pulumix.Input[*int]
}

func (DashboardState) ElementType() reflect.Type {
	return reflect.TypeOf((*dashboardState)(nil)).Elem()
}

type dashboardArgs struct {
	// AWS account ID.
	AwsAccountId *string `pulumi:"awsAccountId"`
	// Identifier for the dashboard.
	DashboardId string `pulumi:"dashboardId"`
	// Options for publishing the dashboard. See dashboard_publish_options.
	DashboardPublishOptions *DashboardDashboardPublishOptions `pulumi:"dashboardPublishOptions"`
	// Display name for the dashboard.
	Name *string `pulumi:"name"`
	// The parameters for the creation of the dashboard, which you want to use to override the default settings. A dashboard can have any type of parameters, and some parameters might accept multiple values. See parameters.
	Parameters *DashboardParameters `pulumi:"parameters"`
	// A set of resource permissions on the dashboard. Maximum of 64 items. See permissions.
	Permissions []DashboardPermission `pulumi:"permissions"`
	// The entity that you are using as a source when you create the dashboard (template). Only one of `definition` or `sourceEntity` should be configured. See source_entity.
	SourceEntity *DashboardSourceEntity `pulumi:"sourceEntity"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// The Amazon Resource Name (ARN) of the theme that is being used for this dashboard. The theme ARN must exist in the same AWS account where you create the dashboard.
	ThemeArn *string `pulumi:"themeArn"`
	// A description of the current dashboard version being created/updated.
	//
	// The following arguments are optional:
	VersionDescription string `pulumi:"versionDescription"`
}

// The set of arguments for constructing a Dashboard resource.
type DashboardArgs struct {
	// AWS account ID.
	AwsAccountId pulumix.Input[*string]
	// Identifier for the dashboard.
	DashboardId pulumix.Input[string]
	// Options for publishing the dashboard. See dashboard_publish_options.
	DashboardPublishOptions pulumix.Input[*DashboardDashboardPublishOptionsArgs]
	// Display name for the dashboard.
	Name pulumix.Input[*string]
	// The parameters for the creation of the dashboard, which you want to use to override the default settings. A dashboard can have any type of parameters, and some parameters might accept multiple values. See parameters.
	Parameters pulumix.Input[*DashboardParametersArgs]
	// A set of resource permissions on the dashboard. Maximum of 64 items. See permissions.
	Permissions pulumix.Input[[]*DashboardPermissionArgs]
	// The entity that you are using as a source when you create the dashboard (template). Only one of `definition` or `sourceEntity` should be configured. See source_entity.
	SourceEntity pulumix.Input[*DashboardSourceEntityArgs]
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// The Amazon Resource Name (ARN) of the theme that is being used for this dashboard. The theme ARN must exist in the same AWS account where you create the dashboard.
	ThemeArn pulumix.Input[*string]
	// A description of the current dashboard version being created/updated.
	//
	// The following arguments are optional:
	VersionDescription pulumix.Input[string]
}

func (DashboardArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dashboardArgs)(nil)).Elem()
}

type DashboardOutput struct{ *pulumi.OutputState }

func (DashboardOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Dashboard)(nil)).Elem()
}

func (o DashboardOutput) ToDashboardOutput() DashboardOutput {
	return o
}

func (o DashboardOutput) ToDashboardOutputWithContext(ctx context.Context) DashboardOutput {
	return o
}

func (o DashboardOutput) ToOutput(ctx context.Context) pulumix.Output[Dashboard] {
	return pulumix.Output[Dashboard]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) of the resource.
func (o DashboardOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Dashboard](o, func(v Dashboard) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// AWS account ID.
func (o DashboardOutput) AwsAccountId() pulumix.Output[string] {
	value := pulumix.Apply[Dashboard](o, func(v Dashboard) pulumix.Output[string] { return v.AwsAccountId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The time that the dashboard was created.
func (o DashboardOutput) CreatedTime() pulumix.Output[string] {
	value := pulumix.Apply[Dashboard](o, func(v Dashboard) pulumix.Output[string] { return v.CreatedTime })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Identifier for the dashboard.
func (o DashboardOutput) DashboardId() pulumix.Output[string] {
	value := pulumix.Apply[Dashboard](o, func(v Dashboard) pulumix.Output[string] { return v.DashboardId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Options for publishing the dashboard. See dashboard_publish_options.
func (o DashboardOutput) DashboardPublishOptions() pulumix.GPtrOutput[DashboardDashboardPublishOptions, DashboardDashboardPublishOptionsOutput] {
	value := pulumix.Apply[Dashboard](o, func(v Dashboard) pulumix.GPtrOutput[DashboardDashboardPublishOptions, DashboardDashboardPublishOptionsOutput] {
		return v.DashboardPublishOptions
	})
	unwrapped := pulumix.Flatten[*DashboardDashboardPublishOptions, pulumix.GPtrOutput[DashboardDashboardPublishOptions, DashboardDashboardPublishOptionsOutput]](value)
	return pulumix.GPtrOutput[DashboardDashboardPublishOptions, DashboardDashboardPublishOptionsOutput]{OutputState: unwrapped.OutputState}
}

func (o DashboardOutput) LastPublishedTime() pulumix.Output[string] {
	value := pulumix.Apply[Dashboard](o, func(v Dashboard) pulumix.Output[string] { return v.LastPublishedTime })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The time that the dashboard was last updated.
func (o DashboardOutput) LastUpdatedTime() pulumix.Output[string] {
	value := pulumix.Apply[Dashboard](o, func(v Dashboard) pulumix.Output[string] { return v.LastUpdatedTime })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Display name for the dashboard.
func (o DashboardOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[Dashboard](o, func(v Dashboard) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The parameters for the creation of the dashboard, which you want to use to override the default settings. A dashboard can have any type of parameters, and some parameters might accept multiple values. See parameters.
func (o DashboardOutput) Parameters() pulumix.GPtrOutput[DashboardParameters, DashboardParametersOutput] {
	value := pulumix.Apply[Dashboard](o, func(v Dashboard) pulumix.GPtrOutput[DashboardParameters, DashboardParametersOutput] {
		return v.Parameters
	})
	unwrapped := pulumix.Flatten[*DashboardParameters, pulumix.GPtrOutput[DashboardParameters, DashboardParametersOutput]](value)
	return pulumix.GPtrOutput[DashboardParameters, DashboardParametersOutput]{OutputState: unwrapped.OutputState}
}

// A set of resource permissions on the dashboard. Maximum of 64 items. See permissions.
func (o DashboardOutput) Permissions() pulumix.GArrayOutput[DashboardPermission, DashboardPermissionOutput] {
	value := pulumix.Apply[Dashboard](o, func(v Dashboard) pulumix.GArrayOutput[DashboardPermission, DashboardPermissionOutput] {
		return v.Permissions
	})
	unwrapped := pulumix.Flatten[[]DashboardPermission, pulumix.GArrayOutput[DashboardPermission, DashboardPermissionOutput]](value)
	return pulumix.GArrayOutput[DashboardPermission, DashboardPermissionOutput]{OutputState: unwrapped.OutputState}
}

// The entity that you are using as a source when you create the dashboard (template). Only one of `definition` or `sourceEntity` should be configured. See source_entity.
func (o DashboardOutput) SourceEntity() pulumix.GPtrOutput[DashboardSourceEntity, DashboardSourceEntityOutput] {
	value := pulumix.Apply[Dashboard](o, func(v Dashboard) pulumix.GPtrOutput[DashboardSourceEntity, DashboardSourceEntityOutput] {
		return v.SourceEntity
	})
	unwrapped := pulumix.Flatten[*DashboardSourceEntity, pulumix.GPtrOutput[DashboardSourceEntity, DashboardSourceEntityOutput]](value)
	return pulumix.GPtrOutput[DashboardSourceEntity, DashboardSourceEntityOutput]{OutputState: unwrapped.OutputState}
}

// Amazon Resource Name (ARN) of a template that was used to create this dashboard.
func (o DashboardOutput) SourceEntityArn() pulumix.Output[string] {
	value := pulumix.Apply[Dashboard](o, func(v Dashboard) pulumix.Output[string] { return v.SourceEntityArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The dashboard creation status.
func (o DashboardOutput) Status() pulumix.Output[string] {
	value := pulumix.Apply[Dashboard](o, func(v Dashboard) pulumix.Output[string] { return v.Status })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o DashboardOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Dashboard](o, func(v Dashboard) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o DashboardOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[Dashboard](o, func(v Dashboard) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// The Amazon Resource Name (ARN) of the theme that is being used for this dashboard. The theme ARN must exist in the same AWS account where you create the dashboard.
func (o DashboardOutput) ThemeArn() pulumix.Output[*string] {
	value := pulumix.Apply[Dashboard](o, func(v Dashboard) pulumix.Output[*string] { return v.ThemeArn })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// A description of the current dashboard version being created/updated.
//
// The following arguments are optional:
func (o DashboardOutput) VersionDescription() pulumix.Output[string] {
	value := pulumix.Apply[Dashboard](o, func(v Dashboard) pulumix.Output[string] { return v.VersionDescription })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The version number of the dashboard version.
func (o DashboardOutput) VersionNumber() pulumix.Output[int] {
	value := pulumix.Apply[Dashboard](o, func(v Dashboard) pulumix.Output[int] { return v.VersionNumber })
	return pulumix.Flatten[int, pulumix.Output[int]](value)
}

func init() {
	pulumi.RegisterOutputType(DashboardOutput{})
}
