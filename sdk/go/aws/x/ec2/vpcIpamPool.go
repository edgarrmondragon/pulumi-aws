// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an IP address pool resource for IPAM.
type VpcIpamPool struct {
	pulumi.CustomResourceState

	// The IP protocol assigned to this pool. You must choose either IPv4 or IPv6 protocol for a pool.
	AddressFamily pulumix.Output[string] `pulumi:"addressFamily"`
	// A default netmask length for allocations added to this pool. If, for example, the CIDR assigned to this pool is 10.0.0.0/8 and you enter 16 here, new allocations will default to 10.0.0.0/16 (unless you provide a different netmask value when you create the new allocation).
	AllocationDefaultNetmaskLength pulumix.Output[*int] `pulumi:"allocationDefaultNetmaskLength"`
	// The maximum netmask length that will be required for CIDR allocations in this pool.
	AllocationMaxNetmaskLength pulumix.Output[*int] `pulumi:"allocationMaxNetmaskLength"`
	// The minimum netmask length that will be required for CIDR allocations in this pool.
	AllocationMinNetmaskLength pulumix.Output[*int] `pulumi:"allocationMinNetmaskLength"`
	// Tags that are required for resources that use CIDRs from this IPAM pool. Resources that do not have these tags will not be allowed to allocate space from the pool. If the resources have their tags changed after they have allocated space or if the allocation tagging requirements are changed on the pool, the resource may be marked as noncompliant.
	AllocationResourceTags pulumix.MapOutput[string] `pulumi:"allocationResourceTags"`
	// Amazon Resource Name (ARN) of IPAM
	Arn pulumix.Output[string] `pulumi:"arn"`
	// If you include this argument, IPAM automatically imports any VPCs you have in your scope that fall
	// within the CIDR range in the pool.
	AutoImport pulumix.Output[*bool] `pulumi:"autoImport"`
	// Limits which AWS service the pool can be used in. Only useable on public scopes. Valid Values: `ec2`.
	AwsService pulumix.Output[*string] `pulumi:"awsService"`
	// A description for the IPAM pool.
	Description pulumix.Output[*string] `pulumi:"description"`
	// The ID of the scope in which you would like to create the IPAM pool.
	IpamScopeId   pulumix.Output[string] `pulumi:"ipamScopeId"`
	IpamScopeType pulumix.Output[string] `pulumi:"ipamScopeType"`
	// The locale in which you would like to create the IPAM pool. Locale is the Region where you want to make an IPAM pool available for allocations. You can only create pools with locales that match the operating Regions of the IPAM. You can only create VPCs from a pool whose locale matches the VPC's Region. Possible values: Any AWS region, such as `us-east-1`.
	Locale    pulumix.Output[*string] `pulumi:"locale"`
	PoolDepth pulumix.Output[int]     `pulumi:"poolDepth"`
	// The IP address source for pools in the public scope. Only used for provisioning IP address CIDRs to pools in the public scope. Valid values are `byoip` or `amazon`. Default is `byoip`.
	PublicIpSource pulumix.Output[*string] `pulumi:"publicIpSource"`
	// Defines whether or not IPv6 pool space is publicly advertisable over the internet. This argument is required if `addressFamily = "ipv6"` and `publicIpSource = "byoip"`, default is `false`. This option is not available for IPv4 pool space or if `publicIpSource = "amazon"`.
	PubliclyAdvertisable pulumix.Output[*bool] `pulumi:"publiclyAdvertisable"`
	// The ID of the source IPAM pool. Use this argument to create a child pool within an existing pool.
	SourceIpamPoolId pulumix.Output[*string] `pulumi:"sourceIpamPoolId"`
	// The ID of the IPAM
	State pulumix.Output[string] `pulumi:"state"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
}

// NewVpcIpamPool registers a new resource with the given unique name, arguments, and options.
func NewVpcIpamPool(ctx *pulumi.Context,
	name string, args *VpcIpamPoolArgs, opts ...pulumi.ResourceOption) (*VpcIpamPool, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AddressFamily == nil {
		return nil, errors.New("invalid value for required argument 'AddressFamily'")
	}
	if args.IpamScopeId == nil {
		return nil, errors.New("invalid value for required argument 'IpamScopeId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource VpcIpamPool
	err := ctx.RegisterResource("aws:ec2/vpcIpamPool:VpcIpamPool", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpcIpamPool gets an existing VpcIpamPool resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpcIpamPool(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpcIpamPoolState, opts ...pulumi.ResourceOption) (*VpcIpamPool, error) {
	var resource VpcIpamPool
	err := ctx.ReadResource("aws:ec2/vpcIpamPool:VpcIpamPool", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VpcIpamPool resources.
type vpcIpamPoolState struct {
	// The IP protocol assigned to this pool. You must choose either IPv4 or IPv6 protocol for a pool.
	AddressFamily *string `pulumi:"addressFamily"`
	// A default netmask length for allocations added to this pool. If, for example, the CIDR assigned to this pool is 10.0.0.0/8 and you enter 16 here, new allocations will default to 10.0.0.0/16 (unless you provide a different netmask value when you create the new allocation).
	AllocationDefaultNetmaskLength *int `pulumi:"allocationDefaultNetmaskLength"`
	// The maximum netmask length that will be required for CIDR allocations in this pool.
	AllocationMaxNetmaskLength *int `pulumi:"allocationMaxNetmaskLength"`
	// The minimum netmask length that will be required for CIDR allocations in this pool.
	AllocationMinNetmaskLength *int `pulumi:"allocationMinNetmaskLength"`
	// Tags that are required for resources that use CIDRs from this IPAM pool. Resources that do not have these tags will not be allowed to allocate space from the pool. If the resources have their tags changed after they have allocated space or if the allocation tagging requirements are changed on the pool, the resource may be marked as noncompliant.
	AllocationResourceTags map[string]string `pulumi:"allocationResourceTags"`
	// Amazon Resource Name (ARN) of IPAM
	Arn *string `pulumi:"arn"`
	// If you include this argument, IPAM automatically imports any VPCs you have in your scope that fall
	// within the CIDR range in the pool.
	AutoImport *bool `pulumi:"autoImport"`
	// Limits which AWS service the pool can be used in. Only useable on public scopes. Valid Values: `ec2`.
	AwsService *string `pulumi:"awsService"`
	// A description for the IPAM pool.
	Description *string `pulumi:"description"`
	// The ID of the scope in which you would like to create the IPAM pool.
	IpamScopeId   *string `pulumi:"ipamScopeId"`
	IpamScopeType *string `pulumi:"ipamScopeType"`
	// The locale in which you would like to create the IPAM pool. Locale is the Region where you want to make an IPAM pool available for allocations. You can only create pools with locales that match the operating Regions of the IPAM. You can only create VPCs from a pool whose locale matches the VPC's Region. Possible values: Any AWS region, such as `us-east-1`.
	Locale    *string `pulumi:"locale"`
	PoolDepth *int    `pulumi:"poolDepth"`
	// The IP address source for pools in the public scope. Only used for provisioning IP address CIDRs to pools in the public scope. Valid values are `byoip` or `amazon`. Default is `byoip`.
	PublicIpSource *string `pulumi:"publicIpSource"`
	// Defines whether or not IPv6 pool space is publicly advertisable over the internet. This argument is required if `addressFamily = "ipv6"` and `publicIpSource = "byoip"`, default is `false`. This option is not available for IPv4 pool space or if `publicIpSource = "amazon"`.
	PubliclyAdvertisable *bool `pulumi:"publiclyAdvertisable"`
	// The ID of the source IPAM pool. Use this argument to create a child pool within an existing pool.
	SourceIpamPoolId *string `pulumi:"sourceIpamPoolId"`
	// The ID of the IPAM
	State *string `pulumi:"state"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type VpcIpamPoolState struct {
	// The IP protocol assigned to this pool. You must choose either IPv4 or IPv6 protocol for a pool.
	AddressFamily pulumix.Input[*string]
	// A default netmask length for allocations added to this pool. If, for example, the CIDR assigned to this pool is 10.0.0.0/8 and you enter 16 here, new allocations will default to 10.0.0.0/16 (unless you provide a different netmask value when you create the new allocation).
	AllocationDefaultNetmaskLength pulumix.Input[*int]
	// The maximum netmask length that will be required for CIDR allocations in this pool.
	AllocationMaxNetmaskLength pulumix.Input[*int]
	// The minimum netmask length that will be required for CIDR allocations in this pool.
	AllocationMinNetmaskLength pulumix.Input[*int]
	// Tags that are required for resources that use CIDRs from this IPAM pool. Resources that do not have these tags will not be allowed to allocate space from the pool. If the resources have their tags changed after they have allocated space or if the allocation tagging requirements are changed on the pool, the resource may be marked as noncompliant.
	AllocationResourceTags pulumix.Input[map[string]string]
	// Amazon Resource Name (ARN) of IPAM
	Arn pulumix.Input[*string]
	// If you include this argument, IPAM automatically imports any VPCs you have in your scope that fall
	// within the CIDR range in the pool.
	AutoImport pulumix.Input[*bool]
	// Limits which AWS service the pool can be used in. Only useable on public scopes. Valid Values: `ec2`.
	AwsService pulumix.Input[*string]
	// A description for the IPAM pool.
	Description pulumix.Input[*string]
	// The ID of the scope in which you would like to create the IPAM pool.
	IpamScopeId   pulumix.Input[*string]
	IpamScopeType pulumix.Input[*string]
	// The locale in which you would like to create the IPAM pool. Locale is the Region where you want to make an IPAM pool available for allocations. You can only create pools with locales that match the operating Regions of the IPAM. You can only create VPCs from a pool whose locale matches the VPC's Region. Possible values: Any AWS region, such as `us-east-1`.
	Locale    pulumix.Input[*string]
	PoolDepth pulumix.Input[*int]
	// The IP address source for pools in the public scope. Only used for provisioning IP address CIDRs to pools in the public scope. Valid values are `byoip` or `amazon`. Default is `byoip`.
	PublicIpSource pulumix.Input[*string]
	// Defines whether or not IPv6 pool space is publicly advertisable over the internet. This argument is required if `addressFamily = "ipv6"` and `publicIpSource = "byoip"`, default is `false`. This option is not available for IPv4 pool space or if `publicIpSource = "amazon"`.
	PubliclyAdvertisable pulumix.Input[*bool]
	// The ID of the source IPAM pool. Use this argument to create a child pool within an existing pool.
	SourceIpamPoolId pulumix.Input[*string]
	// The ID of the IPAM
	State pulumix.Input[*string]
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
}

func (VpcIpamPoolState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcIpamPoolState)(nil)).Elem()
}

type vpcIpamPoolArgs struct {
	// The IP protocol assigned to this pool. You must choose either IPv4 or IPv6 protocol for a pool.
	AddressFamily string `pulumi:"addressFamily"`
	// A default netmask length for allocations added to this pool. If, for example, the CIDR assigned to this pool is 10.0.0.0/8 and you enter 16 here, new allocations will default to 10.0.0.0/16 (unless you provide a different netmask value when you create the new allocation).
	AllocationDefaultNetmaskLength *int `pulumi:"allocationDefaultNetmaskLength"`
	// The maximum netmask length that will be required for CIDR allocations in this pool.
	AllocationMaxNetmaskLength *int `pulumi:"allocationMaxNetmaskLength"`
	// The minimum netmask length that will be required for CIDR allocations in this pool.
	AllocationMinNetmaskLength *int `pulumi:"allocationMinNetmaskLength"`
	// Tags that are required for resources that use CIDRs from this IPAM pool. Resources that do not have these tags will not be allowed to allocate space from the pool. If the resources have their tags changed after they have allocated space or if the allocation tagging requirements are changed on the pool, the resource may be marked as noncompliant.
	AllocationResourceTags map[string]string `pulumi:"allocationResourceTags"`
	// If you include this argument, IPAM automatically imports any VPCs you have in your scope that fall
	// within the CIDR range in the pool.
	AutoImport *bool `pulumi:"autoImport"`
	// Limits which AWS service the pool can be used in. Only useable on public scopes. Valid Values: `ec2`.
	AwsService *string `pulumi:"awsService"`
	// A description for the IPAM pool.
	Description *string `pulumi:"description"`
	// The ID of the scope in which you would like to create the IPAM pool.
	IpamScopeId string `pulumi:"ipamScopeId"`
	// The locale in which you would like to create the IPAM pool. Locale is the Region where you want to make an IPAM pool available for allocations. You can only create pools with locales that match the operating Regions of the IPAM. You can only create VPCs from a pool whose locale matches the VPC's Region. Possible values: Any AWS region, such as `us-east-1`.
	Locale *string `pulumi:"locale"`
	// The IP address source for pools in the public scope. Only used for provisioning IP address CIDRs to pools in the public scope. Valid values are `byoip` or `amazon`. Default is `byoip`.
	PublicIpSource *string `pulumi:"publicIpSource"`
	// Defines whether or not IPv6 pool space is publicly advertisable over the internet. This argument is required if `addressFamily = "ipv6"` and `publicIpSource = "byoip"`, default is `false`. This option is not available for IPv4 pool space or if `publicIpSource = "amazon"`.
	PubliclyAdvertisable *bool `pulumi:"publiclyAdvertisable"`
	// The ID of the source IPAM pool. Use this argument to create a child pool within an existing pool.
	SourceIpamPoolId *string `pulumi:"sourceIpamPoolId"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a VpcIpamPool resource.
type VpcIpamPoolArgs struct {
	// The IP protocol assigned to this pool. You must choose either IPv4 or IPv6 protocol for a pool.
	AddressFamily pulumix.Input[string]
	// A default netmask length for allocations added to this pool. If, for example, the CIDR assigned to this pool is 10.0.0.0/8 and you enter 16 here, new allocations will default to 10.0.0.0/16 (unless you provide a different netmask value when you create the new allocation).
	AllocationDefaultNetmaskLength pulumix.Input[*int]
	// The maximum netmask length that will be required for CIDR allocations in this pool.
	AllocationMaxNetmaskLength pulumix.Input[*int]
	// The minimum netmask length that will be required for CIDR allocations in this pool.
	AllocationMinNetmaskLength pulumix.Input[*int]
	// Tags that are required for resources that use CIDRs from this IPAM pool. Resources that do not have these tags will not be allowed to allocate space from the pool. If the resources have their tags changed after they have allocated space or if the allocation tagging requirements are changed on the pool, the resource may be marked as noncompliant.
	AllocationResourceTags pulumix.Input[map[string]string]
	// If you include this argument, IPAM automatically imports any VPCs you have in your scope that fall
	// within the CIDR range in the pool.
	AutoImport pulumix.Input[*bool]
	// Limits which AWS service the pool can be used in. Only useable on public scopes. Valid Values: `ec2`.
	AwsService pulumix.Input[*string]
	// A description for the IPAM pool.
	Description pulumix.Input[*string]
	// The ID of the scope in which you would like to create the IPAM pool.
	IpamScopeId pulumix.Input[string]
	// The locale in which you would like to create the IPAM pool. Locale is the Region where you want to make an IPAM pool available for allocations. You can only create pools with locales that match the operating Regions of the IPAM. You can only create VPCs from a pool whose locale matches the VPC's Region. Possible values: Any AWS region, such as `us-east-1`.
	Locale pulumix.Input[*string]
	// The IP address source for pools in the public scope. Only used for provisioning IP address CIDRs to pools in the public scope. Valid values are `byoip` or `amazon`. Default is `byoip`.
	PublicIpSource pulumix.Input[*string]
	// Defines whether or not IPv6 pool space is publicly advertisable over the internet. This argument is required if `addressFamily = "ipv6"` and `publicIpSource = "byoip"`, default is `false`. This option is not available for IPv4 pool space or if `publicIpSource = "amazon"`.
	PubliclyAdvertisable pulumix.Input[*bool]
	// The ID of the source IPAM pool. Use this argument to create a child pool within an existing pool.
	SourceIpamPoolId pulumix.Input[*string]
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (VpcIpamPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcIpamPoolArgs)(nil)).Elem()
}

type VpcIpamPoolOutput struct{ *pulumi.OutputState }

func (VpcIpamPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcIpamPool)(nil)).Elem()
}

func (o VpcIpamPoolOutput) ToVpcIpamPoolOutput() VpcIpamPoolOutput {
	return o
}

func (o VpcIpamPoolOutput) ToVpcIpamPoolOutputWithContext(ctx context.Context) VpcIpamPoolOutput {
	return o
}

func (o VpcIpamPoolOutput) ToOutput(ctx context.Context) pulumix.Output[VpcIpamPool] {
	return pulumix.Output[VpcIpamPool]{
		OutputState: o.OutputState,
	}
}

// The IP protocol assigned to this pool. You must choose either IPv4 or IPv6 protocol for a pool.
func (o VpcIpamPoolOutput) AddressFamily() pulumix.Output[string] {
	value := pulumix.Apply[VpcIpamPool](o, func(v VpcIpamPool) pulumix.Output[string] { return v.AddressFamily })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A default netmask length for allocations added to this pool. If, for example, the CIDR assigned to this pool is 10.0.0.0/8 and you enter 16 here, new allocations will default to 10.0.0.0/16 (unless you provide a different netmask value when you create the new allocation).
func (o VpcIpamPoolOutput) AllocationDefaultNetmaskLength() pulumix.Output[*int] {
	value := pulumix.Apply[VpcIpamPool](o, func(v VpcIpamPool) pulumix.Output[*int] { return v.AllocationDefaultNetmaskLength })
	return pulumix.Flatten[*int, pulumix.Output[*int]](value)
}

// The maximum netmask length that will be required for CIDR allocations in this pool.
func (o VpcIpamPoolOutput) AllocationMaxNetmaskLength() pulumix.Output[*int] {
	value := pulumix.Apply[VpcIpamPool](o, func(v VpcIpamPool) pulumix.Output[*int] { return v.AllocationMaxNetmaskLength })
	return pulumix.Flatten[*int, pulumix.Output[*int]](value)
}

// The minimum netmask length that will be required for CIDR allocations in this pool.
func (o VpcIpamPoolOutput) AllocationMinNetmaskLength() pulumix.Output[*int] {
	value := pulumix.Apply[VpcIpamPool](o, func(v VpcIpamPool) pulumix.Output[*int] { return v.AllocationMinNetmaskLength })
	return pulumix.Flatten[*int, pulumix.Output[*int]](value)
}

// Tags that are required for resources that use CIDRs from this IPAM pool. Resources that do not have these tags will not be allowed to allocate space from the pool. If the resources have their tags changed after they have allocated space or if the allocation tagging requirements are changed on the pool, the resource may be marked as noncompliant.
func (o VpcIpamPoolOutput) AllocationResourceTags() pulumix.MapOutput[string] {
	value := pulumix.Apply[VpcIpamPool](o, func(v VpcIpamPool) pulumix.MapOutput[string] { return v.AllocationResourceTags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Amazon Resource Name (ARN) of IPAM
func (o VpcIpamPoolOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[VpcIpamPool](o, func(v VpcIpamPool) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// If you include this argument, IPAM automatically imports any VPCs you have in your scope that fall
// within the CIDR range in the pool.
func (o VpcIpamPoolOutput) AutoImport() pulumix.Output[*bool] {
	value := pulumix.Apply[VpcIpamPool](o, func(v VpcIpamPool) pulumix.Output[*bool] { return v.AutoImport })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// Limits which AWS service the pool can be used in. Only useable on public scopes. Valid Values: `ec2`.
func (o VpcIpamPoolOutput) AwsService() pulumix.Output[*string] {
	value := pulumix.Apply[VpcIpamPool](o, func(v VpcIpamPool) pulumix.Output[*string] { return v.AwsService })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// A description for the IPAM pool.
func (o VpcIpamPoolOutput) Description() pulumix.Output[*string] {
	value := pulumix.Apply[VpcIpamPool](o, func(v VpcIpamPool) pulumix.Output[*string] { return v.Description })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The ID of the scope in which you would like to create the IPAM pool.
func (o VpcIpamPoolOutput) IpamScopeId() pulumix.Output[string] {
	value := pulumix.Apply[VpcIpamPool](o, func(v VpcIpamPool) pulumix.Output[string] { return v.IpamScopeId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func (o VpcIpamPoolOutput) IpamScopeType() pulumix.Output[string] {
	value := pulumix.Apply[VpcIpamPool](o, func(v VpcIpamPool) pulumix.Output[string] { return v.IpamScopeType })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The locale in which you would like to create the IPAM pool. Locale is the Region where you want to make an IPAM pool available for allocations. You can only create pools with locales that match the operating Regions of the IPAM. You can only create VPCs from a pool whose locale matches the VPC's Region. Possible values: Any AWS region, such as `us-east-1`.
func (o VpcIpamPoolOutput) Locale() pulumix.Output[*string] {
	value := pulumix.Apply[VpcIpamPool](o, func(v VpcIpamPool) pulumix.Output[*string] { return v.Locale })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

func (o VpcIpamPoolOutput) PoolDepth() pulumix.Output[int] {
	value := pulumix.Apply[VpcIpamPool](o, func(v VpcIpamPool) pulumix.Output[int] { return v.PoolDepth })
	return pulumix.Flatten[int, pulumix.Output[int]](value)
}

// The IP address source for pools in the public scope. Only used for provisioning IP address CIDRs to pools in the public scope. Valid values are `byoip` or `amazon`. Default is `byoip`.
func (o VpcIpamPoolOutput) PublicIpSource() pulumix.Output[*string] {
	value := pulumix.Apply[VpcIpamPool](o, func(v VpcIpamPool) pulumix.Output[*string] { return v.PublicIpSource })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Defines whether or not IPv6 pool space is publicly advertisable over the internet. This argument is required if `addressFamily = "ipv6"` and `publicIpSource = "byoip"`, default is `false`. This option is not available for IPv4 pool space or if `publicIpSource = "amazon"`.
func (o VpcIpamPoolOutput) PubliclyAdvertisable() pulumix.Output[*bool] {
	value := pulumix.Apply[VpcIpamPool](o, func(v VpcIpamPool) pulumix.Output[*bool] { return v.PubliclyAdvertisable })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// The ID of the source IPAM pool. Use this argument to create a child pool within an existing pool.
func (o VpcIpamPoolOutput) SourceIpamPoolId() pulumix.Output[*string] {
	value := pulumix.Apply[VpcIpamPool](o, func(v VpcIpamPool) pulumix.Output[*string] { return v.SourceIpamPoolId })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The ID of the IPAM
func (o VpcIpamPoolOutput) State() pulumix.Output[string] {
	value := pulumix.Apply[VpcIpamPool](o, func(v VpcIpamPool) pulumix.Output[string] { return v.State })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o VpcIpamPoolOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[VpcIpamPool](o, func(v VpcIpamPool) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o VpcIpamPoolOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[VpcIpamPool](o, func(v VpcIpamPool) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(VpcIpamPoolOutput{})
}
