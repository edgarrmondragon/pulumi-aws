// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package amp

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manages an Amazon Managed Service for Prometheus (AMP) Rule Group Namespace
type RuleGroupNamespace struct {
	pulumi.CustomResourceState

	// the rule group namespace data that you want to be applied. See more [in AWS Docs](https://docs.aws.amazon.com/prometheus/latest/userguide/AMP-Ruler.html).
	Data pulumix.Output[string] `pulumi:"data"`
	// The name of the rule group namespace
	Name pulumix.Output[string] `pulumi:"name"`
	// ID of the prometheus workspace the rule group namespace should be linked to
	WorkspaceId pulumix.Output[string] `pulumi:"workspaceId"`
}

// NewRuleGroupNamespace registers a new resource with the given unique name, arguments, and options.
func NewRuleGroupNamespace(ctx *pulumi.Context,
	name string, args *RuleGroupNamespaceArgs, opts ...pulumi.ResourceOption) (*RuleGroupNamespace, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Data == nil {
		return nil, errors.New("invalid value for required argument 'Data'")
	}
	if args.WorkspaceId == nil {
		return nil, errors.New("invalid value for required argument 'WorkspaceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RuleGroupNamespace
	err := ctx.RegisterResource("aws:amp/ruleGroupNamespace:RuleGroupNamespace", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRuleGroupNamespace gets an existing RuleGroupNamespace resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRuleGroupNamespace(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RuleGroupNamespaceState, opts ...pulumi.ResourceOption) (*RuleGroupNamespace, error) {
	var resource RuleGroupNamespace
	err := ctx.ReadResource("aws:amp/ruleGroupNamespace:RuleGroupNamespace", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RuleGroupNamespace resources.
type ruleGroupNamespaceState struct {
	// the rule group namespace data that you want to be applied. See more [in AWS Docs](https://docs.aws.amazon.com/prometheus/latest/userguide/AMP-Ruler.html).
	Data *string `pulumi:"data"`
	// The name of the rule group namespace
	Name *string `pulumi:"name"`
	// ID of the prometheus workspace the rule group namespace should be linked to
	WorkspaceId *string `pulumi:"workspaceId"`
}

type RuleGroupNamespaceState struct {
	// the rule group namespace data that you want to be applied. See more [in AWS Docs](https://docs.aws.amazon.com/prometheus/latest/userguide/AMP-Ruler.html).
	Data pulumix.Input[*string]
	// The name of the rule group namespace
	Name pulumix.Input[*string]
	// ID of the prometheus workspace the rule group namespace should be linked to
	WorkspaceId pulumix.Input[*string]
}

func (RuleGroupNamespaceState) ElementType() reflect.Type {
	return reflect.TypeOf((*ruleGroupNamespaceState)(nil)).Elem()
}

type ruleGroupNamespaceArgs struct {
	// the rule group namespace data that you want to be applied. See more [in AWS Docs](https://docs.aws.amazon.com/prometheus/latest/userguide/AMP-Ruler.html).
	Data string `pulumi:"data"`
	// The name of the rule group namespace
	Name *string `pulumi:"name"`
	// ID of the prometheus workspace the rule group namespace should be linked to
	WorkspaceId string `pulumi:"workspaceId"`
}

// The set of arguments for constructing a RuleGroupNamespace resource.
type RuleGroupNamespaceArgs struct {
	// the rule group namespace data that you want to be applied. See more [in AWS Docs](https://docs.aws.amazon.com/prometheus/latest/userguide/AMP-Ruler.html).
	Data pulumix.Input[string]
	// The name of the rule group namespace
	Name pulumix.Input[*string]
	// ID of the prometheus workspace the rule group namespace should be linked to
	WorkspaceId pulumix.Input[string]
}

func (RuleGroupNamespaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ruleGroupNamespaceArgs)(nil)).Elem()
}

type RuleGroupNamespaceOutput struct{ *pulumi.OutputState }

func (RuleGroupNamespaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupNamespace)(nil)).Elem()
}

func (o RuleGroupNamespaceOutput) ToRuleGroupNamespaceOutput() RuleGroupNamespaceOutput {
	return o
}

func (o RuleGroupNamespaceOutput) ToRuleGroupNamespaceOutputWithContext(ctx context.Context) RuleGroupNamespaceOutput {
	return o
}

func (o RuleGroupNamespaceOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupNamespace] {
	return pulumix.Output[RuleGroupNamespace]{
		OutputState: o.OutputState,
	}
}

// the rule group namespace data that you want to be applied. See more [in AWS Docs](https://docs.aws.amazon.com/prometheus/latest/userguide/AMP-Ruler.html).
func (o RuleGroupNamespaceOutput) Data() pulumix.Output[string] {
	value := pulumix.Apply[RuleGroupNamespace](o, func(v RuleGroupNamespace) pulumix.Output[string] { return v.Data })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The name of the rule group namespace
func (o RuleGroupNamespaceOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[RuleGroupNamespace](o, func(v RuleGroupNamespace) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// ID of the prometheus workspace the rule group namespace should be linked to
func (o RuleGroupNamespaceOutput) WorkspaceId() pulumix.Output[string] {
	value := pulumix.Apply[RuleGroupNamespace](o, func(v RuleGroupNamespace) pulumix.Output[string] { return v.WorkspaceId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(RuleGroupNamespaceOutput{})
}
