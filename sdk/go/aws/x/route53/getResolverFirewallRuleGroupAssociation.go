// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package route53

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// `route53.ResolverFirewallRuleGroupAssociation` Retrieves the specified firewall rule group association.
//
// This data source allows to retrieve details about a specific a Route 53 Resolver DNS Firewall rule group association.
func LookupResolverFirewallRuleGroupAssociation(ctx *pulumi.Context, args *LookupResolverFirewallRuleGroupAssociationArgs, opts ...pulumi.InvokeOption) (*LookupResolverFirewallRuleGroupAssociationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupResolverFirewallRuleGroupAssociationResult
	err := ctx.Invoke("aws:route53/getResolverFirewallRuleGroupAssociation:getResolverFirewallRuleGroupAssociation", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getResolverFirewallRuleGroupAssociation.
type LookupResolverFirewallRuleGroupAssociationArgs struct {
	// The identifier for the association.
	//
	// The following attribute is additionally exported:
	FirewallRuleGroupAssociationId string `pulumi:"firewallRuleGroupAssociationId"`
}

// A collection of values returned by getResolverFirewallRuleGroupAssociation.
type LookupResolverFirewallRuleGroupAssociationResult struct {
	Arn                            string `pulumi:"arn"`
	CreationTime                   string `pulumi:"creationTime"`
	CreatorRequestId               string `pulumi:"creatorRequestId"`
	FirewallRuleGroupAssociationId string `pulumi:"firewallRuleGroupAssociationId"`
	FirewallRuleGroupId            string `pulumi:"firewallRuleGroupId"`
	// The provider-assigned unique ID for this managed resource.
	Id                 string `pulumi:"id"`
	ManagedOwnerName   string `pulumi:"managedOwnerName"`
	ModificationTime   string `pulumi:"modificationTime"`
	MutationProtection string `pulumi:"mutationProtection"`
	Name               string `pulumi:"name"`
	Priority           int    `pulumi:"priority"`
	Status             string `pulumi:"status"`
	StatusMessage      string `pulumi:"statusMessage"`
	VpcId              string `pulumi:"vpcId"`
}

func LookupResolverFirewallRuleGroupAssociationOutput(ctx *pulumi.Context, args LookupResolverFirewallRuleGroupAssociationOutputArgs, opts ...pulumi.InvokeOption) LookupResolverFirewallRuleGroupAssociationResultOutput {
	outputResult := pulumix.ApplyErr[*LookupResolverFirewallRuleGroupAssociationArgs](args.ToOutput(), func(plainArgs *LookupResolverFirewallRuleGroupAssociationArgs) (*LookupResolverFirewallRuleGroupAssociationResult, error) {
		return LookupResolverFirewallRuleGroupAssociation(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[LookupResolverFirewallRuleGroupAssociationResultOutput, *LookupResolverFirewallRuleGroupAssociationResult](outputResult)
}

// A collection of arguments for invoking getResolverFirewallRuleGroupAssociation.
type LookupResolverFirewallRuleGroupAssociationOutputArgs struct {
	// The identifier for the association.
	//
	// The following attribute is additionally exported:
	FirewallRuleGroupAssociationId pulumix.Input[string] `pulumi:"firewallRuleGroupAssociationId"`
}

func (args LookupResolverFirewallRuleGroupAssociationOutputArgs) ToOutput() pulumix.Output[*LookupResolverFirewallRuleGroupAssociationArgs] {
	allArgs := pulumix.All(
		args.FirewallRuleGroupAssociationId.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *LookupResolverFirewallRuleGroupAssociationArgs {
		return &LookupResolverFirewallRuleGroupAssociationArgs{
			FirewallRuleGroupAssociationId: resolvedArgs[0].(string),
		}
	})
}

type LookupResolverFirewallRuleGroupAssociationResultOutput struct{ *pulumi.OutputState }

func (LookupResolverFirewallRuleGroupAssociationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupResolverFirewallRuleGroupAssociationResult)(nil)).Elem()
}

func (o LookupResolverFirewallRuleGroupAssociationResultOutput) ToOutput(context.Context) pulumix.Output[*LookupResolverFirewallRuleGroupAssociationResult] {
	return pulumix.Output[*LookupResolverFirewallRuleGroupAssociationResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupResolverFirewallRuleGroupAssociationResultOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[*LookupResolverFirewallRuleGroupAssociationResult](o, func(v *LookupResolverFirewallRuleGroupAssociationResult) string { return v.Arn })
}

func (o LookupResolverFirewallRuleGroupAssociationResultOutput) CreationTime() pulumix.Output[string] {
	return pulumix.Apply[*LookupResolverFirewallRuleGroupAssociationResult](o, func(v *LookupResolverFirewallRuleGroupAssociationResult) string { return v.CreationTime })
}

func (o LookupResolverFirewallRuleGroupAssociationResultOutput) CreatorRequestId() pulumix.Output[string] {
	return pulumix.Apply[*LookupResolverFirewallRuleGroupAssociationResult](o, func(v *LookupResolverFirewallRuleGroupAssociationResult) string { return v.CreatorRequestId })
}

func (o LookupResolverFirewallRuleGroupAssociationResultOutput) FirewallRuleGroupAssociationId() pulumix.Output[string] {
	return pulumix.Apply[*LookupResolverFirewallRuleGroupAssociationResult](o, func(v *LookupResolverFirewallRuleGroupAssociationResult) string {
		return v.FirewallRuleGroupAssociationId
	})
}

func (o LookupResolverFirewallRuleGroupAssociationResultOutput) FirewallRuleGroupId() pulumix.Output[string] {
	return pulumix.Apply[*LookupResolverFirewallRuleGroupAssociationResult](o, func(v *LookupResolverFirewallRuleGroupAssociationResult) string { return v.FirewallRuleGroupId })
}

func (o LookupResolverFirewallRuleGroupAssociationResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*LookupResolverFirewallRuleGroupAssociationResult](o, func(v *LookupResolverFirewallRuleGroupAssociationResult) string { return v.Id })
}

func (o LookupResolverFirewallRuleGroupAssociationResultOutput) ManagedOwnerName() pulumix.Output[string] {
	return pulumix.Apply[*LookupResolverFirewallRuleGroupAssociationResult](o, func(v *LookupResolverFirewallRuleGroupAssociationResult) string { return v.ManagedOwnerName })
}

func (o LookupResolverFirewallRuleGroupAssociationResultOutput) ModificationTime() pulumix.Output[string] {
	return pulumix.Apply[*LookupResolverFirewallRuleGroupAssociationResult](o, func(v *LookupResolverFirewallRuleGroupAssociationResult) string { return v.ModificationTime })
}

func (o LookupResolverFirewallRuleGroupAssociationResultOutput) MutationProtection() pulumix.Output[string] {
	return pulumix.Apply[*LookupResolverFirewallRuleGroupAssociationResult](o, func(v *LookupResolverFirewallRuleGroupAssociationResult) string { return v.MutationProtection })
}

func (o LookupResolverFirewallRuleGroupAssociationResultOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[*LookupResolverFirewallRuleGroupAssociationResult](o, func(v *LookupResolverFirewallRuleGroupAssociationResult) string { return v.Name })
}

func (o LookupResolverFirewallRuleGroupAssociationResultOutput) Priority() pulumix.Output[int] {
	return pulumix.Apply[*LookupResolverFirewallRuleGroupAssociationResult](o, func(v *LookupResolverFirewallRuleGroupAssociationResult) int { return v.Priority })
}

func (o LookupResolverFirewallRuleGroupAssociationResultOutput) Status() pulumix.Output[string] {
	return pulumix.Apply[*LookupResolverFirewallRuleGroupAssociationResult](o, func(v *LookupResolverFirewallRuleGroupAssociationResult) string { return v.Status })
}

func (o LookupResolverFirewallRuleGroupAssociationResultOutput) StatusMessage() pulumix.Output[string] {
	return pulumix.Apply[*LookupResolverFirewallRuleGroupAssociationResult](o, func(v *LookupResolverFirewallRuleGroupAssociationResult) string { return v.StatusMessage })
}

func (o LookupResolverFirewallRuleGroupAssociationResultOutput) VpcId() pulumix.Output[string] {
	return pulumix.Apply[*LookupResolverFirewallRuleGroupAssociationResult](o, func(v *LookupResolverFirewallRuleGroupAssociationResult) string { return v.VpcId })
}
