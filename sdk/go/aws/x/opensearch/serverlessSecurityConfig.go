// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package opensearch

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Resource for managing an AWS OpenSearch Serverless Security Config.
type ServerlessSecurityConfig struct {
	pulumi.CustomResourceState

	// Version of the configuration.
	ConfigVersion pulumix.Output[string] `pulumi:"configVersion"`
	// Description of the security configuration.
	Description pulumix.Output[*string] `pulumi:"description"`
	// Name of the policy.
	Name pulumix.Output[string] `pulumi:"name"`
	// Configuration block for SAML options.
	SamlOptions pulumix.GPtrOutput[ServerlessSecurityConfigSamlOptions, ServerlessSecurityConfigSamlOptionsOutput] `pulumi:"samlOptions"`
	// Type of configuration. Must be `saml`.
	//
	// The following arguments are optional:
	Type pulumix.Output[string] `pulumi:"type"`
}

// NewServerlessSecurityConfig registers a new resource with the given unique name, arguments, and options.
func NewServerlessSecurityConfig(ctx *pulumi.Context,
	name string, args *ServerlessSecurityConfigArgs, opts ...pulumi.ResourceOption) (*ServerlessSecurityConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ServerlessSecurityConfig
	err := ctx.RegisterResource("aws:opensearch/serverlessSecurityConfig:ServerlessSecurityConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServerlessSecurityConfig gets an existing ServerlessSecurityConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServerlessSecurityConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServerlessSecurityConfigState, opts ...pulumi.ResourceOption) (*ServerlessSecurityConfig, error) {
	var resource ServerlessSecurityConfig
	err := ctx.ReadResource("aws:opensearch/serverlessSecurityConfig:ServerlessSecurityConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServerlessSecurityConfig resources.
type serverlessSecurityConfigState struct {
	// Version of the configuration.
	ConfigVersion *string `pulumi:"configVersion"`
	// Description of the security configuration.
	Description *string `pulumi:"description"`
	// Name of the policy.
	Name *string `pulumi:"name"`
	// Configuration block for SAML options.
	SamlOptions *ServerlessSecurityConfigSamlOptions `pulumi:"samlOptions"`
	// Type of configuration. Must be `saml`.
	//
	// The following arguments are optional:
	Type *string `pulumi:"type"`
}

type ServerlessSecurityConfigState struct {
	// Version of the configuration.
	ConfigVersion pulumix.Input[*string]
	// Description of the security configuration.
	Description pulumix.Input[*string]
	// Name of the policy.
	Name pulumix.Input[*string]
	// Configuration block for SAML options.
	SamlOptions pulumix.Input[*ServerlessSecurityConfigSamlOptionsArgs]
	// Type of configuration. Must be `saml`.
	//
	// The following arguments are optional:
	Type pulumix.Input[*string]
}

func (ServerlessSecurityConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*serverlessSecurityConfigState)(nil)).Elem()
}

type serverlessSecurityConfigArgs struct {
	// Description of the security configuration.
	Description *string `pulumi:"description"`
	// Name of the policy.
	Name *string `pulumi:"name"`
	// Configuration block for SAML options.
	SamlOptions *ServerlessSecurityConfigSamlOptions `pulumi:"samlOptions"`
	// Type of configuration. Must be `saml`.
	//
	// The following arguments are optional:
	Type string `pulumi:"type"`
}

// The set of arguments for constructing a ServerlessSecurityConfig resource.
type ServerlessSecurityConfigArgs struct {
	// Description of the security configuration.
	Description pulumix.Input[*string]
	// Name of the policy.
	Name pulumix.Input[*string]
	// Configuration block for SAML options.
	SamlOptions pulumix.Input[*ServerlessSecurityConfigSamlOptionsArgs]
	// Type of configuration. Must be `saml`.
	//
	// The following arguments are optional:
	Type pulumix.Input[string]
}

func (ServerlessSecurityConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serverlessSecurityConfigArgs)(nil)).Elem()
}

type ServerlessSecurityConfigOutput struct{ *pulumi.OutputState }

func (ServerlessSecurityConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerlessSecurityConfig)(nil)).Elem()
}

func (o ServerlessSecurityConfigOutput) ToServerlessSecurityConfigOutput() ServerlessSecurityConfigOutput {
	return o
}

func (o ServerlessSecurityConfigOutput) ToServerlessSecurityConfigOutputWithContext(ctx context.Context) ServerlessSecurityConfigOutput {
	return o
}

func (o ServerlessSecurityConfigOutput) ToOutput(ctx context.Context) pulumix.Output[ServerlessSecurityConfig] {
	return pulumix.Output[ServerlessSecurityConfig]{
		OutputState: o.OutputState,
	}
}

// Version of the configuration.
func (o ServerlessSecurityConfigOutput) ConfigVersion() pulumix.Output[string] {
	value := pulumix.Apply[ServerlessSecurityConfig](o, func(v ServerlessSecurityConfig) pulumix.Output[string] { return v.ConfigVersion })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Description of the security configuration.
func (o ServerlessSecurityConfigOutput) Description() pulumix.Output[*string] {
	value := pulumix.Apply[ServerlessSecurityConfig](o, func(v ServerlessSecurityConfig) pulumix.Output[*string] { return v.Description })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Name of the policy.
func (o ServerlessSecurityConfigOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[ServerlessSecurityConfig](o, func(v ServerlessSecurityConfig) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Configuration block for SAML options.
func (o ServerlessSecurityConfigOutput) SamlOptions() pulumix.GPtrOutput[ServerlessSecurityConfigSamlOptions, ServerlessSecurityConfigSamlOptionsOutput] {
	value := pulumix.Apply[ServerlessSecurityConfig](o, func(v ServerlessSecurityConfig) pulumix.GPtrOutput[ServerlessSecurityConfigSamlOptions, ServerlessSecurityConfigSamlOptionsOutput] {
		return v.SamlOptions
	})
	unwrapped := pulumix.Flatten[*ServerlessSecurityConfigSamlOptions, pulumix.GPtrOutput[ServerlessSecurityConfigSamlOptions, ServerlessSecurityConfigSamlOptionsOutput]](value)
	return pulumix.GPtrOutput[ServerlessSecurityConfigSamlOptions, ServerlessSecurityConfigSamlOptionsOutput]{OutputState: unwrapped.OutputState}
}

// Type of configuration. Must be `saml`.
//
// The following arguments are optional:
func (o ServerlessSecurityConfigOutput) Type() pulumix.Output[string] {
	value := pulumix.Apply[ServerlessSecurityConfig](o, func(v ServerlessSecurityConfig) pulumix.Output[string] { return v.Type })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(ServerlessSecurityConfigOutput{})
}
