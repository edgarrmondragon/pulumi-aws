// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kms

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Use this data source to get the metadata KMS custom key store.
// By using this data source, you can reference KMS custom key store
// without having to hard code the ID as input.
func LookupCustomKeyStore(ctx *pulumi.Context, args *LookupCustomKeyStoreArgs, opts ...pulumi.InvokeOption) (*LookupCustomKeyStoreResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupCustomKeyStoreResult
	err := ctx.Invoke("aws:kms/getCustomKeyStore:getCustomKeyStore", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCustomKeyStore.
type LookupCustomKeyStoreArgs struct {
	// The ID for the custom key store.
	CustomKeyStoreId *string `pulumi:"customKeyStoreId"`
	// The user-specified friendly name for the custom key store.
	CustomKeyStoreName *string `pulumi:"customKeyStoreName"`
}

// A collection of values returned by getCustomKeyStore.
type LookupCustomKeyStoreResult struct {
	CloudHsmClusterId string `pulumi:"cloudHsmClusterId"`
	// Indicates whether the custom key store is connected to its CloudHSM cluster.
	ConnectionState string `pulumi:"connectionState"`
	// The date and time when the custom key store was created.
	CreationDate       string `pulumi:"creationDate"`
	CustomKeyStoreId   string `pulumi:"customKeyStoreId"`
	CustomKeyStoreName string `pulumi:"customKeyStoreName"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The trust anchor certificate of the associated CloudHSM cluster.
	TrustAnchorCertificate string `pulumi:"trustAnchorCertificate"`
}

func LookupCustomKeyStoreOutput(ctx *pulumi.Context, args LookupCustomKeyStoreOutputArgs, opts ...pulumi.InvokeOption) LookupCustomKeyStoreResultOutput {
	outputResult := pulumix.ApplyErr[*LookupCustomKeyStoreArgs](args.ToOutput(), func(plainArgs *LookupCustomKeyStoreArgs) (*LookupCustomKeyStoreResult, error) {
		return LookupCustomKeyStore(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[LookupCustomKeyStoreResultOutput, *LookupCustomKeyStoreResult](outputResult)
}

// A collection of arguments for invoking getCustomKeyStore.
type LookupCustomKeyStoreOutputArgs struct {
	// The ID for the custom key store.
	CustomKeyStoreId pulumix.Input[*string] `pulumi:"customKeyStoreId"`
	// The user-specified friendly name for the custom key store.
	CustomKeyStoreName pulumix.Input[*string] `pulumi:"customKeyStoreName"`
}

func (args LookupCustomKeyStoreOutputArgs) ToOutput() pulumix.Output[*LookupCustomKeyStoreArgs] {
	allArgs := pulumix.All(
		args.CustomKeyStoreId.ToOutput(context.Background()).AsAny(),
		args.CustomKeyStoreName.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *LookupCustomKeyStoreArgs {
		return &LookupCustomKeyStoreArgs{
			CustomKeyStoreId:   resolvedArgs[0].(*string),
			CustomKeyStoreName: resolvedArgs[1].(*string),
		}
	})
}

type LookupCustomKeyStoreResultOutput struct{ *pulumi.OutputState }

func (LookupCustomKeyStoreResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCustomKeyStoreResult)(nil)).Elem()
}

func (o LookupCustomKeyStoreResultOutput) ToOutput(context.Context) pulumix.Output[*LookupCustomKeyStoreResult] {
	return pulumix.Output[*LookupCustomKeyStoreResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupCustomKeyStoreResultOutput) CloudHsmClusterId() pulumix.Output[string] {
	return pulumix.Apply[*LookupCustomKeyStoreResult](o, func(v *LookupCustomKeyStoreResult) string { return v.CloudHsmClusterId })
}

func (o LookupCustomKeyStoreResultOutput) ConnectionState() pulumix.Output[string] {
	return pulumix.Apply[*LookupCustomKeyStoreResult](o, func(v *LookupCustomKeyStoreResult) string { return v.ConnectionState })
}

func (o LookupCustomKeyStoreResultOutput) CreationDate() pulumix.Output[string] {
	return pulumix.Apply[*LookupCustomKeyStoreResult](o, func(v *LookupCustomKeyStoreResult) string { return v.CreationDate })
}

func (o LookupCustomKeyStoreResultOutput) CustomKeyStoreId() pulumix.Output[string] {
	return pulumix.Apply[*LookupCustomKeyStoreResult](o, func(v *LookupCustomKeyStoreResult) string { return v.CustomKeyStoreId })
}

func (o LookupCustomKeyStoreResultOutput) CustomKeyStoreName() pulumix.Output[string] {
	return pulumix.Apply[*LookupCustomKeyStoreResult](o, func(v *LookupCustomKeyStoreResult) string { return v.CustomKeyStoreName })
}

func (o LookupCustomKeyStoreResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*LookupCustomKeyStoreResult](o, func(v *LookupCustomKeyStoreResult) string { return v.Id })
}

func (o LookupCustomKeyStoreResultOutput) TrustAnchorCertificate() pulumix.Output[string] {
	return pulumix.Apply[*LookupCustomKeyStoreResult](o, func(v *LookupCustomKeyStoreResult) string { return v.TrustAnchorCertificate })
}
