// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an RDS DB proxy target resource.
type ProxyTarget struct {
	pulumi.CustomResourceState

	// DB cluster identifier.
	//
	// **NOTE:** Either `dbInstanceIdentifier` or `dbClusterIdentifier` should be specified and both should not be specified together
	DbClusterIdentifier pulumix.Output[*string] `pulumi:"dbClusterIdentifier"`
	// DB instance identifier.
	DbInstanceIdentifier pulumix.Output[*string] `pulumi:"dbInstanceIdentifier"`
	// The name of the DB proxy.
	DbProxyName pulumix.Output[string] `pulumi:"dbProxyName"`
	// Hostname for the target RDS DB Instance. Only returned for `RDS_INSTANCE` type.
	Endpoint pulumix.Output[string] `pulumi:"endpoint"`
	// Port for the target RDS DB Instance or Aurora DB Cluster.
	Port pulumix.Output[int] `pulumi:"port"`
	// Identifier representing the DB Instance or DB Cluster target.
	RdsResourceId pulumix.Output[string] `pulumi:"rdsResourceId"`
	// Amazon Resource Name (ARN) for the DB instance or DB cluster. Currently not returned by the RDS API.
	TargetArn pulumix.Output[string] `pulumi:"targetArn"`
	// The name of the target group.
	TargetGroupName pulumix.Output[string] `pulumi:"targetGroupName"`
	// DB Cluster identifier for the DB Instance target. Not returned unless manually importing an `RDS_INSTANCE` target that is part of a DB Cluster.
	TrackedClusterId pulumix.Output[string] `pulumi:"trackedClusterId"`
	// Type of targetE.g., `RDS_INSTANCE` or `TRACKED_CLUSTER`
	Type pulumix.Output[string] `pulumi:"type"`
}

// NewProxyTarget registers a new resource with the given unique name, arguments, and options.
func NewProxyTarget(ctx *pulumi.Context,
	name string, args *ProxyTargetArgs, opts ...pulumi.ResourceOption) (*ProxyTarget, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DbProxyName == nil {
		return nil, errors.New("invalid value for required argument 'DbProxyName'")
	}
	if args.TargetGroupName == nil {
		return nil, errors.New("invalid value for required argument 'TargetGroupName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ProxyTarget
	err := ctx.RegisterResource("aws:rds/proxyTarget:ProxyTarget", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProxyTarget gets an existing ProxyTarget resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProxyTarget(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProxyTargetState, opts ...pulumi.ResourceOption) (*ProxyTarget, error) {
	var resource ProxyTarget
	err := ctx.ReadResource("aws:rds/proxyTarget:ProxyTarget", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ProxyTarget resources.
type proxyTargetState struct {
	// DB cluster identifier.
	//
	// **NOTE:** Either `dbInstanceIdentifier` or `dbClusterIdentifier` should be specified and both should not be specified together
	DbClusterIdentifier *string `pulumi:"dbClusterIdentifier"`
	// DB instance identifier.
	DbInstanceIdentifier *string `pulumi:"dbInstanceIdentifier"`
	// The name of the DB proxy.
	DbProxyName *string `pulumi:"dbProxyName"`
	// Hostname for the target RDS DB Instance. Only returned for `RDS_INSTANCE` type.
	Endpoint *string `pulumi:"endpoint"`
	// Port for the target RDS DB Instance or Aurora DB Cluster.
	Port *int `pulumi:"port"`
	// Identifier representing the DB Instance or DB Cluster target.
	RdsResourceId *string `pulumi:"rdsResourceId"`
	// Amazon Resource Name (ARN) for the DB instance or DB cluster. Currently not returned by the RDS API.
	TargetArn *string `pulumi:"targetArn"`
	// The name of the target group.
	TargetGroupName *string `pulumi:"targetGroupName"`
	// DB Cluster identifier for the DB Instance target. Not returned unless manually importing an `RDS_INSTANCE` target that is part of a DB Cluster.
	TrackedClusterId *string `pulumi:"trackedClusterId"`
	// Type of targetE.g., `RDS_INSTANCE` or `TRACKED_CLUSTER`
	Type *string `pulumi:"type"`
}

type ProxyTargetState struct {
	// DB cluster identifier.
	//
	// **NOTE:** Either `dbInstanceIdentifier` or `dbClusterIdentifier` should be specified and both should not be specified together
	DbClusterIdentifier pulumix.Input[*string]
	// DB instance identifier.
	DbInstanceIdentifier pulumix.Input[*string]
	// The name of the DB proxy.
	DbProxyName pulumix.Input[*string]
	// Hostname for the target RDS DB Instance. Only returned for `RDS_INSTANCE` type.
	Endpoint pulumix.Input[*string]
	// Port for the target RDS DB Instance or Aurora DB Cluster.
	Port pulumix.Input[*int]
	// Identifier representing the DB Instance or DB Cluster target.
	RdsResourceId pulumix.Input[*string]
	// Amazon Resource Name (ARN) for the DB instance or DB cluster. Currently not returned by the RDS API.
	TargetArn pulumix.Input[*string]
	// The name of the target group.
	TargetGroupName pulumix.Input[*string]
	// DB Cluster identifier for the DB Instance target. Not returned unless manually importing an `RDS_INSTANCE` target that is part of a DB Cluster.
	TrackedClusterId pulumix.Input[*string]
	// Type of targetE.g., `RDS_INSTANCE` or `TRACKED_CLUSTER`
	Type pulumix.Input[*string]
}

func (ProxyTargetState) ElementType() reflect.Type {
	return reflect.TypeOf((*proxyTargetState)(nil)).Elem()
}

type proxyTargetArgs struct {
	// DB cluster identifier.
	//
	// **NOTE:** Either `dbInstanceIdentifier` or `dbClusterIdentifier` should be specified and both should not be specified together
	DbClusterIdentifier *string `pulumi:"dbClusterIdentifier"`
	// DB instance identifier.
	DbInstanceIdentifier *string `pulumi:"dbInstanceIdentifier"`
	// The name of the DB proxy.
	DbProxyName string `pulumi:"dbProxyName"`
	// The name of the target group.
	TargetGroupName string `pulumi:"targetGroupName"`
}

// The set of arguments for constructing a ProxyTarget resource.
type ProxyTargetArgs struct {
	// DB cluster identifier.
	//
	// **NOTE:** Either `dbInstanceIdentifier` or `dbClusterIdentifier` should be specified and both should not be specified together
	DbClusterIdentifier pulumix.Input[*string]
	// DB instance identifier.
	DbInstanceIdentifier pulumix.Input[*string]
	// The name of the DB proxy.
	DbProxyName pulumix.Input[string]
	// The name of the target group.
	TargetGroupName pulumix.Input[string]
}

func (ProxyTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*proxyTargetArgs)(nil)).Elem()
}

type ProxyTargetOutput struct{ *pulumi.OutputState }

func (ProxyTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyTarget)(nil)).Elem()
}

func (o ProxyTargetOutput) ToProxyTargetOutput() ProxyTargetOutput {
	return o
}

func (o ProxyTargetOutput) ToProxyTargetOutputWithContext(ctx context.Context) ProxyTargetOutput {
	return o
}

func (o ProxyTargetOutput) ToOutput(ctx context.Context) pulumix.Output[ProxyTarget] {
	return pulumix.Output[ProxyTarget]{
		OutputState: o.OutputState,
	}
}

// DB cluster identifier.
//
// **NOTE:** Either `dbInstanceIdentifier` or `dbClusterIdentifier` should be specified and both should not be specified together
func (o ProxyTargetOutput) DbClusterIdentifier() pulumix.Output[*string] {
	value := pulumix.Apply[ProxyTarget](o, func(v ProxyTarget) pulumix.Output[*string] { return v.DbClusterIdentifier })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// DB instance identifier.
func (o ProxyTargetOutput) DbInstanceIdentifier() pulumix.Output[*string] {
	value := pulumix.Apply[ProxyTarget](o, func(v ProxyTarget) pulumix.Output[*string] { return v.DbInstanceIdentifier })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The name of the DB proxy.
func (o ProxyTargetOutput) DbProxyName() pulumix.Output[string] {
	value := pulumix.Apply[ProxyTarget](o, func(v ProxyTarget) pulumix.Output[string] { return v.DbProxyName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Hostname for the target RDS DB Instance. Only returned for `RDS_INSTANCE` type.
func (o ProxyTargetOutput) Endpoint() pulumix.Output[string] {
	value := pulumix.Apply[ProxyTarget](o, func(v ProxyTarget) pulumix.Output[string] { return v.Endpoint })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Port for the target RDS DB Instance or Aurora DB Cluster.
func (o ProxyTargetOutput) Port() pulumix.Output[int] {
	value := pulumix.Apply[ProxyTarget](o, func(v ProxyTarget) pulumix.Output[int] { return v.Port })
	return pulumix.Flatten[int, pulumix.Output[int]](value)
}

// Identifier representing the DB Instance or DB Cluster target.
func (o ProxyTargetOutput) RdsResourceId() pulumix.Output[string] {
	value := pulumix.Apply[ProxyTarget](o, func(v ProxyTarget) pulumix.Output[string] { return v.RdsResourceId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Amazon Resource Name (ARN) for the DB instance or DB cluster. Currently not returned by the RDS API.
func (o ProxyTargetOutput) TargetArn() pulumix.Output[string] {
	value := pulumix.Apply[ProxyTarget](o, func(v ProxyTarget) pulumix.Output[string] { return v.TargetArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The name of the target group.
func (o ProxyTargetOutput) TargetGroupName() pulumix.Output[string] {
	value := pulumix.Apply[ProxyTarget](o, func(v ProxyTarget) pulumix.Output[string] { return v.TargetGroupName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// DB Cluster identifier for the DB Instance target. Not returned unless manually importing an `RDS_INSTANCE` target that is part of a DB Cluster.
func (o ProxyTargetOutput) TrackedClusterId() pulumix.Output[string] {
	value := pulumix.Apply[ProxyTarget](o, func(v ProxyTarget) pulumix.Output[string] { return v.TrackedClusterId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Type of targetE.g., `RDS_INSTANCE` or `TRACKED_CLUSTER`
func (o ProxyTargetOutput) Type() pulumix.Output[string] {
	value := pulumix.Apply[ProxyTarget](o, func(v ProxyTarget) pulumix.Output[string] { return v.Type })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(ProxyTargetOutput{})
}
