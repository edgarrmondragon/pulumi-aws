// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package glue

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a Glue ML Transform resource.
type MLTransform struct {
	pulumi.CustomResourceState

	// Amazon Resource Name (ARN) of Glue ML Transform.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// Description of the ML Transform.
	Description pulumix.Output[*string] `pulumi:"description"`
	// The version of glue to use, for example "1.0". For information about available versions, see the [AWS Glue Release Notes](https://docs.aws.amazon.com/glue/latest/dg/release-notes.html).
	GlueVersion pulumix.Output[string] `pulumi:"glueVersion"`
	// A list of AWS Glue table definitions used by the transform. see Input Record Tables.
	InputRecordTables pulumix.GArrayOutput[MLTransformInputRecordTable, MLTransformInputRecordTableOutput] `pulumi:"inputRecordTables"`
	// The number of labels available for this transform.
	LabelCount pulumix.Output[int] `pulumi:"labelCount"`
	// The number of AWS Glue data processing units (DPUs) that are allocated to task runs for this transform. You can allocate from `2` to `100` DPUs; the default is `10`. `maxCapacity` is a mutually exclusive option with `numberOfWorkers` and `workerType`.
	MaxCapacity pulumix.Output[float64] `pulumi:"maxCapacity"`
	// The maximum number of times to retry this ML Transform if it fails.
	MaxRetries pulumix.Output[*int] `pulumi:"maxRetries"`
	// The name you assign to this ML Transform. It must be unique in your account.
	Name pulumix.Output[string] `pulumi:"name"`
	// The number of workers of a defined `workerType` that are allocated when an ML Transform runs. Required with `workerType`.
	NumberOfWorkers pulumix.Output[*int] `pulumi:"numberOfWorkers"`
	// The algorithmic parameters that are specific to the transform type used. Conditionally dependent on the transform type. see Parameters.
	Parameters pulumix.GPtrOutput[MLTransformParameters, MLTransformParametersOutput] `pulumi:"parameters"`
	// The ARN of the IAM role associated with this ML Transform.
	RoleArn pulumix.Output[string] `pulumi:"roleArn"`
	// The object that represents the schema that this transform accepts. see Schema.
	Schemas pulumix.GArrayOutput[MLTransformSchema, MLTransformSchemaOutput] `pulumi:"schemas"`
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// The ML Transform timeout in minutes. The default is 2880 minutes (48 hours).
	Timeout pulumix.Output[*int] `pulumi:"timeout"`
	// The type of predefined worker that is allocated when an ML Transform runs. Accepts a value of `Standard`, `G.1X`, or `G.2X`. Required with `numberOfWorkers`.
	WorkerType pulumix.Output[*string] `pulumi:"workerType"`
}

// NewMLTransform registers a new resource with the given unique name, arguments, and options.
func NewMLTransform(ctx *pulumi.Context,
	name string, args *MLTransformArgs, opts ...pulumi.ResourceOption) (*MLTransform, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InputRecordTables == nil {
		return nil, errors.New("invalid value for required argument 'InputRecordTables'")
	}
	if args.Parameters == nil {
		return nil, errors.New("invalid value for required argument 'Parameters'")
	}
	if args.RoleArn == nil {
		return nil, errors.New("invalid value for required argument 'RoleArn'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource MLTransform
	err := ctx.RegisterResource("aws:glue/mLTransform:MLTransform", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMLTransform gets an existing MLTransform resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMLTransform(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MLTransformState, opts ...pulumi.ResourceOption) (*MLTransform, error) {
	var resource MLTransform
	err := ctx.ReadResource("aws:glue/mLTransform:MLTransform", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MLTransform resources.
type mltransformState struct {
	// Amazon Resource Name (ARN) of Glue ML Transform.
	Arn *string `pulumi:"arn"`
	// Description of the ML Transform.
	Description *string `pulumi:"description"`
	// The version of glue to use, for example "1.0". For information about available versions, see the [AWS Glue Release Notes](https://docs.aws.amazon.com/glue/latest/dg/release-notes.html).
	GlueVersion *string `pulumi:"glueVersion"`
	// A list of AWS Glue table definitions used by the transform. see Input Record Tables.
	InputRecordTables []MLTransformInputRecordTable `pulumi:"inputRecordTables"`
	// The number of labels available for this transform.
	LabelCount *int `pulumi:"labelCount"`
	// The number of AWS Glue data processing units (DPUs) that are allocated to task runs for this transform. You can allocate from `2` to `100` DPUs; the default is `10`. `maxCapacity` is a mutually exclusive option with `numberOfWorkers` and `workerType`.
	MaxCapacity *float64 `pulumi:"maxCapacity"`
	// The maximum number of times to retry this ML Transform if it fails.
	MaxRetries *int `pulumi:"maxRetries"`
	// The name you assign to this ML Transform. It must be unique in your account.
	Name *string `pulumi:"name"`
	// The number of workers of a defined `workerType` that are allocated when an ML Transform runs. Required with `workerType`.
	NumberOfWorkers *int `pulumi:"numberOfWorkers"`
	// The algorithmic parameters that are specific to the transform type used. Conditionally dependent on the transform type. see Parameters.
	Parameters *MLTransformParameters `pulumi:"parameters"`
	// The ARN of the IAM role associated with this ML Transform.
	RoleArn *string `pulumi:"roleArn"`
	// The object that represents the schema that this transform accepts. see Schema.
	Schemas []MLTransformSchema `pulumi:"schemas"`
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// The ML Transform timeout in minutes. The default is 2880 minutes (48 hours).
	Timeout *int `pulumi:"timeout"`
	// The type of predefined worker that is allocated when an ML Transform runs. Accepts a value of `Standard`, `G.1X`, or `G.2X`. Required with `numberOfWorkers`.
	WorkerType *string `pulumi:"workerType"`
}

type MLTransformState struct {
	// Amazon Resource Name (ARN) of Glue ML Transform.
	Arn pulumix.Input[*string]
	// Description of the ML Transform.
	Description pulumix.Input[*string]
	// The version of glue to use, for example "1.0". For information about available versions, see the [AWS Glue Release Notes](https://docs.aws.amazon.com/glue/latest/dg/release-notes.html).
	GlueVersion pulumix.Input[*string]
	// A list of AWS Glue table definitions used by the transform. see Input Record Tables.
	InputRecordTables pulumix.Input[[]*MLTransformInputRecordTableArgs]
	// The number of labels available for this transform.
	LabelCount pulumix.Input[*int]
	// The number of AWS Glue data processing units (DPUs) that are allocated to task runs for this transform. You can allocate from `2` to `100` DPUs; the default is `10`. `maxCapacity` is a mutually exclusive option with `numberOfWorkers` and `workerType`.
	MaxCapacity pulumix.Input[*float64]
	// The maximum number of times to retry this ML Transform if it fails.
	MaxRetries pulumix.Input[*int]
	// The name you assign to this ML Transform. It must be unique in your account.
	Name pulumix.Input[*string]
	// The number of workers of a defined `workerType` that are allocated when an ML Transform runs. Required with `workerType`.
	NumberOfWorkers pulumix.Input[*int]
	// The algorithmic parameters that are specific to the transform type used. Conditionally dependent on the transform type. see Parameters.
	Parameters pulumix.Input[*MLTransformParametersArgs]
	// The ARN of the IAM role associated with this ML Transform.
	RoleArn pulumix.Input[*string]
	// The object that represents the schema that this transform accepts. see Schema.
	Schemas pulumix.Input[[]*MLTransformSchemaArgs]
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// The ML Transform timeout in minutes. The default is 2880 minutes (48 hours).
	Timeout pulumix.Input[*int]
	// The type of predefined worker that is allocated when an ML Transform runs. Accepts a value of `Standard`, `G.1X`, or `G.2X`. Required with `numberOfWorkers`.
	WorkerType pulumix.Input[*string]
}

func (MLTransformState) ElementType() reflect.Type {
	return reflect.TypeOf((*mltransformState)(nil)).Elem()
}

type mltransformArgs struct {
	// Description of the ML Transform.
	Description *string `pulumi:"description"`
	// The version of glue to use, for example "1.0". For information about available versions, see the [AWS Glue Release Notes](https://docs.aws.amazon.com/glue/latest/dg/release-notes.html).
	GlueVersion *string `pulumi:"glueVersion"`
	// A list of AWS Glue table definitions used by the transform. see Input Record Tables.
	InputRecordTables []MLTransformInputRecordTable `pulumi:"inputRecordTables"`
	// The number of AWS Glue data processing units (DPUs) that are allocated to task runs for this transform. You can allocate from `2` to `100` DPUs; the default is `10`. `maxCapacity` is a mutually exclusive option with `numberOfWorkers` and `workerType`.
	MaxCapacity *float64 `pulumi:"maxCapacity"`
	// The maximum number of times to retry this ML Transform if it fails.
	MaxRetries *int `pulumi:"maxRetries"`
	// The name you assign to this ML Transform. It must be unique in your account.
	Name *string `pulumi:"name"`
	// The number of workers of a defined `workerType` that are allocated when an ML Transform runs. Required with `workerType`.
	NumberOfWorkers *int `pulumi:"numberOfWorkers"`
	// The algorithmic parameters that are specific to the transform type used. Conditionally dependent on the transform type. see Parameters.
	Parameters MLTransformParameters `pulumi:"parameters"`
	// The ARN of the IAM role associated with this ML Transform.
	RoleArn string `pulumi:"roleArn"`
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// The ML Transform timeout in minutes. The default is 2880 minutes (48 hours).
	Timeout *int `pulumi:"timeout"`
	// The type of predefined worker that is allocated when an ML Transform runs. Accepts a value of `Standard`, `G.1X`, or `G.2X`. Required with `numberOfWorkers`.
	WorkerType *string `pulumi:"workerType"`
}

// The set of arguments for constructing a MLTransform resource.
type MLTransformArgs struct {
	// Description of the ML Transform.
	Description pulumix.Input[*string]
	// The version of glue to use, for example "1.0". For information about available versions, see the [AWS Glue Release Notes](https://docs.aws.amazon.com/glue/latest/dg/release-notes.html).
	GlueVersion pulumix.Input[*string]
	// A list of AWS Glue table definitions used by the transform. see Input Record Tables.
	InputRecordTables pulumix.Input[[]*MLTransformInputRecordTableArgs]
	// The number of AWS Glue data processing units (DPUs) that are allocated to task runs for this transform. You can allocate from `2` to `100` DPUs; the default is `10`. `maxCapacity` is a mutually exclusive option with `numberOfWorkers` and `workerType`.
	MaxCapacity pulumix.Input[*float64]
	// The maximum number of times to retry this ML Transform if it fails.
	MaxRetries pulumix.Input[*int]
	// The name you assign to this ML Transform. It must be unique in your account.
	Name pulumix.Input[*string]
	// The number of workers of a defined `workerType` that are allocated when an ML Transform runs. Required with `workerType`.
	NumberOfWorkers pulumix.Input[*int]
	// The algorithmic parameters that are specific to the transform type used. Conditionally dependent on the transform type. see Parameters.
	Parameters pulumix.Input[*MLTransformParametersArgs]
	// The ARN of the IAM role associated with this ML Transform.
	RoleArn pulumix.Input[string]
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// The ML Transform timeout in minutes. The default is 2880 minutes (48 hours).
	Timeout pulumix.Input[*int]
	// The type of predefined worker that is allocated when an ML Transform runs. Accepts a value of `Standard`, `G.1X`, or `G.2X`. Required with `numberOfWorkers`.
	WorkerType pulumix.Input[*string]
}

func (MLTransformArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*mltransformArgs)(nil)).Elem()
}

type MLTransformOutput struct{ *pulumi.OutputState }

func (MLTransformOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MLTransform)(nil)).Elem()
}

func (o MLTransformOutput) ToMLTransformOutput() MLTransformOutput {
	return o
}

func (o MLTransformOutput) ToMLTransformOutputWithContext(ctx context.Context) MLTransformOutput {
	return o
}

func (o MLTransformOutput) ToOutput(ctx context.Context) pulumix.Output[MLTransform] {
	return pulumix.Output[MLTransform]{
		OutputState: o.OutputState,
	}
}

// Amazon Resource Name (ARN) of Glue ML Transform.
func (o MLTransformOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[MLTransform](o, func(v MLTransform) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Description of the ML Transform.
func (o MLTransformOutput) Description() pulumix.Output[*string] {
	value := pulumix.Apply[MLTransform](o, func(v MLTransform) pulumix.Output[*string] { return v.Description })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The version of glue to use, for example "1.0". For information about available versions, see the [AWS Glue Release Notes](https://docs.aws.amazon.com/glue/latest/dg/release-notes.html).
func (o MLTransformOutput) GlueVersion() pulumix.Output[string] {
	value := pulumix.Apply[MLTransform](o, func(v MLTransform) pulumix.Output[string] { return v.GlueVersion })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A list of AWS Glue table definitions used by the transform. see Input Record Tables.
func (o MLTransformOutput) InputRecordTables() pulumix.GArrayOutput[MLTransformInputRecordTable, MLTransformInputRecordTableOutput] {
	value := pulumix.Apply[MLTransform](o, func(v MLTransform) pulumix.GArrayOutput[MLTransformInputRecordTable, MLTransformInputRecordTableOutput] {
		return v.InputRecordTables
	})
	unwrapped := pulumix.Flatten[[]MLTransformInputRecordTable, pulumix.GArrayOutput[MLTransformInputRecordTable, MLTransformInputRecordTableOutput]](value)
	return pulumix.GArrayOutput[MLTransformInputRecordTable, MLTransformInputRecordTableOutput]{OutputState: unwrapped.OutputState}
}

// The number of labels available for this transform.
func (o MLTransformOutput) LabelCount() pulumix.Output[int] {
	value := pulumix.Apply[MLTransform](o, func(v MLTransform) pulumix.Output[int] { return v.LabelCount })
	return pulumix.Flatten[int, pulumix.Output[int]](value)
}

// The number of AWS Glue data processing units (DPUs) that are allocated to task runs for this transform. You can allocate from `2` to `100` DPUs; the default is `10`. `maxCapacity` is a mutually exclusive option with `numberOfWorkers` and `workerType`.
func (o MLTransformOutput) MaxCapacity() pulumix.Output[float64] {
	value := pulumix.Apply[MLTransform](o, func(v MLTransform) pulumix.Output[float64] { return v.MaxCapacity })
	return pulumix.Flatten[float64, pulumix.Output[float64]](value)
}

// The maximum number of times to retry this ML Transform if it fails.
func (o MLTransformOutput) MaxRetries() pulumix.Output[*int] {
	value := pulumix.Apply[MLTransform](o, func(v MLTransform) pulumix.Output[*int] { return v.MaxRetries })
	return pulumix.Flatten[*int, pulumix.Output[*int]](value)
}

// The name you assign to this ML Transform. It must be unique in your account.
func (o MLTransformOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[MLTransform](o, func(v MLTransform) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The number of workers of a defined `workerType` that are allocated when an ML Transform runs. Required with `workerType`.
func (o MLTransformOutput) NumberOfWorkers() pulumix.Output[*int] {
	value := pulumix.Apply[MLTransform](o, func(v MLTransform) pulumix.Output[*int] { return v.NumberOfWorkers })
	return pulumix.Flatten[*int, pulumix.Output[*int]](value)
}

// The algorithmic parameters that are specific to the transform type used. Conditionally dependent on the transform type. see Parameters.
func (o MLTransformOutput) Parameters() pulumix.GPtrOutput[MLTransformParameters, MLTransformParametersOutput] {
	value := pulumix.Apply[MLTransform](o, func(v MLTransform) pulumix.GPtrOutput[MLTransformParameters, MLTransformParametersOutput] {
		return v.Parameters
	})
	unwrapped := pulumix.Flatten[*MLTransformParameters, pulumix.GPtrOutput[MLTransformParameters, MLTransformParametersOutput]](value)
	return pulumix.GPtrOutput[MLTransformParameters, MLTransformParametersOutput]{OutputState: unwrapped.OutputState}
}

// The ARN of the IAM role associated with this ML Transform.
func (o MLTransformOutput) RoleArn() pulumix.Output[string] {
	value := pulumix.Apply[MLTransform](o, func(v MLTransform) pulumix.Output[string] { return v.RoleArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The object that represents the schema that this transform accepts. see Schema.
func (o MLTransformOutput) Schemas() pulumix.GArrayOutput[MLTransformSchema, MLTransformSchemaOutput] {
	value := pulumix.Apply[MLTransform](o, func(v MLTransform) pulumix.GArrayOutput[MLTransformSchema, MLTransformSchemaOutput] { return v.Schemas })
	unwrapped := pulumix.Flatten[[]MLTransformSchema, pulumix.GArrayOutput[MLTransformSchema, MLTransformSchemaOutput]](value)
	return pulumix.GArrayOutput[MLTransformSchema, MLTransformSchemaOutput]{OutputState: unwrapped.OutputState}
}

// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o MLTransformOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[MLTransform](o, func(v MLTransform) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o MLTransformOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[MLTransform](o, func(v MLTransform) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// The ML Transform timeout in minutes. The default is 2880 minutes (48 hours).
func (o MLTransformOutput) Timeout() pulumix.Output[*int] {
	value := pulumix.Apply[MLTransform](o, func(v MLTransform) pulumix.Output[*int] { return v.Timeout })
	return pulumix.Flatten[*int, pulumix.Output[*int]](value)
}

// The type of predefined worker that is allocated when an ML Transform runs. Accepts a value of `Standard`, `G.1X`, or `G.2X`. Required with `numberOfWorkers`.
func (o MLTransformOutput) WorkerType() pulumix.Output[*string] {
	value := pulumix.Apply[MLTransform](o, func(v MLTransform) pulumix.Output[*string] { return v.WorkerType })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

func init() {
	pulumi.RegisterOutputType(MLTransformOutput{})
}
