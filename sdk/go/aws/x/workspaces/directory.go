// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package workspaces

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a WorkSpaces directory in AWS WorkSpaces Service.
//
// > **NOTE:** AWS WorkSpaces service requires [`workspaces_DefaultRole`](https://docs.aws.amazon.com/workspaces/latest/adminguide/workspaces-access-control.html#create-default-role) IAM role to operate normally.
type Directory struct {
	pulumi.CustomResourceState

	// The directory alias.
	Alias pulumix.Output[string] `pulumi:"alias"`
	// The user name for the service account.
	CustomerUserName pulumix.Output[string] `pulumi:"customerUserName"`
	// The directory identifier for registration in WorkSpaces service.
	DirectoryId pulumix.Output[string] `pulumi:"directoryId"`
	// The name of the directory.
	DirectoryName pulumix.Output[string] `pulumi:"directoryName"`
	// The directory type.
	DirectoryType pulumix.Output[string] `pulumi:"directoryType"`
	// The IP addresses of the DNS servers for the directory.
	DnsIpAddresses pulumix.ArrayOutput[string] `pulumi:"dnsIpAddresses"`
	// The identifier of the IAM role. This is the role that allows Amazon WorkSpaces to make calls to other services, such as Amazon EC2, on your behalf.
	IamRoleId pulumix.Output[string] `pulumi:"iamRoleId"`
	// The identifiers of the IP access control groups associated with the directory.
	IpGroupIds pulumix.ArrayOutput[string] `pulumi:"ipGroupIds"`
	// The registration code for the directory. This is the code that users enter in their Amazon WorkSpaces client application to connect to the directory.
	RegistrationCode pulumix.Output[string] `pulumi:"registrationCode"`
	// Permissions to enable or disable self-service capabilities. Defined below.
	SelfServicePermissions pulumix.GPtrOutput[DirectorySelfServicePermissions, DirectorySelfServicePermissionsOutput] `pulumi:"selfServicePermissions"`
	// The identifiers of the subnets where the directory resides.
	SubnetIds pulumix.ArrayOutput[string] `pulumi:"subnetIds"`
	// A map of tags assigned to the WorkSpaces directory. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// Specifies which devices and operating systems users can use to access their WorkSpaces. Defined below.
	WorkspaceAccessProperties pulumix.GPtrOutput[DirectoryWorkspaceAccessProperties, DirectoryWorkspaceAccessPropertiesOutput] `pulumi:"workspaceAccessProperties"`
	// Default properties that are used for creating WorkSpaces. Defined below.
	WorkspaceCreationProperties pulumix.GPtrOutput[DirectoryWorkspaceCreationProperties, DirectoryWorkspaceCreationPropertiesOutput] `pulumi:"workspaceCreationProperties"`
	// The identifier of the security group that is assigned to new WorkSpaces.
	WorkspaceSecurityGroupId pulumix.Output[string] `pulumi:"workspaceSecurityGroupId"`
}

// NewDirectory registers a new resource with the given unique name, arguments, and options.
func NewDirectory(ctx *pulumi.Context,
	name string, args *DirectoryArgs, opts ...pulumi.ResourceOption) (*Directory, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DirectoryId == nil {
		return nil, errors.New("invalid value for required argument 'DirectoryId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Directory
	err := ctx.RegisterResource("aws:workspaces/directory:Directory", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDirectory gets an existing Directory resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDirectory(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DirectoryState, opts ...pulumi.ResourceOption) (*Directory, error) {
	var resource Directory
	err := ctx.ReadResource("aws:workspaces/directory:Directory", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Directory resources.
type directoryState struct {
	// The directory alias.
	Alias *string `pulumi:"alias"`
	// The user name for the service account.
	CustomerUserName *string `pulumi:"customerUserName"`
	// The directory identifier for registration in WorkSpaces service.
	DirectoryId *string `pulumi:"directoryId"`
	// The name of the directory.
	DirectoryName *string `pulumi:"directoryName"`
	// The directory type.
	DirectoryType *string `pulumi:"directoryType"`
	// The IP addresses of the DNS servers for the directory.
	DnsIpAddresses []string `pulumi:"dnsIpAddresses"`
	// The identifier of the IAM role. This is the role that allows Amazon WorkSpaces to make calls to other services, such as Amazon EC2, on your behalf.
	IamRoleId *string `pulumi:"iamRoleId"`
	// The identifiers of the IP access control groups associated with the directory.
	IpGroupIds []string `pulumi:"ipGroupIds"`
	// The registration code for the directory. This is the code that users enter in their Amazon WorkSpaces client application to connect to the directory.
	RegistrationCode *string `pulumi:"registrationCode"`
	// Permissions to enable or disable self-service capabilities. Defined below.
	SelfServicePermissions *DirectorySelfServicePermissions `pulumi:"selfServicePermissions"`
	// The identifiers of the subnets where the directory resides.
	SubnetIds []string `pulumi:"subnetIds"`
	// A map of tags assigned to the WorkSpaces directory. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// Specifies which devices and operating systems users can use to access their WorkSpaces. Defined below.
	WorkspaceAccessProperties *DirectoryWorkspaceAccessProperties `pulumi:"workspaceAccessProperties"`
	// Default properties that are used for creating WorkSpaces. Defined below.
	WorkspaceCreationProperties *DirectoryWorkspaceCreationProperties `pulumi:"workspaceCreationProperties"`
	// The identifier of the security group that is assigned to new WorkSpaces.
	WorkspaceSecurityGroupId *string `pulumi:"workspaceSecurityGroupId"`
}

type DirectoryState struct {
	// The directory alias.
	Alias pulumix.Input[*string]
	// The user name for the service account.
	CustomerUserName pulumix.Input[*string]
	// The directory identifier for registration in WorkSpaces service.
	DirectoryId pulumix.Input[*string]
	// The name of the directory.
	DirectoryName pulumix.Input[*string]
	// The directory type.
	DirectoryType pulumix.Input[*string]
	// The IP addresses of the DNS servers for the directory.
	DnsIpAddresses pulumix.Input[[]string]
	// The identifier of the IAM role. This is the role that allows Amazon WorkSpaces to make calls to other services, such as Amazon EC2, on your behalf.
	IamRoleId pulumix.Input[*string]
	// The identifiers of the IP access control groups associated with the directory.
	IpGroupIds pulumix.Input[[]string]
	// The registration code for the directory. This is the code that users enter in their Amazon WorkSpaces client application to connect to the directory.
	RegistrationCode pulumix.Input[*string]
	// Permissions to enable or disable self-service capabilities. Defined below.
	SelfServicePermissions pulumix.Input[*DirectorySelfServicePermissionsArgs]
	// The identifiers of the subnets where the directory resides.
	SubnetIds pulumix.Input[[]string]
	// A map of tags assigned to the WorkSpaces directory. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// Specifies which devices and operating systems users can use to access their WorkSpaces. Defined below.
	WorkspaceAccessProperties pulumix.Input[*DirectoryWorkspaceAccessPropertiesArgs]
	// Default properties that are used for creating WorkSpaces. Defined below.
	WorkspaceCreationProperties pulumix.Input[*DirectoryWorkspaceCreationPropertiesArgs]
	// The identifier of the security group that is assigned to new WorkSpaces.
	WorkspaceSecurityGroupId pulumix.Input[*string]
}

func (DirectoryState) ElementType() reflect.Type {
	return reflect.TypeOf((*directoryState)(nil)).Elem()
}

type directoryArgs struct {
	// The directory identifier for registration in WorkSpaces service.
	DirectoryId string `pulumi:"directoryId"`
	// The identifiers of the IP access control groups associated with the directory.
	IpGroupIds []string `pulumi:"ipGroupIds"`
	// Permissions to enable or disable self-service capabilities. Defined below.
	SelfServicePermissions *DirectorySelfServicePermissions `pulumi:"selfServicePermissions"`
	// The identifiers of the subnets where the directory resides.
	SubnetIds []string `pulumi:"subnetIds"`
	// A map of tags assigned to the WorkSpaces directory. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Specifies which devices and operating systems users can use to access their WorkSpaces. Defined below.
	WorkspaceAccessProperties *DirectoryWorkspaceAccessProperties `pulumi:"workspaceAccessProperties"`
	// Default properties that are used for creating WorkSpaces. Defined below.
	WorkspaceCreationProperties *DirectoryWorkspaceCreationProperties `pulumi:"workspaceCreationProperties"`
}

// The set of arguments for constructing a Directory resource.
type DirectoryArgs struct {
	// The directory identifier for registration in WorkSpaces service.
	DirectoryId pulumix.Input[string]
	// The identifiers of the IP access control groups associated with the directory.
	IpGroupIds pulumix.Input[[]string]
	// Permissions to enable or disable self-service capabilities. Defined below.
	SelfServicePermissions pulumix.Input[*DirectorySelfServicePermissionsArgs]
	// The identifiers of the subnets where the directory resides.
	SubnetIds pulumix.Input[[]string]
	// A map of tags assigned to the WorkSpaces directory. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// Specifies which devices and operating systems users can use to access their WorkSpaces. Defined below.
	WorkspaceAccessProperties pulumix.Input[*DirectoryWorkspaceAccessPropertiesArgs]
	// Default properties that are used for creating WorkSpaces. Defined below.
	WorkspaceCreationProperties pulumix.Input[*DirectoryWorkspaceCreationPropertiesArgs]
}

func (DirectoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*directoryArgs)(nil)).Elem()
}

type DirectoryOutput struct{ *pulumi.OutputState }

func (DirectoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Directory)(nil)).Elem()
}

func (o DirectoryOutput) ToDirectoryOutput() DirectoryOutput {
	return o
}

func (o DirectoryOutput) ToDirectoryOutputWithContext(ctx context.Context) DirectoryOutput {
	return o
}

func (o DirectoryOutput) ToOutput(ctx context.Context) pulumix.Output[Directory] {
	return pulumix.Output[Directory]{
		OutputState: o.OutputState,
	}
}

// The directory alias.
func (o DirectoryOutput) Alias() pulumix.Output[string] {
	value := pulumix.Apply[Directory](o, func(v Directory) pulumix.Output[string] { return v.Alias })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The user name for the service account.
func (o DirectoryOutput) CustomerUserName() pulumix.Output[string] {
	value := pulumix.Apply[Directory](o, func(v Directory) pulumix.Output[string] { return v.CustomerUserName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The directory identifier for registration in WorkSpaces service.
func (o DirectoryOutput) DirectoryId() pulumix.Output[string] {
	value := pulumix.Apply[Directory](o, func(v Directory) pulumix.Output[string] { return v.DirectoryId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The name of the directory.
func (o DirectoryOutput) DirectoryName() pulumix.Output[string] {
	value := pulumix.Apply[Directory](o, func(v Directory) pulumix.Output[string] { return v.DirectoryName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The directory type.
func (o DirectoryOutput) DirectoryType() pulumix.Output[string] {
	value := pulumix.Apply[Directory](o, func(v Directory) pulumix.Output[string] { return v.DirectoryType })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The IP addresses of the DNS servers for the directory.
func (o DirectoryOutput) DnsIpAddresses() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[Directory](o, func(v Directory) pulumix.ArrayOutput[string] { return v.DnsIpAddresses })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// The identifier of the IAM role. This is the role that allows Amazon WorkSpaces to make calls to other services, such as Amazon EC2, on your behalf.
func (o DirectoryOutput) IamRoleId() pulumix.Output[string] {
	value := pulumix.Apply[Directory](o, func(v Directory) pulumix.Output[string] { return v.IamRoleId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The identifiers of the IP access control groups associated with the directory.
func (o DirectoryOutput) IpGroupIds() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[Directory](o, func(v Directory) pulumix.ArrayOutput[string] { return v.IpGroupIds })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// The registration code for the directory. This is the code that users enter in their Amazon WorkSpaces client application to connect to the directory.
func (o DirectoryOutput) RegistrationCode() pulumix.Output[string] {
	value := pulumix.Apply[Directory](o, func(v Directory) pulumix.Output[string] { return v.RegistrationCode })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Permissions to enable or disable self-service capabilities. Defined below.
func (o DirectoryOutput) SelfServicePermissions() pulumix.GPtrOutput[DirectorySelfServicePermissions, DirectorySelfServicePermissionsOutput] {
	value := pulumix.Apply[Directory](o, func(v Directory) pulumix.GPtrOutput[DirectorySelfServicePermissions, DirectorySelfServicePermissionsOutput] {
		return v.SelfServicePermissions
	})
	unwrapped := pulumix.Flatten[*DirectorySelfServicePermissions, pulumix.GPtrOutput[DirectorySelfServicePermissions, DirectorySelfServicePermissionsOutput]](value)
	return pulumix.GPtrOutput[DirectorySelfServicePermissions, DirectorySelfServicePermissionsOutput]{OutputState: unwrapped.OutputState}
}

// The identifiers of the subnets where the directory resides.
func (o DirectoryOutput) SubnetIds() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[Directory](o, func(v Directory) pulumix.ArrayOutput[string] { return v.SubnetIds })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the WorkSpaces directory. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o DirectoryOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Directory](o, func(v Directory) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o DirectoryOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[Directory](o, func(v Directory) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Specifies which devices and operating systems users can use to access their WorkSpaces. Defined below.
func (o DirectoryOutput) WorkspaceAccessProperties() pulumix.GPtrOutput[DirectoryWorkspaceAccessProperties, DirectoryWorkspaceAccessPropertiesOutput] {
	value := pulumix.Apply[Directory](o, func(v Directory) pulumix.GPtrOutput[DirectoryWorkspaceAccessProperties, DirectoryWorkspaceAccessPropertiesOutput] {
		return v.WorkspaceAccessProperties
	})
	unwrapped := pulumix.Flatten[*DirectoryWorkspaceAccessProperties, pulumix.GPtrOutput[DirectoryWorkspaceAccessProperties, DirectoryWorkspaceAccessPropertiesOutput]](value)
	return pulumix.GPtrOutput[DirectoryWorkspaceAccessProperties, DirectoryWorkspaceAccessPropertiesOutput]{OutputState: unwrapped.OutputState}
}

// Default properties that are used for creating WorkSpaces. Defined below.
func (o DirectoryOutput) WorkspaceCreationProperties() pulumix.GPtrOutput[DirectoryWorkspaceCreationProperties, DirectoryWorkspaceCreationPropertiesOutput] {
	value := pulumix.Apply[Directory](o, func(v Directory) pulumix.GPtrOutput[DirectoryWorkspaceCreationProperties, DirectoryWorkspaceCreationPropertiesOutput] {
		return v.WorkspaceCreationProperties
	})
	unwrapped := pulumix.Flatten[*DirectoryWorkspaceCreationProperties, pulumix.GPtrOutput[DirectoryWorkspaceCreationProperties, DirectoryWorkspaceCreationPropertiesOutput]](value)
	return pulumix.GPtrOutput[DirectoryWorkspaceCreationProperties, DirectoryWorkspaceCreationPropertiesOutput]{OutputState: unwrapped.OutputState}
}

// The identifier of the security group that is assigned to new WorkSpaces.
func (o DirectoryOutput) WorkspaceSecurityGroupId() pulumix.Output[string] {
	value := pulumix.Apply[Directory](o, func(v Directory) pulumix.Output[string] { return v.WorkspaceSecurityGroupId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(DirectoryOutput{})
}
