// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package elasticache

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an ElastiCache Replication Group resource.
//
// For working with a [Memcached cluster](https://docs.aws.amazon.com/AmazonElastiCache/latest/mem-ug/WhatIs.html) or a
// [single-node Redis instance (Cluster Mode Disabled)](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/WhatIs.html),
// see the `elasticache.Cluster` resource.
//
// > **Note:** When you change an attribute, such as `engineVersion`, by
// default the ElastiCache API applies it in the next maintenance window. Because
// of this, this provider may report a difference in its planning phase because the
// actual modification has not yet taken place. You can use the
// `applyImmediately` flag to instruct the service to apply the change
// immediately. Using `applyImmediately` can result in a brief downtime as
// servers reboots.
// See the AWS Documentation on
// [Modifying an ElastiCache Cache Cluster](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Clusters.Modify.html)
// for more information.
//
// > **Note:** Any attribute changes that re-create the resource will be applied immediately, regardless of the value of `applyImmediately`.
//
// > **Note:** Be aware of the terminology collision around "cluster" for `elasticache.ReplicationGroup`. For example, it is possible to create a ["Cluster Mode Disabled [Redis] Cluster"](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Clusters.Create.CON.Redis.html). With "Cluster Mode Enabled", the data will be stored in shards (called "node groups"). See [Redis Cluster Configuration](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/cluster-create-determine-requirements.html#redis-cluster-configuration) for a diagram of the differences. To enable cluster mode, use a parameter group that has cluster mode enabled. The default parameter groups provided by AWS end with ".cluster.on", for example `default.redis6.x.cluster.on`.
type ReplicationGroup struct {
	pulumi.CustomResourceState

	// Specifies whether any modifications are applied immediately, or during the next maintenance window. Default is `false`.
	ApplyImmediately pulumix.Output[bool] `pulumi:"applyImmediately"`
	// ARN of the created ElastiCache Replication Group.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// Whether to enable encryption at rest.
	AtRestEncryptionEnabled pulumix.Output[bool] `pulumi:"atRestEncryptionEnabled"`
	// Password used to access a password protected server. Can be specified only if `transitEncryptionEnabled = true`.
	AuthToken pulumix.Output[*string] `pulumi:"authToken"`
	// Specifies whether minor version engine upgrades will be applied automatically to the underlying Cache Cluster instances during the maintenance window.
	// Only supported for engine type `"redis"` and if the engine version is 6 or higher.
	// Defaults to `true`.
	AutoMinorVersionUpgrade pulumix.Output[bool] `pulumi:"autoMinorVersionUpgrade"`
	// Specifies whether a read-only replica will be automatically promoted to read/write primary if the existing primary fails. If enabled, `numCacheClusters` must be greater than 1. Must be enabled for Redis (cluster mode enabled) replication groups. Defaults to `false`.
	AutomaticFailoverEnabled pulumix.Output[*bool] `pulumi:"automaticFailoverEnabled"`
	// Indicates if cluster mode is enabled.
	ClusterEnabled pulumix.Output[bool] `pulumi:"clusterEnabled"`
	// Address of the replication group configuration endpoint when cluster mode is enabled.
	ConfigurationEndpointAddress pulumix.Output[string] `pulumi:"configurationEndpointAddress"`
	// Enables data tiering. Data tiering is only supported for replication groups using the r6gd node type. This parameter must be set to `true` when using r6gd nodes.
	DataTieringEnabled pulumix.Output[bool] `pulumi:"dataTieringEnabled"`
	// User-created description for the replication group. Must not be empty.
	Description pulumix.Output[string] `pulumi:"description"`
	// Name of the cache engine to be used for the clusters in this replication group. The only valid value is `redis`.
	Engine pulumix.Output[*string] `pulumi:"engine"`
	// Version number of the cache engine to be used for the cache clusters in this replication group.
	// If the version is 7 or higher, the major and minor version should be set, e.g., `7.2`.
	// If the version is 6, the major and minor version can be set, e.g., `6.2`,
	// or the minor version can be unspecified which will use the latest version at creation time, e.g., `6.x`.
	// Otherwise, specify the full version desired, e.g., `5.0.6`.
	// The actual engine version used is returned in the attribute `engineVersionActual`, see Attribute Reference below.
	EngineVersion pulumix.Output[string] `pulumi:"engineVersion"`
	// Because ElastiCache pulls the latest minor or patch for a version, this attribute returns the running version of the cache engine.
	EngineVersionActual pulumix.Output[string] `pulumi:"engineVersionActual"`
	// The name of your final node group (shard) snapshot. ElastiCache creates the snapshot from the primary node in the cluster. If omitted, no final snapshot will be made.
	FinalSnapshotIdentifier pulumix.Output[*string] `pulumi:"finalSnapshotIdentifier"`
	// The ID of the global replication group to which this replication group should belong. If this parameter is specified, the replication group is added to the specified global replication group as a secondary replication group; otherwise, the replication group is not part of any global replication group. If `globalReplicationGroupId` is set, the `numNodeGroups` parameter cannot be set.
	GlobalReplicationGroupId pulumix.Output[string] `pulumi:"globalReplicationGroupId"`
	// The ARN of the key that you wish to use if encrypting at rest. If not supplied, uses service managed encryption. Can be specified only if `atRestEncryptionEnabled = true`.
	KmsKeyId pulumix.Output[*string] `pulumi:"kmsKeyId"`
	// Specifies the destination and format of Redis [SLOWLOG](https://redis.io/commands/slowlog) or Redis [Engine Log](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Log_Delivery.html#Log_contents-engine-log). See the documentation on [Amazon ElastiCache](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Log_Delivery.html#Log_contents-engine-log). See Log Delivery Configuration below for more details.
	LogDeliveryConfigurations pulumix.GArrayOutput[ReplicationGroupLogDeliveryConfiguration, ReplicationGroupLogDeliveryConfigurationOutput] `pulumi:"logDeliveryConfigurations"`
	// Specifies the weekly time range for when maintenance on the cache cluster is performed. The format is `ddd:hh24:mi-ddd:hh24:mi` (24H Clock UTC). The minimum maintenance window is a 60 minute period. Example: `sun:05:00-sun:09:00`
	MaintenanceWindow pulumix.Output[string] `pulumi:"maintenanceWindow"`
	// Identifiers of all the nodes that are part of this replication group.
	MemberClusters pulumix.ArrayOutput[string] `pulumi:"memberClusters"`
	// Specifies whether to enable Multi-AZ Support for the replication group. If `true`, `automaticFailoverEnabled` must also be enabled. Defaults to `false`.
	MultiAzEnabled pulumix.Output[*bool] `pulumi:"multiAzEnabled"`
	// Instance class to be used. See AWS documentation for information on [supported node types](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html) and [guidance on selecting node types](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/nodes-select-size.html). Required unless `globalReplicationGroupId` is set. Cannot be set if `globalReplicationGroupId` is set.
	NodeType pulumix.Output[string] `pulumi:"nodeType"`
	// ARN of an SNS topic to send ElastiCache notifications to. Example: `arn:aws:sns:us-east-1:012345678999:my_sns_topic`
	NotificationTopicArn pulumix.Output[*string] `pulumi:"notificationTopicArn"`
	// Number of cache clusters (primary and replicas) this replication group will have. If Multi-AZ is enabled, the value of this parameter must be at least 2. Updates will occur before other modifications. Conflicts with `numNodeGroups`. Defaults to `1`.
	NumCacheClusters pulumix.Output[int] `pulumi:"numCacheClusters"`
	// Number of node groups (shards) for this Redis replication group.
	// Changing this number will trigger a resizing operation before other settings modifications.
	NumNodeGroups pulumix.Output[int] `pulumi:"numNodeGroups"`
	// Name of the parameter group to associate with this replication group. If this argument is omitted, the default cache parameter group for the specified engine is used. To enable "cluster mode", i.e., data sharding, use a parameter group that has the parameter `cluster-enabled` set to true.
	ParameterGroupName pulumix.Output[string] `pulumi:"parameterGroupName"`
	// Port number on which each of the cache nodes will accept connections. For Memcache the default is 11211, and for Redis the default port is 6379.
	Port pulumix.Output[*int] `pulumi:"port"`
	// List of EC2 availability zones in which the replication group's cache clusters will be created. The order of the availability zones in the list is considered. The first item in the list will be the primary node. Ignored when updating.
	PreferredCacheClusterAzs pulumix.ArrayOutput[string] `pulumi:"preferredCacheClusterAzs"`
	// (Redis only) Address of the endpoint for the primary node in the replication group, if the cluster mode is disabled.
	PrimaryEndpointAddress pulumix.Output[string] `pulumi:"primaryEndpointAddress"`
	// (Redis only) Address of the endpoint for the reader node in the replication group, if the cluster mode is disabled.
	ReaderEndpointAddress pulumix.Output[string] `pulumi:"readerEndpointAddress"`
	// Number of replica nodes in each node group.
	// Changing this number will trigger a resizing operation before other settings modifications.
	// Valid values are 0 to 5.
	ReplicasPerNodeGroup pulumix.Output[int] `pulumi:"replicasPerNodeGroup"`
	// Replication group identifier. This parameter is stored as a lowercase string.
	//
	// The following arguments are optional:
	ReplicationGroupId pulumix.Output[string] `pulumi:"replicationGroupId"`
	// One or more Amazon VPC security groups associated with this replication group. Use this parameter only when you are creating a replication group in an Amazon Virtual Private Cloud
	SecurityGroupIds pulumix.ArrayOutput[string] `pulumi:"securityGroupIds"`
	// List of cache security group names to associate with this replication group.
	SecurityGroupNames pulumix.ArrayOutput[string] `pulumi:"securityGroupNames"`
	// List of ARNs that identify Redis RDB snapshot files stored in Amazon S3. The names object names cannot contain any commas.
	SnapshotArns pulumix.ArrayOutput[string] `pulumi:"snapshotArns"`
	// Name of a snapshot from which to restore data into the new node group. Changing the `snapshotName` forces a new resource.
	SnapshotName pulumix.Output[*string] `pulumi:"snapshotName"`
	// Number of days for which ElastiCache will retain automatic cache cluster snapshots before deleting them. For example, if you set SnapshotRetentionLimit to 5, then a snapshot that was taken today will be retained for 5 days before being deleted. If the value of `snapshotRetentionLimit` is set to zero (0), backups are turned off. Please note that setting a `snapshotRetentionLimit` is not supported on cache.t1.micro cache nodes
	SnapshotRetentionLimit pulumix.Output[*int] `pulumi:"snapshotRetentionLimit"`
	// Daily time range (in UTC) during which ElastiCache will begin taking a daily snapshot of your cache cluster. The minimum snapshot window is a 60 minute period. Example: `05:00-09:00`
	SnapshotWindow pulumix.Output[string] `pulumi:"snapshotWindow"`
	// Name of the cache subnet group to be used for the replication group.
	SubnetGroupName pulumix.Output[string] `pulumi:"subnetGroupName"`
	// Map of tags to assign to the resource. Adding tags to this resource will add or overwrite any existing tags on the clusters in the replication group and not to the group itself. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// Whether to enable encryption in transit.
	TransitEncryptionEnabled pulumix.Output[bool] `pulumi:"transitEncryptionEnabled"`
	// User Group ID to associate with the replication group. Only a maximum of one (1) user group ID is valid. **NOTE:** This argument _is_ a set because the AWS specification allows for multiple IDs. However, in practice, AWS only allows a maximum size of one.
	UserGroupIds pulumix.ArrayOutput[string] `pulumi:"userGroupIds"`
}

// NewReplicationGroup registers a new resource with the given unique name, arguments, and options.
func NewReplicationGroup(ctx *pulumi.Context,
	name string, args *ReplicationGroupArgs, opts ...pulumi.ResourceOption) (*ReplicationGroup, error) {
	if args == nil {
		args = &ReplicationGroupArgs{}
	}

	if args.AuthToken != nil {
		untypedSecretValue := pulumi.ToSecret(args.AuthToken.ToOutput(ctx.Context()).Untyped())
		args.AuthToken = pulumix.MustConvertTyped[*string](untypedSecretValue)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"authToken",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ReplicationGroup
	err := ctx.RegisterResource("aws:elasticache/replicationGroup:ReplicationGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetReplicationGroup gets an existing ReplicationGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetReplicationGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ReplicationGroupState, opts ...pulumi.ResourceOption) (*ReplicationGroup, error) {
	var resource ReplicationGroup
	err := ctx.ReadResource("aws:elasticache/replicationGroup:ReplicationGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ReplicationGroup resources.
type replicationGroupState struct {
	// Specifies whether any modifications are applied immediately, or during the next maintenance window. Default is `false`.
	ApplyImmediately *bool `pulumi:"applyImmediately"`
	// ARN of the created ElastiCache Replication Group.
	Arn *string `pulumi:"arn"`
	// Whether to enable encryption at rest.
	AtRestEncryptionEnabled *bool `pulumi:"atRestEncryptionEnabled"`
	// Password used to access a password protected server. Can be specified only if `transitEncryptionEnabled = true`.
	AuthToken *string `pulumi:"authToken"`
	// Specifies whether minor version engine upgrades will be applied automatically to the underlying Cache Cluster instances during the maintenance window.
	// Only supported for engine type `"redis"` and if the engine version is 6 or higher.
	// Defaults to `true`.
	AutoMinorVersionUpgrade *bool `pulumi:"autoMinorVersionUpgrade"`
	// Specifies whether a read-only replica will be automatically promoted to read/write primary if the existing primary fails. If enabled, `numCacheClusters` must be greater than 1. Must be enabled for Redis (cluster mode enabled) replication groups. Defaults to `false`.
	AutomaticFailoverEnabled *bool `pulumi:"automaticFailoverEnabled"`
	// Indicates if cluster mode is enabled.
	ClusterEnabled *bool `pulumi:"clusterEnabled"`
	// Address of the replication group configuration endpoint when cluster mode is enabled.
	ConfigurationEndpointAddress *string `pulumi:"configurationEndpointAddress"`
	// Enables data tiering. Data tiering is only supported for replication groups using the r6gd node type. This parameter must be set to `true` when using r6gd nodes.
	DataTieringEnabled *bool `pulumi:"dataTieringEnabled"`
	// User-created description for the replication group. Must not be empty.
	Description *string `pulumi:"description"`
	// Name of the cache engine to be used for the clusters in this replication group. The only valid value is `redis`.
	Engine *string `pulumi:"engine"`
	// Version number of the cache engine to be used for the cache clusters in this replication group.
	// If the version is 7 or higher, the major and minor version should be set, e.g., `7.2`.
	// If the version is 6, the major and minor version can be set, e.g., `6.2`,
	// or the minor version can be unspecified which will use the latest version at creation time, e.g., `6.x`.
	// Otherwise, specify the full version desired, e.g., `5.0.6`.
	// The actual engine version used is returned in the attribute `engineVersionActual`, see Attribute Reference below.
	EngineVersion *string `pulumi:"engineVersion"`
	// Because ElastiCache pulls the latest minor or patch for a version, this attribute returns the running version of the cache engine.
	EngineVersionActual *string `pulumi:"engineVersionActual"`
	// The name of your final node group (shard) snapshot. ElastiCache creates the snapshot from the primary node in the cluster. If omitted, no final snapshot will be made.
	FinalSnapshotIdentifier *string `pulumi:"finalSnapshotIdentifier"`
	// The ID of the global replication group to which this replication group should belong. If this parameter is specified, the replication group is added to the specified global replication group as a secondary replication group; otherwise, the replication group is not part of any global replication group. If `globalReplicationGroupId` is set, the `numNodeGroups` parameter cannot be set.
	GlobalReplicationGroupId *string `pulumi:"globalReplicationGroupId"`
	// The ARN of the key that you wish to use if encrypting at rest. If not supplied, uses service managed encryption. Can be specified only if `atRestEncryptionEnabled = true`.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// Specifies the destination and format of Redis [SLOWLOG](https://redis.io/commands/slowlog) or Redis [Engine Log](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Log_Delivery.html#Log_contents-engine-log). See the documentation on [Amazon ElastiCache](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Log_Delivery.html#Log_contents-engine-log). See Log Delivery Configuration below for more details.
	LogDeliveryConfigurations []ReplicationGroupLogDeliveryConfiguration `pulumi:"logDeliveryConfigurations"`
	// Specifies the weekly time range for when maintenance on the cache cluster is performed. The format is `ddd:hh24:mi-ddd:hh24:mi` (24H Clock UTC). The minimum maintenance window is a 60 minute period. Example: `sun:05:00-sun:09:00`
	MaintenanceWindow *string `pulumi:"maintenanceWindow"`
	// Identifiers of all the nodes that are part of this replication group.
	MemberClusters []string `pulumi:"memberClusters"`
	// Specifies whether to enable Multi-AZ Support for the replication group. If `true`, `automaticFailoverEnabled` must also be enabled. Defaults to `false`.
	MultiAzEnabled *bool `pulumi:"multiAzEnabled"`
	// Instance class to be used. See AWS documentation for information on [supported node types](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html) and [guidance on selecting node types](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/nodes-select-size.html). Required unless `globalReplicationGroupId` is set. Cannot be set if `globalReplicationGroupId` is set.
	NodeType *string `pulumi:"nodeType"`
	// ARN of an SNS topic to send ElastiCache notifications to. Example: `arn:aws:sns:us-east-1:012345678999:my_sns_topic`
	NotificationTopicArn *string `pulumi:"notificationTopicArn"`
	// Number of cache clusters (primary and replicas) this replication group will have. If Multi-AZ is enabled, the value of this parameter must be at least 2. Updates will occur before other modifications. Conflicts with `numNodeGroups`. Defaults to `1`.
	NumCacheClusters *int `pulumi:"numCacheClusters"`
	// Number of node groups (shards) for this Redis replication group.
	// Changing this number will trigger a resizing operation before other settings modifications.
	NumNodeGroups *int `pulumi:"numNodeGroups"`
	// Name of the parameter group to associate with this replication group. If this argument is omitted, the default cache parameter group for the specified engine is used. To enable "cluster mode", i.e., data sharding, use a parameter group that has the parameter `cluster-enabled` set to true.
	ParameterGroupName *string `pulumi:"parameterGroupName"`
	// Port number on which each of the cache nodes will accept connections. For Memcache the default is 11211, and for Redis the default port is 6379.
	Port *int `pulumi:"port"`
	// List of EC2 availability zones in which the replication group's cache clusters will be created. The order of the availability zones in the list is considered. The first item in the list will be the primary node. Ignored when updating.
	PreferredCacheClusterAzs []string `pulumi:"preferredCacheClusterAzs"`
	// (Redis only) Address of the endpoint for the primary node in the replication group, if the cluster mode is disabled.
	PrimaryEndpointAddress *string `pulumi:"primaryEndpointAddress"`
	// (Redis only) Address of the endpoint for the reader node in the replication group, if the cluster mode is disabled.
	ReaderEndpointAddress *string `pulumi:"readerEndpointAddress"`
	// Number of replica nodes in each node group.
	// Changing this number will trigger a resizing operation before other settings modifications.
	// Valid values are 0 to 5.
	ReplicasPerNodeGroup *int `pulumi:"replicasPerNodeGroup"`
	// Replication group identifier. This parameter is stored as a lowercase string.
	//
	// The following arguments are optional:
	ReplicationGroupId *string `pulumi:"replicationGroupId"`
	// One or more Amazon VPC security groups associated with this replication group. Use this parameter only when you are creating a replication group in an Amazon Virtual Private Cloud
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// List of cache security group names to associate with this replication group.
	SecurityGroupNames []string `pulumi:"securityGroupNames"`
	// List of ARNs that identify Redis RDB snapshot files stored in Amazon S3. The names object names cannot contain any commas.
	SnapshotArns []string `pulumi:"snapshotArns"`
	// Name of a snapshot from which to restore data into the new node group. Changing the `snapshotName` forces a new resource.
	SnapshotName *string `pulumi:"snapshotName"`
	// Number of days for which ElastiCache will retain automatic cache cluster snapshots before deleting them. For example, if you set SnapshotRetentionLimit to 5, then a snapshot that was taken today will be retained for 5 days before being deleted. If the value of `snapshotRetentionLimit` is set to zero (0), backups are turned off. Please note that setting a `snapshotRetentionLimit` is not supported on cache.t1.micro cache nodes
	SnapshotRetentionLimit *int `pulumi:"snapshotRetentionLimit"`
	// Daily time range (in UTC) during which ElastiCache will begin taking a daily snapshot of your cache cluster. The minimum snapshot window is a 60 minute period. Example: `05:00-09:00`
	SnapshotWindow *string `pulumi:"snapshotWindow"`
	// Name of the cache subnet group to be used for the replication group.
	SubnetGroupName *string `pulumi:"subnetGroupName"`
	// Map of tags to assign to the resource. Adding tags to this resource will add or overwrite any existing tags on the clusters in the replication group and not to the group itself. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// Whether to enable encryption in transit.
	TransitEncryptionEnabled *bool `pulumi:"transitEncryptionEnabled"`
	// User Group ID to associate with the replication group. Only a maximum of one (1) user group ID is valid. **NOTE:** This argument _is_ a set because the AWS specification allows for multiple IDs. However, in practice, AWS only allows a maximum size of one.
	UserGroupIds []string `pulumi:"userGroupIds"`
}

type ReplicationGroupState struct {
	// Specifies whether any modifications are applied immediately, or during the next maintenance window. Default is `false`.
	ApplyImmediately pulumix.Input[*bool]
	// ARN of the created ElastiCache Replication Group.
	Arn pulumix.Input[*string]
	// Whether to enable encryption at rest.
	AtRestEncryptionEnabled pulumix.Input[*bool]
	// Password used to access a password protected server. Can be specified only if `transitEncryptionEnabled = true`.
	AuthToken pulumix.Input[*string]
	// Specifies whether minor version engine upgrades will be applied automatically to the underlying Cache Cluster instances during the maintenance window.
	// Only supported for engine type `"redis"` and if the engine version is 6 or higher.
	// Defaults to `true`.
	AutoMinorVersionUpgrade pulumix.Input[*bool]
	// Specifies whether a read-only replica will be automatically promoted to read/write primary if the existing primary fails. If enabled, `numCacheClusters` must be greater than 1. Must be enabled for Redis (cluster mode enabled) replication groups. Defaults to `false`.
	AutomaticFailoverEnabled pulumix.Input[*bool]
	// Indicates if cluster mode is enabled.
	ClusterEnabled pulumix.Input[*bool]
	// Address of the replication group configuration endpoint when cluster mode is enabled.
	ConfigurationEndpointAddress pulumix.Input[*string]
	// Enables data tiering. Data tiering is only supported for replication groups using the r6gd node type. This parameter must be set to `true` when using r6gd nodes.
	DataTieringEnabled pulumix.Input[*bool]
	// User-created description for the replication group. Must not be empty.
	Description pulumix.Input[*string]
	// Name of the cache engine to be used for the clusters in this replication group. The only valid value is `redis`.
	Engine pulumix.Input[*string]
	// Version number of the cache engine to be used for the cache clusters in this replication group.
	// If the version is 7 or higher, the major and minor version should be set, e.g., `7.2`.
	// If the version is 6, the major and minor version can be set, e.g., `6.2`,
	// or the minor version can be unspecified which will use the latest version at creation time, e.g., `6.x`.
	// Otherwise, specify the full version desired, e.g., `5.0.6`.
	// The actual engine version used is returned in the attribute `engineVersionActual`, see Attribute Reference below.
	EngineVersion pulumix.Input[*string]
	// Because ElastiCache pulls the latest minor or patch for a version, this attribute returns the running version of the cache engine.
	EngineVersionActual pulumix.Input[*string]
	// The name of your final node group (shard) snapshot. ElastiCache creates the snapshot from the primary node in the cluster. If omitted, no final snapshot will be made.
	FinalSnapshotIdentifier pulumix.Input[*string]
	// The ID of the global replication group to which this replication group should belong. If this parameter is specified, the replication group is added to the specified global replication group as a secondary replication group; otherwise, the replication group is not part of any global replication group. If `globalReplicationGroupId` is set, the `numNodeGroups` parameter cannot be set.
	GlobalReplicationGroupId pulumix.Input[*string]
	// The ARN of the key that you wish to use if encrypting at rest. If not supplied, uses service managed encryption. Can be specified only if `atRestEncryptionEnabled = true`.
	KmsKeyId pulumix.Input[*string]
	// Specifies the destination and format of Redis [SLOWLOG](https://redis.io/commands/slowlog) or Redis [Engine Log](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Log_Delivery.html#Log_contents-engine-log). See the documentation on [Amazon ElastiCache](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Log_Delivery.html#Log_contents-engine-log). See Log Delivery Configuration below for more details.
	LogDeliveryConfigurations pulumix.Input[[]*ReplicationGroupLogDeliveryConfigurationArgs]
	// Specifies the weekly time range for when maintenance on the cache cluster is performed. The format is `ddd:hh24:mi-ddd:hh24:mi` (24H Clock UTC). The minimum maintenance window is a 60 minute period. Example: `sun:05:00-sun:09:00`
	MaintenanceWindow pulumix.Input[*string]
	// Identifiers of all the nodes that are part of this replication group.
	MemberClusters pulumix.Input[[]string]
	// Specifies whether to enable Multi-AZ Support for the replication group. If `true`, `automaticFailoverEnabled` must also be enabled. Defaults to `false`.
	MultiAzEnabled pulumix.Input[*bool]
	// Instance class to be used. See AWS documentation for information on [supported node types](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html) and [guidance on selecting node types](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/nodes-select-size.html). Required unless `globalReplicationGroupId` is set. Cannot be set if `globalReplicationGroupId` is set.
	NodeType pulumix.Input[*string]
	// ARN of an SNS topic to send ElastiCache notifications to. Example: `arn:aws:sns:us-east-1:012345678999:my_sns_topic`
	NotificationTopicArn pulumix.Input[*string]
	// Number of cache clusters (primary and replicas) this replication group will have. If Multi-AZ is enabled, the value of this parameter must be at least 2. Updates will occur before other modifications. Conflicts with `numNodeGroups`. Defaults to `1`.
	NumCacheClusters pulumix.Input[*int]
	// Number of node groups (shards) for this Redis replication group.
	// Changing this number will trigger a resizing operation before other settings modifications.
	NumNodeGroups pulumix.Input[*int]
	// Name of the parameter group to associate with this replication group. If this argument is omitted, the default cache parameter group for the specified engine is used. To enable "cluster mode", i.e., data sharding, use a parameter group that has the parameter `cluster-enabled` set to true.
	ParameterGroupName pulumix.Input[*string]
	// Port number on which each of the cache nodes will accept connections. For Memcache the default is 11211, and for Redis the default port is 6379.
	Port pulumix.Input[*int]
	// List of EC2 availability zones in which the replication group's cache clusters will be created. The order of the availability zones in the list is considered. The first item in the list will be the primary node. Ignored when updating.
	PreferredCacheClusterAzs pulumix.Input[[]string]
	// (Redis only) Address of the endpoint for the primary node in the replication group, if the cluster mode is disabled.
	PrimaryEndpointAddress pulumix.Input[*string]
	// (Redis only) Address of the endpoint for the reader node in the replication group, if the cluster mode is disabled.
	ReaderEndpointAddress pulumix.Input[*string]
	// Number of replica nodes in each node group.
	// Changing this number will trigger a resizing operation before other settings modifications.
	// Valid values are 0 to 5.
	ReplicasPerNodeGroup pulumix.Input[*int]
	// Replication group identifier. This parameter is stored as a lowercase string.
	//
	// The following arguments are optional:
	ReplicationGroupId pulumix.Input[*string]
	// One or more Amazon VPC security groups associated with this replication group. Use this parameter only when you are creating a replication group in an Amazon Virtual Private Cloud
	SecurityGroupIds pulumix.Input[[]string]
	// List of cache security group names to associate with this replication group.
	SecurityGroupNames pulumix.Input[[]string]
	// List of ARNs that identify Redis RDB snapshot files stored in Amazon S3. The names object names cannot contain any commas.
	SnapshotArns pulumix.Input[[]string]
	// Name of a snapshot from which to restore data into the new node group. Changing the `snapshotName` forces a new resource.
	SnapshotName pulumix.Input[*string]
	// Number of days for which ElastiCache will retain automatic cache cluster snapshots before deleting them. For example, if you set SnapshotRetentionLimit to 5, then a snapshot that was taken today will be retained for 5 days before being deleted. If the value of `snapshotRetentionLimit` is set to zero (0), backups are turned off. Please note that setting a `snapshotRetentionLimit` is not supported on cache.t1.micro cache nodes
	SnapshotRetentionLimit pulumix.Input[*int]
	// Daily time range (in UTC) during which ElastiCache will begin taking a daily snapshot of your cache cluster. The minimum snapshot window is a 60 minute period. Example: `05:00-09:00`
	SnapshotWindow pulumix.Input[*string]
	// Name of the cache subnet group to be used for the replication group.
	SubnetGroupName pulumix.Input[*string]
	// Map of tags to assign to the resource. Adding tags to this resource will add or overwrite any existing tags on the clusters in the replication group and not to the group itself. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// Whether to enable encryption in transit.
	TransitEncryptionEnabled pulumix.Input[*bool]
	// User Group ID to associate with the replication group. Only a maximum of one (1) user group ID is valid. **NOTE:** This argument _is_ a set because the AWS specification allows for multiple IDs. However, in practice, AWS only allows a maximum size of one.
	UserGroupIds pulumix.Input[[]string]
}

func (ReplicationGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*replicationGroupState)(nil)).Elem()
}

type replicationGroupArgs struct {
	// Specifies whether any modifications are applied immediately, or during the next maintenance window. Default is `false`.
	ApplyImmediately *bool `pulumi:"applyImmediately"`
	// Whether to enable encryption at rest.
	AtRestEncryptionEnabled *bool `pulumi:"atRestEncryptionEnabled"`
	// Password used to access a password protected server. Can be specified only if `transitEncryptionEnabled = true`.
	AuthToken *string `pulumi:"authToken"`
	// Specifies whether minor version engine upgrades will be applied automatically to the underlying Cache Cluster instances during the maintenance window.
	// Only supported for engine type `"redis"` and if the engine version is 6 or higher.
	// Defaults to `true`.
	AutoMinorVersionUpgrade *bool `pulumi:"autoMinorVersionUpgrade"`
	// Specifies whether a read-only replica will be automatically promoted to read/write primary if the existing primary fails. If enabled, `numCacheClusters` must be greater than 1. Must be enabled for Redis (cluster mode enabled) replication groups. Defaults to `false`.
	AutomaticFailoverEnabled *bool `pulumi:"automaticFailoverEnabled"`
	// Enables data tiering. Data tiering is only supported for replication groups using the r6gd node type. This parameter must be set to `true` when using r6gd nodes.
	DataTieringEnabled *bool `pulumi:"dataTieringEnabled"`
	// User-created description for the replication group. Must not be empty.
	Description *string `pulumi:"description"`
	// Name of the cache engine to be used for the clusters in this replication group. The only valid value is `redis`.
	Engine *string `pulumi:"engine"`
	// Version number of the cache engine to be used for the cache clusters in this replication group.
	// If the version is 7 or higher, the major and minor version should be set, e.g., `7.2`.
	// If the version is 6, the major and minor version can be set, e.g., `6.2`,
	// or the minor version can be unspecified which will use the latest version at creation time, e.g., `6.x`.
	// Otherwise, specify the full version desired, e.g., `5.0.6`.
	// The actual engine version used is returned in the attribute `engineVersionActual`, see Attribute Reference below.
	EngineVersion *string `pulumi:"engineVersion"`
	// The name of your final node group (shard) snapshot. ElastiCache creates the snapshot from the primary node in the cluster. If omitted, no final snapshot will be made.
	FinalSnapshotIdentifier *string `pulumi:"finalSnapshotIdentifier"`
	// The ID of the global replication group to which this replication group should belong. If this parameter is specified, the replication group is added to the specified global replication group as a secondary replication group; otherwise, the replication group is not part of any global replication group. If `globalReplicationGroupId` is set, the `numNodeGroups` parameter cannot be set.
	GlobalReplicationGroupId *string `pulumi:"globalReplicationGroupId"`
	// The ARN of the key that you wish to use if encrypting at rest. If not supplied, uses service managed encryption. Can be specified only if `atRestEncryptionEnabled = true`.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// Specifies the destination and format of Redis [SLOWLOG](https://redis.io/commands/slowlog) or Redis [Engine Log](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Log_Delivery.html#Log_contents-engine-log). See the documentation on [Amazon ElastiCache](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Log_Delivery.html#Log_contents-engine-log). See Log Delivery Configuration below for more details.
	LogDeliveryConfigurations []ReplicationGroupLogDeliveryConfiguration `pulumi:"logDeliveryConfigurations"`
	// Specifies the weekly time range for when maintenance on the cache cluster is performed. The format is `ddd:hh24:mi-ddd:hh24:mi` (24H Clock UTC). The minimum maintenance window is a 60 minute period. Example: `sun:05:00-sun:09:00`
	MaintenanceWindow *string `pulumi:"maintenanceWindow"`
	// Specifies whether to enable Multi-AZ Support for the replication group. If `true`, `automaticFailoverEnabled` must also be enabled. Defaults to `false`.
	MultiAzEnabled *bool `pulumi:"multiAzEnabled"`
	// Instance class to be used. See AWS documentation for information on [supported node types](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html) and [guidance on selecting node types](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/nodes-select-size.html). Required unless `globalReplicationGroupId` is set. Cannot be set if `globalReplicationGroupId` is set.
	NodeType *string `pulumi:"nodeType"`
	// ARN of an SNS topic to send ElastiCache notifications to. Example: `arn:aws:sns:us-east-1:012345678999:my_sns_topic`
	NotificationTopicArn *string `pulumi:"notificationTopicArn"`
	// Number of cache clusters (primary and replicas) this replication group will have. If Multi-AZ is enabled, the value of this parameter must be at least 2. Updates will occur before other modifications. Conflicts with `numNodeGroups`. Defaults to `1`.
	NumCacheClusters *int `pulumi:"numCacheClusters"`
	// Number of node groups (shards) for this Redis replication group.
	// Changing this number will trigger a resizing operation before other settings modifications.
	NumNodeGroups *int `pulumi:"numNodeGroups"`
	// Name of the parameter group to associate with this replication group. If this argument is omitted, the default cache parameter group for the specified engine is used. To enable "cluster mode", i.e., data sharding, use a parameter group that has the parameter `cluster-enabled` set to true.
	ParameterGroupName *string `pulumi:"parameterGroupName"`
	// Port number on which each of the cache nodes will accept connections. For Memcache the default is 11211, and for Redis the default port is 6379.
	Port *int `pulumi:"port"`
	// List of EC2 availability zones in which the replication group's cache clusters will be created. The order of the availability zones in the list is considered. The first item in the list will be the primary node. Ignored when updating.
	PreferredCacheClusterAzs []string `pulumi:"preferredCacheClusterAzs"`
	// Number of replica nodes in each node group.
	// Changing this number will trigger a resizing operation before other settings modifications.
	// Valid values are 0 to 5.
	ReplicasPerNodeGroup *int `pulumi:"replicasPerNodeGroup"`
	// Replication group identifier. This parameter is stored as a lowercase string.
	//
	// The following arguments are optional:
	ReplicationGroupId *string `pulumi:"replicationGroupId"`
	// One or more Amazon VPC security groups associated with this replication group. Use this parameter only when you are creating a replication group in an Amazon Virtual Private Cloud
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// List of cache security group names to associate with this replication group.
	SecurityGroupNames []string `pulumi:"securityGroupNames"`
	// List of ARNs that identify Redis RDB snapshot files stored in Amazon S3. The names object names cannot contain any commas.
	SnapshotArns []string `pulumi:"snapshotArns"`
	// Name of a snapshot from which to restore data into the new node group. Changing the `snapshotName` forces a new resource.
	SnapshotName *string `pulumi:"snapshotName"`
	// Number of days for which ElastiCache will retain automatic cache cluster snapshots before deleting them. For example, if you set SnapshotRetentionLimit to 5, then a snapshot that was taken today will be retained for 5 days before being deleted. If the value of `snapshotRetentionLimit` is set to zero (0), backups are turned off. Please note that setting a `snapshotRetentionLimit` is not supported on cache.t1.micro cache nodes
	SnapshotRetentionLimit *int `pulumi:"snapshotRetentionLimit"`
	// Daily time range (in UTC) during which ElastiCache will begin taking a daily snapshot of your cache cluster. The minimum snapshot window is a 60 minute period. Example: `05:00-09:00`
	SnapshotWindow *string `pulumi:"snapshotWindow"`
	// Name of the cache subnet group to be used for the replication group.
	SubnetGroupName *string `pulumi:"subnetGroupName"`
	// Map of tags to assign to the resource. Adding tags to this resource will add or overwrite any existing tags on the clusters in the replication group and not to the group itself. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Whether to enable encryption in transit.
	TransitEncryptionEnabled *bool `pulumi:"transitEncryptionEnabled"`
	// User Group ID to associate with the replication group. Only a maximum of one (1) user group ID is valid. **NOTE:** This argument _is_ a set because the AWS specification allows for multiple IDs. However, in practice, AWS only allows a maximum size of one.
	UserGroupIds []string `pulumi:"userGroupIds"`
}

// The set of arguments for constructing a ReplicationGroup resource.
type ReplicationGroupArgs struct {
	// Specifies whether any modifications are applied immediately, or during the next maintenance window. Default is `false`.
	ApplyImmediately pulumix.Input[*bool]
	// Whether to enable encryption at rest.
	AtRestEncryptionEnabled pulumix.Input[*bool]
	// Password used to access a password protected server. Can be specified only if `transitEncryptionEnabled = true`.
	AuthToken pulumix.Input[*string]
	// Specifies whether minor version engine upgrades will be applied automatically to the underlying Cache Cluster instances during the maintenance window.
	// Only supported for engine type `"redis"` and if the engine version is 6 or higher.
	// Defaults to `true`.
	AutoMinorVersionUpgrade pulumix.Input[*bool]
	// Specifies whether a read-only replica will be automatically promoted to read/write primary if the existing primary fails. If enabled, `numCacheClusters` must be greater than 1. Must be enabled for Redis (cluster mode enabled) replication groups. Defaults to `false`.
	AutomaticFailoverEnabled pulumix.Input[*bool]
	// Enables data tiering. Data tiering is only supported for replication groups using the r6gd node type. This parameter must be set to `true` when using r6gd nodes.
	DataTieringEnabled pulumix.Input[*bool]
	// User-created description for the replication group. Must not be empty.
	Description pulumix.Input[*string]
	// Name of the cache engine to be used for the clusters in this replication group. The only valid value is `redis`.
	Engine pulumix.Input[*string]
	// Version number of the cache engine to be used for the cache clusters in this replication group.
	// If the version is 7 or higher, the major and minor version should be set, e.g., `7.2`.
	// If the version is 6, the major and minor version can be set, e.g., `6.2`,
	// or the minor version can be unspecified which will use the latest version at creation time, e.g., `6.x`.
	// Otherwise, specify the full version desired, e.g., `5.0.6`.
	// The actual engine version used is returned in the attribute `engineVersionActual`, see Attribute Reference below.
	EngineVersion pulumix.Input[*string]
	// The name of your final node group (shard) snapshot. ElastiCache creates the snapshot from the primary node in the cluster. If omitted, no final snapshot will be made.
	FinalSnapshotIdentifier pulumix.Input[*string]
	// The ID of the global replication group to which this replication group should belong. If this parameter is specified, the replication group is added to the specified global replication group as a secondary replication group; otherwise, the replication group is not part of any global replication group. If `globalReplicationGroupId` is set, the `numNodeGroups` parameter cannot be set.
	GlobalReplicationGroupId pulumix.Input[*string]
	// The ARN of the key that you wish to use if encrypting at rest. If not supplied, uses service managed encryption. Can be specified only if `atRestEncryptionEnabled = true`.
	KmsKeyId pulumix.Input[*string]
	// Specifies the destination and format of Redis [SLOWLOG](https://redis.io/commands/slowlog) or Redis [Engine Log](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Log_Delivery.html#Log_contents-engine-log). See the documentation on [Amazon ElastiCache](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Log_Delivery.html#Log_contents-engine-log). See Log Delivery Configuration below for more details.
	LogDeliveryConfigurations pulumix.Input[[]*ReplicationGroupLogDeliveryConfigurationArgs]
	// Specifies the weekly time range for when maintenance on the cache cluster is performed. The format is `ddd:hh24:mi-ddd:hh24:mi` (24H Clock UTC). The minimum maintenance window is a 60 minute period. Example: `sun:05:00-sun:09:00`
	MaintenanceWindow pulumix.Input[*string]
	// Specifies whether to enable Multi-AZ Support for the replication group. If `true`, `automaticFailoverEnabled` must also be enabled. Defaults to `false`.
	MultiAzEnabled pulumix.Input[*bool]
	// Instance class to be used. See AWS documentation for information on [supported node types](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html) and [guidance on selecting node types](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/nodes-select-size.html). Required unless `globalReplicationGroupId` is set. Cannot be set if `globalReplicationGroupId` is set.
	NodeType pulumix.Input[*string]
	// ARN of an SNS topic to send ElastiCache notifications to. Example: `arn:aws:sns:us-east-1:012345678999:my_sns_topic`
	NotificationTopicArn pulumix.Input[*string]
	// Number of cache clusters (primary and replicas) this replication group will have. If Multi-AZ is enabled, the value of this parameter must be at least 2. Updates will occur before other modifications. Conflicts with `numNodeGroups`. Defaults to `1`.
	NumCacheClusters pulumix.Input[*int]
	// Number of node groups (shards) for this Redis replication group.
	// Changing this number will trigger a resizing operation before other settings modifications.
	NumNodeGroups pulumix.Input[*int]
	// Name of the parameter group to associate with this replication group. If this argument is omitted, the default cache parameter group for the specified engine is used. To enable "cluster mode", i.e., data sharding, use a parameter group that has the parameter `cluster-enabled` set to true.
	ParameterGroupName pulumix.Input[*string]
	// Port number on which each of the cache nodes will accept connections. For Memcache the default is 11211, and for Redis the default port is 6379.
	Port pulumix.Input[*int]
	// List of EC2 availability zones in which the replication group's cache clusters will be created. The order of the availability zones in the list is considered. The first item in the list will be the primary node. Ignored when updating.
	PreferredCacheClusterAzs pulumix.Input[[]string]
	// Number of replica nodes in each node group.
	// Changing this number will trigger a resizing operation before other settings modifications.
	// Valid values are 0 to 5.
	ReplicasPerNodeGroup pulumix.Input[*int]
	// Replication group identifier. This parameter is stored as a lowercase string.
	//
	// The following arguments are optional:
	ReplicationGroupId pulumix.Input[*string]
	// One or more Amazon VPC security groups associated with this replication group. Use this parameter only when you are creating a replication group in an Amazon Virtual Private Cloud
	SecurityGroupIds pulumix.Input[[]string]
	// List of cache security group names to associate with this replication group.
	SecurityGroupNames pulumix.Input[[]string]
	// List of ARNs that identify Redis RDB snapshot files stored in Amazon S3. The names object names cannot contain any commas.
	SnapshotArns pulumix.Input[[]string]
	// Name of a snapshot from which to restore data into the new node group. Changing the `snapshotName` forces a new resource.
	SnapshotName pulumix.Input[*string]
	// Number of days for which ElastiCache will retain automatic cache cluster snapshots before deleting them. For example, if you set SnapshotRetentionLimit to 5, then a snapshot that was taken today will be retained for 5 days before being deleted. If the value of `snapshotRetentionLimit` is set to zero (0), backups are turned off. Please note that setting a `snapshotRetentionLimit` is not supported on cache.t1.micro cache nodes
	SnapshotRetentionLimit pulumix.Input[*int]
	// Daily time range (in UTC) during which ElastiCache will begin taking a daily snapshot of your cache cluster. The minimum snapshot window is a 60 minute period. Example: `05:00-09:00`
	SnapshotWindow pulumix.Input[*string]
	// Name of the cache subnet group to be used for the replication group.
	SubnetGroupName pulumix.Input[*string]
	// Map of tags to assign to the resource. Adding tags to this resource will add or overwrite any existing tags on the clusters in the replication group and not to the group itself. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// Whether to enable encryption in transit.
	TransitEncryptionEnabled pulumix.Input[*bool]
	// User Group ID to associate with the replication group. Only a maximum of one (1) user group ID is valid. **NOTE:** This argument _is_ a set because the AWS specification allows for multiple IDs. However, in practice, AWS only allows a maximum size of one.
	UserGroupIds pulumix.Input[[]string]
}

func (ReplicationGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*replicationGroupArgs)(nil)).Elem()
}

type ReplicationGroupOutput struct{ *pulumi.OutputState }

func (ReplicationGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationGroup)(nil)).Elem()
}

func (o ReplicationGroupOutput) ToReplicationGroupOutput() ReplicationGroupOutput {
	return o
}

func (o ReplicationGroupOutput) ToReplicationGroupOutputWithContext(ctx context.Context) ReplicationGroupOutput {
	return o
}

func (o ReplicationGroupOutput) ToOutput(ctx context.Context) pulumix.Output[ReplicationGroup] {
	return pulumix.Output[ReplicationGroup]{
		OutputState: o.OutputState,
	}
}

// Specifies whether any modifications are applied immediately, or during the next maintenance window. Default is `false`.
func (o ReplicationGroupOutput) ApplyImmediately() pulumix.Output[bool] {
	value := pulumix.Apply[ReplicationGroup](o, func(v ReplicationGroup) pulumix.Output[bool] { return v.ApplyImmediately })
	return pulumix.Flatten[bool, pulumix.Output[bool]](value)
}

// ARN of the created ElastiCache Replication Group.
func (o ReplicationGroupOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[ReplicationGroup](o, func(v ReplicationGroup) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Whether to enable encryption at rest.
func (o ReplicationGroupOutput) AtRestEncryptionEnabled() pulumix.Output[bool] {
	value := pulumix.Apply[ReplicationGroup](o, func(v ReplicationGroup) pulumix.Output[bool] { return v.AtRestEncryptionEnabled })
	return pulumix.Flatten[bool, pulumix.Output[bool]](value)
}

// Password used to access a password protected server. Can be specified only if `transitEncryptionEnabled = true`.
func (o ReplicationGroupOutput) AuthToken() pulumix.Output[*string] {
	value := pulumix.Apply[ReplicationGroup](o, func(v ReplicationGroup) pulumix.Output[*string] { return v.AuthToken })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Specifies whether minor version engine upgrades will be applied automatically to the underlying Cache Cluster instances during the maintenance window.
// Only supported for engine type `"redis"` and if the engine version is 6 or higher.
// Defaults to `true`.
func (o ReplicationGroupOutput) AutoMinorVersionUpgrade() pulumix.Output[bool] {
	value := pulumix.Apply[ReplicationGroup](o, func(v ReplicationGroup) pulumix.Output[bool] { return v.AutoMinorVersionUpgrade })
	return pulumix.Flatten[bool, pulumix.Output[bool]](value)
}

// Specifies whether a read-only replica will be automatically promoted to read/write primary if the existing primary fails. If enabled, `numCacheClusters` must be greater than 1. Must be enabled for Redis (cluster mode enabled) replication groups. Defaults to `false`.
func (o ReplicationGroupOutput) AutomaticFailoverEnabled() pulumix.Output[*bool] {
	value := pulumix.Apply[ReplicationGroup](o, func(v ReplicationGroup) pulumix.Output[*bool] { return v.AutomaticFailoverEnabled })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// Indicates if cluster mode is enabled.
func (o ReplicationGroupOutput) ClusterEnabled() pulumix.Output[bool] {
	value := pulumix.Apply[ReplicationGroup](o, func(v ReplicationGroup) pulumix.Output[bool] { return v.ClusterEnabled })
	return pulumix.Flatten[bool, pulumix.Output[bool]](value)
}

// Address of the replication group configuration endpoint when cluster mode is enabled.
func (o ReplicationGroupOutput) ConfigurationEndpointAddress() pulumix.Output[string] {
	value := pulumix.Apply[ReplicationGroup](o, func(v ReplicationGroup) pulumix.Output[string] { return v.ConfigurationEndpointAddress })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Enables data tiering. Data tiering is only supported for replication groups using the r6gd node type. This parameter must be set to `true` when using r6gd nodes.
func (o ReplicationGroupOutput) DataTieringEnabled() pulumix.Output[bool] {
	value := pulumix.Apply[ReplicationGroup](o, func(v ReplicationGroup) pulumix.Output[bool] { return v.DataTieringEnabled })
	return pulumix.Flatten[bool, pulumix.Output[bool]](value)
}

// User-created description for the replication group. Must not be empty.
func (o ReplicationGroupOutput) Description() pulumix.Output[string] {
	value := pulumix.Apply[ReplicationGroup](o, func(v ReplicationGroup) pulumix.Output[string] { return v.Description })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Name of the cache engine to be used for the clusters in this replication group. The only valid value is `redis`.
func (o ReplicationGroupOutput) Engine() pulumix.Output[*string] {
	value := pulumix.Apply[ReplicationGroup](o, func(v ReplicationGroup) pulumix.Output[*string] { return v.Engine })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Version number of the cache engine to be used for the cache clusters in this replication group.
// If the version is 7 or higher, the major and minor version should be set, e.g., `7.2`.
// If the version is 6, the major and minor version can be set, e.g., `6.2`,
// or the minor version can be unspecified which will use the latest version at creation time, e.g., `6.x`.
// Otherwise, specify the full version desired, e.g., `5.0.6`.
// The actual engine version used is returned in the attribute `engineVersionActual`, see Attribute Reference below.
func (o ReplicationGroupOutput) EngineVersion() pulumix.Output[string] {
	value := pulumix.Apply[ReplicationGroup](o, func(v ReplicationGroup) pulumix.Output[string] { return v.EngineVersion })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Because ElastiCache pulls the latest minor or patch for a version, this attribute returns the running version of the cache engine.
func (o ReplicationGroupOutput) EngineVersionActual() pulumix.Output[string] {
	value := pulumix.Apply[ReplicationGroup](o, func(v ReplicationGroup) pulumix.Output[string] { return v.EngineVersionActual })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The name of your final node group (shard) snapshot. ElastiCache creates the snapshot from the primary node in the cluster. If omitted, no final snapshot will be made.
func (o ReplicationGroupOutput) FinalSnapshotIdentifier() pulumix.Output[*string] {
	value := pulumix.Apply[ReplicationGroup](o, func(v ReplicationGroup) pulumix.Output[*string] { return v.FinalSnapshotIdentifier })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The ID of the global replication group to which this replication group should belong. If this parameter is specified, the replication group is added to the specified global replication group as a secondary replication group; otherwise, the replication group is not part of any global replication group. If `globalReplicationGroupId` is set, the `numNodeGroups` parameter cannot be set.
func (o ReplicationGroupOutput) GlobalReplicationGroupId() pulumix.Output[string] {
	value := pulumix.Apply[ReplicationGroup](o, func(v ReplicationGroup) pulumix.Output[string] { return v.GlobalReplicationGroupId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The ARN of the key that you wish to use if encrypting at rest. If not supplied, uses service managed encryption. Can be specified only if `atRestEncryptionEnabled = true`.
func (o ReplicationGroupOutput) KmsKeyId() pulumix.Output[*string] {
	value := pulumix.Apply[ReplicationGroup](o, func(v ReplicationGroup) pulumix.Output[*string] { return v.KmsKeyId })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Specifies the destination and format of Redis [SLOWLOG](https://redis.io/commands/slowlog) or Redis [Engine Log](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Log_Delivery.html#Log_contents-engine-log). See the documentation on [Amazon ElastiCache](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Log_Delivery.html#Log_contents-engine-log). See Log Delivery Configuration below for more details.
func (o ReplicationGroupOutput) LogDeliveryConfigurations() pulumix.GArrayOutput[ReplicationGroupLogDeliveryConfiguration, ReplicationGroupLogDeliveryConfigurationOutput] {
	value := pulumix.Apply[ReplicationGroup](o, func(v ReplicationGroup) pulumix.GArrayOutput[ReplicationGroupLogDeliveryConfiguration, ReplicationGroupLogDeliveryConfigurationOutput] {
		return v.LogDeliveryConfigurations
	})
	unwrapped := pulumix.Flatten[[]ReplicationGroupLogDeliveryConfiguration, pulumix.GArrayOutput[ReplicationGroupLogDeliveryConfiguration, ReplicationGroupLogDeliveryConfigurationOutput]](value)
	return pulumix.GArrayOutput[ReplicationGroupLogDeliveryConfiguration, ReplicationGroupLogDeliveryConfigurationOutput]{OutputState: unwrapped.OutputState}
}

// Specifies the weekly time range for when maintenance on the cache cluster is performed. The format is `ddd:hh24:mi-ddd:hh24:mi` (24H Clock UTC). The minimum maintenance window is a 60 minute period. Example: `sun:05:00-sun:09:00`
func (o ReplicationGroupOutput) MaintenanceWindow() pulumix.Output[string] {
	value := pulumix.Apply[ReplicationGroup](o, func(v ReplicationGroup) pulumix.Output[string] { return v.MaintenanceWindow })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Identifiers of all the nodes that are part of this replication group.
func (o ReplicationGroupOutput) MemberClusters() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[ReplicationGroup](o, func(v ReplicationGroup) pulumix.ArrayOutput[string] { return v.MemberClusters })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// Specifies whether to enable Multi-AZ Support for the replication group. If `true`, `automaticFailoverEnabled` must also be enabled. Defaults to `false`.
func (o ReplicationGroupOutput) MultiAzEnabled() pulumix.Output[*bool] {
	value := pulumix.Apply[ReplicationGroup](o, func(v ReplicationGroup) pulumix.Output[*bool] { return v.MultiAzEnabled })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// Instance class to be used. See AWS documentation for information on [supported node types](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html) and [guidance on selecting node types](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/nodes-select-size.html). Required unless `globalReplicationGroupId` is set. Cannot be set if `globalReplicationGroupId` is set.
func (o ReplicationGroupOutput) NodeType() pulumix.Output[string] {
	value := pulumix.Apply[ReplicationGroup](o, func(v ReplicationGroup) pulumix.Output[string] { return v.NodeType })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// ARN of an SNS topic to send ElastiCache notifications to. Example: `arn:aws:sns:us-east-1:012345678999:my_sns_topic`
func (o ReplicationGroupOutput) NotificationTopicArn() pulumix.Output[*string] {
	value := pulumix.Apply[ReplicationGroup](o, func(v ReplicationGroup) pulumix.Output[*string] { return v.NotificationTopicArn })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Number of cache clusters (primary and replicas) this replication group will have. If Multi-AZ is enabled, the value of this parameter must be at least 2. Updates will occur before other modifications. Conflicts with `numNodeGroups`. Defaults to `1`.
func (o ReplicationGroupOutput) NumCacheClusters() pulumix.Output[int] {
	value := pulumix.Apply[ReplicationGroup](o, func(v ReplicationGroup) pulumix.Output[int] { return v.NumCacheClusters })
	return pulumix.Flatten[int, pulumix.Output[int]](value)
}

// Number of node groups (shards) for this Redis replication group.
// Changing this number will trigger a resizing operation before other settings modifications.
func (o ReplicationGroupOutput) NumNodeGroups() pulumix.Output[int] {
	value := pulumix.Apply[ReplicationGroup](o, func(v ReplicationGroup) pulumix.Output[int] { return v.NumNodeGroups })
	return pulumix.Flatten[int, pulumix.Output[int]](value)
}

// Name of the parameter group to associate with this replication group. If this argument is omitted, the default cache parameter group for the specified engine is used. To enable "cluster mode", i.e., data sharding, use a parameter group that has the parameter `cluster-enabled` set to true.
func (o ReplicationGroupOutput) ParameterGroupName() pulumix.Output[string] {
	value := pulumix.Apply[ReplicationGroup](o, func(v ReplicationGroup) pulumix.Output[string] { return v.ParameterGroupName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Port number on which each of the cache nodes will accept connections. For Memcache the default is 11211, and for Redis the default port is 6379.
func (o ReplicationGroupOutput) Port() pulumix.Output[*int] {
	value := pulumix.Apply[ReplicationGroup](o, func(v ReplicationGroup) pulumix.Output[*int] { return v.Port })
	return pulumix.Flatten[*int, pulumix.Output[*int]](value)
}

// List of EC2 availability zones in which the replication group's cache clusters will be created. The order of the availability zones in the list is considered. The first item in the list will be the primary node. Ignored when updating.
func (o ReplicationGroupOutput) PreferredCacheClusterAzs() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[ReplicationGroup](o, func(v ReplicationGroup) pulumix.ArrayOutput[string] { return v.PreferredCacheClusterAzs })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// (Redis only) Address of the endpoint for the primary node in the replication group, if the cluster mode is disabled.
func (o ReplicationGroupOutput) PrimaryEndpointAddress() pulumix.Output[string] {
	value := pulumix.Apply[ReplicationGroup](o, func(v ReplicationGroup) pulumix.Output[string] { return v.PrimaryEndpointAddress })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// (Redis only) Address of the endpoint for the reader node in the replication group, if the cluster mode is disabled.
func (o ReplicationGroupOutput) ReaderEndpointAddress() pulumix.Output[string] {
	value := pulumix.Apply[ReplicationGroup](o, func(v ReplicationGroup) pulumix.Output[string] { return v.ReaderEndpointAddress })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Number of replica nodes in each node group.
// Changing this number will trigger a resizing operation before other settings modifications.
// Valid values are 0 to 5.
func (o ReplicationGroupOutput) ReplicasPerNodeGroup() pulumix.Output[int] {
	value := pulumix.Apply[ReplicationGroup](o, func(v ReplicationGroup) pulumix.Output[int] { return v.ReplicasPerNodeGroup })
	return pulumix.Flatten[int, pulumix.Output[int]](value)
}

// Replication group identifier. This parameter is stored as a lowercase string.
//
// The following arguments are optional:
func (o ReplicationGroupOutput) ReplicationGroupId() pulumix.Output[string] {
	value := pulumix.Apply[ReplicationGroup](o, func(v ReplicationGroup) pulumix.Output[string] { return v.ReplicationGroupId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// One or more Amazon VPC security groups associated with this replication group. Use this parameter only when you are creating a replication group in an Amazon Virtual Private Cloud
func (o ReplicationGroupOutput) SecurityGroupIds() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[ReplicationGroup](o, func(v ReplicationGroup) pulumix.ArrayOutput[string] { return v.SecurityGroupIds })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// List of cache security group names to associate with this replication group.
func (o ReplicationGroupOutput) SecurityGroupNames() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[ReplicationGroup](o, func(v ReplicationGroup) pulumix.ArrayOutput[string] { return v.SecurityGroupNames })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// List of ARNs that identify Redis RDB snapshot files stored in Amazon S3. The names object names cannot contain any commas.
func (o ReplicationGroupOutput) SnapshotArns() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[ReplicationGroup](o, func(v ReplicationGroup) pulumix.ArrayOutput[string] { return v.SnapshotArns })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// Name of a snapshot from which to restore data into the new node group. Changing the `snapshotName` forces a new resource.
func (o ReplicationGroupOutput) SnapshotName() pulumix.Output[*string] {
	value := pulumix.Apply[ReplicationGroup](o, func(v ReplicationGroup) pulumix.Output[*string] { return v.SnapshotName })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Number of days for which ElastiCache will retain automatic cache cluster snapshots before deleting them. For example, if you set SnapshotRetentionLimit to 5, then a snapshot that was taken today will be retained for 5 days before being deleted. If the value of `snapshotRetentionLimit` is set to zero (0), backups are turned off. Please note that setting a `snapshotRetentionLimit` is not supported on cache.t1.micro cache nodes
func (o ReplicationGroupOutput) SnapshotRetentionLimit() pulumix.Output[*int] {
	value := pulumix.Apply[ReplicationGroup](o, func(v ReplicationGroup) pulumix.Output[*int] { return v.SnapshotRetentionLimit })
	return pulumix.Flatten[*int, pulumix.Output[*int]](value)
}

// Daily time range (in UTC) during which ElastiCache will begin taking a daily snapshot of your cache cluster. The minimum snapshot window is a 60 minute period. Example: `05:00-09:00`
func (o ReplicationGroupOutput) SnapshotWindow() pulumix.Output[string] {
	value := pulumix.Apply[ReplicationGroup](o, func(v ReplicationGroup) pulumix.Output[string] { return v.SnapshotWindow })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Name of the cache subnet group to be used for the replication group.
func (o ReplicationGroupOutput) SubnetGroupName() pulumix.Output[string] {
	value := pulumix.Apply[ReplicationGroup](o, func(v ReplicationGroup) pulumix.Output[string] { return v.SubnetGroupName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Map of tags to assign to the resource. Adding tags to this resource will add or overwrite any existing tags on the clusters in the replication group and not to the group itself. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o ReplicationGroupOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[ReplicationGroup](o, func(v ReplicationGroup) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o ReplicationGroupOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[ReplicationGroup](o, func(v ReplicationGroup) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Whether to enable encryption in transit.
func (o ReplicationGroupOutput) TransitEncryptionEnabled() pulumix.Output[bool] {
	value := pulumix.Apply[ReplicationGroup](o, func(v ReplicationGroup) pulumix.Output[bool] { return v.TransitEncryptionEnabled })
	return pulumix.Flatten[bool, pulumix.Output[bool]](value)
}

// User Group ID to associate with the replication group. Only a maximum of one (1) user group ID is valid. **NOTE:** This argument _is_ a set because the AWS specification allows for multiple IDs. However, in practice, AWS only allows a maximum size of one.
func (o ReplicationGroupOutput) UserGroupIds() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[ReplicationGroup](o, func(v ReplicationGroup) pulumix.ArrayOutput[string] { return v.UserGroupIds })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(ReplicationGroupOutput{})
}
