// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package shield

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Creates a grouping of protected resources so they can be handled as a collective.
// This resource grouping improves the accuracy of detection and reduces false positives. For more information see
// [Managing AWS Shield Advanced protection groups](https://docs.aws.amazon.com/waf/latest/developerguide/manage-protection-group.html)
type ProtectionGroup struct {
	pulumi.CustomResourceState

	// Defines how AWS Shield combines resource data for the group in order to detect, mitigate, and report events.
	Aggregation pulumix.Output[string] `pulumi:"aggregation"`
	// The Amazon Resource Names (ARNs) of the resources to include in the protection group. You must set this when you set `pattern` to ARBITRARY and you must not set it for any other `pattern` setting.
	Members pulumix.ArrayOutput[string] `pulumi:"members"`
	// The criteria to use to choose the protected resources for inclusion in the group.
	Pattern pulumix.Output[string] `pulumi:"pattern"`
	// The ARN (Amazon Resource Name) of the protection group.
	ProtectionGroupArn pulumix.Output[string] `pulumi:"protectionGroupArn"`
	// The name of the protection group.
	ProtectionGroupId pulumix.Output[string] `pulumi:"protectionGroupId"`
	// The resource type to include in the protection group. You must set this when you set `pattern` to BY_RESOURCE_TYPE and you must not set it for any other `pattern` setting.
	ResourceType pulumix.Output[*string] `pulumi:"resourceType"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
}

// NewProtectionGroup registers a new resource with the given unique name, arguments, and options.
func NewProtectionGroup(ctx *pulumi.Context,
	name string, args *ProtectionGroupArgs, opts ...pulumi.ResourceOption) (*ProtectionGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Aggregation == nil {
		return nil, errors.New("invalid value for required argument 'Aggregation'")
	}
	if args.Pattern == nil {
		return nil, errors.New("invalid value for required argument 'Pattern'")
	}
	if args.ProtectionGroupId == nil {
		return nil, errors.New("invalid value for required argument 'ProtectionGroupId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ProtectionGroup
	err := ctx.RegisterResource("aws:shield/protectionGroup:ProtectionGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProtectionGroup gets an existing ProtectionGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProtectionGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProtectionGroupState, opts ...pulumi.ResourceOption) (*ProtectionGroup, error) {
	var resource ProtectionGroup
	err := ctx.ReadResource("aws:shield/protectionGroup:ProtectionGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ProtectionGroup resources.
type protectionGroupState struct {
	// Defines how AWS Shield combines resource data for the group in order to detect, mitigate, and report events.
	Aggregation *string `pulumi:"aggregation"`
	// The Amazon Resource Names (ARNs) of the resources to include in the protection group. You must set this when you set `pattern` to ARBITRARY and you must not set it for any other `pattern` setting.
	Members []string `pulumi:"members"`
	// The criteria to use to choose the protected resources for inclusion in the group.
	Pattern *string `pulumi:"pattern"`
	// The ARN (Amazon Resource Name) of the protection group.
	ProtectionGroupArn *string `pulumi:"protectionGroupArn"`
	// The name of the protection group.
	ProtectionGroupId *string `pulumi:"protectionGroupId"`
	// The resource type to include in the protection group. You must set this when you set `pattern` to BY_RESOURCE_TYPE and you must not set it for any other `pattern` setting.
	ResourceType *string `pulumi:"resourceType"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type ProtectionGroupState struct {
	// Defines how AWS Shield combines resource data for the group in order to detect, mitigate, and report events.
	Aggregation pulumix.Input[*string]
	// The Amazon Resource Names (ARNs) of the resources to include in the protection group. You must set this when you set `pattern` to ARBITRARY and you must not set it for any other `pattern` setting.
	Members pulumix.Input[[]string]
	// The criteria to use to choose the protected resources for inclusion in the group.
	Pattern pulumix.Input[*string]
	// The ARN (Amazon Resource Name) of the protection group.
	ProtectionGroupArn pulumix.Input[*string]
	// The name of the protection group.
	ProtectionGroupId pulumix.Input[*string]
	// The resource type to include in the protection group. You must set this when you set `pattern` to BY_RESOURCE_TYPE and you must not set it for any other `pattern` setting.
	ResourceType pulumix.Input[*string]
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
}

func (ProtectionGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*protectionGroupState)(nil)).Elem()
}

type protectionGroupArgs struct {
	// Defines how AWS Shield combines resource data for the group in order to detect, mitigate, and report events.
	Aggregation string `pulumi:"aggregation"`
	// The Amazon Resource Names (ARNs) of the resources to include in the protection group. You must set this when you set `pattern` to ARBITRARY and you must not set it for any other `pattern` setting.
	Members []string `pulumi:"members"`
	// The criteria to use to choose the protected resources for inclusion in the group.
	Pattern string `pulumi:"pattern"`
	// The name of the protection group.
	ProtectionGroupId string `pulumi:"protectionGroupId"`
	// The resource type to include in the protection group. You must set this when you set `pattern` to BY_RESOURCE_TYPE and you must not set it for any other `pattern` setting.
	ResourceType *string `pulumi:"resourceType"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a ProtectionGroup resource.
type ProtectionGroupArgs struct {
	// Defines how AWS Shield combines resource data for the group in order to detect, mitigate, and report events.
	Aggregation pulumix.Input[string]
	// The Amazon Resource Names (ARNs) of the resources to include in the protection group. You must set this when you set `pattern` to ARBITRARY and you must not set it for any other `pattern` setting.
	Members pulumix.Input[[]string]
	// The criteria to use to choose the protected resources for inclusion in the group.
	Pattern pulumix.Input[string]
	// The name of the protection group.
	ProtectionGroupId pulumix.Input[string]
	// The resource type to include in the protection group. You must set this when you set `pattern` to BY_RESOURCE_TYPE and you must not set it for any other `pattern` setting.
	ResourceType pulumix.Input[*string]
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (ProtectionGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*protectionGroupArgs)(nil)).Elem()
}

type ProtectionGroupOutput struct{ *pulumi.OutputState }

func (ProtectionGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtectionGroup)(nil)).Elem()
}

func (o ProtectionGroupOutput) ToProtectionGroupOutput() ProtectionGroupOutput {
	return o
}

func (o ProtectionGroupOutput) ToProtectionGroupOutputWithContext(ctx context.Context) ProtectionGroupOutput {
	return o
}

func (o ProtectionGroupOutput) ToOutput(ctx context.Context) pulumix.Output[ProtectionGroup] {
	return pulumix.Output[ProtectionGroup]{
		OutputState: o.OutputState,
	}
}

// Defines how AWS Shield combines resource data for the group in order to detect, mitigate, and report events.
func (o ProtectionGroupOutput) Aggregation() pulumix.Output[string] {
	value := pulumix.Apply[ProtectionGroup](o, func(v ProtectionGroup) pulumix.Output[string] { return v.Aggregation })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The Amazon Resource Names (ARNs) of the resources to include in the protection group. You must set this when you set `pattern` to ARBITRARY and you must not set it for any other `pattern` setting.
func (o ProtectionGroupOutput) Members() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[ProtectionGroup](o, func(v ProtectionGroup) pulumix.ArrayOutput[string] { return v.Members })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// The criteria to use to choose the protected resources for inclusion in the group.
func (o ProtectionGroupOutput) Pattern() pulumix.Output[string] {
	value := pulumix.Apply[ProtectionGroup](o, func(v ProtectionGroup) pulumix.Output[string] { return v.Pattern })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The ARN (Amazon Resource Name) of the protection group.
func (o ProtectionGroupOutput) ProtectionGroupArn() pulumix.Output[string] {
	value := pulumix.Apply[ProtectionGroup](o, func(v ProtectionGroup) pulumix.Output[string] { return v.ProtectionGroupArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The name of the protection group.
func (o ProtectionGroupOutput) ProtectionGroupId() pulumix.Output[string] {
	value := pulumix.Apply[ProtectionGroup](o, func(v ProtectionGroup) pulumix.Output[string] { return v.ProtectionGroupId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The resource type to include in the protection group. You must set this when you set `pattern` to BY_RESOURCE_TYPE and you must not set it for any other `pattern` setting.
func (o ProtectionGroupOutput) ResourceType() pulumix.Output[*string] {
	value := pulumix.Apply[ProtectionGroup](o, func(v ProtectionGroup) pulumix.Output[*string] { return v.ResourceType })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o ProtectionGroupOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[ProtectionGroup](o, func(v ProtectionGroup) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o ProtectionGroupOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[ProtectionGroup](o, func(v ProtectionGroup) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(ProtectionGroupOutput{})
}
