// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iot

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an IoT role alias.
type RoleAlias struct {
	pulumi.CustomResourceState

	// The name of the role alias.
	Alias pulumix.Output[string] `pulumi:"alias"`
	// The ARN assigned by AWS to this role alias.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The duration of the credential, in seconds. If you do not specify a value for this setting, the default maximum of one hour is applied. This setting can have a value from 900 seconds (15 minutes) to 43200 seconds (12 hours).
	CredentialDuration pulumix.Output[*int] `pulumi:"credentialDuration"`
	// The identity of the role to which the alias refers.
	RoleArn pulumix.Output[string] `pulumi:"roleArn"`
}

// NewRoleAlias registers a new resource with the given unique name, arguments, and options.
func NewRoleAlias(ctx *pulumi.Context,
	name string, args *RoleAliasArgs, opts ...pulumi.ResourceOption) (*RoleAlias, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Alias == nil {
		return nil, errors.New("invalid value for required argument 'Alias'")
	}
	if args.RoleArn == nil {
		return nil, errors.New("invalid value for required argument 'RoleArn'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RoleAlias
	err := ctx.RegisterResource("aws:iot/roleAlias:RoleAlias", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRoleAlias gets an existing RoleAlias resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRoleAlias(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RoleAliasState, opts ...pulumi.ResourceOption) (*RoleAlias, error) {
	var resource RoleAlias
	err := ctx.ReadResource("aws:iot/roleAlias:RoleAlias", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RoleAlias resources.
type roleAliasState struct {
	// The name of the role alias.
	Alias *string `pulumi:"alias"`
	// The ARN assigned by AWS to this role alias.
	Arn *string `pulumi:"arn"`
	// The duration of the credential, in seconds. If you do not specify a value for this setting, the default maximum of one hour is applied. This setting can have a value from 900 seconds (15 minutes) to 43200 seconds (12 hours).
	CredentialDuration *int `pulumi:"credentialDuration"`
	// The identity of the role to which the alias refers.
	RoleArn *string `pulumi:"roleArn"`
}

type RoleAliasState struct {
	// The name of the role alias.
	Alias pulumix.Input[*string]
	// The ARN assigned by AWS to this role alias.
	Arn pulumix.Input[*string]
	// The duration of the credential, in seconds. If you do not specify a value for this setting, the default maximum of one hour is applied. This setting can have a value from 900 seconds (15 minutes) to 43200 seconds (12 hours).
	CredentialDuration pulumix.Input[*int]
	// The identity of the role to which the alias refers.
	RoleArn pulumix.Input[*string]
}

func (RoleAliasState) ElementType() reflect.Type {
	return reflect.TypeOf((*roleAliasState)(nil)).Elem()
}

type roleAliasArgs struct {
	// The name of the role alias.
	Alias string `pulumi:"alias"`
	// The duration of the credential, in seconds. If you do not specify a value for this setting, the default maximum of one hour is applied. This setting can have a value from 900 seconds (15 minutes) to 43200 seconds (12 hours).
	CredentialDuration *int `pulumi:"credentialDuration"`
	// The identity of the role to which the alias refers.
	RoleArn string `pulumi:"roleArn"`
}

// The set of arguments for constructing a RoleAlias resource.
type RoleAliasArgs struct {
	// The name of the role alias.
	Alias pulumix.Input[string]
	// The duration of the credential, in seconds. If you do not specify a value for this setting, the default maximum of one hour is applied. This setting can have a value from 900 seconds (15 minutes) to 43200 seconds (12 hours).
	CredentialDuration pulumix.Input[*int]
	// The identity of the role to which the alias refers.
	RoleArn pulumix.Input[string]
}

func (RoleAliasArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*roleAliasArgs)(nil)).Elem()
}

type RoleAliasOutput struct{ *pulumi.OutputState }

func (RoleAliasOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoleAlias)(nil)).Elem()
}

func (o RoleAliasOutput) ToRoleAliasOutput() RoleAliasOutput {
	return o
}

func (o RoleAliasOutput) ToRoleAliasOutputWithContext(ctx context.Context) RoleAliasOutput {
	return o
}

func (o RoleAliasOutput) ToOutput(ctx context.Context) pulumix.Output[RoleAlias] {
	return pulumix.Output[RoleAlias]{
		OutputState: o.OutputState,
	}
}

// The name of the role alias.
func (o RoleAliasOutput) Alias() pulumix.Output[string] {
	value := pulumix.Apply[RoleAlias](o, func(v RoleAlias) pulumix.Output[string] { return v.Alias })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The ARN assigned by AWS to this role alias.
func (o RoleAliasOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[RoleAlias](o, func(v RoleAlias) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The duration of the credential, in seconds. If you do not specify a value for this setting, the default maximum of one hour is applied. This setting can have a value from 900 seconds (15 minutes) to 43200 seconds (12 hours).
func (o RoleAliasOutput) CredentialDuration() pulumix.Output[*int] {
	value := pulumix.Apply[RoleAlias](o, func(v RoleAlias) pulumix.Output[*int] { return v.CredentialDuration })
	return pulumix.Flatten[*int, pulumix.Output[*int]](value)
}

// The identity of the role to which the alias refers.
func (o RoleAliasOutput) RoleArn() pulumix.Output[string] {
	value := pulumix.Apply[RoleAlias](o, func(v RoleAlias) pulumix.Output[string] { return v.RoleArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(RoleAliasOutput{})
}
