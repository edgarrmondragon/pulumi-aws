// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package signer

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides information about a Signer Signing Job.
func LookupSigningJob(ctx *pulumi.Context, args *LookupSigningJobArgs, opts ...pulumi.InvokeOption) (*LookupSigningJobResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSigningJobResult
	err := ctx.Invoke("aws:signer/getSigningJob:getSigningJob", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSigningJob.
type LookupSigningJobArgs struct {
	// ID of the signing job on output.
	JobId string `pulumi:"jobId"`
}

// A collection of values returned by getSigningJob.
type LookupSigningJobResult struct {
	// Date and time in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) that the signing job was completed.
	CompletedAt string `pulumi:"completedAt"`
	// Date and time in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) that the signing job was created.
	CreatedAt string `pulumi:"createdAt"`
	// The provider-assigned unique ID for this managed resource.
	Id    string `pulumi:"id"`
	JobId string `pulumi:"jobId"`
	// IAM entity that initiated the signing job.
	JobInvoker string `pulumi:"jobInvoker"`
	// AWS account ID of the job owner.
	JobOwner string `pulumi:"jobOwner"`
	// A human-readable name for the signing platform associated with the signing job.
	PlatformDisplayName string `pulumi:"platformDisplayName"`
	// Platform to which your signed code image will be distributed.
	PlatformId string `pulumi:"platformId"`
	// Name of the profile that initiated the signing operation.
	ProfileName string `pulumi:"profileName"`
	// Version of the signing profile used to initiate the signing job.
	ProfileVersion string `pulumi:"profileVersion"`
	// IAM principal that requested the signing job.
	RequestedBy string `pulumi:"requestedBy"`
	// Revocation record if the signature generated by the signing job has been revoked. Contains a timestamp and the ID of the IAM entity that revoked the signature.
	RevocationRecords []GetSigningJobRevocationRecord `pulumi:"revocationRecords"`
	// The time when the signature of a signing job expires.
	SignatureExpiresAt string `pulumi:"signatureExpiresAt"`
	// Name of the S3 bucket where the signed code image is saved by code signing.
	SignedObjects []GetSigningJobSignedObject `pulumi:"signedObjects"`
	// Object that contains the name of your S3 bucket or your raw code.
	Sources []GetSigningJobSource `pulumi:"sources"`
	// Status of the signing job.
	Status string `pulumi:"status"`
	// String value that contains the status reason.
	StatusReason string `pulumi:"statusReason"`
}

func LookupSigningJobOutput(ctx *pulumi.Context, args LookupSigningJobOutputArgs, opts ...pulumi.InvokeOption) LookupSigningJobResultOutput {
	outputResult := pulumix.ApplyErr[*LookupSigningJobArgs](args.ToOutput(), func(plainArgs *LookupSigningJobArgs) (*LookupSigningJobResult, error) {
		return LookupSigningJob(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[LookupSigningJobResultOutput, *LookupSigningJobResult](outputResult)
}

// A collection of arguments for invoking getSigningJob.
type LookupSigningJobOutputArgs struct {
	// ID of the signing job on output.
	JobId pulumix.Input[string] `pulumi:"jobId"`
}

func (args LookupSigningJobOutputArgs) ToOutput() pulumix.Output[*LookupSigningJobArgs] {
	allArgs := pulumix.All(
		args.JobId.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *LookupSigningJobArgs {
		return &LookupSigningJobArgs{
			JobId: resolvedArgs[0].(string),
		}
	})
}

type LookupSigningJobResultOutput struct{ *pulumi.OutputState }

func (LookupSigningJobResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSigningJobResult)(nil)).Elem()
}

func (o LookupSigningJobResultOutput) ToOutput(context.Context) pulumix.Output[*LookupSigningJobResult] {
	return pulumix.Output[*LookupSigningJobResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupSigningJobResultOutput) CompletedAt() pulumix.Output[string] {
	return pulumix.Apply[*LookupSigningJobResult](o, func(v *LookupSigningJobResult) string { return v.CompletedAt })
}

func (o LookupSigningJobResultOutput) CreatedAt() pulumix.Output[string] {
	return pulumix.Apply[*LookupSigningJobResult](o, func(v *LookupSigningJobResult) string { return v.CreatedAt })
}

func (o LookupSigningJobResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*LookupSigningJobResult](o, func(v *LookupSigningJobResult) string { return v.Id })
}

func (o LookupSigningJobResultOutput) JobId() pulumix.Output[string] {
	return pulumix.Apply[*LookupSigningJobResult](o, func(v *LookupSigningJobResult) string { return v.JobId })
}

func (o LookupSigningJobResultOutput) JobInvoker() pulumix.Output[string] {
	return pulumix.Apply[*LookupSigningJobResult](o, func(v *LookupSigningJobResult) string { return v.JobInvoker })
}

func (o LookupSigningJobResultOutput) JobOwner() pulumix.Output[string] {
	return pulumix.Apply[*LookupSigningJobResult](o, func(v *LookupSigningJobResult) string { return v.JobOwner })
}

func (o LookupSigningJobResultOutput) PlatformDisplayName() pulumix.Output[string] {
	return pulumix.Apply[*LookupSigningJobResult](o, func(v *LookupSigningJobResult) string { return v.PlatformDisplayName })
}

func (o LookupSigningJobResultOutput) PlatformId() pulumix.Output[string] {
	return pulumix.Apply[*LookupSigningJobResult](o, func(v *LookupSigningJobResult) string { return v.PlatformId })
}

func (o LookupSigningJobResultOutput) ProfileName() pulumix.Output[string] {
	return pulumix.Apply[*LookupSigningJobResult](o, func(v *LookupSigningJobResult) string { return v.ProfileName })
}

func (o LookupSigningJobResultOutput) ProfileVersion() pulumix.Output[string] {
	return pulumix.Apply[*LookupSigningJobResult](o, func(v *LookupSigningJobResult) string { return v.ProfileVersion })
}

func (o LookupSigningJobResultOutput) RequestedBy() pulumix.Output[string] {
	return pulumix.Apply[*LookupSigningJobResult](o, func(v *LookupSigningJobResult) string { return v.RequestedBy })
}

func (o LookupSigningJobResultOutput) RevocationRecords() pulumix.GArrayOutput[GetSigningJobRevocationRecord, GetSigningJobRevocationRecordOutput] {
	value := pulumix.Apply[*LookupSigningJobResult](o, func(v *LookupSigningJobResult) []GetSigningJobRevocationRecord { return v.RevocationRecords })
	return pulumix.GArrayOutput[GetSigningJobRevocationRecord, GetSigningJobRevocationRecordOutput]{
		OutputState: value.OutputState,
	}
}

func (o LookupSigningJobResultOutput) SignatureExpiresAt() pulumix.Output[string] {
	return pulumix.Apply[*LookupSigningJobResult](o, func(v *LookupSigningJobResult) string { return v.SignatureExpiresAt })
}

func (o LookupSigningJobResultOutput) SignedObjects() pulumix.GArrayOutput[GetSigningJobSignedObject, GetSigningJobSignedObjectOutput] {
	value := pulumix.Apply[*LookupSigningJobResult](o, func(v *LookupSigningJobResult) []GetSigningJobSignedObject { return v.SignedObjects })
	return pulumix.GArrayOutput[GetSigningJobSignedObject, GetSigningJobSignedObjectOutput]{
		OutputState: value.OutputState,
	}
}

func (o LookupSigningJobResultOutput) Sources() pulumix.GArrayOutput[GetSigningJobSource, GetSigningJobSourceOutput] {
	value := pulumix.Apply[*LookupSigningJobResult](o, func(v *LookupSigningJobResult) []GetSigningJobSource { return v.Sources })
	return pulumix.GArrayOutput[GetSigningJobSource, GetSigningJobSourceOutput]{
		OutputState: value.OutputState,
	}
}

func (o LookupSigningJobResultOutput) Status() pulumix.Output[string] {
	return pulumix.Apply[*LookupSigningJobResult](o, func(v *LookupSigningJobResult) string { return v.Status })
}

func (o LookupSigningJobResultOutput) StatusReason() pulumix.Output[string] {
	return pulumix.Apply[*LookupSigningJobResult](o, func(v *LookupSigningJobResult) string { return v.StatusReason })
}
