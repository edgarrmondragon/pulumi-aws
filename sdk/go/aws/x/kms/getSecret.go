// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kms

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

func GetSecret(ctx *pulumi.Context, args *GetSecretArgs, opts ...pulumi.InvokeOption) (*GetSecretResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSecretResult
	err := ctx.Invoke("aws:kms/getSecret:getSecret", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSecret.
type GetSecretArgs struct {
	Secrets []GetSecretSecret `pulumi:"secrets"`
}

// A collection of values returned by getSecret.
type GetSecretResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id      string            `pulumi:"id"`
	Secrets []GetSecretSecret `pulumi:"secrets"`
}

func GetSecretOutput(ctx *pulumi.Context, args GetSecretOutputArgs, opts ...pulumi.InvokeOption) GetSecretResultOutput {
	outputResult := pulumix.ApplyErr[*GetSecretArgs](args.ToOutput(), func(plainArgs *GetSecretArgs) (*GetSecretResult, error) {
		return GetSecret(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[GetSecretResultOutput, *GetSecretResult](outputResult)
}

// A collection of arguments for invoking getSecret.
type GetSecretOutputArgs struct {
	Secrets pulumix.Input[[]*GetSecretSecretArgs] `pulumi:"secrets"`
}

func (args GetSecretOutputArgs) ToOutput() pulumix.Output[*GetSecretArgs] {
	allArgs := pulumix.All(
		args.Secrets.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *GetSecretArgs {
		return &GetSecretArgs{
			Secrets: resolvedArgs[0].([]GetSecretSecret),
		}
	})
}

type GetSecretResultOutput struct{ *pulumi.OutputState }

func (GetSecretResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretResult)(nil)).Elem()
}

func (o GetSecretResultOutput) ToOutput(context.Context) pulumix.Output[*GetSecretResult] {
	return pulumix.Output[*GetSecretResult]{
		OutputState: o.OutputState,
	}
}

func (o GetSecretResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*GetSecretResult](o, func(v *GetSecretResult) string { return v.Id })
}

func (o GetSecretResultOutput) Secrets() pulumix.GArrayOutput[GetSecretSecret, GetSecretSecretOutput] {
	value := pulumix.Apply[*GetSecretResult](o, func(v *GetSecretResult) []GetSecretSecret { return v.Secrets })
	return pulumix.GArrayOutput[GetSecretSecret, GetSecretSecretOutput]{
		OutputState: value.OutputState,
	}
}
