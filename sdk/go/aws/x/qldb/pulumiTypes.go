// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package qldb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type StreamKinesisConfiguration struct {
	// Enables QLDB to publish multiple data records in a single Kinesis Data Streams record, increasing the number of records sent per API call. Default: `true`.
	AggregationEnabled *bool `pulumi:"aggregationEnabled"`
	// The Amazon Resource Name (ARN) of the Kinesis Data Streams resource.
	StreamArn string `pulumi:"streamArn"`
}

type StreamKinesisConfigurationArgs struct {
	// Enables QLDB to publish multiple data records in a single Kinesis Data Streams record, increasing the number of records sent per API call. Default: `true`.
	AggregationEnabled pulumix.Input[*bool] `pulumi:"aggregationEnabled"`
	// The Amazon Resource Name (ARN) of the Kinesis Data Streams resource.
	StreamArn pulumix.Input[string] `pulumi:"streamArn"`
}

func (StreamKinesisConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamKinesisConfiguration)(nil)).Elem()
}

func (i StreamKinesisConfigurationArgs) ToStreamKinesisConfigurationOutput() StreamKinesisConfigurationOutput {
	return i.ToStreamKinesisConfigurationOutputWithContext(context.Background())
}

func (i StreamKinesisConfigurationArgs) ToStreamKinesisConfigurationOutputWithContext(ctx context.Context) StreamKinesisConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamKinesisConfigurationOutput)
}

func (i *StreamKinesisConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*StreamKinesisConfigurationArgs] {
	return pulumix.Val(i)
}

type StreamKinesisConfigurationOutput struct{ *pulumi.OutputState }

func (StreamKinesisConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamKinesisConfiguration)(nil)).Elem()
}

func (o StreamKinesisConfigurationOutput) ToStreamKinesisConfigurationOutput() StreamKinesisConfigurationOutput {
	return o
}

func (o StreamKinesisConfigurationOutput) ToStreamKinesisConfigurationOutputWithContext(ctx context.Context) StreamKinesisConfigurationOutput {
	return o
}

func (o StreamKinesisConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[StreamKinesisConfiguration] {
	return pulumix.Output[StreamKinesisConfiguration]{
		OutputState: o.OutputState,
	}
}

// Enables QLDB to publish multiple data records in a single Kinesis Data Streams record, increasing the number of records sent per API call. Default: `true`.
func (o StreamKinesisConfigurationOutput) AggregationEnabled() pulumix.Output[*bool] {
	return pulumix.Apply[StreamKinesisConfiguration](o, func(v StreamKinesisConfiguration) *bool { return v.AggregationEnabled })
}

// The Amazon Resource Name (ARN) of the Kinesis Data Streams resource.
func (o StreamKinesisConfigurationOutput) StreamArn() pulumix.Output[string] {
	return pulumix.Apply[StreamKinesisConfiguration](o, func(v StreamKinesisConfiguration) string { return v.StreamArn })
}

func init() {
	pulumi.RegisterOutputType(StreamKinesisConfigurationOutput{})
}
