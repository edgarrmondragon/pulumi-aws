// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package chime

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Resource for managing an AWS Chime SDK Voice Profile Domain.
type SdkvoiceVoiceProfileDomain struct {
	pulumi.CustomResourceState

	// ARN of the Voice Profile Domain.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// Description of Voice Profile Domain.
	Description pulumix.Output[*string] `pulumi:"description"`
	// Name of Voice Profile Domain.
	Name pulumix.Output[string] `pulumi:"name"`
	// Configuration for server side encryption.
	ServerSideEncryptionConfiguration pulumix.GPtrOutput[SdkvoiceVoiceProfileDomainServerSideEncryptionConfiguration, SdkvoiceVoiceProfileDomainServerSideEncryptionConfigurationOutput] `pulumi:"serverSideEncryptionConfiguration"`
	Tags                              pulumix.MapOutput[string]                                                                                                                          `pulumi:"tags"`
	TagsAll                           pulumix.MapOutput[string]                                                                                                                          `pulumi:"tagsAll"`
}

// NewSdkvoiceVoiceProfileDomain registers a new resource with the given unique name, arguments, and options.
func NewSdkvoiceVoiceProfileDomain(ctx *pulumi.Context,
	name string, args *SdkvoiceVoiceProfileDomainArgs, opts ...pulumi.ResourceOption) (*SdkvoiceVoiceProfileDomain, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ServerSideEncryptionConfiguration == nil {
		return nil, errors.New("invalid value for required argument 'ServerSideEncryptionConfiguration'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SdkvoiceVoiceProfileDomain
	err := ctx.RegisterResource("aws:chime/sdkvoiceVoiceProfileDomain:SdkvoiceVoiceProfileDomain", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSdkvoiceVoiceProfileDomain gets an existing SdkvoiceVoiceProfileDomain resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSdkvoiceVoiceProfileDomain(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SdkvoiceVoiceProfileDomainState, opts ...pulumi.ResourceOption) (*SdkvoiceVoiceProfileDomain, error) {
	var resource SdkvoiceVoiceProfileDomain
	err := ctx.ReadResource("aws:chime/sdkvoiceVoiceProfileDomain:SdkvoiceVoiceProfileDomain", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SdkvoiceVoiceProfileDomain resources.
type sdkvoiceVoiceProfileDomainState struct {
	// ARN of the Voice Profile Domain.
	Arn *string `pulumi:"arn"`
	// Description of Voice Profile Domain.
	Description *string `pulumi:"description"`
	// Name of Voice Profile Domain.
	Name *string `pulumi:"name"`
	// Configuration for server side encryption.
	ServerSideEncryptionConfiguration *SdkvoiceVoiceProfileDomainServerSideEncryptionConfiguration `pulumi:"serverSideEncryptionConfiguration"`
	Tags                              map[string]string                                            `pulumi:"tags"`
	TagsAll                           map[string]string                                            `pulumi:"tagsAll"`
}

type SdkvoiceVoiceProfileDomainState struct {
	// ARN of the Voice Profile Domain.
	Arn pulumix.Input[*string]
	// Description of Voice Profile Domain.
	Description pulumix.Input[*string]
	// Name of Voice Profile Domain.
	Name pulumix.Input[*string]
	// Configuration for server side encryption.
	ServerSideEncryptionConfiguration pulumix.Input[*SdkvoiceVoiceProfileDomainServerSideEncryptionConfigurationArgs]
	Tags                              pulumix.Input[map[string]string]
	TagsAll                           pulumix.Input[map[string]string]
}

func (SdkvoiceVoiceProfileDomainState) ElementType() reflect.Type {
	return reflect.TypeOf((*sdkvoiceVoiceProfileDomainState)(nil)).Elem()
}

type sdkvoiceVoiceProfileDomainArgs struct {
	// Description of Voice Profile Domain.
	Description *string `pulumi:"description"`
	// Name of Voice Profile Domain.
	Name *string `pulumi:"name"`
	// Configuration for server side encryption.
	ServerSideEncryptionConfiguration SdkvoiceVoiceProfileDomainServerSideEncryptionConfiguration `pulumi:"serverSideEncryptionConfiguration"`
	Tags                              map[string]string                                           `pulumi:"tags"`
}

// The set of arguments for constructing a SdkvoiceVoiceProfileDomain resource.
type SdkvoiceVoiceProfileDomainArgs struct {
	// Description of Voice Profile Domain.
	Description pulumix.Input[*string]
	// Name of Voice Profile Domain.
	Name pulumix.Input[*string]
	// Configuration for server side encryption.
	ServerSideEncryptionConfiguration pulumix.Input[*SdkvoiceVoiceProfileDomainServerSideEncryptionConfigurationArgs]
	Tags                              pulumix.Input[map[string]string]
}

func (SdkvoiceVoiceProfileDomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sdkvoiceVoiceProfileDomainArgs)(nil)).Elem()
}

type SdkvoiceVoiceProfileDomainOutput struct{ *pulumi.OutputState }

func (SdkvoiceVoiceProfileDomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SdkvoiceVoiceProfileDomain)(nil)).Elem()
}

func (o SdkvoiceVoiceProfileDomainOutput) ToSdkvoiceVoiceProfileDomainOutput() SdkvoiceVoiceProfileDomainOutput {
	return o
}

func (o SdkvoiceVoiceProfileDomainOutput) ToSdkvoiceVoiceProfileDomainOutputWithContext(ctx context.Context) SdkvoiceVoiceProfileDomainOutput {
	return o
}

func (o SdkvoiceVoiceProfileDomainOutput) ToOutput(ctx context.Context) pulumix.Output[SdkvoiceVoiceProfileDomain] {
	return pulumix.Output[SdkvoiceVoiceProfileDomain]{
		OutputState: o.OutputState,
	}
}

// ARN of the Voice Profile Domain.
func (o SdkvoiceVoiceProfileDomainOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[SdkvoiceVoiceProfileDomain](o, func(v SdkvoiceVoiceProfileDomain) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Description of Voice Profile Domain.
func (o SdkvoiceVoiceProfileDomainOutput) Description() pulumix.Output[*string] {
	value := pulumix.Apply[SdkvoiceVoiceProfileDomain](o, func(v SdkvoiceVoiceProfileDomain) pulumix.Output[*string] { return v.Description })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Name of Voice Profile Domain.
func (o SdkvoiceVoiceProfileDomainOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[SdkvoiceVoiceProfileDomain](o, func(v SdkvoiceVoiceProfileDomain) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Configuration for server side encryption.
func (o SdkvoiceVoiceProfileDomainOutput) ServerSideEncryptionConfiguration() pulumix.GPtrOutput[SdkvoiceVoiceProfileDomainServerSideEncryptionConfiguration, SdkvoiceVoiceProfileDomainServerSideEncryptionConfigurationOutput] {
	value := pulumix.Apply[SdkvoiceVoiceProfileDomain](o, func(v SdkvoiceVoiceProfileDomain) pulumix.GPtrOutput[SdkvoiceVoiceProfileDomainServerSideEncryptionConfiguration, SdkvoiceVoiceProfileDomainServerSideEncryptionConfigurationOutput] {
		return v.ServerSideEncryptionConfiguration
	})
	unwrapped := pulumix.Flatten[*SdkvoiceVoiceProfileDomainServerSideEncryptionConfiguration, pulumix.GPtrOutput[SdkvoiceVoiceProfileDomainServerSideEncryptionConfiguration, SdkvoiceVoiceProfileDomainServerSideEncryptionConfigurationOutput]](value)
	return pulumix.GPtrOutput[SdkvoiceVoiceProfileDomainServerSideEncryptionConfiguration, SdkvoiceVoiceProfileDomainServerSideEncryptionConfigurationOutput]{OutputState: unwrapped.OutputState}
}

func (o SdkvoiceVoiceProfileDomainOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[SdkvoiceVoiceProfileDomain](o, func(v SdkvoiceVoiceProfileDomain) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func (o SdkvoiceVoiceProfileDomainOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[SdkvoiceVoiceProfileDomain](o, func(v SdkvoiceVoiceProfileDomain) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(SdkvoiceVoiceProfileDomainOutput{})
}
