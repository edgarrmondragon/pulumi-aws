// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package amp

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manages an Amazon Managed Service for Prometheus (AMP) Workspace.
type Workspace struct {
	pulumi.CustomResourceState

	// The alias of the prometheus workspace. See more [in AWS Docs](https://docs.aws.amazon.com/prometheus/latest/userguide/AMP-onboard-create-workspace.html).
	Alias pulumix.Output[*string] `pulumi:"alias"`
	// Amazon Resource Name (ARN) of the workspace.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// Logging configuration for the workspace. See Logging Configuration below for details.
	LoggingConfiguration pulumix.GPtrOutput[WorkspaceLoggingConfiguration, WorkspaceLoggingConfigurationOutput] `pulumi:"loggingConfiguration"`
	// Prometheus endpoint available for this workspace.
	PrometheusEndpoint pulumix.Output[string] `pulumi:"prometheusEndpoint"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
}

// NewWorkspace registers a new resource with the given unique name, arguments, and options.
func NewWorkspace(ctx *pulumi.Context,
	name string, args *WorkspaceArgs, opts ...pulumi.ResourceOption) (*Workspace, error) {
	if args == nil {
		args = &WorkspaceArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Workspace
	err := ctx.RegisterResource("aws:amp/workspace:Workspace", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkspace gets an existing Workspace resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkspace(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkspaceState, opts ...pulumi.ResourceOption) (*Workspace, error) {
	var resource Workspace
	err := ctx.ReadResource("aws:amp/workspace:Workspace", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Workspace resources.
type workspaceState struct {
	// The alias of the prometheus workspace. See more [in AWS Docs](https://docs.aws.amazon.com/prometheus/latest/userguide/AMP-onboard-create-workspace.html).
	Alias *string `pulumi:"alias"`
	// Amazon Resource Name (ARN) of the workspace.
	Arn *string `pulumi:"arn"`
	// Logging configuration for the workspace. See Logging Configuration below for details.
	LoggingConfiguration *WorkspaceLoggingConfiguration `pulumi:"loggingConfiguration"`
	// Prometheus endpoint available for this workspace.
	PrometheusEndpoint *string `pulumi:"prometheusEndpoint"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type WorkspaceState struct {
	// The alias of the prometheus workspace. See more [in AWS Docs](https://docs.aws.amazon.com/prometheus/latest/userguide/AMP-onboard-create-workspace.html).
	Alias pulumix.Input[*string]
	// Amazon Resource Name (ARN) of the workspace.
	Arn pulumix.Input[*string]
	// Logging configuration for the workspace. See Logging Configuration below for details.
	LoggingConfiguration pulumix.Input[*WorkspaceLoggingConfigurationArgs]
	// Prometheus endpoint available for this workspace.
	PrometheusEndpoint pulumix.Input[*string]
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
}

func (WorkspaceState) ElementType() reflect.Type {
	return reflect.TypeOf((*workspaceState)(nil)).Elem()
}

type workspaceArgs struct {
	// The alias of the prometheus workspace. See more [in AWS Docs](https://docs.aws.amazon.com/prometheus/latest/userguide/AMP-onboard-create-workspace.html).
	Alias *string `pulumi:"alias"`
	// Logging configuration for the workspace. See Logging Configuration below for details.
	LoggingConfiguration *WorkspaceLoggingConfiguration `pulumi:"loggingConfiguration"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Workspace resource.
type WorkspaceArgs struct {
	// The alias of the prometheus workspace. See more [in AWS Docs](https://docs.aws.amazon.com/prometheus/latest/userguide/AMP-onboard-create-workspace.html).
	Alias pulumix.Input[*string]
	// Logging configuration for the workspace. See Logging Configuration below for details.
	LoggingConfiguration pulumix.Input[*WorkspaceLoggingConfigurationArgs]
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (WorkspaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workspaceArgs)(nil)).Elem()
}

type WorkspaceOutput struct{ *pulumi.OutputState }

func (WorkspaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Workspace)(nil)).Elem()
}

func (o WorkspaceOutput) ToWorkspaceOutput() WorkspaceOutput {
	return o
}

func (o WorkspaceOutput) ToWorkspaceOutputWithContext(ctx context.Context) WorkspaceOutput {
	return o
}

func (o WorkspaceOutput) ToOutput(ctx context.Context) pulumix.Output[Workspace] {
	return pulumix.Output[Workspace]{
		OutputState: o.OutputState,
	}
}

// The alias of the prometheus workspace. See more [in AWS Docs](https://docs.aws.amazon.com/prometheus/latest/userguide/AMP-onboard-create-workspace.html).
func (o WorkspaceOutput) Alias() pulumix.Output[*string] {
	value := pulumix.Apply[Workspace](o, func(v Workspace) pulumix.Output[*string] { return v.Alias })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Amazon Resource Name (ARN) of the workspace.
func (o WorkspaceOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Workspace](o, func(v Workspace) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Logging configuration for the workspace. See Logging Configuration below for details.
func (o WorkspaceOutput) LoggingConfiguration() pulumix.GPtrOutput[WorkspaceLoggingConfiguration, WorkspaceLoggingConfigurationOutput] {
	value := pulumix.Apply[Workspace](o, func(v Workspace) pulumix.GPtrOutput[WorkspaceLoggingConfiguration, WorkspaceLoggingConfigurationOutput] {
		return v.LoggingConfiguration
	})
	unwrapped := pulumix.Flatten[*WorkspaceLoggingConfiguration, pulumix.GPtrOutput[WorkspaceLoggingConfiguration, WorkspaceLoggingConfigurationOutput]](value)
	return pulumix.GPtrOutput[WorkspaceLoggingConfiguration, WorkspaceLoggingConfigurationOutput]{OutputState: unwrapped.OutputState}
}

// Prometheus endpoint available for this workspace.
func (o WorkspaceOutput) PrometheusEndpoint() pulumix.Output[string] {
	value := pulumix.Apply[Workspace](o, func(v Workspace) pulumix.Output[string] { return v.PrometheusEndpoint })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o WorkspaceOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Workspace](o, func(v Workspace) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o WorkspaceOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[Workspace](o, func(v Workspace) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(WorkspaceOutput{})
}
