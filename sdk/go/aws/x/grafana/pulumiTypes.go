// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package grafana

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type WorkspaceNetworkAccessControl struct {
	// An array of prefix list IDs.
	PrefixListIds []string `pulumi:"prefixListIds"`
	// An array of Amazon VPC endpoint IDs for the workspace. The only VPC endpoints that can be specified here are interface VPC endpoints for Grafana workspaces (using the com.amazonaws.[region].grafana-workspace service endpoint). Other VPC endpoints will be ignored.
	VpceIds []string `pulumi:"vpceIds"`
}

type WorkspaceNetworkAccessControlArgs struct {
	// An array of prefix list IDs.
	PrefixListIds pulumix.Input[[]string] `pulumi:"prefixListIds"`
	// An array of Amazon VPC endpoint IDs for the workspace. The only VPC endpoints that can be specified here are interface VPC endpoints for Grafana workspaces (using the com.amazonaws.[region].grafana-workspace service endpoint). Other VPC endpoints will be ignored.
	VpceIds pulumix.Input[[]string] `pulumi:"vpceIds"`
}

func (WorkspaceNetworkAccessControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceNetworkAccessControl)(nil)).Elem()
}

func (i WorkspaceNetworkAccessControlArgs) ToWorkspaceNetworkAccessControlOutput() WorkspaceNetworkAccessControlOutput {
	return i.ToWorkspaceNetworkAccessControlOutputWithContext(context.Background())
}

func (i WorkspaceNetworkAccessControlArgs) ToWorkspaceNetworkAccessControlOutputWithContext(ctx context.Context) WorkspaceNetworkAccessControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceNetworkAccessControlOutput)
}

func (i *WorkspaceNetworkAccessControlArgs) ToOutput(ctx context.Context) pulumix.Output[*WorkspaceNetworkAccessControlArgs] {
	return pulumix.Val(i)
}

type WorkspaceNetworkAccessControlOutput struct{ *pulumi.OutputState }

func (WorkspaceNetworkAccessControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceNetworkAccessControl)(nil)).Elem()
}

func (o WorkspaceNetworkAccessControlOutput) ToWorkspaceNetworkAccessControlOutput() WorkspaceNetworkAccessControlOutput {
	return o
}

func (o WorkspaceNetworkAccessControlOutput) ToWorkspaceNetworkAccessControlOutputWithContext(ctx context.Context) WorkspaceNetworkAccessControlOutput {
	return o
}

func (o WorkspaceNetworkAccessControlOutput) ToOutput(ctx context.Context) pulumix.Output[WorkspaceNetworkAccessControl] {
	return pulumix.Output[WorkspaceNetworkAccessControl]{
		OutputState: o.OutputState,
	}
}

// An array of prefix list IDs.
func (o WorkspaceNetworkAccessControlOutput) PrefixListIds() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[WorkspaceNetworkAccessControl](o, func(v WorkspaceNetworkAccessControl) []string { return v.PrefixListIds })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// An array of Amazon VPC endpoint IDs for the workspace. The only VPC endpoints that can be specified here are interface VPC endpoints for Grafana workspaces (using the com.amazonaws.[region].grafana-workspace service endpoint). Other VPC endpoints will be ignored.
func (o WorkspaceNetworkAccessControlOutput) VpceIds() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[WorkspaceNetworkAccessControl](o, func(v WorkspaceNetworkAccessControl) []string { return v.VpceIds })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type WorkspaceVpcConfiguration struct {
	// The list of Amazon EC2 security group IDs attached to the Amazon VPC for your Grafana workspace to connect.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// The list of Amazon EC2 subnet IDs created in the Amazon VPC for your Grafana workspace to connect.
	SubnetIds []string `pulumi:"subnetIds"`
}

type WorkspaceVpcConfigurationArgs struct {
	// The list of Amazon EC2 security group IDs attached to the Amazon VPC for your Grafana workspace to connect.
	SecurityGroupIds pulumix.Input[[]string] `pulumi:"securityGroupIds"`
	// The list of Amazon EC2 subnet IDs created in the Amazon VPC for your Grafana workspace to connect.
	SubnetIds pulumix.Input[[]string] `pulumi:"subnetIds"`
}

func (WorkspaceVpcConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceVpcConfiguration)(nil)).Elem()
}

func (i WorkspaceVpcConfigurationArgs) ToWorkspaceVpcConfigurationOutput() WorkspaceVpcConfigurationOutput {
	return i.ToWorkspaceVpcConfigurationOutputWithContext(context.Background())
}

func (i WorkspaceVpcConfigurationArgs) ToWorkspaceVpcConfigurationOutputWithContext(ctx context.Context) WorkspaceVpcConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceVpcConfigurationOutput)
}

func (i *WorkspaceVpcConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*WorkspaceVpcConfigurationArgs] {
	return pulumix.Val(i)
}

type WorkspaceVpcConfigurationOutput struct{ *pulumi.OutputState }

func (WorkspaceVpcConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceVpcConfiguration)(nil)).Elem()
}

func (o WorkspaceVpcConfigurationOutput) ToWorkspaceVpcConfigurationOutput() WorkspaceVpcConfigurationOutput {
	return o
}

func (o WorkspaceVpcConfigurationOutput) ToWorkspaceVpcConfigurationOutputWithContext(ctx context.Context) WorkspaceVpcConfigurationOutput {
	return o
}

func (o WorkspaceVpcConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[WorkspaceVpcConfiguration] {
	return pulumix.Output[WorkspaceVpcConfiguration]{
		OutputState: o.OutputState,
	}
}

// The list of Amazon EC2 security group IDs attached to the Amazon VPC for your Grafana workspace to connect.
func (o WorkspaceVpcConfigurationOutput) SecurityGroupIds() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[WorkspaceVpcConfiguration](o, func(v WorkspaceVpcConfiguration) []string { return v.SecurityGroupIds })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// The list of Amazon EC2 subnet IDs created in the Amazon VPC for your Grafana workspace to connect.
func (o WorkspaceVpcConfigurationOutput) SubnetIds() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[WorkspaceVpcConfiguration](o, func(v WorkspaceVpcConfiguration) []string { return v.SubnetIds })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func init() {
	pulumi.RegisterOutputType(WorkspaceNetworkAccessControlOutput{})
	pulumi.RegisterOutputType(WorkspaceVpcConfigurationOutput{})
}
