// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package amp

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides the aliases, ARNs, and workspace IDs of Amazon Prometheus workspaces.
func GetWorkspaces(ctx *pulumi.Context, args *GetWorkspacesArgs, opts ...pulumi.InvokeOption) (*GetWorkspacesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetWorkspacesResult
	err := ctx.Invoke("aws:amp/getWorkspaces:getWorkspaces", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getWorkspaces.
type GetWorkspacesArgs struct {
	// Limits results to workspaces with aliases that begin with this value.
	AliasPrefix *string `pulumi:"aliasPrefix"`
}

// A collection of values returned by getWorkspaces.
type GetWorkspacesResult struct {
	AliasPrefix *string `pulumi:"aliasPrefix"`
	// List of aliases of the matched Prometheus workspaces.
	Aliases []string `pulumi:"aliases"`
	// List of ARNs of the matched Prometheus workspaces.
	Arns []string `pulumi:"arns"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// List of workspace IDs of the matched Prometheus workspaces.
	WorkspaceIds []string `pulumi:"workspaceIds"`
}

func GetWorkspacesOutput(ctx *pulumi.Context, args GetWorkspacesOutputArgs, opts ...pulumi.InvokeOption) GetWorkspacesResultOutput {
	outputResult := pulumix.ApplyErr[*GetWorkspacesArgs](args.ToOutput(), func(plainArgs *GetWorkspacesArgs) (*GetWorkspacesResult, error) {
		return GetWorkspaces(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[GetWorkspacesResultOutput, *GetWorkspacesResult](outputResult)
}

// A collection of arguments for invoking getWorkspaces.
type GetWorkspacesOutputArgs struct {
	// Limits results to workspaces with aliases that begin with this value.
	AliasPrefix pulumix.Input[*string] `pulumi:"aliasPrefix"`
}

func (args GetWorkspacesOutputArgs) ToOutput() pulumix.Output[*GetWorkspacesArgs] {
	allArgs := pulumix.All(
		args.AliasPrefix.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *GetWorkspacesArgs {
		return &GetWorkspacesArgs{
			AliasPrefix: resolvedArgs[0].(*string),
		}
	})
}

type GetWorkspacesResultOutput struct{ *pulumi.OutputState }

func (GetWorkspacesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWorkspacesResult)(nil)).Elem()
}

func (o GetWorkspacesResultOutput) ToOutput(context.Context) pulumix.Output[*GetWorkspacesResult] {
	return pulumix.Output[*GetWorkspacesResult]{
		OutputState: o.OutputState,
	}
}

func (o GetWorkspacesResultOutput) AliasPrefix() pulumix.Output[*string] {
	return pulumix.Apply[*GetWorkspacesResult](o, func(v *GetWorkspacesResult) *string { return v.AliasPrefix })
}

func (o GetWorkspacesResultOutput) Aliases() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[*GetWorkspacesResult](o, func(v *GetWorkspacesResult) []string { return v.Aliases })
	return pulumix.ArrayOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o GetWorkspacesResultOutput) Arns() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[*GetWorkspacesResult](o, func(v *GetWorkspacesResult) []string { return v.Arns })
	return pulumix.ArrayOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o GetWorkspacesResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*GetWorkspacesResult](o, func(v *GetWorkspacesResult) string { return v.Id })
}

func (o GetWorkspacesResultOutput) WorkspaceIds() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[*GetWorkspacesResult](o, func(v *GetWorkspacesResult) []string { return v.WorkspaceIds })
	return pulumix.ArrayOutput[string]{
		OutputState: value.OutputState,
	}
}
