// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package organizations

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Get tags attached to the specified AWS Organizations resource.
func GetResourceTags(ctx *pulumi.Context, args *GetResourceTagsArgs, opts ...pulumi.InvokeOption) (*GetResourceTagsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetResourceTagsResult
	err := ctx.Invoke("aws:organizations/getResourceTags:getResourceTags", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getResourceTags.
type GetResourceTagsArgs struct {
	// ID of the resource with the tags to list. See details below.
	ResourceId string `pulumi:"resourceId"`
	// Map of key=value pairs for each tag set on the resource.
	Tags map[string]string `pulumi:"tags"`
}

// A collection of values returned by getResourceTags.
type GetResourceTagsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id         string `pulumi:"id"`
	ResourceId string `pulumi:"resourceId"`
	// Map of key=value pairs for each tag set on the resource.
	Tags map[string]string `pulumi:"tags"`
}

func GetResourceTagsOutput(ctx *pulumi.Context, args GetResourceTagsOutputArgs, opts ...pulumi.InvokeOption) GetResourceTagsResultOutput {
	outputResult := pulumix.ApplyErr[*GetResourceTagsArgs](args.ToOutput(), func(plainArgs *GetResourceTagsArgs) (*GetResourceTagsResult, error) {
		return GetResourceTags(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[GetResourceTagsResultOutput, *GetResourceTagsResult](outputResult)
}

// A collection of arguments for invoking getResourceTags.
type GetResourceTagsOutputArgs struct {
	// ID of the resource with the tags to list. See details below.
	ResourceId pulumix.Input[string] `pulumi:"resourceId"`
	// Map of key=value pairs for each tag set on the resource.
	Tags pulumix.Input[map[string]string] `pulumi:"tags"`
}

func (args GetResourceTagsOutputArgs) ToOutput() pulumix.Output[*GetResourceTagsArgs] {
	allArgs := pulumix.All(
		args.ResourceId.ToOutput(context.Background()).AsAny(),
		args.Tags.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *GetResourceTagsArgs {
		return &GetResourceTagsArgs{
			ResourceId: resolvedArgs[0].(string),
			Tags:       resolvedArgs[1].(map[string]string),
		}
	})
}

type GetResourceTagsResultOutput struct{ *pulumi.OutputState }

func (GetResourceTagsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResourceTagsResult)(nil)).Elem()
}

func (o GetResourceTagsResultOutput) ToOutput(context.Context) pulumix.Output[*GetResourceTagsResult] {
	return pulumix.Output[*GetResourceTagsResult]{
		OutputState: o.OutputState,
	}
}

func (o GetResourceTagsResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*GetResourceTagsResult](o, func(v *GetResourceTagsResult) string { return v.Id })
}

func (o GetResourceTagsResultOutput) ResourceId() pulumix.Output[string] {
	return pulumix.Apply[*GetResourceTagsResult](o, func(v *GetResourceTagsResult) string { return v.ResourceId })
}

func (o GetResourceTagsResultOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[*GetResourceTagsResult](o, func(v *GetResourceTagsResult) map[string]string { return v.Tags })
	return pulumix.MapOutput[string]{
		OutputState: value.OutputState,
	}
}
