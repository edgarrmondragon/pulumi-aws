// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networkmanager

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Retrieve information about a global network.
func LookupGlobalNetwork(ctx *pulumi.Context, args *LookupGlobalNetworkArgs, opts ...pulumi.InvokeOption) (*LookupGlobalNetworkResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupGlobalNetworkResult
	err := ctx.Invoke("aws:networkmanager/getGlobalNetwork:getGlobalNetwork", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getGlobalNetwork.
type LookupGlobalNetworkArgs struct {
	// ID of the specific global network to retrieve.
	GlobalNetworkId string `pulumi:"globalNetworkId"`
	// Map of resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// A collection of values returned by getGlobalNetwork.
type LookupGlobalNetworkResult struct {
	// ARN of the global network.
	Arn string `pulumi:"arn"`
	// Description of the global network.
	Description     string `pulumi:"description"`
	GlobalNetworkId string `pulumi:"globalNetworkId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Map of resource tags.
	Tags map[string]string `pulumi:"tags"`
}

func LookupGlobalNetworkOutput(ctx *pulumi.Context, args LookupGlobalNetworkOutputArgs, opts ...pulumi.InvokeOption) LookupGlobalNetworkResultOutput {
	outputResult := pulumix.ApplyErr[*LookupGlobalNetworkArgs](args.ToOutput(), func(plainArgs *LookupGlobalNetworkArgs) (*LookupGlobalNetworkResult, error) {
		return LookupGlobalNetwork(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[LookupGlobalNetworkResultOutput, *LookupGlobalNetworkResult](outputResult)
}

// A collection of arguments for invoking getGlobalNetwork.
type LookupGlobalNetworkOutputArgs struct {
	// ID of the specific global network to retrieve.
	GlobalNetworkId pulumix.Input[string] `pulumi:"globalNetworkId"`
	// Map of resource tags.
	Tags pulumix.Input[map[string]string] `pulumi:"tags"`
}

func (args LookupGlobalNetworkOutputArgs) ToOutput() pulumix.Output[*LookupGlobalNetworkArgs] {
	allArgs := pulumix.All(
		args.GlobalNetworkId.ToOutput(context.Background()).AsAny(),
		args.Tags.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *LookupGlobalNetworkArgs {
		return &LookupGlobalNetworkArgs{
			GlobalNetworkId: resolvedArgs[0].(string),
			Tags:            resolvedArgs[1].(map[string]string),
		}
	})
}

type LookupGlobalNetworkResultOutput struct{ *pulumi.OutputState }

func (LookupGlobalNetworkResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGlobalNetworkResult)(nil)).Elem()
}

func (o LookupGlobalNetworkResultOutput) ToOutput(context.Context) pulumix.Output[*LookupGlobalNetworkResult] {
	return pulumix.Output[*LookupGlobalNetworkResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupGlobalNetworkResultOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[*LookupGlobalNetworkResult](o, func(v *LookupGlobalNetworkResult) string { return v.Arn })
}

func (o LookupGlobalNetworkResultOutput) Description() pulumix.Output[string] {
	return pulumix.Apply[*LookupGlobalNetworkResult](o, func(v *LookupGlobalNetworkResult) string { return v.Description })
}

func (o LookupGlobalNetworkResultOutput) GlobalNetworkId() pulumix.Output[string] {
	return pulumix.Apply[*LookupGlobalNetworkResult](o, func(v *LookupGlobalNetworkResult) string { return v.GlobalNetworkId })
}

func (o LookupGlobalNetworkResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*LookupGlobalNetworkResult](o, func(v *LookupGlobalNetworkResult) string { return v.Id })
}

func (o LookupGlobalNetworkResultOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[*LookupGlobalNetworkResult](o, func(v *LookupGlobalNetworkResult) map[string]string { return v.Tags })
	return pulumix.MapOutput[string]{
		OutputState: value.OutputState,
	}
}
