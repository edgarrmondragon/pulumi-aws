// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2transitgateway

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Get information on an EC2 Transit Gateway's attachment to a resource.
func GetAttachment(ctx *pulumi.Context, args *GetAttachmentArgs, opts ...pulumi.InvokeOption) (*GetAttachmentResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetAttachmentResult
	err := ctx.Invoke("aws:ec2transitgateway/getAttachment:getAttachment", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAttachment.
type GetAttachmentArgs struct {
	// One or more configuration blocks containing name-values filters. Detailed below.
	Filters []GetAttachmentFilter `pulumi:"filters"`
	// Key-value tags for the attachment.
	Tags map[string]string `pulumi:"tags"`
	// ID of the attachment.
	TransitGatewayAttachmentId *string `pulumi:"transitGatewayAttachmentId"`
}

// A collection of values returned by getAttachment.
type GetAttachmentResult struct {
	// ARN of the attachment.
	Arn string `pulumi:"arn"`
	// The state of the association (see [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_TransitGatewayAttachmentAssociation.html) for valid values).
	AssociationState string `pulumi:"associationState"`
	// The ID of the route table for the transit gateway.
	AssociationTransitGatewayRouteTableId string                `pulumi:"associationTransitGatewayRouteTableId"`
	Filters                               []GetAttachmentFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// ID of the resource.
	ResourceId string `pulumi:"resourceId"`
	// ID of the AWS account that owns the resource.
	ResourceOwnerId string `pulumi:"resourceOwnerId"`
	// Resource type.
	ResourceType string `pulumi:"resourceType"`
	// Attachment state.
	State string `pulumi:"state"`
	// Key-value tags for the attachment.
	Tags                       map[string]string `pulumi:"tags"`
	TransitGatewayAttachmentId string            `pulumi:"transitGatewayAttachmentId"`
	// ID of the transit gateway.
	TransitGatewayId string `pulumi:"transitGatewayId"`
	// The ID of the AWS account that owns the transit gateway.
	TransitGatewayOwnerId string `pulumi:"transitGatewayOwnerId"`
}

func GetAttachmentOutput(ctx *pulumi.Context, args GetAttachmentOutputArgs, opts ...pulumi.InvokeOption) GetAttachmentResultOutput {
	outputResult := pulumix.ApplyErr[*GetAttachmentArgs](args.ToOutput(), func(plainArgs *GetAttachmentArgs) (*GetAttachmentResult, error) {
		return GetAttachment(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[GetAttachmentResultOutput, *GetAttachmentResult](outputResult)
}

// A collection of arguments for invoking getAttachment.
type GetAttachmentOutputArgs struct {
	// One or more configuration blocks containing name-values filters. Detailed below.
	Filters pulumix.Input[[]*GetAttachmentFilterArgs] `pulumi:"filters"`
	// Key-value tags for the attachment.
	Tags pulumix.Input[map[string]string] `pulumi:"tags"`
	// ID of the attachment.
	TransitGatewayAttachmentId pulumix.Input[*string] `pulumi:"transitGatewayAttachmentId"`
}

func (args GetAttachmentOutputArgs) ToOutput() pulumix.Output[*GetAttachmentArgs] {
	allArgs := pulumix.All(
		args.Filters.ToOutput(context.Background()).AsAny(),
		args.Tags.ToOutput(context.Background()).AsAny(),
		args.TransitGatewayAttachmentId.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *GetAttachmentArgs {
		return &GetAttachmentArgs{
			Filters:                    resolvedArgs[0].([]GetAttachmentFilter),
			Tags:                       resolvedArgs[1].(map[string]string),
			TransitGatewayAttachmentId: resolvedArgs[2].(*string),
		}
	})
}

type GetAttachmentResultOutput struct{ *pulumi.OutputState }

func (GetAttachmentResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAttachmentResult)(nil)).Elem()
}

func (o GetAttachmentResultOutput) ToOutput(context.Context) pulumix.Output[*GetAttachmentResult] {
	return pulumix.Output[*GetAttachmentResult]{
		OutputState: o.OutputState,
	}
}

func (o GetAttachmentResultOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[*GetAttachmentResult](o, func(v *GetAttachmentResult) string { return v.Arn })
}

func (o GetAttachmentResultOutput) AssociationState() pulumix.Output[string] {
	return pulumix.Apply[*GetAttachmentResult](o, func(v *GetAttachmentResult) string { return v.AssociationState })
}

func (o GetAttachmentResultOutput) AssociationTransitGatewayRouteTableId() pulumix.Output[string] {
	return pulumix.Apply[*GetAttachmentResult](o, func(v *GetAttachmentResult) string { return v.AssociationTransitGatewayRouteTableId })
}

func (o GetAttachmentResultOutput) Filters() pulumix.GArrayOutput[GetAttachmentFilter, GetAttachmentFilterOutput] {
	value := pulumix.Apply[*GetAttachmentResult](o, func(v *GetAttachmentResult) []GetAttachmentFilter { return v.Filters })
	return pulumix.GArrayOutput[GetAttachmentFilter, GetAttachmentFilterOutput]{
		OutputState: value.OutputState,
	}
}

func (o GetAttachmentResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*GetAttachmentResult](o, func(v *GetAttachmentResult) string { return v.Id })
}

func (o GetAttachmentResultOutput) ResourceId() pulumix.Output[string] {
	return pulumix.Apply[*GetAttachmentResult](o, func(v *GetAttachmentResult) string { return v.ResourceId })
}

func (o GetAttachmentResultOutput) ResourceOwnerId() pulumix.Output[string] {
	return pulumix.Apply[*GetAttachmentResult](o, func(v *GetAttachmentResult) string { return v.ResourceOwnerId })
}

func (o GetAttachmentResultOutput) ResourceType() pulumix.Output[string] {
	return pulumix.Apply[*GetAttachmentResult](o, func(v *GetAttachmentResult) string { return v.ResourceType })
}

func (o GetAttachmentResultOutput) State() pulumix.Output[string] {
	return pulumix.Apply[*GetAttachmentResult](o, func(v *GetAttachmentResult) string { return v.State })
}

func (o GetAttachmentResultOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[*GetAttachmentResult](o, func(v *GetAttachmentResult) map[string]string { return v.Tags })
	return pulumix.MapOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o GetAttachmentResultOutput) TransitGatewayAttachmentId() pulumix.Output[string] {
	return pulumix.Apply[*GetAttachmentResult](o, func(v *GetAttachmentResult) string { return v.TransitGatewayAttachmentId })
}

func (o GetAttachmentResultOutput) TransitGatewayId() pulumix.Output[string] {
	return pulumix.Apply[*GetAttachmentResult](o, func(v *GetAttachmentResult) string { return v.TransitGatewayId })
}

func (o GetAttachmentResultOutput) TransitGatewayOwnerId() pulumix.Output[string] {
	return pulumix.Apply[*GetAttachmentResult](o, func(v *GetAttachmentResult) string { return v.TransitGatewayOwnerId })
}
