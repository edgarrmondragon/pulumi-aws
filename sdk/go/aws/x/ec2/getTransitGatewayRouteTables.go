// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides information for multiple EC2 Transit Gateway Route Tables, such as their identifiers.
func GetTransitGatewayRouteTables(ctx *pulumi.Context, args *GetTransitGatewayRouteTablesArgs, opts ...pulumi.InvokeOption) (*GetTransitGatewayRouteTablesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetTransitGatewayRouteTablesResult
	err := ctx.Invoke("aws:ec2/getTransitGatewayRouteTables:getTransitGatewayRouteTables", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTransitGatewayRouteTables.
type GetTransitGatewayRouteTablesArgs struct {
	// Custom filter block as described below.
	Filters []GetTransitGatewayRouteTablesFilter `pulumi:"filters"`
	// Mapping of tags, each pair of which must exactly match
	// a pair on the desired transit gateway route table.
	//
	// More complex filters can be expressed using one or more `filter` sub-blocks,
	// which take the following arguments:
	Tags map[string]string `pulumi:"tags"`
}

// A collection of values returned by getTransitGatewayRouteTables.
type GetTransitGatewayRouteTablesResult struct {
	Filters []GetTransitGatewayRouteTablesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Set of Transit Gateway Route Table identifiers.
	Ids  []string          `pulumi:"ids"`
	Tags map[string]string `pulumi:"tags"`
}

func GetTransitGatewayRouteTablesOutput(ctx *pulumi.Context, args GetTransitGatewayRouteTablesOutputArgs, opts ...pulumi.InvokeOption) GetTransitGatewayRouteTablesResultOutput {
	outputResult := pulumix.ApplyErr[*GetTransitGatewayRouteTablesArgs](args.ToOutput(), func(plainArgs *GetTransitGatewayRouteTablesArgs) (*GetTransitGatewayRouteTablesResult, error) {
		return GetTransitGatewayRouteTables(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[GetTransitGatewayRouteTablesResultOutput, *GetTransitGatewayRouteTablesResult](outputResult)
}

// A collection of arguments for invoking getTransitGatewayRouteTables.
type GetTransitGatewayRouteTablesOutputArgs struct {
	// Custom filter block as described below.
	Filters pulumix.Input[[]*GetTransitGatewayRouteTablesFilterArgs] `pulumi:"filters"`
	// Mapping of tags, each pair of which must exactly match
	// a pair on the desired transit gateway route table.
	//
	// More complex filters can be expressed using one or more `filter` sub-blocks,
	// which take the following arguments:
	Tags pulumix.Input[map[string]string] `pulumi:"tags"`
}

func (args GetTransitGatewayRouteTablesOutputArgs) ToOutput() pulumix.Output[*GetTransitGatewayRouteTablesArgs] {
	allArgs := pulumix.All(
		args.Filters.ToOutput(context.Background()).AsAny(),
		args.Tags.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *GetTransitGatewayRouteTablesArgs {
		return &GetTransitGatewayRouteTablesArgs{
			Filters: resolvedArgs[0].([]GetTransitGatewayRouteTablesFilter),
			Tags:    resolvedArgs[1].(map[string]string),
		}
	})
}

type GetTransitGatewayRouteTablesResultOutput struct{ *pulumi.OutputState }

func (GetTransitGatewayRouteTablesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitGatewayRouteTablesResult)(nil)).Elem()
}

func (o GetTransitGatewayRouteTablesResultOutput) ToOutput(context.Context) pulumix.Output[*GetTransitGatewayRouteTablesResult] {
	return pulumix.Output[*GetTransitGatewayRouteTablesResult]{
		OutputState: o.OutputState,
	}
}

func (o GetTransitGatewayRouteTablesResultOutput) Filters() pulumix.GArrayOutput[GetTransitGatewayRouteTablesFilter, GetTransitGatewayRouteTablesFilterOutput] {
	value := pulumix.Apply[*GetTransitGatewayRouteTablesResult](o, func(v *GetTransitGatewayRouteTablesResult) []GetTransitGatewayRouteTablesFilter { return v.Filters })
	return pulumix.GArrayOutput[GetTransitGatewayRouteTablesFilter, GetTransitGatewayRouteTablesFilterOutput]{
		OutputState: value.OutputState,
	}
}

func (o GetTransitGatewayRouteTablesResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*GetTransitGatewayRouteTablesResult](o, func(v *GetTransitGatewayRouteTablesResult) string { return v.Id })
}

func (o GetTransitGatewayRouteTablesResultOutput) Ids() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[*GetTransitGatewayRouteTablesResult](o, func(v *GetTransitGatewayRouteTablesResult) []string { return v.Ids })
	return pulumix.ArrayOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o GetTransitGatewayRouteTablesResultOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[*GetTransitGatewayRouteTablesResult](o, func(v *GetTransitGatewayRouteTablesResult) map[string]string { return v.Tags })
	return pulumix.MapOutput[string]{
		OutputState: value.OutputState,
	}
}
