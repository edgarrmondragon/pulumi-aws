// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package outposts

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides details about an Outposts Outpost.
func GetOutpost(ctx *pulumi.Context, args *GetOutpostArgs, opts ...pulumi.InvokeOption) (*GetOutpostResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetOutpostResult
	err := ctx.Invoke("aws:outposts/getOutpost:getOutpost", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getOutpost.
type GetOutpostArgs struct {
	// ARN.
	Arn *string `pulumi:"arn"`
	// Identifier of the Outpost.
	Id *string `pulumi:"id"`
	// Name of the Outpost.
	Name *string `pulumi:"name"`
	// AWS Account identifier of the Outpost owner.
	OwnerId *string `pulumi:"ownerId"`
	// The Outpost tags.
	Tags map[string]string `pulumi:"tags"`
}

// A collection of values returned by getOutpost.
type GetOutpostResult struct {
	Arn string `pulumi:"arn"`
	// Availability Zone name.
	AvailabilityZone string `pulumi:"availabilityZone"`
	// Availability Zone identifier.
	AvailabilityZoneId string `pulumi:"availabilityZoneId"`
	// The description of the Outpost.
	Description string `pulumi:"description"`
	Id          string `pulumi:"id"`
	// The life cycle status.
	LifecycleStatus string  `pulumi:"lifecycleStatus"`
	Name            string  `pulumi:"name"`
	OwnerId         *string `pulumi:"ownerId"`
	// The Amazon Resource Name (ARN) of the site.
	SiteArn string `pulumi:"siteArn"`
	// The ID of the site.
	SiteId string `pulumi:"siteId"`
	// The hardware type.
	SupportedHardwareType string `pulumi:"supportedHardwareType"`
	// The Outpost tags.
	Tags map[string]string `pulumi:"tags"`
}

func GetOutpostOutput(ctx *pulumi.Context, args GetOutpostOutputArgs, opts ...pulumi.InvokeOption) GetOutpostResultOutput {
	outputResult := pulumix.ApplyErr[*GetOutpostArgs](args.ToOutput(), func(plainArgs *GetOutpostArgs) (*GetOutpostResult, error) {
		return GetOutpost(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[GetOutpostResultOutput, *GetOutpostResult](outputResult)
}

// A collection of arguments for invoking getOutpost.
type GetOutpostOutputArgs struct {
	// ARN.
	Arn pulumix.Input[*string] `pulumi:"arn"`
	// Identifier of the Outpost.
	Id pulumix.Input[*string] `pulumi:"id"`
	// Name of the Outpost.
	Name pulumix.Input[*string] `pulumi:"name"`
	// AWS Account identifier of the Outpost owner.
	OwnerId pulumix.Input[*string] `pulumi:"ownerId"`
	// The Outpost tags.
	Tags pulumix.Input[map[string]string] `pulumi:"tags"`
}

func (args GetOutpostOutputArgs) ToOutput() pulumix.Output[*GetOutpostArgs] {
	allArgs := pulumix.All(
		args.Arn.ToOutput(context.Background()).AsAny(),
		args.Id.ToOutput(context.Background()).AsAny(),
		args.Name.ToOutput(context.Background()).AsAny(),
		args.OwnerId.ToOutput(context.Background()).AsAny(),
		args.Tags.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *GetOutpostArgs {
		return &GetOutpostArgs{
			Arn:     resolvedArgs[0].(*string),
			Id:      resolvedArgs[1].(*string),
			Name:    resolvedArgs[2].(*string),
			OwnerId: resolvedArgs[3].(*string),
			Tags:    resolvedArgs[4].(map[string]string),
		}
	})
}

type GetOutpostResultOutput struct{ *pulumi.OutputState }

func (GetOutpostResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOutpostResult)(nil)).Elem()
}

func (o GetOutpostResultOutput) ToOutput(context.Context) pulumix.Output[*GetOutpostResult] {
	return pulumix.Output[*GetOutpostResult]{
		OutputState: o.OutputState,
	}
}

func (o GetOutpostResultOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[*GetOutpostResult](o, func(v *GetOutpostResult) string { return v.Arn })
}

func (o GetOutpostResultOutput) AvailabilityZone() pulumix.Output[string] {
	return pulumix.Apply[*GetOutpostResult](o, func(v *GetOutpostResult) string { return v.AvailabilityZone })
}

func (o GetOutpostResultOutput) AvailabilityZoneId() pulumix.Output[string] {
	return pulumix.Apply[*GetOutpostResult](o, func(v *GetOutpostResult) string { return v.AvailabilityZoneId })
}

func (o GetOutpostResultOutput) Description() pulumix.Output[string] {
	return pulumix.Apply[*GetOutpostResult](o, func(v *GetOutpostResult) string { return v.Description })
}

func (o GetOutpostResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*GetOutpostResult](o, func(v *GetOutpostResult) string { return v.Id })
}

func (o GetOutpostResultOutput) LifecycleStatus() pulumix.Output[string] {
	return pulumix.Apply[*GetOutpostResult](o, func(v *GetOutpostResult) string { return v.LifecycleStatus })
}

func (o GetOutpostResultOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[*GetOutpostResult](o, func(v *GetOutpostResult) string { return v.Name })
}

func (o GetOutpostResultOutput) OwnerId() pulumix.Output[*string] {
	return pulumix.Apply[*GetOutpostResult](o, func(v *GetOutpostResult) *string { return v.OwnerId })
}

func (o GetOutpostResultOutput) SiteArn() pulumix.Output[string] {
	return pulumix.Apply[*GetOutpostResult](o, func(v *GetOutpostResult) string { return v.SiteArn })
}

func (o GetOutpostResultOutput) SiteId() pulumix.Output[string] {
	return pulumix.Apply[*GetOutpostResult](o, func(v *GetOutpostResult) string { return v.SiteId })
}

func (o GetOutpostResultOutput) SupportedHardwareType() pulumix.Output[string] {
	return pulumix.Apply[*GetOutpostResult](o, func(v *GetOutpostResult) string { return v.SupportedHardwareType })
}

func (o GetOutpostResultOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[*GetOutpostResult](o, func(v *GetOutpostResult) map[string]string { return v.Tags })
	return pulumix.MapOutput[string]{
		OutputState: value.OutputState,
	}
}
