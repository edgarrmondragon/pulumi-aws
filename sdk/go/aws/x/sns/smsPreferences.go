// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sns

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a way to set SNS SMS preferences.
type SmsPreferences struct {
	pulumi.CustomResourceState

	// A string, such as your business brand, that is displayed as the sender on the receiving device.
	DefaultSenderId pulumix.Output[*string] `pulumi:"defaultSenderId"`
	// The type of SMS message that you will send by default. Possible values are: Promotional, Transactional
	DefaultSmsType pulumix.Output[*string] `pulumi:"defaultSmsType"`
	// The ARN of the IAM role that allows Amazon SNS to write logs about SMS deliveries in CloudWatch Logs.
	DeliveryStatusIamRoleArn pulumix.Output[*string] `pulumi:"deliveryStatusIamRoleArn"`
	// The percentage of successful SMS deliveries for which Amazon SNS will write logs in CloudWatch Logs. The value must be between 0 and 100.
	DeliveryStatusSuccessSamplingRate pulumix.Output[*string] `pulumi:"deliveryStatusSuccessSamplingRate"`
	// The maximum amount in USD that you are willing to spend each month to send SMS messages.
	MonthlySpendLimit pulumix.Output[int] `pulumi:"monthlySpendLimit"`
	// The name of the Amazon S3 bucket to receive daily SMS usage reports from Amazon SNS.
	UsageReportS3Bucket pulumix.Output[*string] `pulumi:"usageReportS3Bucket"`
}

// NewSmsPreferences registers a new resource with the given unique name, arguments, and options.
func NewSmsPreferences(ctx *pulumi.Context,
	name string, args *SmsPreferencesArgs, opts ...pulumi.ResourceOption) (*SmsPreferences, error) {
	if args == nil {
		args = &SmsPreferencesArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SmsPreferences
	err := ctx.RegisterResource("aws:sns/smsPreferences:SmsPreferences", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSmsPreferences gets an existing SmsPreferences resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSmsPreferences(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SmsPreferencesState, opts ...pulumi.ResourceOption) (*SmsPreferences, error) {
	var resource SmsPreferences
	err := ctx.ReadResource("aws:sns/smsPreferences:SmsPreferences", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SmsPreferences resources.
type smsPreferencesState struct {
	// A string, such as your business brand, that is displayed as the sender on the receiving device.
	DefaultSenderId *string `pulumi:"defaultSenderId"`
	// The type of SMS message that you will send by default. Possible values are: Promotional, Transactional
	DefaultSmsType *string `pulumi:"defaultSmsType"`
	// The ARN of the IAM role that allows Amazon SNS to write logs about SMS deliveries in CloudWatch Logs.
	DeliveryStatusIamRoleArn *string `pulumi:"deliveryStatusIamRoleArn"`
	// The percentage of successful SMS deliveries for which Amazon SNS will write logs in CloudWatch Logs. The value must be between 0 and 100.
	DeliveryStatusSuccessSamplingRate *string `pulumi:"deliveryStatusSuccessSamplingRate"`
	// The maximum amount in USD that you are willing to spend each month to send SMS messages.
	MonthlySpendLimit *int `pulumi:"monthlySpendLimit"`
	// The name of the Amazon S3 bucket to receive daily SMS usage reports from Amazon SNS.
	UsageReportS3Bucket *string `pulumi:"usageReportS3Bucket"`
}

type SmsPreferencesState struct {
	// A string, such as your business brand, that is displayed as the sender on the receiving device.
	DefaultSenderId pulumix.Input[*string]
	// The type of SMS message that you will send by default. Possible values are: Promotional, Transactional
	DefaultSmsType pulumix.Input[*string]
	// The ARN of the IAM role that allows Amazon SNS to write logs about SMS deliveries in CloudWatch Logs.
	DeliveryStatusIamRoleArn pulumix.Input[*string]
	// The percentage of successful SMS deliveries for which Amazon SNS will write logs in CloudWatch Logs. The value must be between 0 and 100.
	DeliveryStatusSuccessSamplingRate pulumix.Input[*string]
	// The maximum amount in USD that you are willing to spend each month to send SMS messages.
	MonthlySpendLimit pulumix.Input[*int]
	// The name of the Amazon S3 bucket to receive daily SMS usage reports from Amazon SNS.
	UsageReportS3Bucket pulumix.Input[*string]
}

func (SmsPreferencesState) ElementType() reflect.Type {
	return reflect.TypeOf((*smsPreferencesState)(nil)).Elem()
}

type smsPreferencesArgs struct {
	// A string, such as your business brand, that is displayed as the sender on the receiving device.
	DefaultSenderId *string `pulumi:"defaultSenderId"`
	// The type of SMS message that you will send by default. Possible values are: Promotional, Transactional
	DefaultSmsType *string `pulumi:"defaultSmsType"`
	// The ARN of the IAM role that allows Amazon SNS to write logs about SMS deliveries in CloudWatch Logs.
	DeliveryStatusIamRoleArn *string `pulumi:"deliveryStatusIamRoleArn"`
	// The percentage of successful SMS deliveries for which Amazon SNS will write logs in CloudWatch Logs. The value must be between 0 and 100.
	DeliveryStatusSuccessSamplingRate *string `pulumi:"deliveryStatusSuccessSamplingRate"`
	// The maximum amount in USD that you are willing to spend each month to send SMS messages.
	MonthlySpendLimit *int `pulumi:"monthlySpendLimit"`
	// The name of the Amazon S3 bucket to receive daily SMS usage reports from Amazon SNS.
	UsageReportS3Bucket *string `pulumi:"usageReportS3Bucket"`
}

// The set of arguments for constructing a SmsPreferences resource.
type SmsPreferencesArgs struct {
	// A string, such as your business brand, that is displayed as the sender on the receiving device.
	DefaultSenderId pulumix.Input[*string]
	// The type of SMS message that you will send by default. Possible values are: Promotional, Transactional
	DefaultSmsType pulumix.Input[*string]
	// The ARN of the IAM role that allows Amazon SNS to write logs about SMS deliveries in CloudWatch Logs.
	DeliveryStatusIamRoleArn pulumix.Input[*string]
	// The percentage of successful SMS deliveries for which Amazon SNS will write logs in CloudWatch Logs. The value must be between 0 and 100.
	DeliveryStatusSuccessSamplingRate pulumix.Input[*string]
	// The maximum amount in USD that you are willing to spend each month to send SMS messages.
	MonthlySpendLimit pulumix.Input[*int]
	// The name of the Amazon S3 bucket to receive daily SMS usage reports from Amazon SNS.
	UsageReportS3Bucket pulumix.Input[*string]
}

func (SmsPreferencesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*smsPreferencesArgs)(nil)).Elem()
}

type SmsPreferencesOutput struct{ *pulumi.OutputState }

func (SmsPreferencesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SmsPreferences)(nil)).Elem()
}

func (o SmsPreferencesOutput) ToSmsPreferencesOutput() SmsPreferencesOutput {
	return o
}

func (o SmsPreferencesOutput) ToSmsPreferencesOutputWithContext(ctx context.Context) SmsPreferencesOutput {
	return o
}

func (o SmsPreferencesOutput) ToOutput(ctx context.Context) pulumix.Output[SmsPreferences] {
	return pulumix.Output[SmsPreferences]{
		OutputState: o.OutputState,
	}
}

// A string, such as your business brand, that is displayed as the sender on the receiving device.
func (o SmsPreferencesOutput) DefaultSenderId() pulumix.Output[*string] {
	value := pulumix.Apply[SmsPreferences](o, func(v SmsPreferences) pulumix.Output[*string] { return v.DefaultSenderId })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The type of SMS message that you will send by default. Possible values are: Promotional, Transactional
func (o SmsPreferencesOutput) DefaultSmsType() pulumix.Output[*string] {
	value := pulumix.Apply[SmsPreferences](o, func(v SmsPreferences) pulumix.Output[*string] { return v.DefaultSmsType })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The ARN of the IAM role that allows Amazon SNS to write logs about SMS deliveries in CloudWatch Logs.
func (o SmsPreferencesOutput) DeliveryStatusIamRoleArn() pulumix.Output[*string] {
	value := pulumix.Apply[SmsPreferences](o, func(v SmsPreferences) pulumix.Output[*string] { return v.DeliveryStatusIamRoleArn })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The percentage of successful SMS deliveries for which Amazon SNS will write logs in CloudWatch Logs. The value must be between 0 and 100.
func (o SmsPreferencesOutput) DeliveryStatusSuccessSamplingRate() pulumix.Output[*string] {
	value := pulumix.Apply[SmsPreferences](o, func(v SmsPreferences) pulumix.Output[*string] { return v.DeliveryStatusSuccessSamplingRate })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The maximum amount in USD that you are willing to spend each month to send SMS messages.
func (o SmsPreferencesOutput) MonthlySpendLimit() pulumix.Output[int] {
	value := pulumix.Apply[SmsPreferences](o, func(v SmsPreferences) pulumix.Output[int] { return v.MonthlySpendLimit })
	return pulumix.Flatten[int, pulumix.Output[int]](value)
}

// The name of the Amazon S3 bucket to receive daily SMS usage reports from Amazon SNS.
func (o SmsPreferencesOutput) UsageReportS3Bucket() pulumix.Output[*string] {
	value := pulumix.Apply[SmsPreferences](o, func(v SmsPreferences) pulumix.Output[*string] { return v.UsageReportS3Bucket })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

func init() {
	pulumi.RegisterOutputType(SmsPreferencesOutput{})
}
