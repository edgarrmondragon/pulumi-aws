// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package location

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a Location Service Map.
type Map struct {
	pulumi.CustomResourceState

	// Configuration block with the map style selected from an available data provider. Detailed below.
	Configuration pulumix.GPtrOutput[MapConfiguration, MapConfigurationOutput] `pulumi:"configuration"`
	// The timestamp for when the map resource was created in ISO 8601 format.
	CreateTime pulumix.Output[string] `pulumi:"createTime"`
	// An optional description for the map resource.
	Description pulumix.Output[*string] `pulumi:"description"`
	// The Amazon Resource Name (ARN) for the map resource. Used to specify a resource across all AWS.
	MapArn pulumix.Output[string] `pulumi:"mapArn"`
	// The name for the map resource.
	//
	// The following arguments are optional:
	MapName pulumix.Output[string] `pulumi:"mapName"`
	// Key-value tags for the map. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// The timestamp for when the map resource was last updated in ISO 8601 format.
	UpdateTime pulumix.Output[string] `pulumi:"updateTime"`
}

// NewMap registers a new resource with the given unique name, arguments, and options.
func NewMap(ctx *pulumi.Context,
	name string, args *MapArgs, opts ...pulumi.ResourceOption) (*Map, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Configuration == nil {
		return nil, errors.New("invalid value for required argument 'Configuration'")
	}
	if args.MapName == nil {
		return nil, errors.New("invalid value for required argument 'MapName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Map
	err := ctx.RegisterResource("aws:location/map:Map", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMap gets an existing Map resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMap(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MapState, opts ...pulumi.ResourceOption) (*Map, error) {
	var resource Map
	err := ctx.ReadResource("aws:location/map:Map", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Map resources.
type mapState struct {
	// Configuration block with the map style selected from an available data provider. Detailed below.
	Configuration *MapConfiguration `pulumi:"configuration"`
	// The timestamp for when the map resource was created in ISO 8601 format.
	CreateTime *string `pulumi:"createTime"`
	// An optional description for the map resource.
	Description *string `pulumi:"description"`
	// The Amazon Resource Name (ARN) for the map resource. Used to specify a resource across all AWS.
	MapArn *string `pulumi:"mapArn"`
	// The name for the map resource.
	//
	// The following arguments are optional:
	MapName *string `pulumi:"mapName"`
	// Key-value tags for the map. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// The timestamp for when the map resource was last updated in ISO 8601 format.
	UpdateTime *string `pulumi:"updateTime"`
}

type MapState struct {
	// Configuration block with the map style selected from an available data provider. Detailed below.
	Configuration pulumix.Input[*MapConfigurationArgs]
	// The timestamp for when the map resource was created in ISO 8601 format.
	CreateTime pulumix.Input[*string]
	// An optional description for the map resource.
	Description pulumix.Input[*string]
	// The Amazon Resource Name (ARN) for the map resource. Used to specify a resource across all AWS.
	MapArn pulumix.Input[*string]
	// The name for the map resource.
	//
	// The following arguments are optional:
	MapName pulumix.Input[*string]
	// Key-value tags for the map. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// The timestamp for when the map resource was last updated in ISO 8601 format.
	UpdateTime pulumix.Input[*string]
}

func (MapState) ElementType() reflect.Type {
	return reflect.TypeOf((*mapState)(nil)).Elem()
}

type mapArgs struct {
	// Configuration block with the map style selected from an available data provider. Detailed below.
	Configuration MapConfiguration `pulumi:"configuration"`
	// An optional description for the map resource.
	Description *string `pulumi:"description"`
	// The name for the map resource.
	//
	// The following arguments are optional:
	MapName string `pulumi:"mapName"`
	// Key-value tags for the map. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Map resource.
type MapArgs struct {
	// Configuration block with the map style selected from an available data provider. Detailed below.
	Configuration pulumix.Input[*MapConfigurationArgs]
	// An optional description for the map resource.
	Description pulumix.Input[*string]
	// The name for the map resource.
	//
	// The following arguments are optional:
	MapName pulumix.Input[string]
	// Key-value tags for the map. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (MapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*mapArgs)(nil)).Elem()
}

type MapOutput struct{ *pulumi.OutputState }

func (MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Map)(nil)).Elem()
}

func (o MapOutput) ToMapOutput() MapOutput {
	return o
}

func (o MapOutput) ToMapOutputWithContext(ctx context.Context) MapOutput {
	return o
}

func (o MapOutput) ToOutput(ctx context.Context) pulumix.Output[Map] {
	return pulumix.Output[Map]{
		OutputState: o.OutputState,
	}
}

// Configuration block with the map style selected from an available data provider. Detailed below.
func (o MapOutput) Configuration() pulumix.GPtrOutput[MapConfiguration, MapConfigurationOutput] {
	value := pulumix.Apply[Map](o, func(v Map) pulumix.GPtrOutput[MapConfiguration, MapConfigurationOutput] { return v.Configuration })
	unwrapped := pulumix.Flatten[*MapConfiguration, pulumix.GPtrOutput[MapConfiguration, MapConfigurationOutput]](value)
	return pulumix.GPtrOutput[MapConfiguration, MapConfigurationOutput]{OutputState: unwrapped.OutputState}
}

// The timestamp for when the map resource was created in ISO 8601 format.
func (o MapOutput) CreateTime() pulumix.Output[string] {
	value := pulumix.Apply[Map](o, func(v Map) pulumix.Output[string] { return v.CreateTime })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// An optional description for the map resource.
func (o MapOutput) Description() pulumix.Output[*string] {
	value := pulumix.Apply[Map](o, func(v Map) pulumix.Output[*string] { return v.Description })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The Amazon Resource Name (ARN) for the map resource. Used to specify a resource across all AWS.
func (o MapOutput) MapArn() pulumix.Output[string] {
	value := pulumix.Apply[Map](o, func(v Map) pulumix.Output[string] { return v.MapArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The name for the map resource.
//
// The following arguments are optional:
func (o MapOutput) MapName() pulumix.Output[string] {
	value := pulumix.Apply[Map](o, func(v Map) pulumix.Output[string] { return v.MapName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Key-value tags for the map. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o MapOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Map](o, func(v Map) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o MapOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[Map](o, func(v Map) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// The timestamp for when the map resource was last updated in ISO 8601 format.
func (o MapOutput) UpdateTime() pulumix.Output[string] {
	value := pulumix.Apply[Map](o, func(v Map) pulumix.Output[string] { return v.UpdateTime })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(MapOutput{})
}
