// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appmesh

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Data source for managing an AWS App Mesh Virtual Gateway.
func LookupVirtualGateway(ctx *pulumi.Context, args *LookupVirtualGatewayArgs, opts ...pulumi.InvokeOption) (*LookupVirtualGatewayResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupVirtualGatewayResult
	err := ctx.Invoke("aws:appmesh/getVirtualGateway:getVirtualGateway", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVirtualGateway.
type LookupVirtualGatewayArgs struct {
	// Name of the service mesh in which the virtual gateway exists.
	MeshName string `pulumi:"meshName"`
	// Name of the virtual gateway.
	Name string `pulumi:"name"`
	// Map of tags.
	Tags map[string]string `pulumi:"tags"`
}

// A collection of values returned by getVirtualGateway.
type LookupVirtualGatewayResult struct {
	// ARN of the virtual gateway.
	Arn string `pulumi:"arn"`
	// Creation date of the virtual gateway.
	CreatedDate string `pulumi:"createdDate"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Last update date of the virtual gateway.
	LastUpdatedDate string `pulumi:"lastUpdatedDate"`
	MeshName        string `pulumi:"meshName"`
	MeshOwner       string `pulumi:"meshOwner"`
	Name            string `pulumi:"name"`
	// Resource owner's AWS account ID.
	ResourceOwner string `pulumi:"resourceOwner"`
	// Virtual gateway specification. See the `appmesh.VirtualGateway` resource for details.
	Specs []GetVirtualGatewaySpec `pulumi:"specs"`
	// Map of tags.
	Tags map[string]string `pulumi:"tags"`
}

func LookupVirtualGatewayOutput(ctx *pulumi.Context, args LookupVirtualGatewayOutputArgs, opts ...pulumi.InvokeOption) LookupVirtualGatewayResultOutput {
	outputResult := pulumix.ApplyErr[*LookupVirtualGatewayArgs](args.ToOutput(), func(plainArgs *LookupVirtualGatewayArgs) (*LookupVirtualGatewayResult, error) {
		return LookupVirtualGateway(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[LookupVirtualGatewayResultOutput, *LookupVirtualGatewayResult](outputResult)
}

// A collection of arguments for invoking getVirtualGateway.
type LookupVirtualGatewayOutputArgs struct {
	// Name of the service mesh in which the virtual gateway exists.
	MeshName pulumix.Input[string] `pulumi:"meshName"`
	// Name of the virtual gateway.
	Name pulumix.Input[string] `pulumi:"name"`
	// Map of tags.
	Tags pulumix.Input[map[string]string] `pulumi:"tags"`
}

func (args LookupVirtualGatewayOutputArgs) ToOutput() pulumix.Output[*LookupVirtualGatewayArgs] {
	allArgs := pulumix.All(
		args.MeshName.ToOutput(context.Background()).AsAny(),
		args.Name.ToOutput(context.Background()).AsAny(),
		args.Tags.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *LookupVirtualGatewayArgs {
		return &LookupVirtualGatewayArgs{
			MeshName: resolvedArgs[0].(string),
			Name:     resolvedArgs[1].(string),
			Tags:     resolvedArgs[2].(map[string]string),
		}
	})
}

type LookupVirtualGatewayResultOutput struct{ *pulumi.OutputState }

func (LookupVirtualGatewayResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVirtualGatewayResult)(nil)).Elem()
}

func (o LookupVirtualGatewayResultOutput) ToOutput(context.Context) pulumix.Output[*LookupVirtualGatewayResult] {
	return pulumix.Output[*LookupVirtualGatewayResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupVirtualGatewayResultOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[*LookupVirtualGatewayResult](o, func(v *LookupVirtualGatewayResult) string { return v.Arn })
}

func (o LookupVirtualGatewayResultOutput) CreatedDate() pulumix.Output[string] {
	return pulumix.Apply[*LookupVirtualGatewayResult](o, func(v *LookupVirtualGatewayResult) string { return v.CreatedDate })
}

func (o LookupVirtualGatewayResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*LookupVirtualGatewayResult](o, func(v *LookupVirtualGatewayResult) string { return v.Id })
}

func (o LookupVirtualGatewayResultOutput) LastUpdatedDate() pulumix.Output[string] {
	return pulumix.Apply[*LookupVirtualGatewayResult](o, func(v *LookupVirtualGatewayResult) string { return v.LastUpdatedDate })
}

func (o LookupVirtualGatewayResultOutput) MeshName() pulumix.Output[string] {
	return pulumix.Apply[*LookupVirtualGatewayResult](o, func(v *LookupVirtualGatewayResult) string { return v.MeshName })
}

func (o LookupVirtualGatewayResultOutput) MeshOwner() pulumix.Output[string] {
	return pulumix.Apply[*LookupVirtualGatewayResult](o, func(v *LookupVirtualGatewayResult) string { return v.MeshOwner })
}

func (o LookupVirtualGatewayResultOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[*LookupVirtualGatewayResult](o, func(v *LookupVirtualGatewayResult) string { return v.Name })
}

func (o LookupVirtualGatewayResultOutput) ResourceOwner() pulumix.Output[string] {
	return pulumix.Apply[*LookupVirtualGatewayResult](o, func(v *LookupVirtualGatewayResult) string { return v.ResourceOwner })
}

func (o LookupVirtualGatewayResultOutput) Specs() pulumix.GArrayOutput[GetVirtualGatewaySpec, GetVirtualGatewaySpecOutput] {
	value := pulumix.Apply[*LookupVirtualGatewayResult](o, func(v *LookupVirtualGatewayResult) []GetVirtualGatewaySpec { return v.Specs })
	return pulumix.GArrayOutput[GetVirtualGatewaySpec, GetVirtualGatewaySpecOutput]{
		OutputState: value.OutputState,
	}
}

func (o LookupVirtualGatewayResultOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[*LookupVirtualGatewayResult](o, func(v *LookupVirtualGatewayResult) map[string]string { return v.Tags })
	return pulumix.MapOutput[string]{
		OutputState: value.OutputState,
	}
}
