// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package efs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an Elastic File System (EFS) File System resource.
type FileSystem struct {
	pulumi.CustomResourceState

	// Amazon Resource Name of the file system.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The identifier of the Availability Zone in which the file system's One Zone storage classes exist.
	AvailabilityZoneId pulumix.Output[string] `pulumi:"availabilityZoneId"`
	// the AWS Availability Zone in which to create the file system. Used to create a file system that uses One Zone storage classes. See [user guide](https://docs.aws.amazon.com/efs/latest/ug/storage-classes.html) for more information.
	AvailabilityZoneName pulumix.Output[string] `pulumi:"availabilityZoneName"`
	// A unique name (a maximum of 64 characters are allowed)
	// used as reference when creating the Elastic File System to ensure idempotent file
	// system creation. By default generated by this provider. See [Elastic File System]
	// user guide for more information.
	CreationToken pulumix.Output[string] `pulumi:"creationToken"`
	// The DNS name for the filesystem per [documented convention](http://docs.aws.amazon.com/efs/latest/ug/mounting-fs-mount-cmd-dns-name.html).
	DnsName pulumix.Output[string] `pulumi:"dnsName"`
	// If true, the disk will be encrypted.
	Encrypted pulumix.Output[bool] `pulumi:"encrypted"`
	// The ARN for the KMS encryption key. When specifying kms_key_id, encrypted needs to be set to true.
	KmsKeyId pulumix.Output[string] `pulumi:"kmsKeyId"`
	// A file system [lifecycle policy](https://docs.aws.amazon.com/efs/latest/ug/API_LifecyclePolicy.html) object (documented below).
	LifecyclePolicies pulumix.GArrayOutput[FileSystemLifecyclePolicy, FileSystemLifecyclePolicyOutput] `pulumi:"lifecyclePolicies"`
	// The value of the file system's `Name` tag.
	Name pulumix.Output[string] `pulumi:"name"`
	// The current number of mount targets that the file system has.
	NumberOfMountTargets pulumix.Output[int] `pulumi:"numberOfMountTargets"`
	// The AWS account that created the file system. If the file system was createdby an IAM user, the parent account to which the user belongs is the owner.
	OwnerId pulumix.Output[string] `pulumi:"ownerId"`
	// The file system performance mode. Can be either `"generalPurpose"` or `"maxIO"` (Default: `"generalPurpose"`).
	PerformanceMode pulumix.Output[string] `pulumi:"performanceMode"`
	// The throughput, measured in MiB/s, that you want to provision for the file system. Only applicable with `throughputMode` set to `provisioned`.
	ProvisionedThroughputInMibps pulumix.Output[*float64] `pulumi:"provisionedThroughputInMibps"`
	// The latest known metered size (in bytes) of data stored in the file system, the value is not the exact size that the file system was at any point in time. See Size In Bytes.
	SizeInBytes pulumix.GArrayOutput[FileSystemSizeInByte, FileSystemSizeInByteOutput] `pulumi:"sizeInBytes"`
	// A map of tags to assign to the file system. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// Throughput mode for the file system. Defaults to `bursting`. Valid values: `bursting`, `provisioned`, or `elastic`. When using `provisioned`, also set `provisionedThroughputInMibps`.
	ThroughputMode pulumix.Output[*string] `pulumi:"throughputMode"`
}

// NewFileSystem registers a new resource with the given unique name, arguments, and options.
func NewFileSystem(ctx *pulumi.Context,
	name string, args *FileSystemArgs, opts ...pulumi.ResourceOption) (*FileSystem, error) {
	if args == nil {
		args = &FileSystemArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FileSystem
	err := ctx.RegisterResource("aws:efs/fileSystem:FileSystem", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFileSystem gets an existing FileSystem resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFileSystem(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FileSystemState, opts ...pulumi.ResourceOption) (*FileSystem, error) {
	var resource FileSystem
	err := ctx.ReadResource("aws:efs/fileSystem:FileSystem", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FileSystem resources.
type fileSystemState struct {
	// Amazon Resource Name of the file system.
	Arn *string `pulumi:"arn"`
	// The identifier of the Availability Zone in which the file system's One Zone storage classes exist.
	AvailabilityZoneId *string `pulumi:"availabilityZoneId"`
	// the AWS Availability Zone in which to create the file system. Used to create a file system that uses One Zone storage classes. See [user guide](https://docs.aws.amazon.com/efs/latest/ug/storage-classes.html) for more information.
	AvailabilityZoneName *string `pulumi:"availabilityZoneName"`
	// A unique name (a maximum of 64 characters are allowed)
	// used as reference when creating the Elastic File System to ensure idempotent file
	// system creation. By default generated by this provider. See [Elastic File System]
	// user guide for more information.
	CreationToken *string `pulumi:"creationToken"`
	// The DNS name for the filesystem per [documented convention](http://docs.aws.amazon.com/efs/latest/ug/mounting-fs-mount-cmd-dns-name.html).
	DnsName *string `pulumi:"dnsName"`
	// If true, the disk will be encrypted.
	Encrypted *bool `pulumi:"encrypted"`
	// The ARN for the KMS encryption key. When specifying kms_key_id, encrypted needs to be set to true.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// A file system [lifecycle policy](https://docs.aws.amazon.com/efs/latest/ug/API_LifecyclePolicy.html) object (documented below).
	LifecyclePolicies []FileSystemLifecyclePolicy `pulumi:"lifecyclePolicies"`
	// The value of the file system's `Name` tag.
	Name *string `pulumi:"name"`
	// The current number of mount targets that the file system has.
	NumberOfMountTargets *int `pulumi:"numberOfMountTargets"`
	// The AWS account that created the file system. If the file system was createdby an IAM user, the parent account to which the user belongs is the owner.
	OwnerId *string `pulumi:"ownerId"`
	// The file system performance mode. Can be either `"generalPurpose"` or `"maxIO"` (Default: `"generalPurpose"`).
	PerformanceMode *string `pulumi:"performanceMode"`
	// The throughput, measured in MiB/s, that you want to provision for the file system. Only applicable with `throughputMode` set to `provisioned`.
	ProvisionedThroughputInMibps *float64 `pulumi:"provisionedThroughputInMibps"`
	// The latest known metered size (in bytes) of data stored in the file system, the value is not the exact size that the file system was at any point in time. See Size In Bytes.
	SizeInBytes []FileSystemSizeInByte `pulumi:"sizeInBytes"`
	// A map of tags to assign to the file system. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// Throughput mode for the file system. Defaults to `bursting`. Valid values: `bursting`, `provisioned`, or `elastic`. When using `provisioned`, also set `provisionedThroughputInMibps`.
	ThroughputMode *string `pulumi:"throughputMode"`
}

type FileSystemState struct {
	// Amazon Resource Name of the file system.
	Arn pulumix.Input[*string]
	// The identifier of the Availability Zone in which the file system's One Zone storage classes exist.
	AvailabilityZoneId pulumix.Input[*string]
	// the AWS Availability Zone in which to create the file system. Used to create a file system that uses One Zone storage classes. See [user guide](https://docs.aws.amazon.com/efs/latest/ug/storage-classes.html) for more information.
	AvailabilityZoneName pulumix.Input[*string]
	// A unique name (a maximum of 64 characters are allowed)
	// used as reference when creating the Elastic File System to ensure idempotent file
	// system creation. By default generated by this provider. See [Elastic File System]
	// user guide for more information.
	CreationToken pulumix.Input[*string]
	// The DNS name for the filesystem per [documented convention](http://docs.aws.amazon.com/efs/latest/ug/mounting-fs-mount-cmd-dns-name.html).
	DnsName pulumix.Input[*string]
	// If true, the disk will be encrypted.
	Encrypted pulumix.Input[*bool]
	// The ARN for the KMS encryption key. When specifying kms_key_id, encrypted needs to be set to true.
	KmsKeyId pulumix.Input[*string]
	// A file system [lifecycle policy](https://docs.aws.amazon.com/efs/latest/ug/API_LifecyclePolicy.html) object (documented below).
	LifecyclePolicies pulumix.Input[[]*FileSystemLifecyclePolicyArgs]
	// The value of the file system's `Name` tag.
	Name pulumix.Input[*string]
	// The current number of mount targets that the file system has.
	NumberOfMountTargets pulumix.Input[*int]
	// The AWS account that created the file system. If the file system was createdby an IAM user, the parent account to which the user belongs is the owner.
	OwnerId pulumix.Input[*string]
	// The file system performance mode. Can be either `"generalPurpose"` or `"maxIO"` (Default: `"generalPurpose"`).
	PerformanceMode pulumix.Input[*string]
	// The throughput, measured in MiB/s, that you want to provision for the file system. Only applicable with `throughputMode` set to `provisioned`.
	ProvisionedThroughputInMibps pulumix.Input[*float64]
	// The latest known metered size (in bytes) of data stored in the file system, the value is not the exact size that the file system was at any point in time. See Size In Bytes.
	SizeInBytes pulumix.Input[[]*FileSystemSizeInByteArgs]
	// A map of tags to assign to the file system. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// Throughput mode for the file system. Defaults to `bursting`. Valid values: `bursting`, `provisioned`, or `elastic`. When using `provisioned`, also set `provisionedThroughputInMibps`.
	ThroughputMode pulumix.Input[*string]
}

func (FileSystemState) ElementType() reflect.Type {
	return reflect.TypeOf((*fileSystemState)(nil)).Elem()
}

type fileSystemArgs struct {
	// the AWS Availability Zone in which to create the file system. Used to create a file system that uses One Zone storage classes. See [user guide](https://docs.aws.amazon.com/efs/latest/ug/storage-classes.html) for more information.
	AvailabilityZoneName *string `pulumi:"availabilityZoneName"`
	// A unique name (a maximum of 64 characters are allowed)
	// used as reference when creating the Elastic File System to ensure idempotent file
	// system creation. By default generated by this provider. See [Elastic File System]
	// user guide for more information.
	CreationToken *string `pulumi:"creationToken"`
	// If true, the disk will be encrypted.
	Encrypted *bool `pulumi:"encrypted"`
	// The ARN for the KMS encryption key. When specifying kms_key_id, encrypted needs to be set to true.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// A file system [lifecycle policy](https://docs.aws.amazon.com/efs/latest/ug/API_LifecyclePolicy.html) object (documented below).
	LifecyclePolicies []FileSystemLifecyclePolicy `pulumi:"lifecyclePolicies"`
	// The file system performance mode. Can be either `"generalPurpose"` or `"maxIO"` (Default: `"generalPurpose"`).
	PerformanceMode *string `pulumi:"performanceMode"`
	// The throughput, measured in MiB/s, that you want to provision for the file system. Only applicable with `throughputMode` set to `provisioned`.
	ProvisionedThroughputInMibps *float64 `pulumi:"provisionedThroughputInMibps"`
	// A map of tags to assign to the file system. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Throughput mode for the file system. Defaults to `bursting`. Valid values: `bursting`, `provisioned`, or `elastic`. When using `provisioned`, also set `provisionedThroughputInMibps`.
	ThroughputMode *string `pulumi:"throughputMode"`
}

// The set of arguments for constructing a FileSystem resource.
type FileSystemArgs struct {
	// the AWS Availability Zone in which to create the file system. Used to create a file system that uses One Zone storage classes. See [user guide](https://docs.aws.amazon.com/efs/latest/ug/storage-classes.html) for more information.
	AvailabilityZoneName pulumix.Input[*string]
	// A unique name (a maximum of 64 characters are allowed)
	// used as reference when creating the Elastic File System to ensure idempotent file
	// system creation. By default generated by this provider. See [Elastic File System]
	// user guide for more information.
	CreationToken pulumix.Input[*string]
	// If true, the disk will be encrypted.
	Encrypted pulumix.Input[*bool]
	// The ARN for the KMS encryption key. When specifying kms_key_id, encrypted needs to be set to true.
	KmsKeyId pulumix.Input[*string]
	// A file system [lifecycle policy](https://docs.aws.amazon.com/efs/latest/ug/API_LifecyclePolicy.html) object (documented below).
	LifecyclePolicies pulumix.Input[[]*FileSystemLifecyclePolicyArgs]
	// The file system performance mode. Can be either `"generalPurpose"` or `"maxIO"` (Default: `"generalPurpose"`).
	PerformanceMode pulumix.Input[*string]
	// The throughput, measured in MiB/s, that you want to provision for the file system. Only applicable with `throughputMode` set to `provisioned`.
	ProvisionedThroughputInMibps pulumix.Input[*float64]
	// A map of tags to assign to the file system. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// Throughput mode for the file system. Defaults to `bursting`. Valid values: `bursting`, `provisioned`, or `elastic`. When using `provisioned`, also set `provisionedThroughputInMibps`.
	ThroughputMode pulumix.Input[*string]
}

func (FileSystemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*fileSystemArgs)(nil)).Elem()
}

type FileSystemOutput struct{ *pulumi.OutputState }

func (FileSystemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileSystem)(nil)).Elem()
}

func (o FileSystemOutput) ToFileSystemOutput() FileSystemOutput {
	return o
}

func (o FileSystemOutput) ToFileSystemOutputWithContext(ctx context.Context) FileSystemOutput {
	return o
}

func (o FileSystemOutput) ToOutput(ctx context.Context) pulumix.Output[FileSystem] {
	return pulumix.Output[FileSystem]{
		OutputState: o.OutputState,
	}
}

// Amazon Resource Name of the file system.
func (o FileSystemOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[FileSystem](o, func(v FileSystem) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The identifier of the Availability Zone in which the file system's One Zone storage classes exist.
func (o FileSystemOutput) AvailabilityZoneId() pulumix.Output[string] {
	value := pulumix.Apply[FileSystem](o, func(v FileSystem) pulumix.Output[string] { return v.AvailabilityZoneId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// the AWS Availability Zone in which to create the file system. Used to create a file system that uses One Zone storage classes. See [user guide](https://docs.aws.amazon.com/efs/latest/ug/storage-classes.html) for more information.
func (o FileSystemOutput) AvailabilityZoneName() pulumix.Output[string] {
	value := pulumix.Apply[FileSystem](o, func(v FileSystem) pulumix.Output[string] { return v.AvailabilityZoneName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A unique name (a maximum of 64 characters are allowed)
// used as reference when creating the Elastic File System to ensure idempotent file
// system creation. By default generated by this provider. See [Elastic File System]
// user guide for more information.
func (o FileSystemOutput) CreationToken() pulumix.Output[string] {
	value := pulumix.Apply[FileSystem](o, func(v FileSystem) pulumix.Output[string] { return v.CreationToken })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The DNS name for the filesystem per [documented convention](http://docs.aws.amazon.com/efs/latest/ug/mounting-fs-mount-cmd-dns-name.html).
func (o FileSystemOutput) DnsName() pulumix.Output[string] {
	value := pulumix.Apply[FileSystem](o, func(v FileSystem) pulumix.Output[string] { return v.DnsName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// If true, the disk will be encrypted.
func (o FileSystemOutput) Encrypted() pulumix.Output[bool] {
	value := pulumix.Apply[FileSystem](o, func(v FileSystem) pulumix.Output[bool] { return v.Encrypted })
	return pulumix.Flatten[bool, pulumix.Output[bool]](value)
}

// The ARN for the KMS encryption key. When specifying kms_key_id, encrypted needs to be set to true.
func (o FileSystemOutput) KmsKeyId() pulumix.Output[string] {
	value := pulumix.Apply[FileSystem](o, func(v FileSystem) pulumix.Output[string] { return v.KmsKeyId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A file system [lifecycle policy](https://docs.aws.amazon.com/efs/latest/ug/API_LifecyclePolicy.html) object (documented below).
func (o FileSystemOutput) LifecyclePolicies() pulumix.GArrayOutput[FileSystemLifecyclePolicy, FileSystemLifecyclePolicyOutput] {
	value := pulumix.Apply[FileSystem](o, func(v FileSystem) pulumix.GArrayOutput[FileSystemLifecyclePolicy, FileSystemLifecyclePolicyOutput] {
		return v.LifecyclePolicies
	})
	unwrapped := pulumix.Flatten[[]FileSystemLifecyclePolicy, pulumix.GArrayOutput[FileSystemLifecyclePolicy, FileSystemLifecyclePolicyOutput]](value)
	return pulumix.GArrayOutput[FileSystemLifecyclePolicy, FileSystemLifecyclePolicyOutput]{OutputState: unwrapped.OutputState}
}

// The value of the file system's `Name` tag.
func (o FileSystemOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[FileSystem](o, func(v FileSystem) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The current number of mount targets that the file system has.
func (o FileSystemOutput) NumberOfMountTargets() pulumix.Output[int] {
	value := pulumix.Apply[FileSystem](o, func(v FileSystem) pulumix.Output[int] { return v.NumberOfMountTargets })
	return pulumix.Flatten[int, pulumix.Output[int]](value)
}

// The AWS account that created the file system. If the file system was createdby an IAM user, the parent account to which the user belongs is the owner.
func (o FileSystemOutput) OwnerId() pulumix.Output[string] {
	value := pulumix.Apply[FileSystem](o, func(v FileSystem) pulumix.Output[string] { return v.OwnerId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The file system performance mode. Can be either `"generalPurpose"` or `"maxIO"` (Default: `"generalPurpose"`).
func (o FileSystemOutput) PerformanceMode() pulumix.Output[string] {
	value := pulumix.Apply[FileSystem](o, func(v FileSystem) pulumix.Output[string] { return v.PerformanceMode })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The throughput, measured in MiB/s, that you want to provision for the file system. Only applicable with `throughputMode` set to `provisioned`.
func (o FileSystemOutput) ProvisionedThroughputInMibps() pulumix.Output[*float64] {
	value := pulumix.Apply[FileSystem](o, func(v FileSystem) pulumix.Output[*float64] { return v.ProvisionedThroughputInMibps })
	return pulumix.Flatten[*float64, pulumix.Output[*float64]](value)
}

// The latest known metered size (in bytes) of data stored in the file system, the value is not the exact size that the file system was at any point in time. See Size In Bytes.
func (o FileSystemOutput) SizeInBytes() pulumix.GArrayOutput[FileSystemSizeInByte, FileSystemSizeInByteOutput] {
	value := pulumix.Apply[FileSystem](o, func(v FileSystem) pulumix.GArrayOutput[FileSystemSizeInByte, FileSystemSizeInByteOutput] {
		return v.SizeInBytes
	})
	unwrapped := pulumix.Flatten[[]FileSystemSizeInByte, pulumix.GArrayOutput[FileSystemSizeInByte, FileSystemSizeInByteOutput]](value)
	return pulumix.GArrayOutput[FileSystemSizeInByte, FileSystemSizeInByteOutput]{OutputState: unwrapped.OutputState}
}

// A map of tags to assign to the file system. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o FileSystemOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[FileSystem](o, func(v FileSystem) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o FileSystemOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[FileSystem](o, func(v FileSystem) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Throughput mode for the file system. Defaults to `bursting`. Valid values: `bursting`, `provisioned`, or `elastic`. When using `provisioned`, also set `provisionedThroughputInMibps`.
func (o FileSystemOutput) ThroughputMode() pulumix.Output[*string] {
	value := pulumix.Apply[FileSystem](o, func(v FileSystem) pulumix.Output[*string] { return v.ThroughputMode })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

func init() {
	pulumi.RegisterOutputType(FileSystemOutput{})
}
