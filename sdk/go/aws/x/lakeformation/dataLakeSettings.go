// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package lakeformation

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manages Lake Formation principals designated as data lake administrators and lists of principal permission entries for default create database and default create table permissions.
//
// > **NOTE:** Lake Formation introduces fine-grained access control for data in your data lake. Part of the changes include the `IAMAllowedPrincipals` principal in order to make Lake Formation backwards compatible with existing IAM and Glue permissions. For more information, see [Changing the Default Security Settings for Your Data Lake](https://docs.aws.amazon.com/lake-formation/latest/dg/change-settings.html) and [Upgrading AWS Glue Data Permissions to the AWS Lake Formation Model](https://docs.aws.amazon.com/lake-formation/latest/dg/upgrade-glue-lake-formation.html).
type DataLakeSettings struct {
	pulumi.CustomResourceState

	// Set of ARNs of AWS Lake Formation principals (IAM users or roles).
	Admins pulumix.ArrayOutput[string] `pulumi:"admins"`
	// Whether to allow Amazon EMR clusters to access data managed by Lake Formation.
	AllowExternalDataFiltering pulumix.Output[*bool] `pulumi:"allowExternalDataFiltering"`
	// Lake Formation relies on a privileged process secured by Amazon EMR or the third party integrator to tag the user's role while assuming it.
	//
	// > **NOTE:** Although optional, not including `admins`, `createDatabaseDefaultPermissions`, `createTableDefaultPermissions`, and/or `trustedResourceOwners` results in the setting being cleared.
	AuthorizedSessionTagValueLists pulumix.ArrayOutput[string] `pulumi:"authorizedSessionTagValueLists"`
	// Identifier for the Data Catalog. By default, the account ID.
	CatalogId pulumix.Output[*string] `pulumi:"catalogId"`
	// Up to three configuration blocks of principal permissions for default create database permissions. Detailed below.
	CreateDatabaseDefaultPermissions pulumix.GArrayOutput[DataLakeSettingsCreateDatabaseDefaultPermission, DataLakeSettingsCreateDatabaseDefaultPermissionOutput] `pulumi:"createDatabaseDefaultPermissions"`
	// Up to three configuration blocks of principal permissions for default create table permissions. Detailed below.
	CreateTableDefaultPermissions pulumix.GArrayOutput[DataLakeSettingsCreateTableDefaultPermission, DataLakeSettingsCreateTableDefaultPermissionOutput] `pulumi:"createTableDefaultPermissions"`
	// A list of the account IDs of Amazon Web Services accounts with Amazon EMR clusters that are to perform data filtering.
	ExternalDataFilteringAllowLists pulumix.ArrayOutput[string] `pulumi:"externalDataFilteringAllowLists"`
	// Set of ARNs of AWS Lake Formation principals (IAM users or roles) with only view access to the resources.
	ReadOnlyAdmins pulumix.ArrayOutput[string] `pulumi:"readOnlyAdmins"`
	// List of the resource-owning account IDs that the caller's account can use to share their user access details (user ARNs).
	TrustedResourceOwners pulumix.ArrayOutput[string] `pulumi:"trustedResourceOwners"`
}

// NewDataLakeSettings registers a new resource with the given unique name, arguments, and options.
func NewDataLakeSettings(ctx *pulumi.Context,
	name string, args *DataLakeSettingsArgs, opts ...pulumi.ResourceOption) (*DataLakeSettings, error) {
	if args == nil {
		args = &DataLakeSettingsArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DataLakeSettings
	err := ctx.RegisterResource("aws:lakeformation/dataLakeSettings:DataLakeSettings", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDataLakeSettings gets an existing DataLakeSettings resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDataLakeSettings(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DataLakeSettingsState, opts ...pulumi.ResourceOption) (*DataLakeSettings, error) {
	var resource DataLakeSettings
	err := ctx.ReadResource("aws:lakeformation/dataLakeSettings:DataLakeSettings", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DataLakeSettings resources.
type dataLakeSettingsState struct {
	// Set of ARNs of AWS Lake Formation principals (IAM users or roles).
	Admins []string `pulumi:"admins"`
	// Whether to allow Amazon EMR clusters to access data managed by Lake Formation.
	AllowExternalDataFiltering *bool `pulumi:"allowExternalDataFiltering"`
	// Lake Formation relies on a privileged process secured by Amazon EMR or the third party integrator to tag the user's role while assuming it.
	//
	// > **NOTE:** Although optional, not including `admins`, `createDatabaseDefaultPermissions`, `createTableDefaultPermissions`, and/or `trustedResourceOwners` results in the setting being cleared.
	AuthorizedSessionTagValueLists []string `pulumi:"authorizedSessionTagValueLists"`
	// Identifier for the Data Catalog. By default, the account ID.
	CatalogId *string `pulumi:"catalogId"`
	// Up to three configuration blocks of principal permissions for default create database permissions. Detailed below.
	CreateDatabaseDefaultPermissions []DataLakeSettingsCreateDatabaseDefaultPermission `pulumi:"createDatabaseDefaultPermissions"`
	// Up to three configuration blocks of principal permissions for default create table permissions. Detailed below.
	CreateTableDefaultPermissions []DataLakeSettingsCreateTableDefaultPermission `pulumi:"createTableDefaultPermissions"`
	// A list of the account IDs of Amazon Web Services accounts with Amazon EMR clusters that are to perform data filtering.
	ExternalDataFilteringAllowLists []string `pulumi:"externalDataFilteringAllowLists"`
	// Set of ARNs of AWS Lake Formation principals (IAM users or roles) with only view access to the resources.
	ReadOnlyAdmins []string `pulumi:"readOnlyAdmins"`
	// List of the resource-owning account IDs that the caller's account can use to share their user access details (user ARNs).
	TrustedResourceOwners []string `pulumi:"trustedResourceOwners"`
}

type DataLakeSettingsState struct {
	// Set of ARNs of AWS Lake Formation principals (IAM users or roles).
	Admins pulumix.Input[[]string]
	// Whether to allow Amazon EMR clusters to access data managed by Lake Formation.
	AllowExternalDataFiltering pulumix.Input[*bool]
	// Lake Formation relies on a privileged process secured by Amazon EMR or the third party integrator to tag the user's role while assuming it.
	//
	// > **NOTE:** Although optional, not including `admins`, `createDatabaseDefaultPermissions`, `createTableDefaultPermissions`, and/or `trustedResourceOwners` results in the setting being cleared.
	AuthorizedSessionTagValueLists pulumix.Input[[]string]
	// Identifier for the Data Catalog. By default, the account ID.
	CatalogId pulumix.Input[*string]
	// Up to three configuration blocks of principal permissions for default create database permissions. Detailed below.
	CreateDatabaseDefaultPermissions pulumix.Input[[]*DataLakeSettingsCreateDatabaseDefaultPermissionArgs]
	// Up to three configuration blocks of principal permissions for default create table permissions. Detailed below.
	CreateTableDefaultPermissions pulumix.Input[[]*DataLakeSettingsCreateTableDefaultPermissionArgs]
	// A list of the account IDs of Amazon Web Services accounts with Amazon EMR clusters that are to perform data filtering.
	ExternalDataFilteringAllowLists pulumix.Input[[]string]
	// Set of ARNs of AWS Lake Formation principals (IAM users or roles) with only view access to the resources.
	ReadOnlyAdmins pulumix.Input[[]string]
	// List of the resource-owning account IDs that the caller's account can use to share their user access details (user ARNs).
	TrustedResourceOwners pulumix.Input[[]string]
}

func (DataLakeSettingsState) ElementType() reflect.Type {
	return reflect.TypeOf((*dataLakeSettingsState)(nil)).Elem()
}

type dataLakeSettingsArgs struct {
	// Set of ARNs of AWS Lake Formation principals (IAM users or roles).
	Admins []string `pulumi:"admins"`
	// Whether to allow Amazon EMR clusters to access data managed by Lake Formation.
	AllowExternalDataFiltering *bool `pulumi:"allowExternalDataFiltering"`
	// Lake Formation relies on a privileged process secured by Amazon EMR or the third party integrator to tag the user's role while assuming it.
	//
	// > **NOTE:** Although optional, not including `admins`, `createDatabaseDefaultPermissions`, `createTableDefaultPermissions`, and/or `trustedResourceOwners` results in the setting being cleared.
	AuthorizedSessionTagValueLists []string `pulumi:"authorizedSessionTagValueLists"`
	// Identifier for the Data Catalog. By default, the account ID.
	CatalogId *string `pulumi:"catalogId"`
	// Up to three configuration blocks of principal permissions for default create database permissions. Detailed below.
	CreateDatabaseDefaultPermissions []DataLakeSettingsCreateDatabaseDefaultPermission `pulumi:"createDatabaseDefaultPermissions"`
	// Up to three configuration blocks of principal permissions for default create table permissions. Detailed below.
	CreateTableDefaultPermissions []DataLakeSettingsCreateTableDefaultPermission `pulumi:"createTableDefaultPermissions"`
	// A list of the account IDs of Amazon Web Services accounts with Amazon EMR clusters that are to perform data filtering.
	ExternalDataFilteringAllowLists []string `pulumi:"externalDataFilteringAllowLists"`
	// Set of ARNs of AWS Lake Formation principals (IAM users or roles) with only view access to the resources.
	ReadOnlyAdmins []string `pulumi:"readOnlyAdmins"`
	// List of the resource-owning account IDs that the caller's account can use to share their user access details (user ARNs).
	TrustedResourceOwners []string `pulumi:"trustedResourceOwners"`
}

// The set of arguments for constructing a DataLakeSettings resource.
type DataLakeSettingsArgs struct {
	// Set of ARNs of AWS Lake Formation principals (IAM users or roles).
	Admins pulumix.Input[[]string]
	// Whether to allow Amazon EMR clusters to access data managed by Lake Formation.
	AllowExternalDataFiltering pulumix.Input[*bool]
	// Lake Formation relies on a privileged process secured by Amazon EMR or the third party integrator to tag the user's role while assuming it.
	//
	// > **NOTE:** Although optional, not including `admins`, `createDatabaseDefaultPermissions`, `createTableDefaultPermissions`, and/or `trustedResourceOwners` results in the setting being cleared.
	AuthorizedSessionTagValueLists pulumix.Input[[]string]
	// Identifier for the Data Catalog. By default, the account ID.
	CatalogId pulumix.Input[*string]
	// Up to three configuration blocks of principal permissions for default create database permissions. Detailed below.
	CreateDatabaseDefaultPermissions pulumix.Input[[]*DataLakeSettingsCreateDatabaseDefaultPermissionArgs]
	// Up to three configuration blocks of principal permissions for default create table permissions. Detailed below.
	CreateTableDefaultPermissions pulumix.Input[[]*DataLakeSettingsCreateTableDefaultPermissionArgs]
	// A list of the account IDs of Amazon Web Services accounts with Amazon EMR clusters that are to perform data filtering.
	ExternalDataFilteringAllowLists pulumix.Input[[]string]
	// Set of ARNs of AWS Lake Formation principals (IAM users or roles) with only view access to the resources.
	ReadOnlyAdmins pulumix.Input[[]string]
	// List of the resource-owning account IDs that the caller's account can use to share their user access details (user ARNs).
	TrustedResourceOwners pulumix.Input[[]string]
}

func (DataLakeSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dataLakeSettingsArgs)(nil)).Elem()
}

type DataLakeSettingsOutput struct{ *pulumi.OutputState }

func (DataLakeSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeSettings)(nil)).Elem()
}

func (o DataLakeSettingsOutput) ToDataLakeSettingsOutput() DataLakeSettingsOutput {
	return o
}

func (o DataLakeSettingsOutput) ToDataLakeSettingsOutputWithContext(ctx context.Context) DataLakeSettingsOutput {
	return o
}

func (o DataLakeSettingsOutput) ToOutput(ctx context.Context) pulumix.Output[DataLakeSettings] {
	return pulumix.Output[DataLakeSettings]{
		OutputState: o.OutputState,
	}
}

// Set of ARNs of AWS Lake Formation principals (IAM users or roles).
func (o DataLakeSettingsOutput) Admins() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[DataLakeSettings](o, func(v DataLakeSettings) pulumix.ArrayOutput[string] { return v.Admins })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// Whether to allow Amazon EMR clusters to access data managed by Lake Formation.
func (o DataLakeSettingsOutput) AllowExternalDataFiltering() pulumix.Output[*bool] {
	value := pulumix.Apply[DataLakeSettings](o, func(v DataLakeSettings) pulumix.Output[*bool] { return v.AllowExternalDataFiltering })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// Lake Formation relies on a privileged process secured by Amazon EMR or the third party integrator to tag the user's role while assuming it.
//
// > **NOTE:** Although optional, not including `admins`, `createDatabaseDefaultPermissions`, `createTableDefaultPermissions`, and/or `trustedResourceOwners` results in the setting being cleared.
func (o DataLakeSettingsOutput) AuthorizedSessionTagValueLists() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[DataLakeSettings](o, func(v DataLakeSettings) pulumix.ArrayOutput[string] { return v.AuthorizedSessionTagValueLists })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// Identifier for the Data Catalog. By default, the account ID.
func (o DataLakeSettingsOutput) CatalogId() pulumix.Output[*string] {
	value := pulumix.Apply[DataLakeSettings](o, func(v DataLakeSettings) pulumix.Output[*string] { return v.CatalogId })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Up to three configuration blocks of principal permissions for default create database permissions. Detailed below.
func (o DataLakeSettingsOutput) CreateDatabaseDefaultPermissions() pulumix.GArrayOutput[DataLakeSettingsCreateDatabaseDefaultPermission, DataLakeSettingsCreateDatabaseDefaultPermissionOutput] {
	value := pulumix.Apply[DataLakeSettings](o, func(v DataLakeSettings) pulumix.GArrayOutput[DataLakeSettingsCreateDatabaseDefaultPermission, DataLakeSettingsCreateDatabaseDefaultPermissionOutput] {
		return v.CreateDatabaseDefaultPermissions
	})
	unwrapped := pulumix.Flatten[[]DataLakeSettingsCreateDatabaseDefaultPermission, pulumix.GArrayOutput[DataLakeSettingsCreateDatabaseDefaultPermission, DataLakeSettingsCreateDatabaseDefaultPermissionOutput]](value)
	return pulumix.GArrayOutput[DataLakeSettingsCreateDatabaseDefaultPermission, DataLakeSettingsCreateDatabaseDefaultPermissionOutput]{OutputState: unwrapped.OutputState}
}

// Up to three configuration blocks of principal permissions for default create table permissions. Detailed below.
func (o DataLakeSettingsOutput) CreateTableDefaultPermissions() pulumix.GArrayOutput[DataLakeSettingsCreateTableDefaultPermission, DataLakeSettingsCreateTableDefaultPermissionOutput] {
	value := pulumix.Apply[DataLakeSettings](o, func(v DataLakeSettings) pulumix.GArrayOutput[DataLakeSettingsCreateTableDefaultPermission, DataLakeSettingsCreateTableDefaultPermissionOutput] {
		return v.CreateTableDefaultPermissions
	})
	unwrapped := pulumix.Flatten[[]DataLakeSettingsCreateTableDefaultPermission, pulumix.GArrayOutput[DataLakeSettingsCreateTableDefaultPermission, DataLakeSettingsCreateTableDefaultPermissionOutput]](value)
	return pulumix.GArrayOutput[DataLakeSettingsCreateTableDefaultPermission, DataLakeSettingsCreateTableDefaultPermissionOutput]{OutputState: unwrapped.OutputState}
}

// A list of the account IDs of Amazon Web Services accounts with Amazon EMR clusters that are to perform data filtering.
func (o DataLakeSettingsOutput) ExternalDataFilteringAllowLists() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[DataLakeSettings](o, func(v DataLakeSettings) pulumix.ArrayOutput[string] { return v.ExternalDataFilteringAllowLists })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// Set of ARNs of AWS Lake Formation principals (IAM users or roles) with only view access to the resources.
func (o DataLakeSettingsOutput) ReadOnlyAdmins() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[DataLakeSettings](o, func(v DataLakeSettings) pulumix.ArrayOutput[string] { return v.ReadOnlyAdmins })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// List of the resource-owning account IDs that the caller's account can use to share their user access details (user ARNs).
func (o DataLakeSettingsOutput) TrustedResourceOwners() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[DataLakeSettings](o, func(v DataLakeSettings) pulumix.ArrayOutput[string] { return v.TrustedResourceOwners })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(DataLakeSettingsOutput{})
}
