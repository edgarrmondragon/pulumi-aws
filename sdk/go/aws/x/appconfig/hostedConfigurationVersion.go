// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appconfig

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an AppConfig Hosted Configuration Version resource.
type HostedConfigurationVersion struct {
	pulumi.CustomResourceState

	// Application ID.
	ApplicationId pulumix.Output[string] `pulumi:"applicationId"`
	// ARN of the AppConfig  hosted configuration version.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// Configuration profile ID.
	ConfigurationProfileId pulumix.Output[string] `pulumi:"configurationProfileId"`
	// Content of the configuration or the configuration data.
	Content pulumix.Output[string] `pulumi:"content"`
	// Standard MIME type describing the format of the configuration content. For more information, see [Content-Type](https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.17).
	ContentType pulumix.Output[string] `pulumi:"contentType"`
	// Description of the configuration.
	Description pulumix.Output[*string] `pulumi:"description"`
	// Version number of the hosted configuration.
	VersionNumber pulumix.Output[int] `pulumi:"versionNumber"`
}

// NewHostedConfigurationVersion registers a new resource with the given unique name, arguments, and options.
func NewHostedConfigurationVersion(ctx *pulumi.Context,
	name string, args *HostedConfigurationVersionArgs, opts ...pulumi.ResourceOption) (*HostedConfigurationVersion, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApplicationId == nil {
		return nil, errors.New("invalid value for required argument 'ApplicationId'")
	}
	if args.ConfigurationProfileId == nil {
		return nil, errors.New("invalid value for required argument 'ConfigurationProfileId'")
	}
	if args.Content == nil {
		return nil, errors.New("invalid value for required argument 'Content'")
	}
	if args.ContentType == nil {
		return nil, errors.New("invalid value for required argument 'ContentType'")
	}
	if args.Content != nil {
		untypedSecretValue := pulumi.ToSecret(args.Content.ToOutput(ctx.Context()).Untyped())
		args.Content = pulumix.MustConvertTyped[string](untypedSecretValue)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"content",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource HostedConfigurationVersion
	err := ctx.RegisterResource("aws:appconfig/hostedConfigurationVersion:HostedConfigurationVersion", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetHostedConfigurationVersion gets an existing HostedConfigurationVersion resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetHostedConfigurationVersion(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *HostedConfigurationVersionState, opts ...pulumi.ResourceOption) (*HostedConfigurationVersion, error) {
	var resource HostedConfigurationVersion
	err := ctx.ReadResource("aws:appconfig/hostedConfigurationVersion:HostedConfigurationVersion", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering HostedConfigurationVersion resources.
type hostedConfigurationVersionState struct {
	// Application ID.
	ApplicationId *string `pulumi:"applicationId"`
	// ARN of the AppConfig  hosted configuration version.
	Arn *string `pulumi:"arn"`
	// Configuration profile ID.
	ConfigurationProfileId *string `pulumi:"configurationProfileId"`
	// Content of the configuration or the configuration data.
	Content *string `pulumi:"content"`
	// Standard MIME type describing the format of the configuration content. For more information, see [Content-Type](https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.17).
	ContentType *string `pulumi:"contentType"`
	// Description of the configuration.
	Description *string `pulumi:"description"`
	// Version number of the hosted configuration.
	VersionNumber *int `pulumi:"versionNumber"`
}

type HostedConfigurationVersionState struct {
	// Application ID.
	ApplicationId pulumix.Input[*string]
	// ARN of the AppConfig  hosted configuration version.
	Arn pulumix.Input[*string]
	// Configuration profile ID.
	ConfigurationProfileId pulumix.Input[*string]
	// Content of the configuration or the configuration data.
	Content pulumix.Input[*string]
	// Standard MIME type describing the format of the configuration content. For more information, see [Content-Type](https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.17).
	ContentType pulumix.Input[*string]
	// Description of the configuration.
	Description pulumix.Input[*string]
	// Version number of the hosted configuration.
	VersionNumber pulumix.Input[*int]
}

func (HostedConfigurationVersionState) ElementType() reflect.Type {
	return reflect.TypeOf((*hostedConfigurationVersionState)(nil)).Elem()
}

type hostedConfigurationVersionArgs struct {
	// Application ID.
	ApplicationId string `pulumi:"applicationId"`
	// Configuration profile ID.
	ConfigurationProfileId string `pulumi:"configurationProfileId"`
	// Content of the configuration or the configuration data.
	Content string `pulumi:"content"`
	// Standard MIME type describing the format of the configuration content. For more information, see [Content-Type](https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.17).
	ContentType string `pulumi:"contentType"`
	// Description of the configuration.
	Description *string `pulumi:"description"`
}

// The set of arguments for constructing a HostedConfigurationVersion resource.
type HostedConfigurationVersionArgs struct {
	// Application ID.
	ApplicationId pulumix.Input[string]
	// Configuration profile ID.
	ConfigurationProfileId pulumix.Input[string]
	// Content of the configuration or the configuration data.
	Content pulumix.Input[string]
	// Standard MIME type describing the format of the configuration content. For more information, see [Content-Type](https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.17).
	ContentType pulumix.Input[string]
	// Description of the configuration.
	Description pulumix.Input[*string]
}

func (HostedConfigurationVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*hostedConfigurationVersionArgs)(nil)).Elem()
}

type HostedConfigurationVersionOutput struct{ *pulumi.OutputState }

func (HostedConfigurationVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostedConfigurationVersion)(nil)).Elem()
}

func (o HostedConfigurationVersionOutput) ToHostedConfigurationVersionOutput() HostedConfigurationVersionOutput {
	return o
}

func (o HostedConfigurationVersionOutput) ToHostedConfigurationVersionOutputWithContext(ctx context.Context) HostedConfigurationVersionOutput {
	return o
}

func (o HostedConfigurationVersionOutput) ToOutput(ctx context.Context) pulumix.Output[HostedConfigurationVersion] {
	return pulumix.Output[HostedConfigurationVersion]{
		OutputState: o.OutputState,
	}
}

// Application ID.
func (o HostedConfigurationVersionOutput) ApplicationId() pulumix.Output[string] {
	value := pulumix.Apply[HostedConfigurationVersion](o, func(v HostedConfigurationVersion) pulumix.Output[string] { return v.ApplicationId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// ARN of the AppConfig  hosted configuration version.
func (o HostedConfigurationVersionOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[HostedConfigurationVersion](o, func(v HostedConfigurationVersion) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Configuration profile ID.
func (o HostedConfigurationVersionOutput) ConfigurationProfileId() pulumix.Output[string] {
	value := pulumix.Apply[HostedConfigurationVersion](o, func(v HostedConfigurationVersion) pulumix.Output[string] { return v.ConfigurationProfileId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Content of the configuration or the configuration data.
func (o HostedConfigurationVersionOutput) Content() pulumix.Output[string] {
	value := pulumix.Apply[HostedConfigurationVersion](o, func(v HostedConfigurationVersion) pulumix.Output[string] { return v.Content })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Standard MIME type describing the format of the configuration content. For more information, see [Content-Type](https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.17).
func (o HostedConfigurationVersionOutput) ContentType() pulumix.Output[string] {
	value := pulumix.Apply[HostedConfigurationVersion](o, func(v HostedConfigurationVersion) pulumix.Output[string] { return v.ContentType })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Description of the configuration.
func (o HostedConfigurationVersionOutput) Description() pulumix.Output[*string] {
	value := pulumix.Apply[HostedConfigurationVersion](o, func(v HostedConfigurationVersion) pulumix.Output[*string] { return v.Description })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Version number of the hosted configuration.
func (o HostedConfigurationVersionOutput) VersionNumber() pulumix.Output[int] {
	value := pulumix.Apply[HostedConfigurationVersion](o, func(v HostedConfigurationVersion) pulumix.Output[int] { return v.VersionNumber })
	return pulumix.Flatten[int, pulumix.Output[int]](value)
}

func init() {
	pulumi.RegisterOutputType(HostedConfigurationVersionOutput{})
}
