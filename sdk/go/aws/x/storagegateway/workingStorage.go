// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package storagegateway

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manages an AWS Storage Gateway working storage.
//
// > **NOTE:** The Storage Gateway API provides no method to remove a working storage disk. Destroying this resource does not perform any Storage Gateway actions.
type WorkingStorage struct {
	pulumi.CustomResourceState

	// Local disk identifier. For example, `pci-0000:03:00.0-scsi-0:0:0:0`.
	DiskId pulumix.Output[string] `pulumi:"diskId"`
	// The Amazon Resource Name (ARN) of the gateway.
	GatewayArn pulumix.Output[string] `pulumi:"gatewayArn"`
}

// NewWorkingStorage registers a new resource with the given unique name, arguments, and options.
func NewWorkingStorage(ctx *pulumi.Context,
	name string, args *WorkingStorageArgs, opts ...pulumi.ResourceOption) (*WorkingStorage, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DiskId == nil {
		return nil, errors.New("invalid value for required argument 'DiskId'")
	}
	if args.GatewayArn == nil {
		return nil, errors.New("invalid value for required argument 'GatewayArn'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WorkingStorage
	err := ctx.RegisterResource("aws:storagegateway/workingStorage:WorkingStorage", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkingStorage gets an existing WorkingStorage resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkingStorage(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkingStorageState, opts ...pulumi.ResourceOption) (*WorkingStorage, error) {
	var resource WorkingStorage
	err := ctx.ReadResource("aws:storagegateway/workingStorage:WorkingStorage", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkingStorage resources.
type workingStorageState struct {
	// Local disk identifier. For example, `pci-0000:03:00.0-scsi-0:0:0:0`.
	DiskId *string `pulumi:"diskId"`
	// The Amazon Resource Name (ARN) of the gateway.
	GatewayArn *string `pulumi:"gatewayArn"`
}

type WorkingStorageState struct {
	// Local disk identifier. For example, `pci-0000:03:00.0-scsi-0:0:0:0`.
	DiskId pulumix.Input[*string]
	// The Amazon Resource Name (ARN) of the gateway.
	GatewayArn pulumix.Input[*string]
}

func (WorkingStorageState) ElementType() reflect.Type {
	return reflect.TypeOf((*workingStorageState)(nil)).Elem()
}

type workingStorageArgs struct {
	// Local disk identifier. For example, `pci-0000:03:00.0-scsi-0:0:0:0`.
	DiskId string `pulumi:"diskId"`
	// The Amazon Resource Name (ARN) of the gateway.
	GatewayArn string `pulumi:"gatewayArn"`
}

// The set of arguments for constructing a WorkingStorage resource.
type WorkingStorageArgs struct {
	// Local disk identifier. For example, `pci-0000:03:00.0-scsi-0:0:0:0`.
	DiskId pulumix.Input[string]
	// The Amazon Resource Name (ARN) of the gateway.
	GatewayArn pulumix.Input[string]
}

func (WorkingStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workingStorageArgs)(nil)).Elem()
}

type WorkingStorageOutput struct{ *pulumi.OutputState }

func (WorkingStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkingStorage)(nil)).Elem()
}

func (o WorkingStorageOutput) ToWorkingStorageOutput() WorkingStorageOutput {
	return o
}

func (o WorkingStorageOutput) ToWorkingStorageOutputWithContext(ctx context.Context) WorkingStorageOutput {
	return o
}

func (o WorkingStorageOutput) ToOutput(ctx context.Context) pulumix.Output[WorkingStorage] {
	return pulumix.Output[WorkingStorage]{
		OutputState: o.OutputState,
	}
}

// Local disk identifier. For example, `pci-0000:03:00.0-scsi-0:0:0:0`.
func (o WorkingStorageOutput) DiskId() pulumix.Output[string] {
	value := pulumix.Apply[WorkingStorage](o, func(v WorkingStorage) pulumix.Output[string] { return v.DiskId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The Amazon Resource Name (ARN) of the gateway.
func (o WorkingStorageOutput) GatewayArn() pulumix.Output[string] {
	value := pulumix.Apply[WorkingStorage](o, func(v WorkingStorage) pulumix.Output[string] { return v.GatewayArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(WorkingStorageOutput{})
}
