// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package connect

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an Amazon Connect Queue resource. For more information see
// [Amazon Connect: Getting Started](https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-get-started.html)
type Queue struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) of the Queue.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// Specifies the description of the Queue.
	Description pulumix.Output[*string] `pulumi:"description"`
	// Specifies the identifier of the Hours of Operation.
	HoursOfOperationId pulumix.Output[string] `pulumi:"hoursOfOperationId"`
	// Specifies the identifier of the hosting Amazon Connect Instance.
	InstanceId pulumix.Output[string] `pulumi:"instanceId"`
	// Specifies the maximum number of contacts that can be in the queue before it is considered full. Minimum value of 0.
	MaxContacts pulumix.Output[*int] `pulumi:"maxContacts"`
	// Specifies the name of the Queue.
	Name pulumix.Output[string] `pulumi:"name"`
	// A block that defines the outbound caller ID name, number, and outbound whisper flow. The Outbound Caller Config block is documented below.
	OutboundCallerConfig pulumix.GPtrOutput[QueueOutboundCallerConfig, QueueOutboundCallerConfigOutput] `pulumi:"outboundCallerConfig"`
	// The identifier for the Queue.
	QueueId pulumix.Output[string] `pulumi:"queueId"`
	// Specifies a list of quick connects ids that determine the quick connects available to agents who are working the queue.
	QuickConnectIds pulumix.ArrayOutput[string] `pulumi:"quickConnectIds"`
	// Specifies the description of the Queue. Valid values are `ENABLED`, `DISABLED`.
	Status pulumix.Output[string] `pulumi:"status"`
	// Tags to apply to the Queue. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
}

// NewQueue registers a new resource with the given unique name, arguments, and options.
func NewQueue(ctx *pulumi.Context,
	name string, args *QueueArgs, opts ...pulumi.ResourceOption) (*Queue, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.HoursOfOperationId == nil {
		return nil, errors.New("invalid value for required argument 'HoursOfOperationId'")
	}
	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Queue
	err := ctx.RegisterResource("aws:connect/queue:Queue", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetQueue gets an existing Queue resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetQueue(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *QueueState, opts ...pulumi.ResourceOption) (*Queue, error) {
	var resource Queue
	err := ctx.ReadResource("aws:connect/queue:Queue", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Queue resources.
type queueState struct {
	// The Amazon Resource Name (ARN) of the Queue.
	Arn *string `pulumi:"arn"`
	// Specifies the description of the Queue.
	Description *string `pulumi:"description"`
	// Specifies the identifier of the Hours of Operation.
	HoursOfOperationId *string `pulumi:"hoursOfOperationId"`
	// Specifies the identifier of the hosting Amazon Connect Instance.
	InstanceId *string `pulumi:"instanceId"`
	// Specifies the maximum number of contacts that can be in the queue before it is considered full. Minimum value of 0.
	MaxContacts *int `pulumi:"maxContacts"`
	// Specifies the name of the Queue.
	Name *string `pulumi:"name"`
	// A block that defines the outbound caller ID name, number, and outbound whisper flow. The Outbound Caller Config block is documented below.
	OutboundCallerConfig *QueueOutboundCallerConfig `pulumi:"outboundCallerConfig"`
	// The identifier for the Queue.
	QueueId *string `pulumi:"queueId"`
	// Specifies a list of quick connects ids that determine the quick connects available to agents who are working the queue.
	QuickConnectIds []string `pulumi:"quickConnectIds"`
	// Specifies the description of the Queue. Valid values are `ENABLED`, `DISABLED`.
	Status *string `pulumi:"status"`
	// Tags to apply to the Queue. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type QueueState struct {
	// The Amazon Resource Name (ARN) of the Queue.
	Arn pulumix.Input[*string]
	// Specifies the description of the Queue.
	Description pulumix.Input[*string]
	// Specifies the identifier of the Hours of Operation.
	HoursOfOperationId pulumix.Input[*string]
	// Specifies the identifier of the hosting Amazon Connect Instance.
	InstanceId pulumix.Input[*string]
	// Specifies the maximum number of contacts that can be in the queue before it is considered full. Minimum value of 0.
	MaxContacts pulumix.Input[*int]
	// Specifies the name of the Queue.
	Name pulumix.Input[*string]
	// A block that defines the outbound caller ID name, number, and outbound whisper flow. The Outbound Caller Config block is documented below.
	OutboundCallerConfig pulumix.Input[*QueueOutboundCallerConfigArgs]
	// The identifier for the Queue.
	QueueId pulumix.Input[*string]
	// Specifies a list of quick connects ids that determine the quick connects available to agents who are working the queue.
	QuickConnectIds pulumix.Input[[]string]
	// Specifies the description of the Queue. Valid values are `ENABLED`, `DISABLED`.
	Status pulumix.Input[*string]
	// Tags to apply to the Queue. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
}

func (QueueState) ElementType() reflect.Type {
	return reflect.TypeOf((*queueState)(nil)).Elem()
}

type queueArgs struct {
	// Specifies the description of the Queue.
	Description *string `pulumi:"description"`
	// Specifies the identifier of the Hours of Operation.
	HoursOfOperationId string `pulumi:"hoursOfOperationId"`
	// Specifies the identifier of the hosting Amazon Connect Instance.
	InstanceId string `pulumi:"instanceId"`
	// Specifies the maximum number of contacts that can be in the queue before it is considered full. Minimum value of 0.
	MaxContacts *int `pulumi:"maxContacts"`
	// Specifies the name of the Queue.
	Name *string `pulumi:"name"`
	// A block that defines the outbound caller ID name, number, and outbound whisper flow. The Outbound Caller Config block is documented below.
	OutboundCallerConfig *QueueOutboundCallerConfig `pulumi:"outboundCallerConfig"`
	// Specifies a list of quick connects ids that determine the quick connects available to agents who are working the queue.
	QuickConnectIds []string `pulumi:"quickConnectIds"`
	// Specifies the description of the Queue. Valid values are `ENABLED`, `DISABLED`.
	Status *string `pulumi:"status"`
	// Tags to apply to the Queue. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Queue resource.
type QueueArgs struct {
	// Specifies the description of the Queue.
	Description pulumix.Input[*string]
	// Specifies the identifier of the Hours of Operation.
	HoursOfOperationId pulumix.Input[string]
	// Specifies the identifier of the hosting Amazon Connect Instance.
	InstanceId pulumix.Input[string]
	// Specifies the maximum number of contacts that can be in the queue before it is considered full. Minimum value of 0.
	MaxContacts pulumix.Input[*int]
	// Specifies the name of the Queue.
	Name pulumix.Input[*string]
	// A block that defines the outbound caller ID name, number, and outbound whisper flow. The Outbound Caller Config block is documented below.
	OutboundCallerConfig pulumix.Input[*QueueOutboundCallerConfigArgs]
	// Specifies a list of quick connects ids that determine the quick connects available to agents who are working the queue.
	QuickConnectIds pulumix.Input[[]string]
	// Specifies the description of the Queue. Valid values are `ENABLED`, `DISABLED`.
	Status pulumix.Input[*string]
	// Tags to apply to the Queue. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (QueueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*queueArgs)(nil)).Elem()
}

type QueueOutput struct{ *pulumi.OutputState }

func (QueueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Queue)(nil)).Elem()
}

func (o QueueOutput) ToQueueOutput() QueueOutput {
	return o
}

func (o QueueOutput) ToQueueOutputWithContext(ctx context.Context) QueueOutput {
	return o
}

func (o QueueOutput) ToOutput(ctx context.Context) pulumix.Output[Queue] {
	return pulumix.Output[Queue]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) of the Queue.
func (o QueueOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Queue](o, func(v Queue) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Specifies the description of the Queue.
func (o QueueOutput) Description() pulumix.Output[*string] {
	value := pulumix.Apply[Queue](o, func(v Queue) pulumix.Output[*string] { return v.Description })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Specifies the identifier of the Hours of Operation.
func (o QueueOutput) HoursOfOperationId() pulumix.Output[string] {
	value := pulumix.Apply[Queue](o, func(v Queue) pulumix.Output[string] { return v.HoursOfOperationId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Specifies the identifier of the hosting Amazon Connect Instance.
func (o QueueOutput) InstanceId() pulumix.Output[string] {
	value := pulumix.Apply[Queue](o, func(v Queue) pulumix.Output[string] { return v.InstanceId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Specifies the maximum number of contacts that can be in the queue before it is considered full. Minimum value of 0.
func (o QueueOutput) MaxContacts() pulumix.Output[*int] {
	value := pulumix.Apply[Queue](o, func(v Queue) pulumix.Output[*int] { return v.MaxContacts })
	return pulumix.Flatten[*int, pulumix.Output[*int]](value)
}

// Specifies the name of the Queue.
func (o QueueOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[Queue](o, func(v Queue) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A block that defines the outbound caller ID name, number, and outbound whisper flow. The Outbound Caller Config block is documented below.
func (o QueueOutput) OutboundCallerConfig() pulumix.GPtrOutput[QueueOutboundCallerConfig, QueueOutboundCallerConfigOutput] {
	value := pulumix.Apply[Queue](o, func(v Queue) pulumix.GPtrOutput[QueueOutboundCallerConfig, QueueOutboundCallerConfigOutput] {
		return v.OutboundCallerConfig
	})
	unwrapped := pulumix.Flatten[*QueueOutboundCallerConfig, pulumix.GPtrOutput[QueueOutboundCallerConfig, QueueOutboundCallerConfigOutput]](value)
	return pulumix.GPtrOutput[QueueOutboundCallerConfig, QueueOutboundCallerConfigOutput]{OutputState: unwrapped.OutputState}
}

// The identifier for the Queue.
func (o QueueOutput) QueueId() pulumix.Output[string] {
	value := pulumix.Apply[Queue](o, func(v Queue) pulumix.Output[string] { return v.QueueId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Specifies a list of quick connects ids that determine the quick connects available to agents who are working the queue.
func (o QueueOutput) QuickConnectIds() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[Queue](o, func(v Queue) pulumix.ArrayOutput[string] { return v.QuickConnectIds })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// Specifies the description of the Queue. Valid values are `ENABLED`, `DISABLED`.
func (o QueueOutput) Status() pulumix.Output[string] {
	value := pulumix.Apply[Queue](o, func(v Queue) pulumix.Output[string] { return v.Status })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Tags to apply to the Queue. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o QueueOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Queue](o, func(v Queue) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o QueueOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[Queue](o, func(v Queue) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(QueueOutput{})
}
