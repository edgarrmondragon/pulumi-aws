// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datasync

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Resource for managing an AWS DataSync Location FSx Ontap File System.
type LocationFsxOntapFileSystem struct {
	pulumi.CustomResourceState

	// ARN of the DataSync Location for the FSx Ontap File System.
	Arn          pulumix.Output[string] `pulumi:"arn"`
	CreationTime pulumix.Output[string] `pulumi:"creationTime"`
	// ARN of the FSx Ontap File System.
	FsxFilesystemArn pulumix.Output[string] `pulumi:"fsxFilesystemArn"`
	// The data transfer protocol that DataSync uses to access your Amazon FSx file system. See Protocol below.
	Protocol pulumix.GPtrOutput[LocationFsxOntapFileSystemProtocol, LocationFsxOntapFileSystemProtocolOutput] `pulumi:"protocol"`
	// The security groups that provide access to your file system's preferred subnet. The security groups must allow outbbound traffic on the following ports (depending on the protocol you use):
	// * Network File System (NFS): TCP ports 111, 635, and 2049
	// * Server Message Block (SMB): TCP port 445
	SecurityGroupArns pulumix.ArrayOutput[string] `pulumi:"securityGroupArns"`
	// The ARN of the SVM in your file system where you want to copy data to of from.
	//
	// The following arguments are optional:
	StorageVirtualMachineArn pulumix.Output[string] `pulumi:"storageVirtualMachineArn"`
	// Path to the file share in the SVM where you'll copy your data. You can specify a junction path (also known as a mount point), qtree path (for NFS file shares), or share name (for SMB file shares) (e.g. `/vol1`, `/vol1/tree1`, `share1`).
	Subdirectory pulumix.Output[string] `pulumi:"subdirectory"`
	// Key-value pairs of resource tags to assign to the DataSync Location. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags    pulumix.MapOutput[string] `pulumi:"tags"`
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// URI of the FSx ONTAP file system location
	Uri pulumix.Output[string] `pulumi:"uri"`
}

// NewLocationFsxOntapFileSystem registers a new resource with the given unique name, arguments, and options.
func NewLocationFsxOntapFileSystem(ctx *pulumi.Context,
	name string, args *LocationFsxOntapFileSystemArgs, opts ...pulumi.ResourceOption) (*LocationFsxOntapFileSystem, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Protocol == nil {
		return nil, errors.New("invalid value for required argument 'Protocol'")
	}
	if args.SecurityGroupArns == nil {
		return nil, errors.New("invalid value for required argument 'SecurityGroupArns'")
	}
	if args.StorageVirtualMachineArn == nil {
		return nil, errors.New("invalid value for required argument 'StorageVirtualMachineArn'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource LocationFsxOntapFileSystem
	err := ctx.RegisterResource("aws:datasync/locationFsxOntapFileSystem:LocationFsxOntapFileSystem", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLocationFsxOntapFileSystem gets an existing LocationFsxOntapFileSystem resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLocationFsxOntapFileSystem(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LocationFsxOntapFileSystemState, opts ...pulumi.ResourceOption) (*LocationFsxOntapFileSystem, error) {
	var resource LocationFsxOntapFileSystem
	err := ctx.ReadResource("aws:datasync/locationFsxOntapFileSystem:LocationFsxOntapFileSystem", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LocationFsxOntapFileSystem resources.
type locationFsxOntapFileSystemState struct {
	// ARN of the DataSync Location for the FSx Ontap File System.
	Arn          *string `pulumi:"arn"`
	CreationTime *string `pulumi:"creationTime"`
	// ARN of the FSx Ontap File System.
	FsxFilesystemArn *string `pulumi:"fsxFilesystemArn"`
	// The data transfer protocol that DataSync uses to access your Amazon FSx file system. See Protocol below.
	Protocol *LocationFsxOntapFileSystemProtocol `pulumi:"protocol"`
	// The security groups that provide access to your file system's preferred subnet. The security groups must allow outbbound traffic on the following ports (depending on the protocol you use):
	// * Network File System (NFS): TCP ports 111, 635, and 2049
	// * Server Message Block (SMB): TCP port 445
	SecurityGroupArns []string `pulumi:"securityGroupArns"`
	// The ARN of the SVM in your file system where you want to copy data to of from.
	//
	// The following arguments are optional:
	StorageVirtualMachineArn *string `pulumi:"storageVirtualMachineArn"`
	// Path to the file share in the SVM where you'll copy your data. You can specify a junction path (also known as a mount point), qtree path (for NFS file shares), or share name (for SMB file shares) (e.g. `/vol1`, `/vol1/tree1`, `share1`).
	Subdirectory *string `pulumi:"subdirectory"`
	// Key-value pairs of resource tags to assign to the DataSync Location. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags    map[string]string `pulumi:"tags"`
	TagsAll map[string]string `pulumi:"tagsAll"`
	// URI of the FSx ONTAP file system location
	Uri *string `pulumi:"uri"`
}

type LocationFsxOntapFileSystemState struct {
	// ARN of the DataSync Location for the FSx Ontap File System.
	Arn          pulumix.Input[*string]
	CreationTime pulumix.Input[*string]
	// ARN of the FSx Ontap File System.
	FsxFilesystemArn pulumix.Input[*string]
	// The data transfer protocol that DataSync uses to access your Amazon FSx file system. See Protocol below.
	Protocol pulumix.Input[*LocationFsxOntapFileSystemProtocolArgs]
	// The security groups that provide access to your file system's preferred subnet. The security groups must allow outbbound traffic on the following ports (depending on the protocol you use):
	// * Network File System (NFS): TCP ports 111, 635, and 2049
	// * Server Message Block (SMB): TCP port 445
	SecurityGroupArns pulumix.Input[[]string]
	// The ARN of the SVM in your file system where you want to copy data to of from.
	//
	// The following arguments are optional:
	StorageVirtualMachineArn pulumix.Input[*string]
	// Path to the file share in the SVM where you'll copy your data. You can specify a junction path (also known as a mount point), qtree path (for NFS file shares), or share name (for SMB file shares) (e.g. `/vol1`, `/vol1/tree1`, `share1`).
	Subdirectory pulumix.Input[*string]
	// Key-value pairs of resource tags to assign to the DataSync Location. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags    pulumix.Input[map[string]string]
	TagsAll pulumix.Input[map[string]string]
	// URI of the FSx ONTAP file system location
	Uri pulumix.Input[*string]
}

func (LocationFsxOntapFileSystemState) ElementType() reflect.Type {
	return reflect.TypeOf((*locationFsxOntapFileSystemState)(nil)).Elem()
}

type locationFsxOntapFileSystemArgs struct {
	// The data transfer protocol that DataSync uses to access your Amazon FSx file system. See Protocol below.
	Protocol LocationFsxOntapFileSystemProtocol `pulumi:"protocol"`
	// The security groups that provide access to your file system's preferred subnet. The security groups must allow outbbound traffic on the following ports (depending on the protocol you use):
	// * Network File System (NFS): TCP ports 111, 635, and 2049
	// * Server Message Block (SMB): TCP port 445
	SecurityGroupArns []string `pulumi:"securityGroupArns"`
	// The ARN of the SVM in your file system where you want to copy data to of from.
	//
	// The following arguments are optional:
	StorageVirtualMachineArn string `pulumi:"storageVirtualMachineArn"`
	// Path to the file share in the SVM where you'll copy your data. You can specify a junction path (also known as a mount point), qtree path (for NFS file shares), or share name (for SMB file shares) (e.g. `/vol1`, `/vol1/tree1`, `share1`).
	Subdirectory *string `pulumi:"subdirectory"`
	// Key-value pairs of resource tags to assign to the DataSync Location. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a LocationFsxOntapFileSystem resource.
type LocationFsxOntapFileSystemArgs struct {
	// The data transfer protocol that DataSync uses to access your Amazon FSx file system. See Protocol below.
	Protocol pulumix.Input[*LocationFsxOntapFileSystemProtocolArgs]
	// The security groups that provide access to your file system's preferred subnet. The security groups must allow outbbound traffic on the following ports (depending on the protocol you use):
	// * Network File System (NFS): TCP ports 111, 635, and 2049
	// * Server Message Block (SMB): TCP port 445
	SecurityGroupArns pulumix.Input[[]string]
	// The ARN of the SVM in your file system where you want to copy data to of from.
	//
	// The following arguments are optional:
	StorageVirtualMachineArn pulumix.Input[string]
	// Path to the file share in the SVM where you'll copy your data. You can specify a junction path (also known as a mount point), qtree path (for NFS file shares), or share name (for SMB file shares) (e.g. `/vol1`, `/vol1/tree1`, `share1`).
	Subdirectory pulumix.Input[*string]
	// Key-value pairs of resource tags to assign to the DataSync Location. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (LocationFsxOntapFileSystemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*locationFsxOntapFileSystemArgs)(nil)).Elem()
}

type LocationFsxOntapFileSystemOutput struct{ *pulumi.OutputState }

func (LocationFsxOntapFileSystemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LocationFsxOntapFileSystem)(nil)).Elem()
}

func (o LocationFsxOntapFileSystemOutput) ToLocationFsxOntapFileSystemOutput() LocationFsxOntapFileSystemOutput {
	return o
}

func (o LocationFsxOntapFileSystemOutput) ToLocationFsxOntapFileSystemOutputWithContext(ctx context.Context) LocationFsxOntapFileSystemOutput {
	return o
}

func (o LocationFsxOntapFileSystemOutput) ToOutput(ctx context.Context) pulumix.Output[LocationFsxOntapFileSystem] {
	return pulumix.Output[LocationFsxOntapFileSystem]{
		OutputState: o.OutputState,
	}
}

// ARN of the DataSync Location for the FSx Ontap File System.
func (o LocationFsxOntapFileSystemOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[LocationFsxOntapFileSystem](o, func(v LocationFsxOntapFileSystem) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func (o LocationFsxOntapFileSystemOutput) CreationTime() pulumix.Output[string] {
	value := pulumix.Apply[LocationFsxOntapFileSystem](o, func(v LocationFsxOntapFileSystem) pulumix.Output[string] { return v.CreationTime })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// ARN of the FSx Ontap File System.
func (o LocationFsxOntapFileSystemOutput) FsxFilesystemArn() pulumix.Output[string] {
	value := pulumix.Apply[LocationFsxOntapFileSystem](o, func(v LocationFsxOntapFileSystem) pulumix.Output[string] { return v.FsxFilesystemArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The data transfer protocol that DataSync uses to access your Amazon FSx file system. See Protocol below.
func (o LocationFsxOntapFileSystemOutput) Protocol() pulumix.GPtrOutput[LocationFsxOntapFileSystemProtocol, LocationFsxOntapFileSystemProtocolOutput] {
	value := pulumix.Apply[LocationFsxOntapFileSystem](o, func(v LocationFsxOntapFileSystem) pulumix.GPtrOutput[LocationFsxOntapFileSystemProtocol, LocationFsxOntapFileSystemProtocolOutput] {
		return v.Protocol
	})
	unwrapped := pulumix.Flatten[*LocationFsxOntapFileSystemProtocol, pulumix.GPtrOutput[LocationFsxOntapFileSystemProtocol, LocationFsxOntapFileSystemProtocolOutput]](value)
	return pulumix.GPtrOutput[LocationFsxOntapFileSystemProtocol, LocationFsxOntapFileSystemProtocolOutput]{OutputState: unwrapped.OutputState}
}

// The security groups that provide access to your file system's preferred subnet. The security groups must allow outbbound traffic on the following ports (depending on the protocol you use):
// * Network File System (NFS): TCP ports 111, 635, and 2049
// * Server Message Block (SMB): TCP port 445
func (o LocationFsxOntapFileSystemOutput) SecurityGroupArns() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[LocationFsxOntapFileSystem](o, func(v LocationFsxOntapFileSystem) pulumix.ArrayOutput[string] { return v.SecurityGroupArns })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// The ARN of the SVM in your file system where you want to copy data to of from.
//
// The following arguments are optional:
func (o LocationFsxOntapFileSystemOutput) StorageVirtualMachineArn() pulumix.Output[string] {
	value := pulumix.Apply[LocationFsxOntapFileSystem](o, func(v LocationFsxOntapFileSystem) pulumix.Output[string] { return v.StorageVirtualMachineArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Path to the file share in the SVM where you'll copy your data. You can specify a junction path (also known as a mount point), qtree path (for NFS file shares), or share name (for SMB file shares) (e.g. `/vol1`, `/vol1/tree1`, `share1`).
func (o LocationFsxOntapFileSystemOutput) Subdirectory() pulumix.Output[string] {
	value := pulumix.Apply[LocationFsxOntapFileSystem](o, func(v LocationFsxOntapFileSystem) pulumix.Output[string] { return v.Subdirectory })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Key-value pairs of resource tags to assign to the DataSync Location. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o LocationFsxOntapFileSystemOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[LocationFsxOntapFileSystem](o, func(v LocationFsxOntapFileSystem) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func (o LocationFsxOntapFileSystemOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[LocationFsxOntapFileSystem](o, func(v LocationFsxOntapFileSystem) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// URI of the FSx ONTAP file system location
func (o LocationFsxOntapFileSystemOutput) Uri() pulumix.Output[string] {
	value := pulumix.Apply[LocationFsxOntapFileSystem](o, func(v LocationFsxOntapFileSystem) pulumix.Output[string] { return v.Uri })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(LocationFsxOntapFileSystemOutput{})
}
