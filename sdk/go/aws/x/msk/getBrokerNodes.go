// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package msk

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Get information on an Amazon MSK Broker Nodes.
func GetBrokerNodes(ctx *pulumi.Context, args *GetBrokerNodesArgs, opts ...pulumi.InvokeOption) (*GetBrokerNodesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetBrokerNodesResult
	err := ctx.Invoke("aws:msk/getBrokerNodes:getBrokerNodes", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBrokerNodes.
type GetBrokerNodesArgs struct {
	// ARN of the cluster the nodes belong to.
	ClusterArn string `pulumi:"clusterArn"`
}

// A collection of values returned by getBrokerNodes.
type GetBrokerNodesResult struct {
	ClusterArn string `pulumi:"clusterArn"`
	// The provider-assigned unique ID for this managed resource.
	Id            string                       `pulumi:"id"`
	NodeInfoLists []GetBrokerNodesNodeInfoList `pulumi:"nodeInfoLists"`
}

func GetBrokerNodesOutput(ctx *pulumi.Context, args GetBrokerNodesOutputArgs, opts ...pulumi.InvokeOption) GetBrokerNodesResultOutput {
	outputResult := pulumix.ApplyErr[*GetBrokerNodesArgs](args.ToOutput(), func(plainArgs *GetBrokerNodesArgs) (*GetBrokerNodesResult, error) {
		return GetBrokerNodes(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[GetBrokerNodesResultOutput, *GetBrokerNodesResult](outputResult)
}

// A collection of arguments for invoking getBrokerNodes.
type GetBrokerNodesOutputArgs struct {
	// ARN of the cluster the nodes belong to.
	ClusterArn pulumix.Input[string] `pulumi:"clusterArn"`
}

func (args GetBrokerNodesOutputArgs) ToOutput() pulumix.Output[*GetBrokerNodesArgs] {
	allArgs := pulumix.All(
		args.ClusterArn.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *GetBrokerNodesArgs {
		return &GetBrokerNodesArgs{
			ClusterArn: resolvedArgs[0].(string),
		}
	})
}

type GetBrokerNodesResultOutput struct{ *pulumi.OutputState }

func (GetBrokerNodesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBrokerNodesResult)(nil)).Elem()
}

func (o GetBrokerNodesResultOutput) ToOutput(context.Context) pulumix.Output[*GetBrokerNodesResult] {
	return pulumix.Output[*GetBrokerNodesResult]{
		OutputState: o.OutputState,
	}
}

func (o GetBrokerNodesResultOutput) ClusterArn() pulumix.Output[string] {
	return pulumix.Apply[*GetBrokerNodesResult](o, func(v *GetBrokerNodesResult) string { return v.ClusterArn })
}

func (o GetBrokerNodesResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*GetBrokerNodesResult](o, func(v *GetBrokerNodesResult) string { return v.Id })
}

func (o GetBrokerNodesResultOutput) NodeInfoLists() pulumix.GArrayOutput[GetBrokerNodesNodeInfoList, GetBrokerNodesNodeInfoListOutput] {
	value := pulumix.Apply[*GetBrokerNodesResult](o, func(v *GetBrokerNodesResult) []GetBrokerNodesNodeInfoList { return v.NodeInfoLists })
	return pulumix.GArrayOutput[GetBrokerNodesNodeInfoList, GetBrokerNodesNodeInfoListOutput]{
		OutputState: value.OutputState,
	}
}
