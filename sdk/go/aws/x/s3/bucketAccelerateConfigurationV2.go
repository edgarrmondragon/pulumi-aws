// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package s3

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an S3 bucket accelerate configuration resource. See the [Requirements for using Transfer Acceleration](https://docs.aws.amazon.com/AmazonS3/latest/userguide/transfer-acceleration.html#transfer-acceleration-requirements) for more details.
type BucketAccelerateConfigurationV2 struct {
	pulumi.CustomResourceState

	// Name of the bucket.
	Bucket pulumix.Output[string] `pulumi:"bucket"`
	// Account ID of the expected bucket owner.
	ExpectedBucketOwner pulumix.Output[*string] `pulumi:"expectedBucketOwner"`
	// Transfer acceleration state of the bucket. Valid values: `Enabled`, `Suspended`.
	Status pulumix.Output[string] `pulumi:"status"`
}

// NewBucketAccelerateConfigurationV2 registers a new resource with the given unique name, arguments, and options.
func NewBucketAccelerateConfigurationV2(ctx *pulumi.Context,
	name string, args *BucketAccelerateConfigurationV2Args, opts ...pulumi.ResourceOption) (*BucketAccelerateConfigurationV2, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Bucket == nil {
		return nil, errors.New("invalid value for required argument 'Bucket'")
	}
	if args.Status == nil {
		return nil, errors.New("invalid value for required argument 'Status'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BucketAccelerateConfigurationV2
	err := ctx.RegisterResource("aws:s3/bucketAccelerateConfigurationV2:BucketAccelerateConfigurationV2", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBucketAccelerateConfigurationV2 gets an existing BucketAccelerateConfigurationV2 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBucketAccelerateConfigurationV2(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BucketAccelerateConfigurationV2State, opts ...pulumi.ResourceOption) (*BucketAccelerateConfigurationV2, error) {
	var resource BucketAccelerateConfigurationV2
	err := ctx.ReadResource("aws:s3/bucketAccelerateConfigurationV2:BucketAccelerateConfigurationV2", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BucketAccelerateConfigurationV2 resources.
type bucketAccelerateConfigurationV2State struct {
	// Name of the bucket.
	Bucket *string `pulumi:"bucket"`
	// Account ID of the expected bucket owner.
	ExpectedBucketOwner *string `pulumi:"expectedBucketOwner"`
	// Transfer acceleration state of the bucket. Valid values: `Enabled`, `Suspended`.
	Status *string `pulumi:"status"`
}

type BucketAccelerateConfigurationV2State struct {
	// Name of the bucket.
	Bucket pulumix.Input[*string]
	// Account ID of the expected bucket owner.
	ExpectedBucketOwner pulumix.Input[*string]
	// Transfer acceleration state of the bucket. Valid values: `Enabled`, `Suspended`.
	Status pulumix.Input[*string]
}

func (BucketAccelerateConfigurationV2State) ElementType() reflect.Type {
	return reflect.TypeOf((*bucketAccelerateConfigurationV2State)(nil)).Elem()
}

type bucketAccelerateConfigurationV2Args struct {
	// Name of the bucket.
	Bucket string `pulumi:"bucket"`
	// Account ID of the expected bucket owner.
	ExpectedBucketOwner *string `pulumi:"expectedBucketOwner"`
	// Transfer acceleration state of the bucket. Valid values: `Enabled`, `Suspended`.
	Status string `pulumi:"status"`
}

// The set of arguments for constructing a BucketAccelerateConfigurationV2 resource.
type BucketAccelerateConfigurationV2Args struct {
	// Name of the bucket.
	Bucket pulumix.Input[string]
	// Account ID of the expected bucket owner.
	ExpectedBucketOwner pulumix.Input[*string]
	// Transfer acceleration state of the bucket. Valid values: `Enabled`, `Suspended`.
	Status pulumix.Input[string]
}

func (BucketAccelerateConfigurationV2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*bucketAccelerateConfigurationV2Args)(nil)).Elem()
}

type BucketAccelerateConfigurationV2Output struct{ *pulumi.OutputState }

func (BucketAccelerateConfigurationV2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketAccelerateConfigurationV2)(nil)).Elem()
}

func (o BucketAccelerateConfigurationV2Output) ToBucketAccelerateConfigurationV2Output() BucketAccelerateConfigurationV2Output {
	return o
}

func (o BucketAccelerateConfigurationV2Output) ToBucketAccelerateConfigurationV2OutputWithContext(ctx context.Context) BucketAccelerateConfigurationV2Output {
	return o
}

func (o BucketAccelerateConfigurationV2Output) ToOutput(ctx context.Context) pulumix.Output[BucketAccelerateConfigurationV2] {
	return pulumix.Output[BucketAccelerateConfigurationV2]{
		OutputState: o.OutputState,
	}
}

// Name of the bucket.
func (o BucketAccelerateConfigurationV2Output) Bucket() pulumix.Output[string] {
	value := pulumix.Apply[BucketAccelerateConfigurationV2](o, func(v BucketAccelerateConfigurationV2) pulumix.Output[string] { return v.Bucket })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Account ID of the expected bucket owner.
func (o BucketAccelerateConfigurationV2Output) ExpectedBucketOwner() pulumix.Output[*string] {
	value := pulumix.Apply[BucketAccelerateConfigurationV2](o, func(v BucketAccelerateConfigurationV2) pulumix.Output[*string] { return v.ExpectedBucketOwner })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Transfer acceleration state of the bucket. Valid values: `Enabled`, `Suspended`.
func (o BucketAccelerateConfigurationV2Output) Status() pulumix.Output[string] {
	value := pulumix.Apply[BucketAccelerateConfigurationV2](o, func(v BucketAccelerateConfigurationV2) pulumix.Output[string] { return v.Status })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(BucketAccelerateConfigurationV2Output{})
}
