// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2transitgateway

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manages an EC2 Transit Gateway Connect.
type Connect struct {
	pulumi.CustomResourceState

	// The tunnel protocol. Valid values: `gre`. Default is `gre`.
	Protocol pulumix.Output[*string] `pulumi:"protocol"`
	// Key-value tags for the EC2 Transit Gateway Connect. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// Boolean whether the Connect should be associated with the EC2 Transit Gateway association default route table. This cannot be configured or perform drift detection with Resource Access Manager shared EC2 Transit Gateways. Default value: `true`.
	TransitGatewayDefaultRouteTableAssociation pulumix.Output[*bool] `pulumi:"transitGatewayDefaultRouteTableAssociation"`
	// Boolean whether the Connect should propagate routes with the EC2 Transit Gateway propagation default route table. This cannot be configured or perform drift detection with Resource Access Manager shared EC2 Transit Gateways. Default value: `true`.
	TransitGatewayDefaultRouteTablePropagation pulumix.Output[*bool] `pulumi:"transitGatewayDefaultRouteTablePropagation"`
	// Identifier of EC2 Transit Gateway.
	TransitGatewayId pulumix.Output[string] `pulumi:"transitGatewayId"`
	// The underlaying VPC attachment
	TransportAttachmentId pulumix.Output[string] `pulumi:"transportAttachmentId"`
}

// NewConnect registers a new resource with the given unique name, arguments, and options.
func NewConnect(ctx *pulumi.Context,
	name string, args *ConnectArgs, opts ...pulumi.ResourceOption) (*Connect, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TransitGatewayId == nil {
		return nil, errors.New("invalid value for required argument 'TransitGatewayId'")
	}
	if args.TransportAttachmentId == nil {
		return nil, errors.New("invalid value for required argument 'TransportAttachmentId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Connect
	err := ctx.RegisterResource("aws:ec2transitgateway/connect:Connect", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetConnect gets an existing Connect resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetConnect(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ConnectState, opts ...pulumi.ResourceOption) (*Connect, error) {
	var resource Connect
	err := ctx.ReadResource("aws:ec2transitgateway/connect:Connect", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Connect resources.
type connectState struct {
	// The tunnel protocol. Valid values: `gre`. Default is `gre`.
	Protocol *string `pulumi:"protocol"`
	// Key-value tags for the EC2 Transit Gateway Connect. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// Boolean whether the Connect should be associated with the EC2 Transit Gateway association default route table. This cannot be configured or perform drift detection with Resource Access Manager shared EC2 Transit Gateways. Default value: `true`.
	TransitGatewayDefaultRouteTableAssociation *bool `pulumi:"transitGatewayDefaultRouteTableAssociation"`
	// Boolean whether the Connect should propagate routes with the EC2 Transit Gateway propagation default route table. This cannot be configured or perform drift detection with Resource Access Manager shared EC2 Transit Gateways. Default value: `true`.
	TransitGatewayDefaultRouteTablePropagation *bool `pulumi:"transitGatewayDefaultRouteTablePropagation"`
	// Identifier of EC2 Transit Gateway.
	TransitGatewayId *string `pulumi:"transitGatewayId"`
	// The underlaying VPC attachment
	TransportAttachmentId *string `pulumi:"transportAttachmentId"`
}

type ConnectState struct {
	// The tunnel protocol. Valid values: `gre`. Default is `gre`.
	Protocol pulumix.Input[*string]
	// Key-value tags for the EC2 Transit Gateway Connect. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// Boolean whether the Connect should be associated with the EC2 Transit Gateway association default route table. This cannot be configured or perform drift detection with Resource Access Manager shared EC2 Transit Gateways. Default value: `true`.
	TransitGatewayDefaultRouteTableAssociation pulumix.Input[*bool]
	// Boolean whether the Connect should propagate routes with the EC2 Transit Gateway propagation default route table. This cannot be configured or perform drift detection with Resource Access Manager shared EC2 Transit Gateways. Default value: `true`.
	TransitGatewayDefaultRouteTablePropagation pulumix.Input[*bool]
	// Identifier of EC2 Transit Gateway.
	TransitGatewayId pulumix.Input[*string]
	// The underlaying VPC attachment
	TransportAttachmentId pulumix.Input[*string]
}

func (ConnectState) ElementType() reflect.Type {
	return reflect.TypeOf((*connectState)(nil)).Elem()
}

type connectArgs struct {
	// The tunnel protocol. Valid values: `gre`. Default is `gre`.
	Protocol *string `pulumi:"protocol"`
	// Key-value tags for the EC2 Transit Gateway Connect. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Boolean whether the Connect should be associated with the EC2 Transit Gateway association default route table. This cannot be configured or perform drift detection with Resource Access Manager shared EC2 Transit Gateways. Default value: `true`.
	TransitGatewayDefaultRouteTableAssociation *bool `pulumi:"transitGatewayDefaultRouteTableAssociation"`
	// Boolean whether the Connect should propagate routes with the EC2 Transit Gateway propagation default route table. This cannot be configured or perform drift detection with Resource Access Manager shared EC2 Transit Gateways. Default value: `true`.
	TransitGatewayDefaultRouteTablePropagation *bool `pulumi:"transitGatewayDefaultRouteTablePropagation"`
	// Identifier of EC2 Transit Gateway.
	TransitGatewayId string `pulumi:"transitGatewayId"`
	// The underlaying VPC attachment
	TransportAttachmentId string `pulumi:"transportAttachmentId"`
}

// The set of arguments for constructing a Connect resource.
type ConnectArgs struct {
	// The tunnel protocol. Valid values: `gre`. Default is `gre`.
	Protocol pulumix.Input[*string]
	// Key-value tags for the EC2 Transit Gateway Connect. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// Boolean whether the Connect should be associated with the EC2 Transit Gateway association default route table. This cannot be configured or perform drift detection with Resource Access Manager shared EC2 Transit Gateways. Default value: `true`.
	TransitGatewayDefaultRouteTableAssociation pulumix.Input[*bool]
	// Boolean whether the Connect should propagate routes with the EC2 Transit Gateway propagation default route table. This cannot be configured or perform drift detection with Resource Access Manager shared EC2 Transit Gateways. Default value: `true`.
	TransitGatewayDefaultRouteTablePropagation pulumix.Input[*bool]
	// Identifier of EC2 Transit Gateway.
	TransitGatewayId pulumix.Input[string]
	// The underlaying VPC attachment
	TransportAttachmentId pulumix.Input[string]
}

func (ConnectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*connectArgs)(nil)).Elem()
}

type ConnectOutput struct{ *pulumi.OutputState }

func (ConnectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Connect)(nil)).Elem()
}

func (o ConnectOutput) ToConnectOutput() ConnectOutput {
	return o
}

func (o ConnectOutput) ToConnectOutputWithContext(ctx context.Context) ConnectOutput {
	return o
}

func (o ConnectOutput) ToOutput(ctx context.Context) pulumix.Output[Connect] {
	return pulumix.Output[Connect]{
		OutputState: o.OutputState,
	}
}

// The tunnel protocol. Valid values: `gre`. Default is `gre`.
func (o ConnectOutput) Protocol() pulumix.Output[*string] {
	value := pulumix.Apply[Connect](o, func(v Connect) pulumix.Output[*string] { return v.Protocol })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Key-value tags for the EC2 Transit Gateway Connect. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o ConnectOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Connect](o, func(v Connect) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o ConnectOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[Connect](o, func(v Connect) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Boolean whether the Connect should be associated with the EC2 Transit Gateway association default route table. This cannot be configured or perform drift detection with Resource Access Manager shared EC2 Transit Gateways. Default value: `true`.
func (o ConnectOutput) TransitGatewayDefaultRouteTableAssociation() pulumix.Output[*bool] {
	value := pulumix.Apply[Connect](o, func(v Connect) pulumix.Output[*bool] { return v.TransitGatewayDefaultRouteTableAssociation })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// Boolean whether the Connect should propagate routes with the EC2 Transit Gateway propagation default route table. This cannot be configured or perform drift detection with Resource Access Manager shared EC2 Transit Gateways. Default value: `true`.
func (o ConnectOutput) TransitGatewayDefaultRouteTablePropagation() pulumix.Output[*bool] {
	value := pulumix.Apply[Connect](o, func(v Connect) pulumix.Output[*bool] { return v.TransitGatewayDefaultRouteTablePropagation })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// Identifier of EC2 Transit Gateway.
func (o ConnectOutput) TransitGatewayId() pulumix.Output[string] {
	value := pulumix.Apply[Connect](o, func(v Connect) pulumix.Output[string] { return v.TransitGatewayId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The underlaying VPC attachment
func (o ConnectOutput) TransportAttachmentId() pulumix.Output[string] {
	value := pulumix.Apply[Connect](o, func(v Connect) pulumix.Output[string] { return v.TransportAttachmentId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(ConnectOutput{})
}
