// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package directoryservice

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manages a directory in your account (directory owner) shared with another account (directory consumer).
type SharedDirectory struct {
	pulumi.CustomResourceState

	// Identifier of the Managed Microsoft AD directory that you want to share with other accounts.
	DirectoryId pulumix.Output[string] `pulumi:"directoryId"`
	// Method used when sharing a directory. Valid values are `ORGANIZATIONS` and `HANDSHAKE`. Default is `HANDSHAKE`.
	Method pulumix.Output[*string] `pulumi:"method"`
	// Message sent by the directory owner to the directory consumer to help the directory consumer administrator determine whether to approve or reject the share invitation.
	Notes pulumix.Output[*string] `pulumi:"notes"`
	// Identifier of the directory that is stored in the directory consumer account that corresponds to the shared directory in the owner account.
	SharedDirectoryId pulumix.Output[string] `pulumi:"sharedDirectoryId"`
	// Identifier for the directory consumer account with whom the directory is to be shared. See below.
	//
	// The following arguments are optional:
	Target pulumix.GPtrOutput[SharedDirectoryTarget, SharedDirectoryTargetOutput] `pulumi:"target"`
}

// NewSharedDirectory registers a new resource with the given unique name, arguments, and options.
func NewSharedDirectory(ctx *pulumi.Context,
	name string, args *SharedDirectoryArgs, opts ...pulumi.ResourceOption) (*SharedDirectory, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DirectoryId == nil {
		return nil, errors.New("invalid value for required argument 'DirectoryId'")
	}
	if args.Target == nil {
		return nil, errors.New("invalid value for required argument 'Target'")
	}
	if args.Notes != nil {
		untypedSecretValue := pulumi.ToSecret(args.Notes.ToOutput(ctx.Context()).Untyped())
		args.Notes = pulumix.MustConvertTyped[*string](untypedSecretValue)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"notes",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SharedDirectory
	err := ctx.RegisterResource("aws:directoryservice/sharedDirectory:SharedDirectory", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSharedDirectory gets an existing SharedDirectory resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSharedDirectory(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SharedDirectoryState, opts ...pulumi.ResourceOption) (*SharedDirectory, error) {
	var resource SharedDirectory
	err := ctx.ReadResource("aws:directoryservice/sharedDirectory:SharedDirectory", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SharedDirectory resources.
type sharedDirectoryState struct {
	// Identifier of the Managed Microsoft AD directory that you want to share with other accounts.
	DirectoryId *string `pulumi:"directoryId"`
	// Method used when sharing a directory. Valid values are `ORGANIZATIONS` and `HANDSHAKE`. Default is `HANDSHAKE`.
	Method *string `pulumi:"method"`
	// Message sent by the directory owner to the directory consumer to help the directory consumer administrator determine whether to approve or reject the share invitation.
	Notes *string `pulumi:"notes"`
	// Identifier of the directory that is stored in the directory consumer account that corresponds to the shared directory in the owner account.
	SharedDirectoryId *string `pulumi:"sharedDirectoryId"`
	// Identifier for the directory consumer account with whom the directory is to be shared. See below.
	//
	// The following arguments are optional:
	Target *SharedDirectoryTarget `pulumi:"target"`
}

type SharedDirectoryState struct {
	// Identifier of the Managed Microsoft AD directory that you want to share with other accounts.
	DirectoryId pulumix.Input[*string]
	// Method used when sharing a directory. Valid values are `ORGANIZATIONS` and `HANDSHAKE`. Default is `HANDSHAKE`.
	Method pulumix.Input[*string]
	// Message sent by the directory owner to the directory consumer to help the directory consumer administrator determine whether to approve or reject the share invitation.
	Notes pulumix.Input[*string]
	// Identifier of the directory that is stored in the directory consumer account that corresponds to the shared directory in the owner account.
	SharedDirectoryId pulumix.Input[*string]
	// Identifier for the directory consumer account with whom the directory is to be shared. See below.
	//
	// The following arguments are optional:
	Target pulumix.Input[*SharedDirectoryTargetArgs]
}

func (SharedDirectoryState) ElementType() reflect.Type {
	return reflect.TypeOf((*sharedDirectoryState)(nil)).Elem()
}

type sharedDirectoryArgs struct {
	// Identifier of the Managed Microsoft AD directory that you want to share with other accounts.
	DirectoryId string `pulumi:"directoryId"`
	// Method used when sharing a directory. Valid values are `ORGANIZATIONS` and `HANDSHAKE`. Default is `HANDSHAKE`.
	Method *string `pulumi:"method"`
	// Message sent by the directory owner to the directory consumer to help the directory consumer administrator determine whether to approve or reject the share invitation.
	Notes *string `pulumi:"notes"`
	// Identifier for the directory consumer account with whom the directory is to be shared. See below.
	//
	// The following arguments are optional:
	Target SharedDirectoryTarget `pulumi:"target"`
}

// The set of arguments for constructing a SharedDirectory resource.
type SharedDirectoryArgs struct {
	// Identifier of the Managed Microsoft AD directory that you want to share with other accounts.
	DirectoryId pulumix.Input[string]
	// Method used when sharing a directory. Valid values are `ORGANIZATIONS` and `HANDSHAKE`. Default is `HANDSHAKE`.
	Method pulumix.Input[*string]
	// Message sent by the directory owner to the directory consumer to help the directory consumer administrator determine whether to approve or reject the share invitation.
	Notes pulumix.Input[*string]
	// Identifier for the directory consumer account with whom the directory is to be shared. See below.
	//
	// The following arguments are optional:
	Target pulumix.Input[*SharedDirectoryTargetArgs]
}

func (SharedDirectoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sharedDirectoryArgs)(nil)).Elem()
}

type SharedDirectoryOutput struct{ *pulumi.OutputState }

func (SharedDirectoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SharedDirectory)(nil)).Elem()
}

func (o SharedDirectoryOutput) ToSharedDirectoryOutput() SharedDirectoryOutput {
	return o
}

func (o SharedDirectoryOutput) ToSharedDirectoryOutputWithContext(ctx context.Context) SharedDirectoryOutput {
	return o
}

func (o SharedDirectoryOutput) ToOutput(ctx context.Context) pulumix.Output[SharedDirectory] {
	return pulumix.Output[SharedDirectory]{
		OutputState: o.OutputState,
	}
}

// Identifier of the Managed Microsoft AD directory that you want to share with other accounts.
func (o SharedDirectoryOutput) DirectoryId() pulumix.Output[string] {
	value := pulumix.Apply[SharedDirectory](o, func(v SharedDirectory) pulumix.Output[string] { return v.DirectoryId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Method used when sharing a directory. Valid values are `ORGANIZATIONS` and `HANDSHAKE`. Default is `HANDSHAKE`.
func (o SharedDirectoryOutput) Method() pulumix.Output[*string] {
	value := pulumix.Apply[SharedDirectory](o, func(v SharedDirectory) pulumix.Output[*string] { return v.Method })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Message sent by the directory owner to the directory consumer to help the directory consumer administrator determine whether to approve or reject the share invitation.
func (o SharedDirectoryOutput) Notes() pulumix.Output[*string] {
	value := pulumix.Apply[SharedDirectory](o, func(v SharedDirectory) pulumix.Output[*string] { return v.Notes })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Identifier of the directory that is stored in the directory consumer account that corresponds to the shared directory in the owner account.
func (o SharedDirectoryOutput) SharedDirectoryId() pulumix.Output[string] {
	value := pulumix.Apply[SharedDirectory](o, func(v SharedDirectory) pulumix.Output[string] { return v.SharedDirectoryId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Identifier for the directory consumer account with whom the directory is to be shared. See below.
//
// The following arguments are optional:
func (o SharedDirectoryOutput) Target() pulumix.GPtrOutput[SharedDirectoryTarget, SharedDirectoryTargetOutput] {
	value := pulumix.Apply[SharedDirectory](o, func(v SharedDirectory) pulumix.GPtrOutput[SharedDirectoryTarget, SharedDirectoryTargetOutput] {
		return v.Target
	})
	unwrapped := pulumix.Flatten[*SharedDirectoryTarget, pulumix.GPtrOutput[SharedDirectoryTarget, SharedDirectoryTargetOutput]](value)
	return pulumix.GPtrOutput[SharedDirectoryTarget, SharedDirectoryTargetOutput]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(SharedDirectoryOutput{})
}
