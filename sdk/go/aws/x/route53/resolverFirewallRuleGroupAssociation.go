// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package route53

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a Route 53 Resolver DNS Firewall rule group association resource.
type ResolverFirewallRuleGroupAssociation struct {
	pulumi.CustomResourceState

	// The ARN (Amazon Resource Name) of the firewall rule group association.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The unique identifier of the firewall rule group.
	FirewallRuleGroupId pulumix.Output[string] `pulumi:"firewallRuleGroupId"`
	// If enabled, this setting disallows modification or removal of the association, to help prevent against accidentally altering DNS firewall protections. Valid values: `ENABLED`, `DISABLED`.
	MutationProtection pulumix.Output[string] `pulumi:"mutationProtection"`
	// A name that lets you identify the rule group association, to manage and use it.
	Name pulumix.Output[string] `pulumi:"name"`
	// The setting that determines the processing order of the rule group among the rule groups that you associate with the specified VPC. DNS Firewall filters VPC traffic starting from the rule group with the lowest numeric priority setting.
	Priority pulumix.Output[int] `pulumi:"priority"`
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// The unique identifier of the VPC that you want to associate with the rule group.
	VpcId pulumix.Output[string] `pulumi:"vpcId"`
}

// NewResolverFirewallRuleGroupAssociation registers a new resource with the given unique name, arguments, and options.
func NewResolverFirewallRuleGroupAssociation(ctx *pulumi.Context,
	name string, args *ResolverFirewallRuleGroupAssociationArgs, opts ...pulumi.ResourceOption) (*ResolverFirewallRuleGroupAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FirewallRuleGroupId == nil {
		return nil, errors.New("invalid value for required argument 'FirewallRuleGroupId'")
	}
	if args.Priority == nil {
		return nil, errors.New("invalid value for required argument 'Priority'")
	}
	if args.VpcId == nil {
		return nil, errors.New("invalid value for required argument 'VpcId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ResolverFirewallRuleGroupAssociation
	err := ctx.RegisterResource("aws:route53/resolverFirewallRuleGroupAssociation:ResolverFirewallRuleGroupAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetResolverFirewallRuleGroupAssociation gets an existing ResolverFirewallRuleGroupAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetResolverFirewallRuleGroupAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ResolverFirewallRuleGroupAssociationState, opts ...pulumi.ResourceOption) (*ResolverFirewallRuleGroupAssociation, error) {
	var resource ResolverFirewallRuleGroupAssociation
	err := ctx.ReadResource("aws:route53/resolverFirewallRuleGroupAssociation:ResolverFirewallRuleGroupAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ResolverFirewallRuleGroupAssociation resources.
type resolverFirewallRuleGroupAssociationState struct {
	// The ARN (Amazon Resource Name) of the firewall rule group association.
	Arn *string `pulumi:"arn"`
	// The unique identifier of the firewall rule group.
	FirewallRuleGroupId *string `pulumi:"firewallRuleGroupId"`
	// If enabled, this setting disallows modification or removal of the association, to help prevent against accidentally altering DNS firewall protections. Valid values: `ENABLED`, `DISABLED`.
	MutationProtection *string `pulumi:"mutationProtection"`
	// A name that lets you identify the rule group association, to manage and use it.
	Name *string `pulumi:"name"`
	// The setting that determines the processing order of the rule group among the rule groups that you associate with the specified VPC. DNS Firewall filters VPC traffic starting from the rule group with the lowest numeric priority setting.
	Priority *int `pulumi:"priority"`
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// The unique identifier of the VPC that you want to associate with the rule group.
	VpcId *string `pulumi:"vpcId"`
}

type ResolverFirewallRuleGroupAssociationState struct {
	// The ARN (Amazon Resource Name) of the firewall rule group association.
	Arn pulumix.Input[*string]
	// The unique identifier of the firewall rule group.
	FirewallRuleGroupId pulumix.Input[*string]
	// If enabled, this setting disallows modification or removal of the association, to help prevent against accidentally altering DNS firewall protections. Valid values: `ENABLED`, `DISABLED`.
	MutationProtection pulumix.Input[*string]
	// A name that lets you identify the rule group association, to manage and use it.
	Name pulumix.Input[*string]
	// The setting that determines the processing order of the rule group among the rule groups that you associate with the specified VPC. DNS Firewall filters VPC traffic starting from the rule group with the lowest numeric priority setting.
	Priority pulumix.Input[*int]
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// The unique identifier of the VPC that you want to associate with the rule group.
	VpcId pulumix.Input[*string]
}

func (ResolverFirewallRuleGroupAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*resolverFirewallRuleGroupAssociationState)(nil)).Elem()
}

type resolverFirewallRuleGroupAssociationArgs struct {
	// The unique identifier of the firewall rule group.
	FirewallRuleGroupId string `pulumi:"firewallRuleGroupId"`
	// If enabled, this setting disallows modification or removal of the association, to help prevent against accidentally altering DNS firewall protections. Valid values: `ENABLED`, `DISABLED`.
	MutationProtection *string `pulumi:"mutationProtection"`
	// A name that lets you identify the rule group association, to manage and use it.
	Name *string `pulumi:"name"`
	// The setting that determines the processing order of the rule group among the rule groups that you associate with the specified VPC. DNS Firewall filters VPC traffic starting from the rule group with the lowest numeric priority setting.
	Priority int `pulumi:"priority"`
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// The unique identifier of the VPC that you want to associate with the rule group.
	VpcId string `pulumi:"vpcId"`
}

// The set of arguments for constructing a ResolverFirewallRuleGroupAssociation resource.
type ResolverFirewallRuleGroupAssociationArgs struct {
	// The unique identifier of the firewall rule group.
	FirewallRuleGroupId pulumix.Input[string]
	// If enabled, this setting disallows modification or removal of the association, to help prevent against accidentally altering DNS firewall protections. Valid values: `ENABLED`, `DISABLED`.
	MutationProtection pulumix.Input[*string]
	// A name that lets you identify the rule group association, to manage and use it.
	Name pulumix.Input[*string]
	// The setting that determines the processing order of the rule group among the rule groups that you associate with the specified VPC. DNS Firewall filters VPC traffic starting from the rule group with the lowest numeric priority setting.
	Priority pulumix.Input[int]
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// The unique identifier of the VPC that you want to associate with the rule group.
	VpcId pulumix.Input[string]
}

func (ResolverFirewallRuleGroupAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*resolverFirewallRuleGroupAssociationArgs)(nil)).Elem()
}

type ResolverFirewallRuleGroupAssociationOutput struct{ *pulumi.OutputState }

func (ResolverFirewallRuleGroupAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverFirewallRuleGroupAssociation)(nil)).Elem()
}

func (o ResolverFirewallRuleGroupAssociationOutput) ToResolverFirewallRuleGroupAssociationOutput() ResolverFirewallRuleGroupAssociationOutput {
	return o
}

func (o ResolverFirewallRuleGroupAssociationOutput) ToResolverFirewallRuleGroupAssociationOutputWithContext(ctx context.Context) ResolverFirewallRuleGroupAssociationOutput {
	return o
}

func (o ResolverFirewallRuleGroupAssociationOutput) ToOutput(ctx context.Context) pulumix.Output[ResolverFirewallRuleGroupAssociation] {
	return pulumix.Output[ResolverFirewallRuleGroupAssociation]{
		OutputState: o.OutputState,
	}
}

// The ARN (Amazon Resource Name) of the firewall rule group association.
func (o ResolverFirewallRuleGroupAssociationOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[ResolverFirewallRuleGroupAssociation](o, func(v ResolverFirewallRuleGroupAssociation) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The unique identifier of the firewall rule group.
func (o ResolverFirewallRuleGroupAssociationOutput) FirewallRuleGroupId() pulumix.Output[string] {
	value := pulumix.Apply[ResolverFirewallRuleGroupAssociation](o, func(v ResolverFirewallRuleGroupAssociation) pulumix.Output[string] { return v.FirewallRuleGroupId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// If enabled, this setting disallows modification or removal of the association, to help prevent against accidentally altering DNS firewall protections. Valid values: `ENABLED`, `DISABLED`.
func (o ResolverFirewallRuleGroupAssociationOutput) MutationProtection() pulumix.Output[string] {
	value := pulumix.Apply[ResolverFirewallRuleGroupAssociation](o, func(v ResolverFirewallRuleGroupAssociation) pulumix.Output[string] { return v.MutationProtection })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A name that lets you identify the rule group association, to manage and use it.
func (o ResolverFirewallRuleGroupAssociationOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[ResolverFirewallRuleGroupAssociation](o, func(v ResolverFirewallRuleGroupAssociation) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The setting that determines the processing order of the rule group among the rule groups that you associate with the specified VPC. DNS Firewall filters VPC traffic starting from the rule group with the lowest numeric priority setting.
func (o ResolverFirewallRuleGroupAssociationOutput) Priority() pulumix.Output[int] {
	value := pulumix.Apply[ResolverFirewallRuleGroupAssociation](o, func(v ResolverFirewallRuleGroupAssociation) pulumix.Output[int] { return v.Priority })
	return pulumix.Flatten[int, pulumix.Output[int]](value)
}

// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o ResolverFirewallRuleGroupAssociationOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[ResolverFirewallRuleGroupAssociation](o, func(v ResolverFirewallRuleGroupAssociation) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o ResolverFirewallRuleGroupAssociationOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[ResolverFirewallRuleGroupAssociation](o, func(v ResolverFirewallRuleGroupAssociation) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// The unique identifier of the VPC that you want to associate with the rule group.
func (o ResolverFirewallRuleGroupAssociationOutput) VpcId() pulumix.Output[string] {
	value := pulumix.Apply[ResolverFirewallRuleGroupAssociation](o, func(v ResolverFirewallRuleGroupAssociation) pulumix.Output[string] { return v.VpcId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(ResolverFirewallRuleGroupAssociationOutput{})
}
