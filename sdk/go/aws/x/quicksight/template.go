// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package quicksight

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Resource for managing a QuickSight Template.
type Template struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) of the resource.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// AWS account ID.
	AwsAccountId pulumix.Output[string] `pulumi:"awsAccountId"`
	// The time that the template was created.
	CreatedTime pulumix.Output[string] `pulumi:"createdTime"`
	// The time that the template was last updated.
	LastUpdatedTime pulumix.Output[string] `pulumi:"lastUpdatedTime"`
	// Display name for the template.
	Name pulumix.Output[string] `pulumi:"name"`
	// A set of resource permissions on the template. Maximum of 64 items. See permissions.
	Permissions pulumix.GArrayOutput[TemplatePermission, TemplatePermissionOutput] `pulumi:"permissions"`
	// The entity that you are using as a source when you create the template (analysis or template). Only one of `definition` or `sourceEntity` should be configured. See source_entity.
	SourceEntity pulumix.GPtrOutput[TemplateSourceEntity, TemplateSourceEntityOutput] `pulumi:"sourceEntity"`
	// Amazon Resource Name (ARN) of an analysis or template that was used to create this template.
	SourceEntityArn pulumix.Output[string] `pulumi:"sourceEntityArn"`
	// The template creation status.
	Status pulumix.Output[string] `pulumi:"status"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// Identifier for the template.
	TemplateId pulumix.Output[string] `pulumi:"templateId"`
	// A description of the current template version being created/updated.
	//
	// The following arguments are optional:
	VersionDescription pulumix.Output[string] `pulumi:"versionDescription"`
	// The version number of the template version.
	VersionNumber pulumix.Output[int] `pulumi:"versionNumber"`
}

// NewTemplate registers a new resource with the given unique name, arguments, and options.
func NewTemplate(ctx *pulumi.Context,
	name string, args *TemplateArgs, opts ...pulumi.ResourceOption) (*Template, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TemplateId == nil {
		return nil, errors.New("invalid value for required argument 'TemplateId'")
	}
	if args.VersionDescription == nil {
		return nil, errors.New("invalid value for required argument 'VersionDescription'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Template
	err := ctx.RegisterResource("aws:quicksight/template:Template", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTemplate gets an existing Template resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTemplate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TemplateState, opts ...pulumi.ResourceOption) (*Template, error) {
	var resource Template
	err := ctx.ReadResource("aws:quicksight/template:Template", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Template resources.
type templateState struct {
	// The Amazon Resource Name (ARN) of the resource.
	Arn *string `pulumi:"arn"`
	// AWS account ID.
	AwsAccountId *string `pulumi:"awsAccountId"`
	// The time that the template was created.
	CreatedTime *string `pulumi:"createdTime"`
	// The time that the template was last updated.
	LastUpdatedTime *string `pulumi:"lastUpdatedTime"`
	// Display name for the template.
	Name *string `pulumi:"name"`
	// A set of resource permissions on the template. Maximum of 64 items. See permissions.
	Permissions []TemplatePermission `pulumi:"permissions"`
	// The entity that you are using as a source when you create the template (analysis or template). Only one of `definition` or `sourceEntity` should be configured. See source_entity.
	SourceEntity *TemplateSourceEntity `pulumi:"sourceEntity"`
	// Amazon Resource Name (ARN) of an analysis or template that was used to create this template.
	SourceEntityArn *string `pulumi:"sourceEntityArn"`
	// The template creation status.
	Status *string `pulumi:"status"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// Identifier for the template.
	TemplateId *string `pulumi:"templateId"`
	// A description of the current template version being created/updated.
	//
	// The following arguments are optional:
	VersionDescription *string `pulumi:"versionDescription"`
	// The version number of the template version.
	VersionNumber *int `pulumi:"versionNumber"`
}

type TemplateState struct {
	// The Amazon Resource Name (ARN) of the resource.
	Arn pulumix.Input[*string]
	// AWS account ID.
	AwsAccountId pulumix.Input[*string]
	// The time that the template was created.
	CreatedTime pulumix.Input[*string]
	// The time that the template was last updated.
	LastUpdatedTime pulumix.Input[*string]
	// Display name for the template.
	Name pulumix.Input[*string]
	// A set of resource permissions on the template. Maximum of 64 items. See permissions.
	Permissions pulumix.Input[[]*TemplatePermissionArgs]
	// The entity that you are using as a source when you create the template (analysis or template). Only one of `definition` or `sourceEntity` should be configured. See source_entity.
	SourceEntity pulumix.Input[*TemplateSourceEntityArgs]
	// Amazon Resource Name (ARN) of an analysis or template that was used to create this template.
	SourceEntityArn pulumix.Input[*string]
	// The template creation status.
	Status pulumix.Input[*string]
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// Identifier for the template.
	TemplateId pulumix.Input[*string]
	// A description of the current template version being created/updated.
	//
	// The following arguments are optional:
	VersionDescription pulumix.Input[*string]
	// The version number of the template version.
	VersionNumber pulumix.Input[*int]
}

func (TemplateState) ElementType() reflect.Type {
	return reflect.TypeOf((*templateState)(nil)).Elem()
}

type templateArgs struct {
	// AWS account ID.
	AwsAccountId *string `pulumi:"awsAccountId"`
	// Display name for the template.
	Name *string `pulumi:"name"`
	// A set of resource permissions on the template. Maximum of 64 items. See permissions.
	Permissions []TemplatePermission `pulumi:"permissions"`
	// The entity that you are using as a source when you create the template (analysis or template). Only one of `definition` or `sourceEntity` should be configured. See source_entity.
	SourceEntity *TemplateSourceEntity `pulumi:"sourceEntity"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Identifier for the template.
	TemplateId string `pulumi:"templateId"`
	// A description of the current template version being created/updated.
	//
	// The following arguments are optional:
	VersionDescription string `pulumi:"versionDescription"`
}

// The set of arguments for constructing a Template resource.
type TemplateArgs struct {
	// AWS account ID.
	AwsAccountId pulumix.Input[*string]
	// Display name for the template.
	Name pulumix.Input[*string]
	// A set of resource permissions on the template. Maximum of 64 items. See permissions.
	Permissions pulumix.Input[[]*TemplatePermissionArgs]
	// The entity that you are using as a source when you create the template (analysis or template). Only one of `definition` or `sourceEntity` should be configured. See source_entity.
	SourceEntity pulumix.Input[*TemplateSourceEntityArgs]
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// Identifier for the template.
	TemplateId pulumix.Input[string]
	// A description of the current template version being created/updated.
	//
	// The following arguments are optional:
	VersionDescription pulumix.Input[string]
}

func (TemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*templateArgs)(nil)).Elem()
}

type TemplateOutput struct{ *pulumi.OutputState }

func (TemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Template)(nil)).Elem()
}

func (o TemplateOutput) ToTemplateOutput() TemplateOutput {
	return o
}

func (o TemplateOutput) ToTemplateOutputWithContext(ctx context.Context) TemplateOutput {
	return o
}

func (o TemplateOutput) ToOutput(ctx context.Context) pulumix.Output[Template] {
	return pulumix.Output[Template]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) of the resource.
func (o TemplateOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Template](o, func(v Template) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// AWS account ID.
func (o TemplateOutput) AwsAccountId() pulumix.Output[string] {
	value := pulumix.Apply[Template](o, func(v Template) pulumix.Output[string] { return v.AwsAccountId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The time that the template was created.
func (o TemplateOutput) CreatedTime() pulumix.Output[string] {
	value := pulumix.Apply[Template](o, func(v Template) pulumix.Output[string] { return v.CreatedTime })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The time that the template was last updated.
func (o TemplateOutput) LastUpdatedTime() pulumix.Output[string] {
	value := pulumix.Apply[Template](o, func(v Template) pulumix.Output[string] { return v.LastUpdatedTime })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Display name for the template.
func (o TemplateOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[Template](o, func(v Template) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A set of resource permissions on the template. Maximum of 64 items. See permissions.
func (o TemplateOutput) Permissions() pulumix.GArrayOutput[TemplatePermission, TemplatePermissionOutput] {
	value := pulumix.Apply[Template](o, func(v Template) pulumix.GArrayOutput[TemplatePermission, TemplatePermissionOutput] {
		return v.Permissions
	})
	unwrapped := pulumix.Flatten[[]TemplatePermission, pulumix.GArrayOutput[TemplatePermission, TemplatePermissionOutput]](value)
	return pulumix.GArrayOutput[TemplatePermission, TemplatePermissionOutput]{OutputState: unwrapped.OutputState}
}

// The entity that you are using as a source when you create the template (analysis or template). Only one of `definition` or `sourceEntity` should be configured. See source_entity.
func (o TemplateOutput) SourceEntity() pulumix.GPtrOutput[TemplateSourceEntity, TemplateSourceEntityOutput] {
	value := pulumix.Apply[Template](o, func(v Template) pulumix.GPtrOutput[TemplateSourceEntity, TemplateSourceEntityOutput] {
		return v.SourceEntity
	})
	unwrapped := pulumix.Flatten[*TemplateSourceEntity, pulumix.GPtrOutput[TemplateSourceEntity, TemplateSourceEntityOutput]](value)
	return pulumix.GPtrOutput[TemplateSourceEntity, TemplateSourceEntityOutput]{OutputState: unwrapped.OutputState}
}

// Amazon Resource Name (ARN) of an analysis or template that was used to create this template.
func (o TemplateOutput) SourceEntityArn() pulumix.Output[string] {
	value := pulumix.Apply[Template](o, func(v Template) pulumix.Output[string] { return v.SourceEntityArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The template creation status.
func (o TemplateOutput) Status() pulumix.Output[string] {
	value := pulumix.Apply[Template](o, func(v Template) pulumix.Output[string] { return v.Status })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o TemplateOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Template](o, func(v Template) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o TemplateOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[Template](o, func(v Template) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Identifier for the template.
func (o TemplateOutput) TemplateId() pulumix.Output[string] {
	value := pulumix.Apply[Template](o, func(v Template) pulumix.Output[string] { return v.TemplateId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A description of the current template version being created/updated.
//
// The following arguments are optional:
func (o TemplateOutput) VersionDescription() pulumix.Output[string] {
	value := pulumix.Apply[Template](o, func(v Template) pulumix.Output[string] { return v.VersionDescription })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The version number of the template version.
func (o TemplateOutput) VersionNumber() pulumix.Output[int] {
	value := pulumix.Apply[Template](o, func(v Template) pulumix.Output[int] { return v.VersionNumber })
	return pulumix.Flatten[int, pulumix.Output[int]](value)
}

func init() {
	pulumi.RegisterOutputType(TemplateOutput{})
}
