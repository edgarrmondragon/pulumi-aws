// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an API Gateway API Key.
//
// > **NOTE:** Since the API Gateway usage plans feature was launched on August 11, 2016, usage plans are now **required** to associate an API key with an API stage.
type ApiKey struct {
	pulumi.CustomResourceState

	// ARN
	Arn pulumix.Output[string] `pulumi:"arn"`
	// Creation date of the API key
	CreatedDate pulumix.Output[string] `pulumi:"createdDate"`
	// API key description. Defaults to "Managed by Pulumi".
	Description pulumix.Output[string] `pulumi:"description"`
	// Whether the API key can be used by callers. Defaults to `true`.
	Enabled pulumix.Output[*bool] `pulumi:"enabled"`
	// Last update date of the API key
	LastUpdatedDate pulumix.Output[string] `pulumi:"lastUpdatedDate"`
	// Name of the API key.
	Name pulumix.Output[string] `pulumi:"name"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// Value of the API key. If specified, the value must be an alphanumeric string between 20 and 128 characters. If not specified, it will be automatically generated by AWS on creation.
	Value pulumix.Output[string] `pulumi:"value"`
}

// NewApiKey registers a new resource with the given unique name, arguments, and options.
func NewApiKey(ctx *pulumi.Context,
	name string, args *ApiKeyArgs, opts ...pulumi.ResourceOption) (*ApiKey, error) {
	if args == nil {
		args = &ApiKeyArgs{}
	}

	if args.Description == nil {
		args.Description = pulumix.Ptr("Managed by Pulumi")
	}
	if args.Value != nil {
		untypedSecretValue := pulumi.ToSecret(args.Value.ToOutput(ctx.Context()).Untyped())
		args.Value = pulumix.MustConvertTyped[*string](untypedSecretValue)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"value",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ApiKey
	err := ctx.RegisterResource("aws:apigateway/apiKey:ApiKey", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApiKey gets an existing ApiKey resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApiKey(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApiKeyState, opts ...pulumi.ResourceOption) (*ApiKey, error) {
	var resource ApiKey
	err := ctx.ReadResource("aws:apigateway/apiKey:ApiKey", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApiKey resources.
type apiKeyState struct {
	// ARN
	Arn *string `pulumi:"arn"`
	// Creation date of the API key
	CreatedDate *string `pulumi:"createdDate"`
	// API key description. Defaults to "Managed by Pulumi".
	Description *string `pulumi:"description"`
	// Whether the API key can be used by callers. Defaults to `true`.
	Enabled *bool `pulumi:"enabled"`
	// Last update date of the API key
	LastUpdatedDate *string `pulumi:"lastUpdatedDate"`
	// Name of the API key.
	Name *string `pulumi:"name"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// Value of the API key. If specified, the value must be an alphanumeric string between 20 and 128 characters. If not specified, it will be automatically generated by AWS on creation.
	Value *string `pulumi:"value"`
}

type ApiKeyState struct {
	// ARN
	Arn pulumix.Input[*string]
	// Creation date of the API key
	CreatedDate pulumix.Input[*string]
	// API key description. Defaults to "Managed by Pulumi".
	Description pulumix.Input[*string]
	// Whether the API key can be used by callers. Defaults to `true`.
	Enabled pulumix.Input[*bool]
	// Last update date of the API key
	LastUpdatedDate pulumix.Input[*string]
	// Name of the API key.
	Name pulumix.Input[*string]
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// Value of the API key. If specified, the value must be an alphanumeric string between 20 and 128 characters. If not specified, it will be automatically generated by AWS on creation.
	Value pulumix.Input[*string]
}

func (ApiKeyState) ElementType() reflect.Type {
	return reflect.TypeOf((*apiKeyState)(nil)).Elem()
}

type apiKeyArgs struct {
	// API key description. Defaults to "Managed by Pulumi".
	Description *string `pulumi:"description"`
	// Whether the API key can be used by callers. Defaults to `true`.
	Enabled *bool `pulumi:"enabled"`
	// Name of the API key.
	Name *string `pulumi:"name"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Value of the API key. If specified, the value must be an alphanumeric string between 20 and 128 characters. If not specified, it will be automatically generated by AWS on creation.
	Value *string `pulumi:"value"`
}

// The set of arguments for constructing a ApiKey resource.
type ApiKeyArgs struct {
	// API key description. Defaults to "Managed by Pulumi".
	Description pulumix.Input[*string]
	// Whether the API key can be used by callers. Defaults to `true`.
	Enabled pulumix.Input[*bool]
	// Name of the API key.
	Name pulumix.Input[*string]
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// Value of the API key. If specified, the value must be an alphanumeric string between 20 and 128 characters. If not specified, it will be automatically generated by AWS on creation.
	Value pulumix.Input[*string]
}

func (ApiKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*apiKeyArgs)(nil)).Elem()
}

type ApiKeyOutput struct{ *pulumi.OutputState }

func (ApiKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiKey)(nil)).Elem()
}

func (o ApiKeyOutput) ToApiKeyOutput() ApiKeyOutput {
	return o
}

func (o ApiKeyOutput) ToApiKeyOutputWithContext(ctx context.Context) ApiKeyOutput {
	return o
}

func (o ApiKeyOutput) ToOutput(ctx context.Context) pulumix.Output[ApiKey] {
	return pulumix.Output[ApiKey]{
		OutputState: o.OutputState,
	}
}

// ARN
func (o ApiKeyOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[ApiKey](o, func(v ApiKey) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Creation date of the API key
func (o ApiKeyOutput) CreatedDate() pulumix.Output[string] {
	value := pulumix.Apply[ApiKey](o, func(v ApiKey) pulumix.Output[string] { return v.CreatedDate })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// API key description. Defaults to "Managed by Pulumi".
func (o ApiKeyOutput) Description() pulumix.Output[string] {
	value := pulumix.Apply[ApiKey](o, func(v ApiKey) pulumix.Output[string] { return v.Description })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Whether the API key can be used by callers. Defaults to `true`.
func (o ApiKeyOutput) Enabled() pulumix.Output[*bool] {
	value := pulumix.Apply[ApiKey](o, func(v ApiKey) pulumix.Output[*bool] { return v.Enabled })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// Last update date of the API key
func (o ApiKeyOutput) LastUpdatedDate() pulumix.Output[string] {
	value := pulumix.Apply[ApiKey](o, func(v ApiKey) pulumix.Output[string] { return v.LastUpdatedDate })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Name of the API key.
func (o ApiKeyOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[ApiKey](o, func(v ApiKey) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o ApiKeyOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[ApiKey](o, func(v ApiKey) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o ApiKeyOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[ApiKey](o, func(v ApiKey) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Value of the API key. If specified, the value must be an alphanumeric string between 20 and 128 characters. If not specified, it will be automatically generated by AWS on creation.
func (o ApiKeyOutput) Value() pulumix.Output[string] {
	value := pulumix.Apply[ApiKey](o, func(v ApiKey) pulumix.Output[string] { return v.Value })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(ApiKeyOutput{})
}
