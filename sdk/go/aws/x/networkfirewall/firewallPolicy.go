// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networkfirewall

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an AWS Network Firewall Firewall Policy Resource
type FirewallPolicy struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) that identifies the firewall policy.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// A friendly description of the firewall policy.
	Description pulumix.Output[*string] `pulumi:"description"`
	// KMS encryption configuration settings. See Encryption Configuration below for details.
	EncryptionConfiguration pulumix.GPtrOutput[FirewallPolicyEncryptionConfiguration, FirewallPolicyEncryptionConfigurationOutput] `pulumi:"encryptionConfiguration"`
	// A configuration block describing the rule groups and policy actions to use in the firewall policy. See Firewall Policy below for details.
	FirewallPolicy pulumix.GPtrOutput[FirewallPolicyFirewallPolicy, FirewallPolicyFirewallPolicyOutput] `pulumi:"firewallPolicy"`
	// A friendly name of the firewall policy.
	Name pulumix.Output[string] `pulumi:"name"`
	// Map of resource tags to associate with the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// A string token used when updating a firewall policy.
	UpdateToken pulumix.Output[string] `pulumi:"updateToken"`
}

// NewFirewallPolicy registers a new resource with the given unique name, arguments, and options.
func NewFirewallPolicy(ctx *pulumi.Context,
	name string, args *FirewallPolicyArgs, opts ...pulumi.ResourceOption) (*FirewallPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FirewallPolicy == nil {
		return nil, errors.New("invalid value for required argument 'FirewallPolicy'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FirewallPolicy
	err := ctx.RegisterResource("aws:networkfirewall/firewallPolicy:FirewallPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirewallPolicy gets an existing FirewallPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewallPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirewallPolicyState, opts ...pulumi.ResourceOption) (*FirewallPolicy, error) {
	var resource FirewallPolicy
	err := ctx.ReadResource("aws:networkfirewall/firewallPolicy:FirewallPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirewallPolicy resources.
type firewallPolicyState struct {
	// The Amazon Resource Name (ARN) that identifies the firewall policy.
	Arn *string `pulumi:"arn"`
	// A friendly description of the firewall policy.
	Description *string `pulumi:"description"`
	// KMS encryption configuration settings. See Encryption Configuration below for details.
	EncryptionConfiguration *FirewallPolicyEncryptionConfiguration `pulumi:"encryptionConfiguration"`
	// A configuration block describing the rule groups and policy actions to use in the firewall policy. See Firewall Policy below for details.
	FirewallPolicy *FirewallPolicyFirewallPolicy `pulumi:"firewallPolicy"`
	// A friendly name of the firewall policy.
	Name *string `pulumi:"name"`
	// Map of resource tags to associate with the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// A string token used when updating a firewall policy.
	UpdateToken *string `pulumi:"updateToken"`
}

type FirewallPolicyState struct {
	// The Amazon Resource Name (ARN) that identifies the firewall policy.
	Arn pulumix.Input[*string]
	// A friendly description of the firewall policy.
	Description pulumix.Input[*string]
	// KMS encryption configuration settings. See Encryption Configuration below for details.
	EncryptionConfiguration pulumix.Input[*FirewallPolicyEncryptionConfigurationArgs]
	// A configuration block describing the rule groups and policy actions to use in the firewall policy. See Firewall Policy below for details.
	FirewallPolicy pulumix.Input[*FirewallPolicyFirewallPolicyArgs]
	// A friendly name of the firewall policy.
	Name pulumix.Input[*string]
	// Map of resource tags to associate with the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// A string token used when updating a firewall policy.
	UpdateToken pulumix.Input[*string]
}

func (FirewallPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallPolicyState)(nil)).Elem()
}

type firewallPolicyArgs struct {
	// A friendly description of the firewall policy.
	Description *string `pulumi:"description"`
	// KMS encryption configuration settings. See Encryption Configuration below for details.
	EncryptionConfiguration *FirewallPolicyEncryptionConfiguration `pulumi:"encryptionConfiguration"`
	// A configuration block describing the rule groups and policy actions to use in the firewall policy. See Firewall Policy below for details.
	FirewallPolicy FirewallPolicyFirewallPolicy `pulumi:"firewallPolicy"`
	// A friendly name of the firewall policy.
	Name *string `pulumi:"name"`
	// Map of resource tags to associate with the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a FirewallPolicy resource.
type FirewallPolicyArgs struct {
	// A friendly description of the firewall policy.
	Description pulumix.Input[*string]
	// KMS encryption configuration settings. See Encryption Configuration below for details.
	EncryptionConfiguration pulumix.Input[*FirewallPolicyEncryptionConfigurationArgs]
	// A configuration block describing the rule groups and policy actions to use in the firewall policy. See Firewall Policy below for details.
	FirewallPolicy pulumix.Input[*FirewallPolicyFirewallPolicyArgs]
	// A friendly name of the firewall policy.
	Name pulumix.Input[*string]
	// Map of resource tags to associate with the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (FirewallPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallPolicyArgs)(nil)).Elem()
}

type FirewallPolicyOutput struct{ *pulumi.OutputState }

func (FirewallPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicy)(nil)).Elem()
}

func (o FirewallPolicyOutput) ToFirewallPolicyOutput() FirewallPolicyOutput {
	return o
}

func (o FirewallPolicyOutput) ToFirewallPolicyOutputWithContext(ctx context.Context) FirewallPolicyOutput {
	return o
}

func (o FirewallPolicyOutput) ToOutput(ctx context.Context) pulumix.Output[FirewallPolicy] {
	return pulumix.Output[FirewallPolicy]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) that identifies the firewall policy.
func (o FirewallPolicyOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[FirewallPolicy](o, func(v FirewallPolicy) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A friendly description of the firewall policy.
func (o FirewallPolicyOutput) Description() pulumix.Output[*string] {
	value := pulumix.Apply[FirewallPolicy](o, func(v FirewallPolicy) pulumix.Output[*string] { return v.Description })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// KMS encryption configuration settings. See Encryption Configuration below for details.
func (o FirewallPolicyOutput) EncryptionConfiguration() pulumix.GPtrOutput[FirewallPolicyEncryptionConfiguration, FirewallPolicyEncryptionConfigurationOutput] {
	value := pulumix.Apply[FirewallPolicy](o, func(v FirewallPolicy) pulumix.GPtrOutput[FirewallPolicyEncryptionConfiguration, FirewallPolicyEncryptionConfigurationOutput] {
		return v.EncryptionConfiguration
	})
	unwrapped := pulumix.Flatten[*FirewallPolicyEncryptionConfiguration, pulumix.GPtrOutput[FirewallPolicyEncryptionConfiguration, FirewallPolicyEncryptionConfigurationOutput]](value)
	return pulumix.GPtrOutput[FirewallPolicyEncryptionConfiguration, FirewallPolicyEncryptionConfigurationOutput]{OutputState: unwrapped.OutputState}
}

// A configuration block describing the rule groups and policy actions to use in the firewall policy. See Firewall Policy below for details.
func (o FirewallPolicyOutput) FirewallPolicy() pulumix.GPtrOutput[FirewallPolicyFirewallPolicy, FirewallPolicyFirewallPolicyOutput] {
	value := pulumix.Apply[FirewallPolicy](o, func(v FirewallPolicy) pulumix.GPtrOutput[FirewallPolicyFirewallPolicy, FirewallPolicyFirewallPolicyOutput] {
		return v.FirewallPolicy
	})
	unwrapped := pulumix.Flatten[*FirewallPolicyFirewallPolicy, pulumix.GPtrOutput[FirewallPolicyFirewallPolicy, FirewallPolicyFirewallPolicyOutput]](value)
	return pulumix.GPtrOutput[FirewallPolicyFirewallPolicy, FirewallPolicyFirewallPolicyOutput]{OutputState: unwrapped.OutputState}
}

// A friendly name of the firewall policy.
func (o FirewallPolicyOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[FirewallPolicy](o, func(v FirewallPolicy) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Map of resource tags to associate with the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o FirewallPolicyOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[FirewallPolicy](o, func(v FirewallPolicy) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o FirewallPolicyOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[FirewallPolicy](o, func(v FirewallPolicy) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A string token used when updating a firewall policy.
func (o FirewallPolicyOutput) UpdateToken() pulumix.Output[string] {
	value := pulumix.Apply[FirewallPolicy](o, func(v FirewallPolicy) pulumix.Output[string] { return v.UpdateToken })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(FirewallPolicyOutput{})
}
