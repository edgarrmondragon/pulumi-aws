// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iot

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Managing [IoT Thing indexing](https://docs.aws.amazon.com/iot/latest/developerguide/managing-index.html).
type IndexingConfiguration struct {
	pulumi.CustomResourceState

	// Thing group indexing configuration. See below.
	ThingGroupIndexingConfiguration pulumix.GPtrOutput[IndexingConfigurationThingGroupIndexingConfiguration, IndexingConfigurationThingGroupIndexingConfigurationOutput] `pulumi:"thingGroupIndexingConfiguration"`
	// Thing indexing configuration. See below.
	ThingIndexingConfiguration pulumix.GPtrOutput[IndexingConfigurationThingIndexingConfiguration, IndexingConfigurationThingIndexingConfigurationOutput] `pulumi:"thingIndexingConfiguration"`
}

// NewIndexingConfiguration registers a new resource with the given unique name, arguments, and options.
func NewIndexingConfiguration(ctx *pulumi.Context,
	name string, args *IndexingConfigurationArgs, opts ...pulumi.ResourceOption) (*IndexingConfiguration, error) {
	if args == nil {
		args = &IndexingConfigurationArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource IndexingConfiguration
	err := ctx.RegisterResource("aws:iot/indexingConfiguration:IndexingConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIndexingConfiguration gets an existing IndexingConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIndexingConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IndexingConfigurationState, opts ...pulumi.ResourceOption) (*IndexingConfiguration, error) {
	var resource IndexingConfiguration
	err := ctx.ReadResource("aws:iot/indexingConfiguration:IndexingConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IndexingConfiguration resources.
type indexingConfigurationState struct {
	// Thing group indexing configuration. See below.
	ThingGroupIndexingConfiguration *IndexingConfigurationThingGroupIndexingConfiguration `pulumi:"thingGroupIndexingConfiguration"`
	// Thing indexing configuration. See below.
	ThingIndexingConfiguration *IndexingConfigurationThingIndexingConfiguration `pulumi:"thingIndexingConfiguration"`
}

type IndexingConfigurationState struct {
	// Thing group indexing configuration. See below.
	ThingGroupIndexingConfiguration pulumix.Input[*IndexingConfigurationThingGroupIndexingConfigurationArgs]
	// Thing indexing configuration. See below.
	ThingIndexingConfiguration pulumix.Input[*IndexingConfigurationThingIndexingConfigurationArgs]
}

func (IndexingConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*indexingConfigurationState)(nil)).Elem()
}

type indexingConfigurationArgs struct {
	// Thing group indexing configuration. See below.
	ThingGroupIndexingConfiguration *IndexingConfigurationThingGroupIndexingConfiguration `pulumi:"thingGroupIndexingConfiguration"`
	// Thing indexing configuration. See below.
	ThingIndexingConfiguration *IndexingConfigurationThingIndexingConfiguration `pulumi:"thingIndexingConfiguration"`
}

// The set of arguments for constructing a IndexingConfiguration resource.
type IndexingConfigurationArgs struct {
	// Thing group indexing configuration. See below.
	ThingGroupIndexingConfiguration pulumix.Input[*IndexingConfigurationThingGroupIndexingConfigurationArgs]
	// Thing indexing configuration. See below.
	ThingIndexingConfiguration pulumix.Input[*IndexingConfigurationThingIndexingConfigurationArgs]
}

func (IndexingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*indexingConfigurationArgs)(nil)).Elem()
}

type IndexingConfigurationOutput struct{ *pulumi.OutputState }

func (IndexingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexingConfiguration)(nil)).Elem()
}

func (o IndexingConfigurationOutput) ToIndexingConfigurationOutput() IndexingConfigurationOutput {
	return o
}

func (o IndexingConfigurationOutput) ToIndexingConfigurationOutputWithContext(ctx context.Context) IndexingConfigurationOutput {
	return o
}

func (o IndexingConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[IndexingConfiguration] {
	return pulumix.Output[IndexingConfiguration]{
		OutputState: o.OutputState,
	}
}

// Thing group indexing configuration. See below.
func (o IndexingConfigurationOutput) ThingGroupIndexingConfiguration() pulumix.GPtrOutput[IndexingConfigurationThingGroupIndexingConfiguration, IndexingConfigurationThingGroupIndexingConfigurationOutput] {
	value := pulumix.Apply[IndexingConfiguration](o, func(v IndexingConfiguration) pulumix.GPtrOutput[IndexingConfigurationThingGroupIndexingConfiguration, IndexingConfigurationThingGroupIndexingConfigurationOutput] {
		return v.ThingGroupIndexingConfiguration
	})
	unwrapped := pulumix.Flatten[*IndexingConfigurationThingGroupIndexingConfiguration, pulumix.GPtrOutput[IndexingConfigurationThingGroupIndexingConfiguration, IndexingConfigurationThingGroupIndexingConfigurationOutput]](value)
	return pulumix.GPtrOutput[IndexingConfigurationThingGroupIndexingConfiguration, IndexingConfigurationThingGroupIndexingConfigurationOutput]{OutputState: unwrapped.OutputState}
}

// Thing indexing configuration. See below.
func (o IndexingConfigurationOutput) ThingIndexingConfiguration() pulumix.GPtrOutput[IndexingConfigurationThingIndexingConfiguration, IndexingConfigurationThingIndexingConfigurationOutput] {
	value := pulumix.Apply[IndexingConfiguration](o, func(v IndexingConfiguration) pulumix.GPtrOutput[IndexingConfigurationThingIndexingConfiguration, IndexingConfigurationThingIndexingConfigurationOutput] {
		return v.ThingIndexingConfiguration
	})
	unwrapped := pulumix.Flatten[*IndexingConfigurationThingIndexingConfiguration, pulumix.GPtrOutput[IndexingConfigurationThingIndexingConfiguration, IndexingConfigurationThingIndexingConfigurationOutput]](value)
	return pulumix.GPtrOutput[IndexingConfigurationThingIndexingConfiguration, IndexingConfigurationThingIndexingConfigurationOutput]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(IndexingConfigurationOutput{})
}
