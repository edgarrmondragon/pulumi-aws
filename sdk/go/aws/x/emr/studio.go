// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package emr

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an Elastic MapReduce Studio.
type Studio struct {
	pulumi.CustomResourceState

	// ARN of the studio.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// Specifies whether the Studio authenticates users using IAM or Amazon Web Services SSO. Valid values are `SSO` or `IAM`.
	AuthMode pulumix.Output[string] `pulumi:"authMode"`
	// The Amazon S3 location to back up Amazon EMR Studio Workspaces and notebook files.
	DefaultS3Location pulumix.Output[string] `pulumi:"defaultS3Location"`
	// A detailed description of the Amazon EMR Studio.
	Description pulumix.Output[*string] `pulumi:"description"`
	// The ID of the Amazon EMR Studio Engine security group. The Engine security group allows inbound network traffic from the Workspace security group, and it must be in the same VPC specified by `vpcId`.
	EngineSecurityGroupId pulumix.Output[string] `pulumi:"engineSecurityGroupId"`
	// The authentication endpoint of your identity provider (IdP). Specify this value when you use IAM authentication and want to let federated users log in to a Studio with the Studio URL and credentials from your IdP. Amazon EMR Studio redirects users to this endpoint to enter credentials.
	IdpAuthUrl pulumix.Output[*string] `pulumi:"idpAuthUrl"`
	// The name that your identity provider (IdP) uses for its RelayState parameter. For example, RelayState or TargetSource. Specify this value when you use IAM authentication and want to let federated users log in to a Studio using the Studio URL. The RelayState parameter differs by IdP.
	IdpRelayStateParameterName pulumix.Output[*string] `pulumi:"idpRelayStateParameterName"`
	// A descriptive name for the Amazon EMR Studio.
	Name pulumix.Output[string] `pulumi:"name"`
	// The IAM role that the Amazon EMR Studio assumes. The service role provides a way for Amazon EMR Studio to interoperate with other Amazon Web Services services.
	ServiceRole pulumix.Output[string] `pulumi:"serviceRole"`
	// A list of subnet IDs to associate with the Amazon EMR Studio. A Studio can have a maximum of 5 subnets. The subnets must belong to the VPC specified by `vpcId`. Studio users can create a Workspace in any of the specified subnets.
	SubnetIds pulumix.ArrayOutput[string] `pulumi:"subnetIds"`
	// list of tags to apply to the EMR Cluster. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags    pulumix.MapOutput[string] `pulumi:"tags"`
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// The unique access URL of the Amazon EMR Studio.
	Url pulumix.Output[string] `pulumi:"url"`
	// The IAM user role that users and groups assume when logged in to an Amazon EMR Studio. Only specify a User Role when you use Amazon Web Services SSO authentication. The permissions attached to the User Role can be scoped down for each user or group using session policies.
	UserRole pulumix.Output[*string] `pulumi:"userRole"`
	// The ID of the Amazon Virtual Private Cloud (Amazon VPC) to associate with the Studio.
	VpcId pulumix.Output[string] `pulumi:"vpcId"`
	// The ID of the Amazon EMR Studio Workspace security group. The Workspace security group allows outbound network traffic to resources in the Engine security group, and it must be in the same VPC specified by `vpcId`.
	//
	// The following arguments are optional:
	WorkspaceSecurityGroupId pulumix.Output[string] `pulumi:"workspaceSecurityGroupId"`
}

// NewStudio registers a new resource with the given unique name, arguments, and options.
func NewStudio(ctx *pulumi.Context,
	name string, args *StudioArgs, opts ...pulumi.ResourceOption) (*Studio, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AuthMode == nil {
		return nil, errors.New("invalid value for required argument 'AuthMode'")
	}
	if args.DefaultS3Location == nil {
		return nil, errors.New("invalid value for required argument 'DefaultS3Location'")
	}
	if args.EngineSecurityGroupId == nil {
		return nil, errors.New("invalid value for required argument 'EngineSecurityGroupId'")
	}
	if args.ServiceRole == nil {
		return nil, errors.New("invalid value for required argument 'ServiceRole'")
	}
	if args.SubnetIds == nil {
		return nil, errors.New("invalid value for required argument 'SubnetIds'")
	}
	if args.VpcId == nil {
		return nil, errors.New("invalid value for required argument 'VpcId'")
	}
	if args.WorkspaceSecurityGroupId == nil {
		return nil, errors.New("invalid value for required argument 'WorkspaceSecurityGroupId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Studio
	err := ctx.RegisterResource("aws:emr/studio:Studio", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStudio gets an existing Studio resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStudio(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *StudioState, opts ...pulumi.ResourceOption) (*Studio, error) {
	var resource Studio
	err := ctx.ReadResource("aws:emr/studio:Studio", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Studio resources.
type studioState struct {
	// ARN of the studio.
	Arn *string `pulumi:"arn"`
	// Specifies whether the Studio authenticates users using IAM or Amazon Web Services SSO. Valid values are `SSO` or `IAM`.
	AuthMode *string `pulumi:"authMode"`
	// The Amazon S3 location to back up Amazon EMR Studio Workspaces and notebook files.
	DefaultS3Location *string `pulumi:"defaultS3Location"`
	// A detailed description of the Amazon EMR Studio.
	Description *string `pulumi:"description"`
	// The ID of the Amazon EMR Studio Engine security group. The Engine security group allows inbound network traffic from the Workspace security group, and it must be in the same VPC specified by `vpcId`.
	EngineSecurityGroupId *string `pulumi:"engineSecurityGroupId"`
	// The authentication endpoint of your identity provider (IdP). Specify this value when you use IAM authentication and want to let federated users log in to a Studio with the Studio URL and credentials from your IdP. Amazon EMR Studio redirects users to this endpoint to enter credentials.
	IdpAuthUrl *string `pulumi:"idpAuthUrl"`
	// The name that your identity provider (IdP) uses for its RelayState parameter. For example, RelayState or TargetSource. Specify this value when you use IAM authentication and want to let federated users log in to a Studio using the Studio URL. The RelayState parameter differs by IdP.
	IdpRelayStateParameterName *string `pulumi:"idpRelayStateParameterName"`
	// A descriptive name for the Amazon EMR Studio.
	Name *string `pulumi:"name"`
	// The IAM role that the Amazon EMR Studio assumes. The service role provides a way for Amazon EMR Studio to interoperate with other Amazon Web Services services.
	ServiceRole *string `pulumi:"serviceRole"`
	// A list of subnet IDs to associate with the Amazon EMR Studio. A Studio can have a maximum of 5 subnets. The subnets must belong to the VPC specified by `vpcId`. Studio users can create a Workspace in any of the specified subnets.
	SubnetIds []string `pulumi:"subnetIds"`
	// list of tags to apply to the EMR Cluster. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags    map[string]string `pulumi:"tags"`
	TagsAll map[string]string `pulumi:"tagsAll"`
	// The unique access URL of the Amazon EMR Studio.
	Url *string `pulumi:"url"`
	// The IAM user role that users and groups assume when logged in to an Amazon EMR Studio. Only specify a User Role when you use Amazon Web Services SSO authentication. The permissions attached to the User Role can be scoped down for each user or group using session policies.
	UserRole *string `pulumi:"userRole"`
	// The ID of the Amazon Virtual Private Cloud (Amazon VPC) to associate with the Studio.
	VpcId *string `pulumi:"vpcId"`
	// The ID of the Amazon EMR Studio Workspace security group. The Workspace security group allows outbound network traffic to resources in the Engine security group, and it must be in the same VPC specified by `vpcId`.
	//
	// The following arguments are optional:
	WorkspaceSecurityGroupId *string `pulumi:"workspaceSecurityGroupId"`
}

type StudioState struct {
	// ARN of the studio.
	Arn pulumix.Input[*string]
	// Specifies whether the Studio authenticates users using IAM or Amazon Web Services SSO. Valid values are `SSO` or `IAM`.
	AuthMode pulumix.Input[*string]
	// The Amazon S3 location to back up Amazon EMR Studio Workspaces and notebook files.
	DefaultS3Location pulumix.Input[*string]
	// A detailed description of the Amazon EMR Studio.
	Description pulumix.Input[*string]
	// The ID of the Amazon EMR Studio Engine security group. The Engine security group allows inbound network traffic from the Workspace security group, and it must be in the same VPC specified by `vpcId`.
	EngineSecurityGroupId pulumix.Input[*string]
	// The authentication endpoint of your identity provider (IdP). Specify this value when you use IAM authentication and want to let federated users log in to a Studio with the Studio URL and credentials from your IdP. Amazon EMR Studio redirects users to this endpoint to enter credentials.
	IdpAuthUrl pulumix.Input[*string]
	// The name that your identity provider (IdP) uses for its RelayState parameter. For example, RelayState or TargetSource. Specify this value when you use IAM authentication and want to let federated users log in to a Studio using the Studio URL. The RelayState parameter differs by IdP.
	IdpRelayStateParameterName pulumix.Input[*string]
	// A descriptive name for the Amazon EMR Studio.
	Name pulumix.Input[*string]
	// The IAM role that the Amazon EMR Studio assumes. The service role provides a way for Amazon EMR Studio to interoperate with other Amazon Web Services services.
	ServiceRole pulumix.Input[*string]
	// A list of subnet IDs to associate with the Amazon EMR Studio. A Studio can have a maximum of 5 subnets. The subnets must belong to the VPC specified by `vpcId`. Studio users can create a Workspace in any of the specified subnets.
	SubnetIds pulumix.Input[[]string]
	// list of tags to apply to the EMR Cluster. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags    pulumix.Input[map[string]string]
	TagsAll pulumix.Input[map[string]string]
	// The unique access URL of the Amazon EMR Studio.
	Url pulumix.Input[*string]
	// The IAM user role that users and groups assume when logged in to an Amazon EMR Studio. Only specify a User Role when you use Amazon Web Services SSO authentication. The permissions attached to the User Role can be scoped down for each user or group using session policies.
	UserRole pulumix.Input[*string]
	// The ID of the Amazon Virtual Private Cloud (Amazon VPC) to associate with the Studio.
	VpcId pulumix.Input[*string]
	// The ID of the Amazon EMR Studio Workspace security group. The Workspace security group allows outbound network traffic to resources in the Engine security group, and it must be in the same VPC specified by `vpcId`.
	//
	// The following arguments are optional:
	WorkspaceSecurityGroupId pulumix.Input[*string]
}

func (StudioState) ElementType() reflect.Type {
	return reflect.TypeOf((*studioState)(nil)).Elem()
}

type studioArgs struct {
	// Specifies whether the Studio authenticates users using IAM or Amazon Web Services SSO. Valid values are `SSO` or `IAM`.
	AuthMode string `pulumi:"authMode"`
	// The Amazon S3 location to back up Amazon EMR Studio Workspaces and notebook files.
	DefaultS3Location string `pulumi:"defaultS3Location"`
	// A detailed description of the Amazon EMR Studio.
	Description *string `pulumi:"description"`
	// The ID of the Amazon EMR Studio Engine security group. The Engine security group allows inbound network traffic from the Workspace security group, and it must be in the same VPC specified by `vpcId`.
	EngineSecurityGroupId string `pulumi:"engineSecurityGroupId"`
	// The authentication endpoint of your identity provider (IdP). Specify this value when you use IAM authentication and want to let federated users log in to a Studio with the Studio URL and credentials from your IdP. Amazon EMR Studio redirects users to this endpoint to enter credentials.
	IdpAuthUrl *string `pulumi:"idpAuthUrl"`
	// The name that your identity provider (IdP) uses for its RelayState parameter. For example, RelayState or TargetSource. Specify this value when you use IAM authentication and want to let federated users log in to a Studio using the Studio URL. The RelayState parameter differs by IdP.
	IdpRelayStateParameterName *string `pulumi:"idpRelayStateParameterName"`
	// A descriptive name for the Amazon EMR Studio.
	Name *string `pulumi:"name"`
	// The IAM role that the Amazon EMR Studio assumes. The service role provides a way for Amazon EMR Studio to interoperate with other Amazon Web Services services.
	ServiceRole string `pulumi:"serviceRole"`
	// A list of subnet IDs to associate with the Amazon EMR Studio. A Studio can have a maximum of 5 subnets. The subnets must belong to the VPC specified by `vpcId`. Studio users can create a Workspace in any of the specified subnets.
	SubnetIds []string `pulumi:"subnetIds"`
	// list of tags to apply to the EMR Cluster. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// The IAM user role that users and groups assume when logged in to an Amazon EMR Studio. Only specify a User Role when you use Amazon Web Services SSO authentication. The permissions attached to the User Role can be scoped down for each user or group using session policies.
	UserRole *string `pulumi:"userRole"`
	// The ID of the Amazon Virtual Private Cloud (Amazon VPC) to associate with the Studio.
	VpcId string `pulumi:"vpcId"`
	// The ID of the Amazon EMR Studio Workspace security group. The Workspace security group allows outbound network traffic to resources in the Engine security group, and it must be in the same VPC specified by `vpcId`.
	//
	// The following arguments are optional:
	WorkspaceSecurityGroupId string `pulumi:"workspaceSecurityGroupId"`
}

// The set of arguments for constructing a Studio resource.
type StudioArgs struct {
	// Specifies whether the Studio authenticates users using IAM or Amazon Web Services SSO. Valid values are `SSO` or `IAM`.
	AuthMode pulumix.Input[string]
	// The Amazon S3 location to back up Amazon EMR Studio Workspaces and notebook files.
	DefaultS3Location pulumix.Input[string]
	// A detailed description of the Amazon EMR Studio.
	Description pulumix.Input[*string]
	// The ID of the Amazon EMR Studio Engine security group. The Engine security group allows inbound network traffic from the Workspace security group, and it must be in the same VPC specified by `vpcId`.
	EngineSecurityGroupId pulumix.Input[string]
	// The authentication endpoint of your identity provider (IdP). Specify this value when you use IAM authentication and want to let federated users log in to a Studio with the Studio URL and credentials from your IdP. Amazon EMR Studio redirects users to this endpoint to enter credentials.
	IdpAuthUrl pulumix.Input[*string]
	// The name that your identity provider (IdP) uses for its RelayState parameter. For example, RelayState or TargetSource. Specify this value when you use IAM authentication and want to let federated users log in to a Studio using the Studio URL. The RelayState parameter differs by IdP.
	IdpRelayStateParameterName pulumix.Input[*string]
	// A descriptive name for the Amazon EMR Studio.
	Name pulumix.Input[*string]
	// The IAM role that the Amazon EMR Studio assumes. The service role provides a way for Amazon EMR Studio to interoperate with other Amazon Web Services services.
	ServiceRole pulumix.Input[string]
	// A list of subnet IDs to associate with the Amazon EMR Studio. A Studio can have a maximum of 5 subnets. The subnets must belong to the VPC specified by `vpcId`. Studio users can create a Workspace in any of the specified subnets.
	SubnetIds pulumix.Input[[]string]
	// list of tags to apply to the EMR Cluster. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// The IAM user role that users and groups assume when logged in to an Amazon EMR Studio. Only specify a User Role when you use Amazon Web Services SSO authentication. The permissions attached to the User Role can be scoped down for each user or group using session policies.
	UserRole pulumix.Input[*string]
	// The ID of the Amazon Virtual Private Cloud (Amazon VPC) to associate with the Studio.
	VpcId pulumix.Input[string]
	// The ID of the Amazon EMR Studio Workspace security group. The Workspace security group allows outbound network traffic to resources in the Engine security group, and it must be in the same VPC specified by `vpcId`.
	//
	// The following arguments are optional:
	WorkspaceSecurityGroupId pulumix.Input[string]
}

func (StudioArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*studioArgs)(nil)).Elem()
}

type StudioOutput struct{ *pulumi.OutputState }

func (StudioOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Studio)(nil)).Elem()
}

func (o StudioOutput) ToStudioOutput() StudioOutput {
	return o
}

func (o StudioOutput) ToStudioOutputWithContext(ctx context.Context) StudioOutput {
	return o
}

func (o StudioOutput) ToOutput(ctx context.Context) pulumix.Output[Studio] {
	return pulumix.Output[Studio]{
		OutputState: o.OutputState,
	}
}

// ARN of the studio.
func (o StudioOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Studio](o, func(v Studio) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Specifies whether the Studio authenticates users using IAM or Amazon Web Services SSO. Valid values are `SSO` or `IAM`.
func (o StudioOutput) AuthMode() pulumix.Output[string] {
	value := pulumix.Apply[Studio](o, func(v Studio) pulumix.Output[string] { return v.AuthMode })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The Amazon S3 location to back up Amazon EMR Studio Workspaces and notebook files.
func (o StudioOutput) DefaultS3Location() pulumix.Output[string] {
	value := pulumix.Apply[Studio](o, func(v Studio) pulumix.Output[string] { return v.DefaultS3Location })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A detailed description of the Amazon EMR Studio.
func (o StudioOutput) Description() pulumix.Output[*string] {
	value := pulumix.Apply[Studio](o, func(v Studio) pulumix.Output[*string] { return v.Description })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The ID of the Amazon EMR Studio Engine security group. The Engine security group allows inbound network traffic from the Workspace security group, and it must be in the same VPC specified by `vpcId`.
func (o StudioOutput) EngineSecurityGroupId() pulumix.Output[string] {
	value := pulumix.Apply[Studio](o, func(v Studio) pulumix.Output[string] { return v.EngineSecurityGroupId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The authentication endpoint of your identity provider (IdP). Specify this value when you use IAM authentication and want to let federated users log in to a Studio with the Studio URL and credentials from your IdP. Amazon EMR Studio redirects users to this endpoint to enter credentials.
func (o StudioOutput) IdpAuthUrl() pulumix.Output[*string] {
	value := pulumix.Apply[Studio](o, func(v Studio) pulumix.Output[*string] { return v.IdpAuthUrl })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The name that your identity provider (IdP) uses for its RelayState parameter. For example, RelayState or TargetSource. Specify this value when you use IAM authentication and want to let federated users log in to a Studio using the Studio URL. The RelayState parameter differs by IdP.
func (o StudioOutput) IdpRelayStateParameterName() pulumix.Output[*string] {
	value := pulumix.Apply[Studio](o, func(v Studio) pulumix.Output[*string] { return v.IdpRelayStateParameterName })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// A descriptive name for the Amazon EMR Studio.
func (o StudioOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[Studio](o, func(v Studio) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The IAM role that the Amazon EMR Studio assumes. The service role provides a way for Amazon EMR Studio to interoperate with other Amazon Web Services services.
func (o StudioOutput) ServiceRole() pulumix.Output[string] {
	value := pulumix.Apply[Studio](o, func(v Studio) pulumix.Output[string] { return v.ServiceRole })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A list of subnet IDs to associate with the Amazon EMR Studio. A Studio can have a maximum of 5 subnets. The subnets must belong to the VPC specified by `vpcId`. Studio users can create a Workspace in any of the specified subnets.
func (o StudioOutput) SubnetIds() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[Studio](o, func(v Studio) pulumix.ArrayOutput[string] { return v.SubnetIds })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// list of tags to apply to the EMR Cluster. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o StudioOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Studio](o, func(v Studio) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func (o StudioOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[Studio](o, func(v Studio) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// The unique access URL of the Amazon EMR Studio.
func (o StudioOutput) Url() pulumix.Output[string] {
	value := pulumix.Apply[Studio](o, func(v Studio) pulumix.Output[string] { return v.Url })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The IAM user role that users and groups assume when logged in to an Amazon EMR Studio. Only specify a User Role when you use Amazon Web Services SSO authentication. The permissions attached to the User Role can be scoped down for each user or group using session policies.
func (o StudioOutput) UserRole() pulumix.Output[*string] {
	value := pulumix.Apply[Studio](o, func(v Studio) pulumix.Output[*string] { return v.UserRole })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The ID of the Amazon Virtual Private Cloud (Amazon VPC) to associate with the Studio.
func (o StudioOutput) VpcId() pulumix.Output[string] {
	value := pulumix.Apply[Studio](o, func(v Studio) pulumix.Output[string] { return v.VpcId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The ID of the Amazon EMR Studio Workspace security group. The Workspace security group allows outbound network traffic to resources in the Engine security group, and it must be in the same VPC specified by `vpcId`.
//
// The following arguments are optional:
func (o StudioOutput) WorkspaceSecurityGroupId() pulumix.Output[string] {
	value := pulumix.Apply[Studio](o, func(v Studio) pulumix.Output[string] { return v.WorkspaceSecurityGroupId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(StudioOutput{})
}
