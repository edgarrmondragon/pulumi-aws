// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kinesisanalyticsv2

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manages a Kinesis Analytics v2 Application.
// This resource can be used to manage both Kinesis Data Analytics for SQL applications and Kinesis Data Analytics for Apache Flink applications.
//
// > **Note:** Kinesis Data Analytics for SQL applications created using this resource cannot currently be viewed in the AWS Console. To manage Kinesis Data Analytics for SQL applications that can also be viewed in the AWS Console, use the `kinesis.AnalyticsApplication` resource.
type Application struct {
	pulumi.CustomResourceState

	// The application's configuration
	ApplicationConfiguration pulumix.GPtrOutput[ApplicationApplicationConfiguration, ApplicationApplicationConfigurationOutput] `pulumi:"applicationConfiguration"`
	// The ARN of the application.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// A CloudWatch log stream to monitor application configuration errors.
	CloudwatchLoggingOptions pulumix.GPtrOutput[ApplicationCloudwatchLoggingOptions, ApplicationCloudwatchLoggingOptionsOutput] `pulumi:"cloudwatchLoggingOptions"`
	// The current timestamp when the application was created.
	CreateTimestamp pulumix.Output[string] `pulumi:"createTimestamp"`
	// A summary description of the application.
	Description pulumix.Output[*string] `pulumi:"description"`
	// Whether to force stop an unresponsive Flink-based application.
	ForceStop pulumix.Output[*bool] `pulumi:"forceStop"`
	// The current timestamp when the application was last updated.
	LastUpdateTimestamp pulumix.Output[string] `pulumi:"lastUpdateTimestamp"`
	// The name of the application.
	Name pulumix.Output[string] `pulumi:"name"`
	// The runtime environment for the application. Valid values: `SQL-1_0`, `FLINK-1_6`, `FLINK-1_8`, `FLINK-1_11`, `FLINK-1_13`, `FLINK-1_15`.
	RuntimeEnvironment pulumix.Output[string] `pulumi:"runtimeEnvironment"`
	// The ARN of the IAM role used by the application to access Kinesis data streams, Kinesis Data Firehose delivery streams, Amazon S3 objects, and other external resources.
	ServiceExecutionRole pulumix.Output[string] `pulumi:"serviceExecutionRole"`
	// Whether to start or stop the application.
	StartApplication pulumix.Output[*bool] `pulumi:"startApplication"`
	// The status of the application.
	Status pulumix.Output[string] `pulumi:"status"`
	// A map of tags to assign to the application. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// The current application version. Kinesis Data Analytics updates the `versionId` each time the application is updated.
	VersionId pulumix.Output[int] `pulumi:"versionId"`
}

// NewApplication registers a new resource with the given unique name, arguments, and options.
func NewApplication(ctx *pulumi.Context,
	name string, args *ApplicationArgs, opts ...pulumi.ResourceOption) (*Application, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.RuntimeEnvironment == nil {
		return nil, errors.New("invalid value for required argument 'RuntimeEnvironment'")
	}
	if args.ServiceExecutionRole == nil {
		return nil, errors.New("invalid value for required argument 'ServiceExecutionRole'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Application
	err := ctx.RegisterResource("aws:kinesisanalyticsv2/application:Application", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApplication gets an existing Application resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApplication(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApplicationState, opts ...pulumi.ResourceOption) (*Application, error) {
	var resource Application
	err := ctx.ReadResource("aws:kinesisanalyticsv2/application:Application", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Application resources.
type applicationState struct {
	// The application's configuration
	ApplicationConfiguration *ApplicationApplicationConfiguration `pulumi:"applicationConfiguration"`
	// The ARN of the application.
	Arn *string `pulumi:"arn"`
	// A CloudWatch log stream to monitor application configuration errors.
	CloudwatchLoggingOptions *ApplicationCloudwatchLoggingOptions `pulumi:"cloudwatchLoggingOptions"`
	// The current timestamp when the application was created.
	CreateTimestamp *string `pulumi:"createTimestamp"`
	// A summary description of the application.
	Description *string `pulumi:"description"`
	// Whether to force stop an unresponsive Flink-based application.
	ForceStop *bool `pulumi:"forceStop"`
	// The current timestamp when the application was last updated.
	LastUpdateTimestamp *string `pulumi:"lastUpdateTimestamp"`
	// The name of the application.
	Name *string `pulumi:"name"`
	// The runtime environment for the application. Valid values: `SQL-1_0`, `FLINK-1_6`, `FLINK-1_8`, `FLINK-1_11`, `FLINK-1_13`, `FLINK-1_15`.
	RuntimeEnvironment *string `pulumi:"runtimeEnvironment"`
	// The ARN of the IAM role used by the application to access Kinesis data streams, Kinesis Data Firehose delivery streams, Amazon S3 objects, and other external resources.
	ServiceExecutionRole *string `pulumi:"serviceExecutionRole"`
	// Whether to start or stop the application.
	StartApplication *bool `pulumi:"startApplication"`
	// The status of the application.
	Status *string `pulumi:"status"`
	// A map of tags to assign to the application. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// The current application version. Kinesis Data Analytics updates the `versionId` each time the application is updated.
	VersionId *int `pulumi:"versionId"`
}

type ApplicationState struct {
	// The application's configuration
	ApplicationConfiguration pulumix.Input[*ApplicationApplicationConfigurationArgs]
	// The ARN of the application.
	Arn pulumix.Input[*string]
	// A CloudWatch log stream to monitor application configuration errors.
	CloudwatchLoggingOptions pulumix.Input[*ApplicationCloudwatchLoggingOptionsArgs]
	// The current timestamp when the application was created.
	CreateTimestamp pulumix.Input[*string]
	// A summary description of the application.
	Description pulumix.Input[*string]
	// Whether to force stop an unresponsive Flink-based application.
	ForceStop pulumix.Input[*bool]
	// The current timestamp when the application was last updated.
	LastUpdateTimestamp pulumix.Input[*string]
	// The name of the application.
	Name pulumix.Input[*string]
	// The runtime environment for the application. Valid values: `SQL-1_0`, `FLINK-1_6`, `FLINK-1_8`, `FLINK-1_11`, `FLINK-1_13`, `FLINK-1_15`.
	RuntimeEnvironment pulumix.Input[*string]
	// The ARN of the IAM role used by the application to access Kinesis data streams, Kinesis Data Firehose delivery streams, Amazon S3 objects, and other external resources.
	ServiceExecutionRole pulumix.Input[*string]
	// Whether to start or stop the application.
	StartApplication pulumix.Input[*bool]
	// The status of the application.
	Status pulumix.Input[*string]
	// A map of tags to assign to the application. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// The current application version. Kinesis Data Analytics updates the `versionId` each time the application is updated.
	VersionId pulumix.Input[*int]
}

func (ApplicationState) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationState)(nil)).Elem()
}

type applicationArgs struct {
	// The application's configuration
	ApplicationConfiguration *ApplicationApplicationConfiguration `pulumi:"applicationConfiguration"`
	// A CloudWatch log stream to monitor application configuration errors.
	CloudwatchLoggingOptions *ApplicationCloudwatchLoggingOptions `pulumi:"cloudwatchLoggingOptions"`
	// A summary description of the application.
	Description *string `pulumi:"description"`
	// Whether to force stop an unresponsive Flink-based application.
	ForceStop *bool `pulumi:"forceStop"`
	// The name of the application.
	Name *string `pulumi:"name"`
	// The runtime environment for the application. Valid values: `SQL-1_0`, `FLINK-1_6`, `FLINK-1_8`, `FLINK-1_11`, `FLINK-1_13`, `FLINK-1_15`.
	RuntimeEnvironment string `pulumi:"runtimeEnvironment"`
	// The ARN of the IAM role used by the application to access Kinesis data streams, Kinesis Data Firehose delivery streams, Amazon S3 objects, and other external resources.
	ServiceExecutionRole string `pulumi:"serviceExecutionRole"`
	// Whether to start or stop the application.
	StartApplication *bool `pulumi:"startApplication"`
	// A map of tags to assign to the application. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Application resource.
type ApplicationArgs struct {
	// The application's configuration
	ApplicationConfiguration pulumix.Input[*ApplicationApplicationConfigurationArgs]
	// A CloudWatch log stream to monitor application configuration errors.
	CloudwatchLoggingOptions pulumix.Input[*ApplicationCloudwatchLoggingOptionsArgs]
	// A summary description of the application.
	Description pulumix.Input[*string]
	// Whether to force stop an unresponsive Flink-based application.
	ForceStop pulumix.Input[*bool]
	// The name of the application.
	Name pulumix.Input[*string]
	// The runtime environment for the application. Valid values: `SQL-1_0`, `FLINK-1_6`, `FLINK-1_8`, `FLINK-1_11`, `FLINK-1_13`, `FLINK-1_15`.
	RuntimeEnvironment pulumix.Input[string]
	// The ARN of the IAM role used by the application to access Kinesis data streams, Kinesis Data Firehose delivery streams, Amazon S3 objects, and other external resources.
	ServiceExecutionRole pulumix.Input[string]
	// Whether to start or stop the application.
	StartApplication pulumix.Input[*bool]
	// A map of tags to assign to the application. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level
	Tags pulumix.Input[map[string]string]
}

func (ApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationArgs)(nil)).Elem()
}

type ApplicationOutput struct{ *pulumi.OutputState }

func (ApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Application)(nil)).Elem()
}

func (o ApplicationOutput) ToApplicationOutput() ApplicationOutput {
	return o
}

func (o ApplicationOutput) ToApplicationOutputWithContext(ctx context.Context) ApplicationOutput {
	return o
}

func (o ApplicationOutput) ToOutput(ctx context.Context) pulumix.Output[Application] {
	return pulumix.Output[Application]{
		OutputState: o.OutputState,
	}
}

// The application's configuration
func (o ApplicationOutput) ApplicationConfiguration() pulumix.GPtrOutput[ApplicationApplicationConfiguration, ApplicationApplicationConfigurationOutput] {
	value := pulumix.Apply[Application](o, func(v Application) pulumix.GPtrOutput[ApplicationApplicationConfiguration, ApplicationApplicationConfigurationOutput] {
		return v.ApplicationConfiguration
	})
	unwrapped := pulumix.Flatten[*ApplicationApplicationConfiguration, pulumix.GPtrOutput[ApplicationApplicationConfiguration, ApplicationApplicationConfigurationOutput]](value)
	return pulumix.GPtrOutput[ApplicationApplicationConfiguration, ApplicationApplicationConfigurationOutput]{OutputState: unwrapped.OutputState}
}

// The ARN of the application.
func (o ApplicationOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Application](o, func(v Application) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A CloudWatch log stream to monitor application configuration errors.
func (o ApplicationOutput) CloudwatchLoggingOptions() pulumix.GPtrOutput[ApplicationCloudwatchLoggingOptions, ApplicationCloudwatchLoggingOptionsOutput] {
	value := pulumix.Apply[Application](o, func(v Application) pulumix.GPtrOutput[ApplicationCloudwatchLoggingOptions, ApplicationCloudwatchLoggingOptionsOutput] {
		return v.CloudwatchLoggingOptions
	})
	unwrapped := pulumix.Flatten[*ApplicationCloudwatchLoggingOptions, pulumix.GPtrOutput[ApplicationCloudwatchLoggingOptions, ApplicationCloudwatchLoggingOptionsOutput]](value)
	return pulumix.GPtrOutput[ApplicationCloudwatchLoggingOptions, ApplicationCloudwatchLoggingOptionsOutput]{OutputState: unwrapped.OutputState}
}

// The current timestamp when the application was created.
func (o ApplicationOutput) CreateTimestamp() pulumix.Output[string] {
	value := pulumix.Apply[Application](o, func(v Application) pulumix.Output[string] { return v.CreateTimestamp })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A summary description of the application.
func (o ApplicationOutput) Description() pulumix.Output[*string] {
	value := pulumix.Apply[Application](o, func(v Application) pulumix.Output[*string] { return v.Description })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Whether to force stop an unresponsive Flink-based application.
func (o ApplicationOutput) ForceStop() pulumix.Output[*bool] {
	value := pulumix.Apply[Application](o, func(v Application) pulumix.Output[*bool] { return v.ForceStop })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// The current timestamp when the application was last updated.
func (o ApplicationOutput) LastUpdateTimestamp() pulumix.Output[string] {
	value := pulumix.Apply[Application](o, func(v Application) pulumix.Output[string] { return v.LastUpdateTimestamp })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The name of the application.
func (o ApplicationOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[Application](o, func(v Application) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The runtime environment for the application. Valid values: `SQL-1_0`, `FLINK-1_6`, `FLINK-1_8`, `FLINK-1_11`, `FLINK-1_13`, `FLINK-1_15`.
func (o ApplicationOutput) RuntimeEnvironment() pulumix.Output[string] {
	value := pulumix.Apply[Application](o, func(v Application) pulumix.Output[string] { return v.RuntimeEnvironment })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The ARN of the IAM role used by the application to access Kinesis data streams, Kinesis Data Firehose delivery streams, Amazon S3 objects, and other external resources.
func (o ApplicationOutput) ServiceExecutionRole() pulumix.Output[string] {
	value := pulumix.Apply[Application](o, func(v Application) pulumix.Output[string] { return v.ServiceExecutionRole })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Whether to start or stop the application.
func (o ApplicationOutput) StartApplication() pulumix.Output[*bool] {
	value := pulumix.Apply[Application](o, func(v Application) pulumix.Output[*bool] { return v.StartApplication })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// The status of the application.
func (o ApplicationOutput) Status() pulumix.Output[string] {
	value := pulumix.Apply[Application](o, func(v Application) pulumix.Output[string] { return v.Status })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A map of tags to assign to the application. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level
func (o ApplicationOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Application](o, func(v Application) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o ApplicationOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[Application](o, func(v Application) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// The current application version. Kinesis Data Analytics updates the `versionId` each time the application is updated.
func (o ApplicationOutput) VersionId() pulumix.Output[int] {
	value := pulumix.Apply[Application](o, func(v Application) pulumix.Output[int] { return v.VersionId })
	return pulumix.Flatten[int, pulumix.Output[int]](value)
}

func init() {
	pulumi.RegisterOutputType(ApplicationOutput{})
}
