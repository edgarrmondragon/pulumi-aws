// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package connect

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an Amazon Connect Security Profile resource. For more information see
// [Amazon Connect: Getting Started](https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-get-started.html)
type SecurityProfile struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) of the Security Profile.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// Specifies the description of the Security Profile.
	Description pulumix.Output[*string] `pulumi:"description"`
	// Specifies the identifier of the hosting Amazon Connect Instance.
	InstanceId pulumix.Output[string] `pulumi:"instanceId"`
	// Specifies the name of the Security Profile.
	Name pulumix.Output[string] `pulumi:"name"`
	// The organization resource identifier for the security profile.
	OrganizationResourceId pulumix.Output[string] `pulumi:"organizationResourceId"`
	// Specifies a list of permissions assigned to the security profile.
	Permissions pulumix.ArrayOutput[string] `pulumi:"permissions"`
	// The identifier for the Security Profile.
	SecurityProfileId pulumix.Output[string] `pulumi:"securityProfileId"`
	// Tags to apply to the Security Profile. If configured with a provider
	// `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
}

// NewSecurityProfile registers a new resource with the given unique name, arguments, and options.
func NewSecurityProfile(ctx *pulumi.Context,
	name string, args *SecurityProfileArgs, opts ...pulumi.ResourceOption) (*SecurityProfile, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SecurityProfile
	err := ctx.RegisterResource("aws:connect/securityProfile:SecurityProfile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecurityProfile gets an existing SecurityProfile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecurityProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecurityProfileState, opts ...pulumi.ResourceOption) (*SecurityProfile, error) {
	var resource SecurityProfile
	err := ctx.ReadResource("aws:connect/securityProfile:SecurityProfile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SecurityProfile resources.
type securityProfileState struct {
	// The Amazon Resource Name (ARN) of the Security Profile.
	Arn *string `pulumi:"arn"`
	// Specifies the description of the Security Profile.
	Description *string `pulumi:"description"`
	// Specifies the identifier of the hosting Amazon Connect Instance.
	InstanceId *string `pulumi:"instanceId"`
	// Specifies the name of the Security Profile.
	Name *string `pulumi:"name"`
	// The organization resource identifier for the security profile.
	OrganizationResourceId *string `pulumi:"organizationResourceId"`
	// Specifies a list of permissions assigned to the security profile.
	Permissions []string `pulumi:"permissions"`
	// The identifier for the Security Profile.
	SecurityProfileId *string `pulumi:"securityProfileId"`
	// Tags to apply to the Security Profile. If configured with a provider
	// `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type SecurityProfileState struct {
	// The Amazon Resource Name (ARN) of the Security Profile.
	Arn pulumix.Input[*string]
	// Specifies the description of the Security Profile.
	Description pulumix.Input[*string]
	// Specifies the identifier of the hosting Amazon Connect Instance.
	InstanceId pulumix.Input[*string]
	// Specifies the name of the Security Profile.
	Name pulumix.Input[*string]
	// The organization resource identifier for the security profile.
	OrganizationResourceId pulumix.Input[*string]
	// Specifies a list of permissions assigned to the security profile.
	Permissions pulumix.Input[[]string]
	// The identifier for the Security Profile.
	SecurityProfileId pulumix.Input[*string]
	// Tags to apply to the Security Profile. If configured with a provider
	// `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
}

func (SecurityProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*securityProfileState)(nil)).Elem()
}

type securityProfileArgs struct {
	// Specifies the description of the Security Profile.
	Description *string `pulumi:"description"`
	// Specifies the identifier of the hosting Amazon Connect Instance.
	InstanceId string `pulumi:"instanceId"`
	// Specifies the name of the Security Profile.
	Name *string `pulumi:"name"`
	// Specifies a list of permissions assigned to the security profile.
	Permissions []string `pulumi:"permissions"`
	// Tags to apply to the Security Profile. If configured with a provider
	// `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a SecurityProfile resource.
type SecurityProfileArgs struct {
	// Specifies the description of the Security Profile.
	Description pulumix.Input[*string]
	// Specifies the identifier of the hosting Amazon Connect Instance.
	InstanceId pulumix.Input[string]
	// Specifies the name of the Security Profile.
	Name pulumix.Input[*string]
	// Specifies a list of permissions assigned to the security profile.
	Permissions pulumix.Input[[]string]
	// Tags to apply to the Security Profile. If configured with a provider
	// `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (SecurityProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*securityProfileArgs)(nil)).Elem()
}

type SecurityProfileOutput struct{ *pulumi.OutputState }

func (SecurityProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityProfile)(nil)).Elem()
}

func (o SecurityProfileOutput) ToSecurityProfileOutput() SecurityProfileOutput {
	return o
}

func (o SecurityProfileOutput) ToSecurityProfileOutputWithContext(ctx context.Context) SecurityProfileOutput {
	return o
}

func (o SecurityProfileOutput) ToOutput(ctx context.Context) pulumix.Output[SecurityProfile] {
	return pulumix.Output[SecurityProfile]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) of the Security Profile.
func (o SecurityProfileOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[SecurityProfile](o, func(v SecurityProfile) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Specifies the description of the Security Profile.
func (o SecurityProfileOutput) Description() pulumix.Output[*string] {
	value := pulumix.Apply[SecurityProfile](o, func(v SecurityProfile) pulumix.Output[*string] { return v.Description })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Specifies the identifier of the hosting Amazon Connect Instance.
func (o SecurityProfileOutput) InstanceId() pulumix.Output[string] {
	value := pulumix.Apply[SecurityProfile](o, func(v SecurityProfile) pulumix.Output[string] { return v.InstanceId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Specifies the name of the Security Profile.
func (o SecurityProfileOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[SecurityProfile](o, func(v SecurityProfile) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The organization resource identifier for the security profile.
func (o SecurityProfileOutput) OrganizationResourceId() pulumix.Output[string] {
	value := pulumix.Apply[SecurityProfile](o, func(v SecurityProfile) pulumix.Output[string] { return v.OrganizationResourceId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Specifies a list of permissions assigned to the security profile.
func (o SecurityProfileOutput) Permissions() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[SecurityProfile](o, func(v SecurityProfile) pulumix.ArrayOutput[string] { return v.Permissions })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// The identifier for the Security Profile.
func (o SecurityProfileOutput) SecurityProfileId() pulumix.Output[string] {
	value := pulumix.Apply[SecurityProfile](o, func(v SecurityProfile) pulumix.Output[string] { return v.SecurityProfileId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Tags to apply to the Security Profile. If configured with a provider
// `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o SecurityProfileOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[SecurityProfile](o, func(v SecurityProfile) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o SecurityProfileOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[SecurityProfile](o, func(v SecurityProfile) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(SecurityProfileOutput{})
}
