// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package route53

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manages a Route53 Hosted Zone. For managing Domain Name System Security Extensions (DNSSEC), see the `route53.KeySigningKey` and `route53.HostedZoneDnsSec` resources.
type Zone struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) of the Hosted Zone.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// A comment for the hosted zone. Defaults to 'Managed by Pulumi'.
	Comment pulumix.Output[string] `pulumi:"comment"`
	// The ID of the reusable delegation set whose NS records you want to assign to the hosted zone. Conflicts with `vpc` as delegation sets can only be used for public zones.
	DelegationSetId pulumix.Output[*string] `pulumi:"delegationSetId"`
	// Whether to destroy all records (possibly managed outside of this provider) in the zone when destroying the zone.
	ForceDestroy pulumix.Output[*bool] `pulumi:"forceDestroy"`
	// This is the name of the hosted zone.
	Name pulumix.Output[string] `pulumi:"name"`
	// A list of name servers in associated (or default) delegation set.
	// Find more about delegation sets in [AWS docs](https://docs.aws.amazon.com/Route53/latest/APIReference/actions-on-reusable-delegation-sets.html).
	NameServers pulumix.ArrayOutput[string] `pulumi:"nameServers"`
	// The Route 53 name server that created the SOA record.
	PrimaryNameServer pulumix.Output[string] `pulumi:"primaryNameServer"`
	// A mapping of tags to assign to the zone. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// Configuration block(s) specifying VPC(s) to associate with a private hosted zone. Conflicts with the `delegationSetId` argument in this resource and any `route53.ZoneAssociation` resource specifying the same zone ID. Detailed below.
	Vpcs pulumix.GArrayOutput[ZoneVpc, ZoneVpcOutput] `pulumi:"vpcs"`
	// The Hosted Zone ID. This can be referenced by zone records.
	ZoneId pulumix.Output[string] `pulumi:"zoneId"`
}

// NewZone registers a new resource with the given unique name, arguments, and options.
func NewZone(ctx *pulumi.Context,
	name string, args *ZoneArgs, opts ...pulumi.ResourceOption) (*Zone, error) {
	if args == nil {
		args = &ZoneArgs{}
	}

	if args.Comment == nil {
		args.Comment = pulumix.Ptr("Managed by Pulumi")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Zone
	err := ctx.RegisterResource("aws:route53/zone:Zone", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetZone gets an existing Zone resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetZone(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ZoneState, opts ...pulumi.ResourceOption) (*Zone, error) {
	var resource Zone
	err := ctx.ReadResource("aws:route53/zone:Zone", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Zone resources.
type zoneState struct {
	// The Amazon Resource Name (ARN) of the Hosted Zone.
	Arn *string `pulumi:"arn"`
	// A comment for the hosted zone. Defaults to 'Managed by Pulumi'.
	Comment *string `pulumi:"comment"`
	// The ID of the reusable delegation set whose NS records you want to assign to the hosted zone. Conflicts with `vpc` as delegation sets can only be used for public zones.
	DelegationSetId *string `pulumi:"delegationSetId"`
	// Whether to destroy all records (possibly managed outside of this provider) in the zone when destroying the zone.
	ForceDestroy *bool `pulumi:"forceDestroy"`
	// This is the name of the hosted zone.
	Name *string `pulumi:"name"`
	// A list of name servers in associated (or default) delegation set.
	// Find more about delegation sets in [AWS docs](https://docs.aws.amazon.com/Route53/latest/APIReference/actions-on-reusable-delegation-sets.html).
	NameServers []string `pulumi:"nameServers"`
	// The Route 53 name server that created the SOA record.
	PrimaryNameServer *string `pulumi:"primaryNameServer"`
	// A mapping of tags to assign to the zone. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// Configuration block(s) specifying VPC(s) to associate with a private hosted zone. Conflicts with the `delegationSetId` argument in this resource and any `route53.ZoneAssociation` resource specifying the same zone ID. Detailed below.
	Vpcs []ZoneVpc `pulumi:"vpcs"`
	// The Hosted Zone ID. This can be referenced by zone records.
	ZoneId *string `pulumi:"zoneId"`
}

type ZoneState struct {
	// The Amazon Resource Name (ARN) of the Hosted Zone.
	Arn pulumix.Input[*string]
	// A comment for the hosted zone. Defaults to 'Managed by Pulumi'.
	Comment pulumix.Input[*string]
	// The ID of the reusable delegation set whose NS records you want to assign to the hosted zone. Conflicts with `vpc` as delegation sets can only be used for public zones.
	DelegationSetId pulumix.Input[*string]
	// Whether to destroy all records (possibly managed outside of this provider) in the zone when destroying the zone.
	ForceDestroy pulumix.Input[*bool]
	// This is the name of the hosted zone.
	Name pulumix.Input[*string]
	// A list of name servers in associated (or default) delegation set.
	// Find more about delegation sets in [AWS docs](https://docs.aws.amazon.com/Route53/latest/APIReference/actions-on-reusable-delegation-sets.html).
	NameServers pulumix.Input[[]string]
	// The Route 53 name server that created the SOA record.
	PrimaryNameServer pulumix.Input[*string]
	// A mapping of tags to assign to the zone. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// Configuration block(s) specifying VPC(s) to associate with a private hosted zone. Conflicts with the `delegationSetId` argument in this resource and any `route53.ZoneAssociation` resource specifying the same zone ID. Detailed below.
	Vpcs pulumix.Input[[]*ZoneVpcArgs]
	// The Hosted Zone ID. This can be referenced by zone records.
	ZoneId pulumix.Input[*string]
}

func (ZoneState) ElementType() reflect.Type {
	return reflect.TypeOf((*zoneState)(nil)).Elem()
}

type zoneArgs struct {
	// A comment for the hosted zone. Defaults to 'Managed by Pulumi'.
	Comment *string `pulumi:"comment"`
	// The ID of the reusable delegation set whose NS records you want to assign to the hosted zone. Conflicts with `vpc` as delegation sets can only be used for public zones.
	DelegationSetId *string `pulumi:"delegationSetId"`
	// Whether to destroy all records (possibly managed outside of this provider) in the zone when destroying the zone.
	ForceDestroy *bool `pulumi:"forceDestroy"`
	// This is the name of the hosted zone.
	Name *string `pulumi:"name"`
	// A mapping of tags to assign to the zone. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Configuration block(s) specifying VPC(s) to associate with a private hosted zone. Conflicts with the `delegationSetId` argument in this resource and any `route53.ZoneAssociation` resource specifying the same zone ID. Detailed below.
	Vpcs []ZoneVpc `pulumi:"vpcs"`
}

// The set of arguments for constructing a Zone resource.
type ZoneArgs struct {
	// A comment for the hosted zone. Defaults to 'Managed by Pulumi'.
	Comment pulumix.Input[*string]
	// The ID of the reusable delegation set whose NS records you want to assign to the hosted zone. Conflicts with `vpc` as delegation sets can only be used for public zones.
	DelegationSetId pulumix.Input[*string]
	// Whether to destroy all records (possibly managed outside of this provider) in the zone when destroying the zone.
	ForceDestroy pulumix.Input[*bool]
	// This is the name of the hosted zone.
	Name pulumix.Input[*string]
	// A mapping of tags to assign to the zone. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// Configuration block(s) specifying VPC(s) to associate with a private hosted zone. Conflicts with the `delegationSetId` argument in this resource and any `route53.ZoneAssociation` resource specifying the same zone ID. Detailed below.
	Vpcs pulumix.Input[[]*ZoneVpcArgs]
}

func (ZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*zoneArgs)(nil)).Elem()
}

type ZoneOutput struct{ *pulumi.OutputState }

func (ZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Zone)(nil)).Elem()
}

func (o ZoneOutput) ToZoneOutput() ZoneOutput {
	return o
}

func (o ZoneOutput) ToZoneOutputWithContext(ctx context.Context) ZoneOutput {
	return o
}

func (o ZoneOutput) ToOutput(ctx context.Context) pulumix.Output[Zone] {
	return pulumix.Output[Zone]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) of the Hosted Zone.
func (o ZoneOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Zone](o, func(v Zone) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A comment for the hosted zone. Defaults to 'Managed by Pulumi'.
func (o ZoneOutput) Comment() pulumix.Output[string] {
	value := pulumix.Apply[Zone](o, func(v Zone) pulumix.Output[string] { return v.Comment })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The ID of the reusable delegation set whose NS records you want to assign to the hosted zone. Conflicts with `vpc` as delegation sets can only be used for public zones.
func (o ZoneOutput) DelegationSetId() pulumix.Output[*string] {
	value := pulumix.Apply[Zone](o, func(v Zone) pulumix.Output[*string] { return v.DelegationSetId })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Whether to destroy all records (possibly managed outside of this provider) in the zone when destroying the zone.
func (o ZoneOutput) ForceDestroy() pulumix.Output[*bool] {
	value := pulumix.Apply[Zone](o, func(v Zone) pulumix.Output[*bool] { return v.ForceDestroy })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// This is the name of the hosted zone.
func (o ZoneOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[Zone](o, func(v Zone) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A list of name servers in associated (or default) delegation set.
// Find more about delegation sets in [AWS docs](https://docs.aws.amazon.com/Route53/latest/APIReference/actions-on-reusable-delegation-sets.html).
func (o ZoneOutput) NameServers() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[Zone](o, func(v Zone) pulumix.ArrayOutput[string] { return v.NameServers })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// The Route 53 name server that created the SOA record.
func (o ZoneOutput) PrimaryNameServer() pulumix.Output[string] {
	value := pulumix.Apply[Zone](o, func(v Zone) pulumix.Output[string] { return v.PrimaryNameServer })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A mapping of tags to assign to the zone. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o ZoneOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Zone](o, func(v Zone) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o ZoneOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[Zone](o, func(v Zone) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Configuration block(s) specifying VPC(s) to associate with a private hosted zone. Conflicts with the `delegationSetId` argument in this resource and any `route53.ZoneAssociation` resource specifying the same zone ID. Detailed below.
func (o ZoneOutput) Vpcs() pulumix.GArrayOutput[ZoneVpc, ZoneVpcOutput] {
	value := pulumix.Apply[Zone](o, func(v Zone) pulumix.GArrayOutput[ZoneVpc, ZoneVpcOutput] { return v.Vpcs })
	unwrapped := pulumix.Flatten[[]ZoneVpc, pulumix.GArrayOutput[ZoneVpc, ZoneVpcOutput]](value)
	return pulumix.GArrayOutput[ZoneVpc, ZoneVpcOutput]{OutputState: unwrapped.OutputState}
}

// The Hosted Zone ID. This can be referenced by zone records.
func (o ZoneOutput) ZoneId() pulumix.Output[string] {
	value := pulumix.Apply[Zone](o, func(v Zone) pulumix.Output[string] { return v.ZoneId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(ZoneOutput{})
}
