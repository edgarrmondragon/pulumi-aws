// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package connect

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an Amazon Connect Lambda Function Association. For more information see
// [Amazon Connect: Getting Started](https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-get-started.html) and [Invoke AWS Lambda functions](https://docs.aws.amazon.com/connect/latest/adminguide/connect-lambda-functions.html).
type LambdaFunctionAssociation struct {
	pulumi.CustomResourceState

	// Amazon Resource Name (ARN) of the Lambda Function, omitting any version or alias qualifier.
	FunctionArn pulumix.Output[string] `pulumi:"functionArn"`
	// The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
	InstanceId pulumix.Output[string] `pulumi:"instanceId"`
}

// NewLambdaFunctionAssociation registers a new resource with the given unique name, arguments, and options.
func NewLambdaFunctionAssociation(ctx *pulumi.Context,
	name string, args *LambdaFunctionAssociationArgs, opts ...pulumi.ResourceOption) (*LambdaFunctionAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FunctionArn == nil {
		return nil, errors.New("invalid value for required argument 'FunctionArn'")
	}
	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource LambdaFunctionAssociation
	err := ctx.RegisterResource("aws:connect/lambdaFunctionAssociation:LambdaFunctionAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLambdaFunctionAssociation gets an existing LambdaFunctionAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLambdaFunctionAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LambdaFunctionAssociationState, opts ...pulumi.ResourceOption) (*LambdaFunctionAssociation, error) {
	var resource LambdaFunctionAssociation
	err := ctx.ReadResource("aws:connect/lambdaFunctionAssociation:LambdaFunctionAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LambdaFunctionAssociation resources.
type lambdaFunctionAssociationState struct {
	// Amazon Resource Name (ARN) of the Lambda Function, omitting any version or alias qualifier.
	FunctionArn *string `pulumi:"functionArn"`
	// The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
	InstanceId *string `pulumi:"instanceId"`
}

type LambdaFunctionAssociationState struct {
	// Amazon Resource Name (ARN) of the Lambda Function, omitting any version or alias qualifier.
	FunctionArn pulumix.Input[*string]
	// The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
	InstanceId pulumix.Input[*string]
}

func (LambdaFunctionAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*lambdaFunctionAssociationState)(nil)).Elem()
}

type lambdaFunctionAssociationArgs struct {
	// Amazon Resource Name (ARN) of the Lambda Function, omitting any version or alias qualifier.
	FunctionArn string `pulumi:"functionArn"`
	// The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
	InstanceId string `pulumi:"instanceId"`
}

// The set of arguments for constructing a LambdaFunctionAssociation resource.
type LambdaFunctionAssociationArgs struct {
	// Amazon Resource Name (ARN) of the Lambda Function, omitting any version or alias qualifier.
	FunctionArn pulumix.Input[string]
	// The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
	InstanceId pulumix.Input[string]
}

func (LambdaFunctionAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*lambdaFunctionAssociationArgs)(nil)).Elem()
}

type LambdaFunctionAssociationOutput struct{ *pulumi.OutputState }

func (LambdaFunctionAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LambdaFunctionAssociation)(nil)).Elem()
}

func (o LambdaFunctionAssociationOutput) ToLambdaFunctionAssociationOutput() LambdaFunctionAssociationOutput {
	return o
}

func (o LambdaFunctionAssociationOutput) ToLambdaFunctionAssociationOutputWithContext(ctx context.Context) LambdaFunctionAssociationOutput {
	return o
}

func (o LambdaFunctionAssociationOutput) ToOutput(ctx context.Context) pulumix.Output[LambdaFunctionAssociation] {
	return pulumix.Output[LambdaFunctionAssociation]{
		OutputState: o.OutputState,
	}
}

// Amazon Resource Name (ARN) of the Lambda Function, omitting any version or alias qualifier.
func (o LambdaFunctionAssociationOutput) FunctionArn() pulumix.Output[string] {
	value := pulumix.Apply[LambdaFunctionAssociation](o, func(v LambdaFunctionAssociation) pulumix.Output[string] { return v.FunctionArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
func (o LambdaFunctionAssociationOutput) InstanceId() pulumix.Output[string] {
	value := pulumix.Apply[LambdaFunctionAssociation](o, func(v LambdaFunctionAssociation) pulumix.Output[string] { return v.InstanceId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(LambdaFunctionAssociationOutput{})
}
