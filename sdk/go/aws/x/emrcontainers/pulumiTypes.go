// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package emrcontainers

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type JobTemplateJobTemplateData struct {
	// The configuration settings that are used to override defaults configuration.
	ConfigurationOverrides *JobTemplateJobTemplateDataConfigurationOverrides `pulumi:"configurationOverrides"`
	// The execution role ARN of the job run.
	ExecutionRoleArn string `pulumi:"executionRoleArn"`
	// Specify the driver that the job runs on. Exactly one of the two available job drivers is required, either sparkSqlJobDriver or sparkSubmitJobDriver.
	JobDriver JobTemplateJobTemplateDataJobDriver `pulumi:"jobDriver"`
	// The tags assigned to jobs started using the job template.
	JobTags map[string]string `pulumi:"jobTags"`
	// The release version of Amazon EMR.
	ReleaseLabel string `pulumi:"releaseLabel"`
}

type JobTemplateJobTemplateDataArgs struct {
	// The configuration settings that are used to override defaults configuration.
	ConfigurationOverrides pulumix.Input[*JobTemplateJobTemplateDataConfigurationOverridesArgs] `pulumi:"configurationOverrides"`
	// The execution role ARN of the job run.
	ExecutionRoleArn pulumix.Input[string] `pulumi:"executionRoleArn"`
	// Specify the driver that the job runs on. Exactly one of the two available job drivers is required, either sparkSqlJobDriver or sparkSubmitJobDriver.
	JobDriver pulumix.Input[*JobTemplateJobTemplateDataJobDriverArgs] `pulumi:"jobDriver"`
	// The tags assigned to jobs started using the job template.
	JobTags pulumix.Input[map[string]string] `pulumi:"jobTags"`
	// The release version of Amazon EMR.
	ReleaseLabel pulumix.Input[string] `pulumi:"releaseLabel"`
}

func (JobTemplateJobTemplateDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobTemplateJobTemplateData)(nil)).Elem()
}

func (i JobTemplateJobTemplateDataArgs) ToJobTemplateJobTemplateDataOutput() JobTemplateJobTemplateDataOutput {
	return i.ToJobTemplateJobTemplateDataOutputWithContext(context.Background())
}

func (i JobTemplateJobTemplateDataArgs) ToJobTemplateJobTemplateDataOutputWithContext(ctx context.Context) JobTemplateJobTemplateDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobTemplateJobTemplateDataOutput)
}

func (i *JobTemplateJobTemplateDataArgs) ToOutput(ctx context.Context) pulumix.Output[*JobTemplateJobTemplateDataArgs] {
	return pulumix.Val(i)
}

type JobTemplateJobTemplateDataOutput struct{ *pulumi.OutputState }

func (JobTemplateJobTemplateDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobTemplateJobTemplateData)(nil)).Elem()
}

func (o JobTemplateJobTemplateDataOutput) ToJobTemplateJobTemplateDataOutput() JobTemplateJobTemplateDataOutput {
	return o
}

func (o JobTemplateJobTemplateDataOutput) ToJobTemplateJobTemplateDataOutputWithContext(ctx context.Context) JobTemplateJobTemplateDataOutput {
	return o
}

func (o JobTemplateJobTemplateDataOutput) ToOutput(ctx context.Context) pulumix.Output[JobTemplateJobTemplateData] {
	return pulumix.Output[JobTemplateJobTemplateData]{
		OutputState: o.OutputState,
	}
}

// The configuration settings that are used to override defaults configuration.
func (o JobTemplateJobTemplateDataOutput) ConfigurationOverrides() pulumix.GPtrOutput[JobTemplateJobTemplateDataConfigurationOverrides, JobTemplateJobTemplateDataConfigurationOverridesOutput] {
	value := pulumix.Apply[JobTemplateJobTemplateData](o, func(v JobTemplateJobTemplateData) *JobTemplateJobTemplateDataConfigurationOverrides {
		return v.ConfigurationOverrides
	})
	return pulumix.GPtrOutput[JobTemplateJobTemplateDataConfigurationOverrides, JobTemplateJobTemplateDataConfigurationOverridesOutput]{OutputState: value.OutputState}
}

// The execution role ARN of the job run.
func (o JobTemplateJobTemplateDataOutput) ExecutionRoleArn() pulumix.Output[string] {
	return pulumix.Apply[JobTemplateJobTemplateData](o, func(v JobTemplateJobTemplateData) string { return v.ExecutionRoleArn })
}

// Specify the driver that the job runs on. Exactly one of the two available job drivers is required, either sparkSqlJobDriver or sparkSubmitJobDriver.
func (o JobTemplateJobTemplateDataOutput) JobDriver() pulumix.GPtrOutput[JobTemplateJobTemplateDataJobDriver, JobTemplateJobTemplateDataJobDriverOutput] {
	value := pulumix.Apply[JobTemplateJobTemplateData](o, func(v JobTemplateJobTemplateData) JobTemplateJobTemplateDataJobDriver { return v.JobDriver })
	return pulumix.GPtrOutput[JobTemplateJobTemplateDataJobDriver, JobTemplateJobTemplateDataJobDriverOutput]{OutputState: value.OutputState}
}

// The tags assigned to jobs started using the job template.
func (o JobTemplateJobTemplateDataOutput) JobTags() pulumix.MapOutput[string] {
	value := pulumix.Apply[JobTemplateJobTemplateData](o, func(v JobTemplateJobTemplateData) map[string]string { return v.JobTags })
	return pulumix.MapOutput[string]{OutputState: value.OutputState}
}

// The release version of Amazon EMR.
func (o JobTemplateJobTemplateDataOutput) ReleaseLabel() pulumix.Output[string] {
	return pulumix.Apply[JobTemplateJobTemplateData](o, func(v JobTemplateJobTemplateData) string { return v.ReleaseLabel })
}

type JobTemplateJobTemplateDataConfigurationOverrides struct {
	// The configurations for the application running by the job run.
	ApplicationConfigurations []JobTemplateJobTemplateDataConfigurationOverridesApplicationConfiguration `pulumi:"applicationConfigurations"`
	// The configurations for monitoring.
	MonitoringConfiguration *JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfiguration `pulumi:"monitoringConfiguration"`
}

type JobTemplateJobTemplateDataConfigurationOverridesArgs struct {
	// The configurations for the application running by the job run.
	ApplicationConfigurations pulumix.Input[[]*JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationArgs] `pulumi:"applicationConfigurations"`
	// The configurations for monitoring.
	MonitoringConfiguration pulumix.Input[*JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationArgs] `pulumi:"monitoringConfiguration"`
}

func (JobTemplateJobTemplateDataConfigurationOverridesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobTemplateJobTemplateDataConfigurationOverrides)(nil)).Elem()
}

func (i JobTemplateJobTemplateDataConfigurationOverridesArgs) ToJobTemplateJobTemplateDataConfigurationOverridesOutput() JobTemplateJobTemplateDataConfigurationOverridesOutput {
	return i.ToJobTemplateJobTemplateDataConfigurationOverridesOutputWithContext(context.Background())
}

func (i JobTemplateJobTemplateDataConfigurationOverridesArgs) ToJobTemplateJobTemplateDataConfigurationOverridesOutputWithContext(ctx context.Context) JobTemplateJobTemplateDataConfigurationOverridesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobTemplateJobTemplateDataConfigurationOverridesOutput)
}

func (i *JobTemplateJobTemplateDataConfigurationOverridesArgs) ToOutput(ctx context.Context) pulumix.Output[*JobTemplateJobTemplateDataConfigurationOverridesArgs] {
	return pulumix.Val(i)
}

type JobTemplateJobTemplateDataConfigurationOverridesOutput struct{ *pulumi.OutputState }

func (JobTemplateJobTemplateDataConfigurationOverridesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobTemplateJobTemplateDataConfigurationOverrides)(nil)).Elem()
}

func (o JobTemplateJobTemplateDataConfigurationOverridesOutput) ToJobTemplateJobTemplateDataConfigurationOverridesOutput() JobTemplateJobTemplateDataConfigurationOverridesOutput {
	return o
}

func (o JobTemplateJobTemplateDataConfigurationOverridesOutput) ToJobTemplateJobTemplateDataConfigurationOverridesOutputWithContext(ctx context.Context) JobTemplateJobTemplateDataConfigurationOverridesOutput {
	return o
}

func (o JobTemplateJobTemplateDataConfigurationOverridesOutput) ToOutput(ctx context.Context) pulumix.Output[JobTemplateJobTemplateDataConfigurationOverrides] {
	return pulumix.Output[JobTemplateJobTemplateDataConfigurationOverrides]{
		OutputState: o.OutputState,
	}
}

// The configurations for the application running by the job run.
func (o JobTemplateJobTemplateDataConfigurationOverridesOutput) ApplicationConfigurations() pulumix.GArrayOutput[JobTemplateJobTemplateDataConfigurationOverridesApplicationConfiguration, JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationOutput] {
	value := pulumix.Apply[JobTemplateJobTemplateDataConfigurationOverrides](o, func(v JobTemplateJobTemplateDataConfigurationOverrides) []JobTemplateJobTemplateDataConfigurationOverridesApplicationConfiguration {
		return v.ApplicationConfigurations
	})
	return pulumix.GArrayOutput[JobTemplateJobTemplateDataConfigurationOverridesApplicationConfiguration, JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationOutput]{OutputState: value.OutputState}
}

// The configurations for monitoring.
func (o JobTemplateJobTemplateDataConfigurationOverridesOutput) MonitoringConfiguration() pulumix.GPtrOutput[JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfiguration, JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationOutput] {
	value := pulumix.Apply[JobTemplateJobTemplateDataConfigurationOverrides](o, func(v JobTemplateJobTemplateDataConfigurationOverrides) *JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfiguration {
		return v.MonitoringConfiguration
	})
	return pulumix.GPtrOutput[JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfiguration, JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationOutput]{OutputState: value.OutputState}
}

type JobTemplateJobTemplateDataConfigurationOverridesApplicationConfiguration struct {
	// The classification within a configuration.
	Classification string `pulumi:"classification"`
	// A list of additional configurations to apply within a configuration object.
	Configurations []JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationConfiguration `pulumi:"configurations"`
	// A set of properties specified within a configuration classification.
	Properties map[string]string `pulumi:"properties"`
}

type JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationArgs struct {
	// The classification within a configuration.
	Classification pulumix.Input[string] `pulumi:"classification"`
	// A list of additional configurations to apply within a configuration object.
	Configurations pulumix.Input[[]*JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationConfigurationArgs] `pulumi:"configurations"`
	// A set of properties specified within a configuration classification.
	Properties pulumix.Input[map[string]string] `pulumi:"properties"`
}

func (JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobTemplateJobTemplateDataConfigurationOverridesApplicationConfiguration)(nil)).Elem()
}

func (i JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationArgs) ToJobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationOutput() JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationOutput {
	return i.ToJobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationOutputWithContext(context.Background())
}

func (i JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationArgs) ToJobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationOutputWithContext(ctx context.Context) JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationOutput)
}

func (i *JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationArgs] {
	return pulumix.Val(i)
}

type JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationOutput struct{ *pulumi.OutputState }

func (JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobTemplateJobTemplateDataConfigurationOverridesApplicationConfiguration)(nil)).Elem()
}

func (o JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationOutput) ToJobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationOutput() JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationOutput {
	return o
}

func (o JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationOutput) ToJobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationOutputWithContext(ctx context.Context) JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationOutput {
	return o
}

func (o JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[JobTemplateJobTemplateDataConfigurationOverridesApplicationConfiguration] {
	return pulumix.Output[JobTemplateJobTemplateDataConfigurationOverridesApplicationConfiguration]{
		OutputState: o.OutputState,
	}
}

// The classification within a configuration.
func (o JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationOutput) Classification() pulumix.Output[string] {
	return pulumix.Apply[JobTemplateJobTemplateDataConfigurationOverridesApplicationConfiguration](o, func(v JobTemplateJobTemplateDataConfigurationOverridesApplicationConfiguration) string {
		return v.Classification
	})
}

// A list of additional configurations to apply within a configuration object.
func (o JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationOutput) Configurations() pulumix.GArrayOutput[JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationConfiguration, JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationConfigurationOutput] {
	value := pulumix.Apply[JobTemplateJobTemplateDataConfigurationOverridesApplicationConfiguration](o, func(v JobTemplateJobTemplateDataConfigurationOverridesApplicationConfiguration) []JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationConfiguration {
		return v.Configurations
	})
	return pulumix.GArrayOutput[JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationConfiguration, JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationConfigurationOutput]{OutputState: value.OutputState}
}

// A set of properties specified within a configuration classification.
func (o JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationOutput) Properties() pulumix.MapOutput[string] {
	value := pulumix.Apply[JobTemplateJobTemplateDataConfigurationOverridesApplicationConfiguration](o, func(v JobTemplateJobTemplateDataConfigurationOverridesApplicationConfiguration) map[string]string {
		return v.Properties
	})
	return pulumix.MapOutput[string]{OutputState: value.OutputState}
}

type JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationConfiguration struct {
	// The classification within a configuration.
	Classification *string `pulumi:"classification"`
	// A set of properties specified within a configuration classification.
	Properties map[string]string `pulumi:"properties"`
}

type JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationConfigurationArgs struct {
	// The classification within a configuration.
	Classification pulumix.Input[*string] `pulumi:"classification"`
	// A set of properties specified within a configuration classification.
	Properties pulumix.Input[map[string]string] `pulumi:"properties"`
}

func (JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationConfiguration)(nil)).Elem()
}

func (i JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationConfigurationArgs) ToJobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationConfigurationOutput() JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationConfigurationOutput {
	return i.ToJobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationConfigurationOutputWithContext(context.Background())
}

func (i JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationConfigurationArgs) ToJobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationConfigurationOutputWithContext(ctx context.Context) JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationConfigurationOutput)
}

func (i *JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationConfigurationArgs] {
	return pulumix.Val(i)
}

type JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationConfigurationOutput struct{ *pulumi.OutputState }

func (JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationConfiguration)(nil)).Elem()
}

func (o JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationConfigurationOutput) ToJobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationConfigurationOutput() JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationConfigurationOutput {
	return o
}

func (o JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationConfigurationOutput) ToJobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationConfigurationOutputWithContext(ctx context.Context) JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationConfigurationOutput {
	return o
}

func (o JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationConfiguration] {
	return pulumix.Output[JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationConfiguration]{
		OutputState: o.OutputState,
	}
}

// The classification within a configuration.
func (o JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationConfigurationOutput) Classification() pulumix.Output[*string] {
	return pulumix.Apply[JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationConfiguration](o, func(v JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationConfiguration) *string {
		return v.Classification
	})
}

// A set of properties specified within a configuration classification.
func (o JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationConfigurationOutput) Properties() pulumix.MapOutput[string] {
	value := pulumix.Apply[JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationConfiguration](o, func(v JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationConfiguration) map[string]string {
		return v.Properties
	})
	return pulumix.MapOutput[string]{OutputState: value.OutputState}
}

type JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfiguration struct {
	// Monitoring configurations for CloudWatch.
	CloudWatchMonitoringConfiguration *JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationCloudWatchMonitoringConfiguration `pulumi:"cloudWatchMonitoringConfiguration"`
	// Monitoring configurations for the persistent application UI.
	PersistentAppUi *string `pulumi:"persistentAppUi"`
	// Amazon S3 configuration for monitoring log publishing.
	S3MonitoringConfiguration *JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationS3MonitoringConfiguration `pulumi:"s3MonitoringConfiguration"`
}

type JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationArgs struct {
	// Monitoring configurations for CloudWatch.
	CloudWatchMonitoringConfiguration pulumix.Input[*JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationCloudWatchMonitoringConfigurationArgs] `pulumi:"cloudWatchMonitoringConfiguration"`
	// Monitoring configurations for the persistent application UI.
	PersistentAppUi pulumix.Input[*string] `pulumi:"persistentAppUi"`
	// Amazon S3 configuration for monitoring log publishing.
	S3MonitoringConfiguration pulumix.Input[*JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationS3MonitoringConfigurationArgs] `pulumi:"s3MonitoringConfiguration"`
}

func (JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfiguration)(nil)).Elem()
}

func (i JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationArgs) ToJobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationOutput() JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationOutput {
	return i.ToJobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationOutputWithContext(context.Background())
}

func (i JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationArgs) ToJobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationOutputWithContext(ctx context.Context) JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationOutput)
}

func (i *JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationArgs] {
	return pulumix.Val(i)
}

type JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationOutput struct{ *pulumi.OutputState }

func (JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfiguration)(nil)).Elem()
}

func (o JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationOutput) ToJobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationOutput() JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationOutput {
	return o
}

func (o JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationOutput) ToJobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationOutputWithContext(ctx context.Context) JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationOutput {
	return o
}

func (o JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfiguration] {
	return pulumix.Output[JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfiguration]{
		OutputState: o.OutputState,
	}
}

// Monitoring configurations for CloudWatch.
func (o JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationOutput) CloudWatchMonitoringConfiguration() pulumix.GPtrOutput[JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationCloudWatchMonitoringConfiguration, JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationCloudWatchMonitoringConfigurationOutput] {
	value := pulumix.Apply[JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfiguration](o, func(v JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfiguration) *JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationCloudWatchMonitoringConfiguration {
		return v.CloudWatchMonitoringConfiguration
	})
	return pulumix.GPtrOutput[JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationCloudWatchMonitoringConfiguration, JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationCloudWatchMonitoringConfigurationOutput]{OutputState: value.OutputState}
}

// Monitoring configurations for the persistent application UI.
func (o JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationOutput) PersistentAppUi() pulumix.Output[*string] {
	return pulumix.Apply[JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfiguration](o, func(v JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfiguration) *string {
		return v.PersistentAppUi
	})
}

// Amazon S3 configuration for monitoring log publishing.
func (o JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationOutput) S3MonitoringConfiguration() pulumix.GPtrOutput[JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationS3MonitoringConfiguration, JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationS3MonitoringConfigurationOutput] {
	value := pulumix.Apply[JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfiguration](o, func(v JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfiguration) *JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationS3MonitoringConfiguration {
		return v.S3MonitoringConfiguration
	})
	return pulumix.GPtrOutput[JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationS3MonitoringConfiguration, JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationS3MonitoringConfigurationOutput]{OutputState: value.OutputState}
}

type JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationCloudWatchMonitoringConfiguration struct {
	// The name of the log group for log publishing.
	LogGroupName string `pulumi:"logGroupName"`
	// The specified name prefix for log streams.
	LogStreamNamePrefix *string `pulumi:"logStreamNamePrefix"`
}

type JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationCloudWatchMonitoringConfigurationArgs struct {
	// The name of the log group for log publishing.
	LogGroupName pulumix.Input[string] `pulumi:"logGroupName"`
	// The specified name prefix for log streams.
	LogStreamNamePrefix pulumix.Input[*string] `pulumi:"logStreamNamePrefix"`
}

func (JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationCloudWatchMonitoringConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationCloudWatchMonitoringConfiguration)(nil)).Elem()
}

func (i JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationCloudWatchMonitoringConfigurationArgs) ToJobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationCloudWatchMonitoringConfigurationOutput() JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationCloudWatchMonitoringConfigurationOutput {
	return i.ToJobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationCloudWatchMonitoringConfigurationOutputWithContext(context.Background())
}

func (i JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationCloudWatchMonitoringConfigurationArgs) ToJobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationCloudWatchMonitoringConfigurationOutputWithContext(ctx context.Context) JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationCloudWatchMonitoringConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationCloudWatchMonitoringConfigurationOutput)
}

func (i *JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationCloudWatchMonitoringConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationCloudWatchMonitoringConfigurationArgs] {
	return pulumix.Val(i)
}

type JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationCloudWatchMonitoringConfigurationOutput struct{ *pulumi.OutputState }

func (JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationCloudWatchMonitoringConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationCloudWatchMonitoringConfiguration)(nil)).Elem()
}

func (o JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationCloudWatchMonitoringConfigurationOutput) ToJobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationCloudWatchMonitoringConfigurationOutput() JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationCloudWatchMonitoringConfigurationOutput {
	return o
}

func (o JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationCloudWatchMonitoringConfigurationOutput) ToJobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationCloudWatchMonitoringConfigurationOutputWithContext(ctx context.Context) JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationCloudWatchMonitoringConfigurationOutput {
	return o
}

func (o JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationCloudWatchMonitoringConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationCloudWatchMonitoringConfiguration] {
	return pulumix.Output[JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationCloudWatchMonitoringConfiguration]{
		OutputState: o.OutputState,
	}
}

// The name of the log group for log publishing.
func (o JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationCloudWatchMonitoringConfigurationOutput) LogGroupName() pulumix.Output[string] {
	return pulumix.Apply[JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationCloudWatchMonitoringConfiguration](o, func(v JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationCloudWatchMonitoringConfiguration) string {
		return v.LogGroupName
	})
}

// The specified name prefix for log streams.
func (o JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationCloudWatchMonitoringConfigurationOutput) LogStreamNamePrefix() pulumix.Output[*string] {
	return pulumix.Apply[JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationCloudWatchMonitoringConfiguration](o, func(v JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationCloudWatchMonitoringConfiguration) *string {
		return v.LogStreamNamePrefix
	})
}

type JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationS3MonitoringConfiguration struct {
	// Amazon S3 destination URI for log publishing.
	LogUri string `pulumi:"logUri"`
}

type JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationS3MonitoringConfigurationArgs struct {
	// Amazon S3 destination URI for log publishing.
	LogUri pulumix.Input[string] `pulumi:"logUri"`
}

func (JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationS3MonitoringConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationS3MonitoringConfiguration)(nil)).Elem()
}

func (i JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationS3MonitoringConfigurationArgs) ToJobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationS3MonitoringConfigurationOutput() JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationS3MonitoringConfigurationOutput {
	return i.ToJobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationS3MonitoringConfigurationOutputWithContext(context.Background())
}

func (i JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationS3MonitoringConfigurationArgs) ToJobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationS3MonitoringConfigurationOutputWithContext(ctx context.Context) JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationS3MonitoringConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationS3MonitoringConfigurationOutput)
}

func (i *JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationS3MonitoringConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationS3MonitoringConfigurationArgs] {
	return pulumix.Val(i)
}

type JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationS3MonitoringConfigurationOutput struct{ *pulumi.OutputState }

func (JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationS3MonitoringConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationS3MonitoringConfiguration)(nil)).Elem()
}

func (o JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationS3MonitoringConfigurationOutput) ToJobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationS3MonitoringConfigurationOutput() JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationS3MonitoringConfigurationOutput {
	return o
}

func (o JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationS3MonitoringConfigurationOutput) ToJobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationS3MonitoringConfigurationOutputWithContext(ctx context.Context) JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationS3MonitoringConfigurationOutput {
	return o
}

func (o JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationS3MonitoringConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationS3MonitoringConfiguration] {
	return pulumix.Output[JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationS3MonitoringConfiguration]{
		OutputState: o.OutputState,
	}
}

// Amazon S3 destination URI for log publishing.
func (o JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationS3MonitoringConfigurationOutput) LogUri() pulumix.Output[string] {
	return pulumix.Apply[JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationS3MonitoringConfiguration](o, func(v JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationS3MonitoringConfiguration) string {
		return v.LogUri
	})
}

type JobTemplateJobTemplateDataJobDriver struct {
	// The job driver for job type.
	SparkSqlJobDriver *JobTemplateJobTemplateDataJobDriverSparkSqlJobDriver `pulumi:"sparkSqlJobDriver"`
	// The job driver parameters specified for spark submit.
	SparkSubmitJobDriver *JobTemplateJobTemplateDataJobDriverSparkSubmitJobDriver `pulumi:"sparkSubmitJobDriver"`
}

type JobTemplateJobTemplateDataJobDriverArgs struct {
	// The job driver for job type.
	SparkSqlJobDriver pulumix.Input[*JobTemplateJobTemplateDataJobDriverSparkSqlJobDriverArgs] `pulumi:"sparkSqlJobDriver"`
	// The job driver parameters specified for spark submit.
	SparkSubmitJobDriver pulumix.Input[*JobTemplateJobTemplateDataJobDriverSparkSubmitJobDriverArgs] `pulumi:"sparkSubmitJobDriver"`
}

func (JobTemplateJobTemplateDataJobDriverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobTemplateJobTemplateDataJobDriver)(nil)).Elem()
}

func (i JobTemplateJobTemplateDataJobDriverArgs) ToJobTemplateJobTemplateDataJobDriverOutput() JobTemplateJobTemplateDataJobDriverOutput {
	return i.ToJobTemplateJobTemplateDataJobDriverOutputWithContext(context.Background())
}

func (i JobTemplateJobTemplateDataJobDriverArgs) ToJobTemplateJobTemplateDataJobDriverOutputWithContext(ctx context.Context) JobTemplateJobTemplateDataJobDriverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobTemplateJobTemplateDataJobDriverOutput)
}

func (i *JobTemplateJobTemplateDataJobDriverArgs) ToOutput(ctx context.Context) pulumix.Output[*JobTemplateJobTemplateDataJobDriverArgs] {
	return pulumix.Val(i)
}

type JobTemplateJobTemplateDataJobDriverOutput struct{ *pulumi.OutputState }

func (JobTemplateJobTemplateDataJobDriverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobTemplateJobTemplateDataJobDriver)(nil)).Elem()
}

func (o JobTemplateJobTemplateDataJobDriverOutput) ToJobTemplateJobTemplateDataJobDriverOutput() JobTemplateJobTemplateDataJobDriverOutput {
	return o
}

func (o JobTemplateJobTemplateDataJobDriverOutput) ToJobTemplateJobTemplateDataJobDriverOutputWithContext(ctx context.Context) JobTemplateJobTemplateDataJobDriverOutput {
	return o
}

func (o JobTemplateJobTemplateDataJobDriverOutput) ToOutput(ctx context.Context) pulumix.Output[JobTemplateJobTemplateDataJobDriver] {
	return pulumix.Output[JobTemplateJobTemplateDataJobDriver]{
		OutputState: o.OutputState,
	}
}

// The job driver for job type.
func (o JobTemplateJobTemplateDataJobDriverOutput) SparkSqlJobDriver() pulumix.GPtrOutput[JobTemplateJobTemplateDataJobDriverSparkSqlJobDriver, JobTemplateJobTemplateDataJobDriverSparkSqlJobDriverOutput] {
	value := pulumix.Apply[JobTemplateJobTemplateDataJobDriver](o, func(v JobTemplateJobTemplateDataJobDriver) *JobTemplateJobTemplateDataJobDriverSparkSqlJobDriver {
		return v.SparkSqlJobDriver
	})
	return pulumix.GPtrOutput[JobTemplateJobTemplateDataJobDriverSparkSqlJobDriver, JobTemplateJobTemplateDataJobDriverSparkSqlJobDriverOutput]{OutputState: value.OutputState}
}

// The job driver parameters specified for spark submit.
func (o JobTemplateJobTemplateDataJobDriverOutput) SparkSubmitJobDriver() pulumix.GPtrOutput[JobTemplateJobTemplateDataJobDriverSparkSubmitJobDriver, JobTemplateJobTemplateDataJobDriverSparkSubmitJobDriverOutput] {
	value := pulumix.Apply[JobTemplateJobTemplateDataJobDriver](o, func(v JobTemplateJobTemplateDataJobDriver) *JobTemplateJobTemplateDataJobDriverSparkSubmitJobDriver {
		return v.SparkSubmitJobDriver
	})
	return pulumix.GPtrOutput[JobTemplateJobTemplateDataJobDriverSparkSubmitJobDriver, JobTemplateJobTemplateDataJobDriverSparkSubmitJobDriverOutput]{OutputState: value.OutputState}
}

type JobTemplateJobTemplateDataJobDriverSparkSqlJobDriver struct {
	// The SQL file to be executed.
	EntryPoint *string `pulumi:"entryPoint"`
	// The Spark parameters to be included in the Spark SQL command.
	SparkSqlParameters *string `pulumi:"sparkSqlParameters"`
}

type JobTemplateJobTemplateDataJobDriverSparkSqlJobDriverArgs struct {
	// The SQL file to be executed.
	EntryPoint pulumix.Input[*string] `pulumi:"entryPoint"`
	// The Spark parameters to be included in the Spark SQL command.
	SparkSqlParameters pulumix.Input[*string] `pulumi:"sparkSqlParameters"`
}

func (JobTemplateJobTemplateDataJobDriverSparkSqlJobDriverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobTemplateJobTemplateDataJobDriverSparkSqlJobDriver)(nil)).Elem()
}

func (i JobTemplateJobTemplateDataJobDriverSparkSqlJobDriverArgs) ToJobTemplateJobTemplateDataJobDriverSparkSqlJobDriverOutput() JobTemplateJobTemplateDataJobDriverSparkSqlJobDriverOutput {
	return i.ToJobTemplateJobTemplateDataJobDriverSparkSqlJobDriverOutputWithContext(context.Background())
}

func (i JobTemplateJobTemplateDataJobDriverSparkSqlJobDriverArgs) ToJobTemplateJobTemplateDataJobDriverSparkSqlJobDriverOutputWithContext(ctx context.Context) JobTemplateJobTemplateDataJobDriverSparkSqlJobDriverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobTemplateJobTemplateDataJobDriverSparkSqlJobDriverOutput)
}

func (i *JobTemplateJobTemplateDataJobDriverSparkSqlJobDriverArgs) ToOutput(ctx context.Context) pulumix.Output[*JobTemplateJobTemplateDataJobDriverSparkSqlJobDriverArgs] {
	return pulumix.Val(i)
}

type JobTemplateJobTemplateDataJobDriverSparkSqlJobDriverOutput struct{ *pulumi.OutputState }

func (JobTemplateJobTemplateDataJobDriverSparkSqlJobDriverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobTemplateJobTemplateDataJobDriverSparkSqlJobDriver)(nil)).Elem()
}

func (o JobTemplateJobTemplateDataJobDriverSparkSqlJobDriverOutput) ToJobTemplateJobTemplateDataJobDriverSparkSqlJobDriverOutput() JobTemplateJobTemplateDataJobDriverSparkSqlJobDriverOutput {
	return o
}

func (o JobTemplateJobTemplateDataJobDriverSparkSqlJobDriverOutput) ToJobTemplateJobTemplateDataJobDriverSparkSqlJobDriverOutputWithContext(ctx context.Context) JobTemplateJobTemplateDataJobDriverSparkSqlJobDriverOutput {
	return o
}

func (o JobTemplateJobTemplateDataJobDriverSparkSqlJobDriverOutput) ToOutput(ctx context.Context) pulumix.Output[JobTemplateJobTemplateDataJobDriverSparkSqlJobDriver] {
	return pulumix.Output[JobTemplateJobTemplateDataJobDriverSparkSqlJobDriver]{
		OutputState: o.OutputState,
	}
}

// The SQL file to be executed.
func (o JobTemplateJobTemplateDataJobDriverSparkSqlJobDriverOutput) EntryPoint() pulumix.Output[*string] {
	return pulumix.Apply[JobTemplateJobTemplateDataJobDriverSparkSqlJobDriver](o, func(v JobTemplateJobTemplateDataJobDriverSparkSqlJobDriver) *string { return v.EntryPoint })
}

// The Spark parameters to be included in the Spark SQL command.
func (o JobTemplateJobTemplateDataJobDriverSparkSqlJobDriverOutput) SparkSqlParameters() pulumix.Output[*string] {
	return pulumix.Apply[JobTemplateJobTemplateDataJobDriverSparkSqlJobDriver](o, func(v JobTemplateJobTemplateDataJobDriverSparkSqlJobDriver) *string { return v.SparkSqlParameters })
}

type JobTemplateJobTemplateDataJobDriverSparkSubmitJobDriver struct {
	// The entry point of job application.
	EntryPoint string `pulumi:"entryPoint"`
	// The arguments for job application.
	EntryPointArguments []string `pulumi:"entryPointArguments"`
	// The Spark submit parameters that are used for job runs.
	SparkSubmitParameters *string `pulumi:"sparkSubmitParameters"`
}

type JobTemplateJobTemplateDataJobDriverSparkSubmitJobDriverArgs struct {
	// The entry point of job application.
	EntryPoint pulumix.Input[string] `pulumi:"entryPoint"`
	// The arguments for job application.
	EntryPointArguments pulumix.Input[[]string] `pulumi:"entryPointArguments"`
	// The Spark submit parameters that are used for job runs.
	SparkSubmitParameters pulumix.Input[*string] `pulumi:"sparkSubmitParameters"`
}

func (JobTemplateJobTemplateDataJobDriverSparkSubmitJobDriverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobTemplateJobTemplateDataJobDriverSparkSubmitJobDriver)(nil)).Elem()
}

func (i JobTemplateJobTemplateDataJobDriverSparkSubmitJobDriverArgs) ToJobTemplateJobTemplateDataJobDriverSparkSubmitJobDriverOutput() JobTemplateJobTemplateDataJobDriverSparkSubmitJobDriverOutput {
	return i.ToJobTemplateJobTemplateDataJobDriverSparkSubmitJobDriverOutputWithContext(context.Background())
}

func (i JobTemplateJobTemplateDataJobDriverSparkSubmitJobDriverArgs) ToJobTemplateJobTemplateDataJobDriverSparkSubmitJobDriverOutputWithContext(ctx context.Context) JobTemplateJobTemplateDataJobDriverSparkSubmitJobDriverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobTemplateJobTemplateDataJobDriverSparkSubmitJobDriverOutput)
}

func (i *JobTemplateJobTemplateDataJobDriverSparkSubmitJobDriverArgs) ToOutput(ctx context.Context) pulumix.Output[*JobTemplateJobTemplateDataJobDriverSparkSubmitJobDriverArgs] {
	return pulumix.Val(i)
}

type JobTemplateJobTemplateDataJobDriverSparkSubmitJobDriverOutput struct{ *pulumi.OutputState }

func (JobTemplateJobTemplateDataJobDriverSparkSubmitJobDriverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobTemplateJobTemplateDataJobDriverSparkSubmitJobDriver)(nil)).Elem()
}

func (o JobTemplateJobTemplateDataJobDriverSparkSubmitJobDriverOutput) ToJobTemplateJobTemplateDataJobDriverSparkSubmitJobDriverOutput() JobTemplateJobTemplateDataJobDriverSparkSubmitJobDriverOutput {
	return o
}

func (o JobTemplateJobTemplateDataJobDriverSparkSubmitJobDriverOutput) ToJobTemplateJobTemplateDataJobDriverSparkSubmitJobDriverOutputWithContext(ctx context.Context) JobTemplateJobTemplateDataJobDriverSparkSubmitJobDriverOutput {
	return o
}

func (o JobTemplateJobTemplateDataJobDriverSparkSubmitJobDriverOutput) ToOutput(ctx context.Context) pulumix.Output[JobTemplateJobTemplateDataJobDriverSparkSubmitJobDriver] {
	return pulumix.Output[JobTemplateJobTemplateDataJobDriverSparkSubmitJobDriver]{
		OutputState: o.OutputState,
	}
}

// The entry point of job application.
func (o JobTemplateJobTemplateDataJobDriverSparkSubmitJobDriverOutput) EntryPoint() pulumix.Output[string] {
	return pulumix.Apply[JobTemplateJobTemplateDataJobDriverSparkSubmitJobDriver](o, func(v JobTemplateJobTemplateDataJobDriverSparkSubmitJobDriver) string { return v.EntryPoint })
}

// The arguments for job application.
func (o JobTemplateJobTemplateDataJobDriverSparkSubmitJobDriverOutput) EntryPointArguments() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[JobTemplateJobTemplateDataJobDriverSparkSubmitJobDriver](o, func(v JobTemplateJobTemplateDataJobDriverSparkSubmitJobDriver) []string { return v.EntryPointArguments })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// The Spark submit parameters that are used for job runs.
func (o JobTemplateJobTemplateDataJobDriverSparkSubmitJobDriverOutput) SparkSubmitParameters() pulumix.Output[*string] {
	return pulumix.Apply[JobTemplateJobTemplateDataJobDriverSparkSubmitJobDriver](o, func(v JobTemplateJobTemplateDataJobDriverSparkSubmitJobDriver) *string {
		return v.SparkSubmitParameters
	})
}

type VirtualClusterContainerProvider struct {
	// The name of the container provider that is running your EMR Containers cluster
	Id string `pulumi:"id"`
	// Nested list containing information about the configuration of the container provider
	Info VirtualClusterContainerProviderInfo `pulumi:"info"`
	// The type of the container provider
	Type string `pulumi:"type"`
}

type VirtualClusterContainerProviderArgs struct {
	// The name of the container provider that is running your EMR Containers cluster
	Id pulumix.Input[string] `pulumi:"id"`
	// Nested list containing information about the configuration of the container provider
	Info pulumix.Input[*VirtualClusterContainerProviderInfoArgs] `pulumi:"info"`
	// The type of the container provider
	Type pulumix.Input[string] `pulumi:"type"`
}

func (VirtualClusterContainerProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualClusterContainerProvider)(nil)).Elem()
}

func (i VirtualClusterContainerProviderArgs) ToVirtualClusterContainerProviderOutput() VirtualClusterContainerProviderOutput {
	return i.ToVirtualClusterContainerProviderOutputWithContext(context.Background())
}

func (i VirtualClusterContainerProviderArgs) ToVirtualClusterContainerProviderOutputWithContext(ctx context.Context) VirtualClusterContainerProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualClusterContainerProviderOutput)
}

func (i *VirtualClusterContainerProviderArgs) ToOutput(ctx context.Context) pulumix.Output[*VirtualClusterContainerProviderArgs] {
	return pulumix.Val(i)
}

type VirtualClusterContainerProviderOutput struct{ *pulumi.OutputState }

func (VirtualClusterContainerProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualClusterContainerProvider)(nil)).Elem()
}

func (o VirtualClusterContainerProviderOutput) ToVirtualClusterContainerProviderOutput() VirtualClusterContainerProviderOutput {
	return o
}

func (o VirtualClusterContainerProviderOutput) ToVirtualClusterContainerProviderOutputWithContext(ctx context.Context) VirtualClusterContainerProviderOutput {
	return o
}

func (o VirtualClusterContainerProviderOutput) ToOutput(ctx context.Context) pulumix.Output[VirtualClusterContainerProvider] {
	return pulumix.Output[VirtualClusterContainerProvider]{
		OutputState: o.OutputState,
	}
}

// The name of the container provider that is running your EMR Containers cluster
func (o VirtualClusterContainerProviderOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[VirtualClusterContainerProvider](o, func(v VirtualClusterContainerProvider) string { return v.Id })
}

// Nested list containing information about the configuration of the container provider
func (o VirtualClusterContainerProviderOutput) Info() pulumix.GPtrOutput[VirtualClusterContainerProviderInfo, VirtualClusterContainerProviderInfoOutput] {
	value := pulumix.Apply[VirtualClusterContainerProvider](o, func(v VirtualClusterContainerProvider) VirtualClusterContainerProviderInfo { return v.Info })
	return pulumix.GPtrOutput[VirtualClusterContainerProviderInfo, VirtualClusterContainerProviderInfoOutput]{OutputState: value.OutputState}
}

// The type of the container provider
func (o VirtualClusterContainerProviderOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[VirtualClusterContainerProvider](o, func(v VirtualClusterContainerProvider) string { return v.Type })
}

type VirtualClusterContainerProviderInfo struct {
	// Nested list containing EKS-specific information about the cluster where the EMR Containers cluster is running
	EksInfo VirtualClusterContainerProviderInfoEksInfo `pulumi:"eksInfo"`
}

type VirtualClusterContainerProviderInfoArgs struct {
	// Nested list containing EKS-specific information about the cluster where the EMR Containers cluster is running
	EksInfo pulumix.Input[*VirtualClusterContainerProviderInfoEksInfoArgs] `pulumi:"eksInfo"`
}

func (VirtualClusterContainerProviderInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualClusterContainerProviderInfo)(nil)).Elem()
}

func (i VirtualClusterContainerProviderInfoArgs) ToVirtualClusterContainerProviderInfoOutput() VirtualClusterContainerProviderInfoOutput {
	return i.ToVirtualClusterContainerProviderInfoOutputWithContext(context.Background())
}

func (i VirtualClusterContainerProviderInfoArgs) ToVirtualClusterContainerProviderInfoOutputWithContext(ctx context.Context) VirtualClusterContainerProviderInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualClusterContainerProviderInfoOutput)
}

func (i *VirtualClusterContainerProviderInfoArgs) ToOutput(ctx context.Context) pulumix.Output[*VirtualClusterContainerProviderInfoArgs] {
	return pulumix.Val(i)
}

type VirtualClusterContainerProviderInfoOutput struct{ *pulumi.OutputState }

func (VirtualClusterContainerProviderInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualClusterContainerProviderInfo)(nil)).Elem()
}

func (o VirtualClusterContainerProviderInfoOutput) ToVirtualClusterContainerProviderInfoOutput() VirtualClusterContainerProviderInfoOutput {
	return o
}

func (o VirtualClusterContainerProviderInfoOutput) ToVirtualClusterContainerProviderInfoOutputWithContext(ctx context.Context) VirtualClusterContainerProviderInfoOutput {
	return o
}

func (o VirtualClusterContainerProviderInfoOutput) ToOutput(ctx context.Context) pulumix.Output[VirtualClusterContainerProviderInfo] {
	return pulumix.Output[VirtualClusterContainerProviderInfo]{
		OutputState: o.OutputState,
	}
}

// Nested list containing EKS-specific information about the cluster where the EMR Containers cluster is running
func (o VirtualClusterContainerProviderInfoOutput) EksInfo() pulumix.GPtrOutput[VirtualClusterContainerProviderInfoEksInfo, VirtualClusterContainerProviderInfoEksInfoOutput] {
	value := pulumix.Apply[VirtualClusterContainerProviderInfo](o, func(v VirtualClusterContainerProviderInfo) VirtualClusterContainerProviderInfoEksInfo {
		return v.EksInfo
	})
	return pulumix.GPtrOutput[VirtualClusterContainerProviderInfoEksInfo, VirtualClusterContainerProviderInfoEksInfoOutput]{OutputState: value.OutputState}
}

type VirtualClusterContainerProviderInfoEksInfo struct {
	// The namespace where the EMR Containers cluster is running
	Namespace *string `pulumi:"namespace"`
}

type VirtualClusterContainerProviderInfoEksInfoArgs struct {
	// The namespace where the EMR Containers cluster is running
	Namespace pulumix.Input[*string] `pulumi:"namespace"`
}

func (VirtualClusterContainerProviderInfoEksInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualClusterContainerProviderInfoEksInfo)(nil)).Elem()
}

func (i VirtualClusterContainerProviderInfoEksInfoArgs) ToVirtualClusterContainerProviderInfoEksInfoOutput() VirtualClusterContainerProviderInfoEksInfoOutput {
	return i.ToVirtualClusterContainerProviderInfoEksInfoOutputWithContext(context.Background())
}

func (i VirtualClusterContainerProviderInfoEksInfoArgs) ToVirtualClusterContainerProviderInfoEksInfoOutputWithContext(ctx context.Context) VirtualClusterContainerProviderInfoEksInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualClusterContainerProviderInfoEksInfoOutput)
}

func (i *VirtualClusterContainerProviderInfoEksInfoArgs) ToOutput(ctx context.Context) pulumix.Output[*VirtualClusterContainerProviderInfoEksInfoArgs] {
	return pulumix.Val(i)
}

type VirtualClusterContainerProviderInfoEksInfoOutput struct{ *pulumi.OutputState }

func (VirtualClusterContainerProviderInfoEksInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualClusterContainerProviderInfoEksInfo)(nil)).Elem()
}

func (o VirtualClusterContainerProviderInfoEksInfoOutput) ToVirtualClusterContainerProviderInfoEksInfoOutput() VirtualClusterContainerProviderInfoEksInfoOutput {
	return o
}

func (o VirtualClusterContainerProviderInfoEksInfoOutput) ToVirtualClusterContainerProviderInfoEksInfoOutputWithContext(ctx context.Context) VirtualClusterContainerProviderInfoEksInfoOutput {
	return o
}

func (o VirtualClusterContainerProviderInfoEksInfoOutput) ToOutput(ctx context.Context) pulumix.Output[VirtualClusterContainerProviderInfoEksInfo] {
	return pulumix.Output[VirtualClusterContainerProviderInfoEksInfo]{
		OutputState: o.OutputState,
	}
}

// The namespace where the EMR Containers cluster is running
func (o VirtualClusterContainerProviderInfoEksInfoOutput) Namespace() pulumix.Output[*string] {
	return pulumix.Apply[VirtualClusterContainerProviderInfoEksInfo](o, func(v VirtualClusterContainerProviderInfoEksInfo) *string { return v.Namespace })
}

type GetVirtualClusterContainerProvider struct {
	// The name of the container provider that is running your EMR Containers cluster
	Id string `pulumi:"id"`
	// Nested list containing information about the configuration of the container provider
	Infos []GetVirtualClusterContainerProviderInfo `pulumi:"infos"`
	// The type of the container provider
	Type string `pulumi:"type"`
}

type GetVirtualClusterContainerProviderArgs struct {
	// The name of the container provider that is running your EMR Containers cluster
	Id pulumix.Input[string] `pulumi:"id"`
	// Nested list containing information about the configuration of the container provider
	Infos pulumix.Input[[]*GetVirtualClusterContainerProviderInfoArgs] `pulumi:"infos"`
	// The type of the container provider
	Type pulumix.Input[string] `pulumi:"type"`
}

func (GetVirtualClusterContainerProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualClusterContainerProvider)(nil)).Elem()
}

func (i GetVirtualClusterContainerProviderArgs) ToGetVirtualClusterContainerProviderOutput() GetVirtualClusterContainerProviderOutput {
	return i.ToGetVirtualClusterContainerProviderOutputWithContext(context.Background())
}

func (i GetVirtualClusterContainerProviderArgs) ToGetVirtualClusterContainerProviderOutputWithContext(ctx context.Context) GetVirtualClusterContainerProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualClusterContainerProviderOutput)
}

func (i *GetVirtualClusterContainerProviderArgs) ToOutput(ctx context.Context) pulumix.Output[*GetVirtualClusterContainerProviderArgs] {
	return pulumix.Val(i)
}

type GetVirtualClusterContainerProviderOutput struct{ *pulumi.OutputState }

func (GetVirtualClusterContainerProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualClusterContainerProvider)(nil)).Elem()
}

func (o GetVirtualClusterContainerProviderOutput) ToGetVirtualClusterContainerProviderOutput() GetVirtualClusterContainerProviderOutput {
	return o
}

func (o GetVirtualClusterContainerProviderOutput) ToGetVirtualClusterContainerProviderOutputWithContext(ctx context.Context) GetVirtualClusterContainerProviderOutput {
	return o
}

func (o GetVirtualClusterContainerProviderOutput) ToOutput(ctx context.Context) pulumix.Output[GetVirtualClusterContainerProvider] {
	return pulumix.Output[GetVirtualClusterContainerProvider]{
		OutputState: o.OutputState,
	}
}

// The name of the container provider that is running your EMR Containers cluster
func (o GetVirtualClusterContainerProviderOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[GetVirtualClusterContainerProvider](o, func(v GetVirtualClusterContainerProvider) string { return v.Id })
}

// Nested list containing information about the configuration of the container provider
func (o GetVirtualClusterContainerProviderOutput) Infos() pulumix.GArrayOutput[GetVirtualClusterContainerProviderInfo, GetVirtualClusterContainerProviderInfoOutput] {
	value := pulumix.Apply[GetVirtualClusterContainerProvider](o, func(v GetVirtualClusterContainerProvider) []GetVirtualClusterContainerProviderInfo { return v.Infos })
	return pulumix.GArrayOutput[GetVirtualClusterContainerProviderInfo, GetVirtualClusterContainerProviderInfoOutput]{OutputState: value.OutputState}
}

// The type of the container provider
func (o GetVirtualClusterContainerProviderOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[GetVirtualClusterContainerProvider](o, func(v GetVirtualClusterContainerProvider) string { return v.Type })
}

type GetVirtualClusterContainerProviderInfo struct {
	// Nested list containing EKS-specific information about the cluster where the EMR Containers cluster is running
	EksInfos []GetVirtualClusterContainerProviderInfoEksInfo `pulumi:"eksInfos"`
}

type GetVirtualClusterContainerProviderInfoArgs struct {
	// Nested list containing EKS-specific information about the cluster where the EMR Containers cluster is running
	EksInfos pulumix.Input[[]*GetVirtualClusterContainerProviderInfoEksInfoArgs] `pulumi:"eksInfos"`
}

func (GetVirtualClusterContainerProviderInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualClusterContainerProviderInfo)(nil)).Elem()
}

func (i GetVirtualClusterContainerProviderInfoArgs) ToGetVirtualClusterContainerProviderInfoOutput() GetVirtualClusterContainerProviderInfoOutput {
	return i.ToGetVirtualClusterContainerProviderInfoOutputWithContext(context.Background())
}

func (i GetVirtualClusterContainerProviderInfoArgs) ToGetVirtualClusterContainerProviderInfoOutputWithContext(ctx context.Context) GetVirtualClusterContainerProviderInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualClusterContainerProviderInfoOutput)
}

func (i *GetVirtualClusterContainerProviderInfoArgs) ToOutput(ctx context.Context) pulumix.Output[*GetVirtualClusterContainerProviderInfoArgs] {
	return pulumix.Val(i)
}

type GetVirtualClusterContainerProviderInfoOutput struct{ *pulumi.OutputState }

func (GetVirtualClusterContainerProviderInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualClusterContainerProviderInfo)(nil)).Elem()
}

func (o GetVirtualClusterContainerProviderInfoOutput) ToGetVirtualClusterContainerProviderInfoOutput() GetVirtualClusterContainerProviderInfoOutput {
	return o
}

func (o GetVirtualClusterContainerProviderInfoOutput) ToGetVirtualClusterContainerProviderInfoOutputWithContext(ctx context.Context) GetVirtualClusterContainerProviderInfoOutput {
	return o
}

func (o GetVirtualClusterContainerProviderInfoOutput) ToOutput(ctx context.Context) pulumix.Output[GetVirtualClusterContainerProviderInfo] {
	return pulumix.Output[GetVirtualClusterContainerProviderInfo]{
		OutputState: o.OutputState,
	}
}

// Nested list containing EKS-specific information about the cluster where the EMR Containers cluster is running
func (o GetVirtualClusterContainerProviderInfoOutput) EksInfos() pulumix.GArrayOutput[GetVirtualClusterContainerProviderInfoEksInfo, GetVirtualClusterContainerProviderInfoEksInfoOutput] {
	value := pulumix.Apply[GetVirtualClusterContainerProviderInfo](o, func(v GetVirtualClusterContainerProviderInfo) []GetVirtualClusterContainerProviderInfoEksInfo {
		return v.EksInfos
	})
	return pulumix.GArrayOutput[GetVirtualClusterContainerProviderInfoEksInfo, GetVirtualClusterContainerProviderInfoEksInfoOutput]{OutputState: value.OutputState}
}

type GetVirtualClusterContainerProviderInfoEksInfo struct {
	// The namespace where the EMR Containers cluster is running
	Namespace string `pulumi:"namespace"`
}

type GetVirtualClusterContainerProviderInfoEksInfoArgs struct {
	// The namespace where the EMR Containers cluster is running
	Namespace pulumix.Input[string] `pulumi:"namespace"`
}

func (GetVirtualClusterContainerProviderInfoEksInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualClusterContainerProviderInfoEksInfo)(nil)).Elem()
}

func (i GetVirtualClusterContainerProviderInfoEksInfoArgs) ToGetVirtualClusterContainerProviderInfoEksInfoOutput() GetVirtualClusterContainerProviderInfoEksInfoOutput {
	return i.ToGetVirtualClusterContainerProviderInfoEksInfoOutputWithContext(context.Background())
}

func (i GetVirtualClusterContainerProviderInfoEksInfoArgs) ToGetVirtualClusterContainerProviderInfoEksInfoOutputWithContext(ctx context.Context) GetVirtualClusterContainerProviderInfoEksInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVirtualClusterContainerProviderInfoEksInfoOutput)
}

func (i *GetVirtualClusterContainerProviderInfoEksInfoArgs) ToOutput(ctx context.Context) pulumix.Output[*GetVirtualClusterContainerProviderInfoEksInfoArgs] {
	return pulumix.Val(i)
}

type GetVirtualClusterContainerProviderInfoEksInfoOutput struct{ *pulumi.OutputState }

func (GetVirtualClusterContainerProviderInfoEksInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualClusterContainerProviderInfoEksInfo)(nil)).Elem()
}

func (o GetVirtualClusterContainerProviderInfoEksInfoOutput) ToGetVirtualClusterContainerProviderInfoEksInfoOutput() GetVirtualClusterContainerProviderInfoEksInfoOutput {
	return o
}

func (o GetVirtualClusterContainerProviderInfoEksInfoOutput) ToGetVirtualClusterContainerProviderInfoEksInfoOutputWithContext(ctx context.Context) GetVirtualClusterContainerProviderInfoEksInfoOutput {
	return o
}

func (o GetVirtualClusterContainerProviderInfoEksInfoOutput) ToOutput(ctx context.Context) pulumix.Output[GetVirtualClusterContainerProviderInfoEksInfo] {
	return pulumix.Output[GetVirtualClusterContainerProviderInfoEksInfo]{
		OutputState: o.OutputState,
	}
}

// The namespace where the EMR Containers cluster is running
func (o GetVirtualClusterContainerProviderInfoEksInfoOutput) Namespace() pulumix.Output[string] {
	return pulumix.Apply[GetVirtualClusterContainerProviderInfoEksInfo](o, func(v GetVirtualClusterContainerProviderInfoEksInfo) string { return v.Namespace })
}

func init() {
	pulumi.RegisterOutputType(JobTemplateJobTemplateDataOutput{})
	pulumi.RegisterOutputType(JobTemplateJobTemplateDataConfigurationOverridesOutput{})
	pulumi.RegisterOutputType(JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationOutput{})
	pulumi.RegisterOutputType(JobTemplateJobTemplateDataConfigurationOverridesApplicationConfigurationConfigurationOutput{})
	pulumi.RegisterOutputType(JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationOutput{})
	pulumi.RegisterOutputType(JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationCloudWatchMonitoringConfigurationOutput{})
	pulumi.RegisterOutputType(JobTemplateJobTemplateDataConfigurationOverridesMonitoringConfigurationS3MonitoringConfigurationOutput{})
	pulumi.RegisterOutputType(JobTemplateJobTemplateDataJobDriverOutput{})
	pulumi.RegisterOutputType(JobTemplateJobTemplateDataJobDriverSparkSqlJobDriverOutput{})
	pulumi.RegisterOutputType(JobTemplateJobTemplateDataJobDriverSparkSubmitJobDriverOutput{})
	pulumi.RegisterOutputType(VirtualClusterContainerProviderOutput{})
	pulumi.RegisterOutputType(VirtualClusterContainerProviderInfoOutput{})
	pulumi.RegisterOutputType(VirtualClusterContainerProviderInfoEksInfoOutput{})
	pulumi.RegisterOutputType(GetVirtualClusterContainerProviderOutput{})
	pulumi.RegisterOutputType(GetVirtualClusterContainerProviderInfoOutput{})
	pulumi.RegisterOutputType(GetVirtualClusterContainerProviderInfoEksInfoOutput{})
}
