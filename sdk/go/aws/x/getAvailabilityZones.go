// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aws

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// The Availability Zones data source allows access to the list of AWS
// Availability Zones which can be accessed by an AWS account within the region
// configured in the provider.
//
// This is different from the `getAvailabilityZone` (singular) data source,
// which provides some details about a specific availability zone.
//
// > When [Local Zones](https://aws.amazon.com/about-aws/global-infrastructure/localzones/) are enabled in a region, by default the API and this data source include both Local Zones and Availability Zones. To return only Availability Zones, see the example section below.
func GetAvailabilityZones(ctx *pulumi.Context, args *GetAvailabilityZonesArgs, opts ...pulumi.InvokeOption) (*GetAvailabilityZonesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetAvailabilityZonesResult
	err := ctx.Invoke("aws:index/getAvailabilityZones:getAvailabilityZones", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAvailabilityZones.
type GetAvailabilityZonesArgs struct {
	// Set to `true` to include all Availability Zones and Local Zones regardless of your opt in status.
	AllAvailabilityZones *bool `pulumi:"allAvailabilityZones"`
	// List of Availability Zone names to exclude.
	ExcludeNames []string `pulumi:"excludeNames"`
	// List of Availability Zone IDs to exclude.
	ExcludeZoneIds []string `pulumi:"excludeZoneIds"`
	// Configuration block(s) for filtering. Detailed below.
	Filters []GetAvailabilityZonesFilter `pulumi:"filters"`
	// Allows to filter list of Availability Zones based on their
	// current state. Can be either `"available"`, `"information"`, `"impaired"` or
	// `"unavailable"`. By default the list includes a complete set of Availability Zones
	// to which the underlying AWS account has access, regardless of their state.
	State *string `pulumi:"state"`
}

// A collection of values returned by getAvailabilityZones.
type GetAvailabilityZonesResult struct {
	AllAvailabilityZones *bool                        `pulumi:"allAvailabilityZones"`
	ExcludeNames         []string                     `pulumi:"excludeNames"`
	ExcludeZoneIds       []string                     `pulumi:"excludeZoneIds"`
	Filters              []GetAvailabilityZonesFilter `pulumi:"filters"`
	// A set of the Availability Zone Group names. For Availability Zones, this is the same value as the Region name. For Local Zones, the name of the associated group, for example `us-west-2-lax-1`.
	GroupNames []string `pulumi:"groupNames"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// List of the Availability Zone names available to the account.
	Names []string `pulumi:"names"`
	State *string  `pulumi:"state"`
	// List of the Availability Zone IDs available to the account.
	ZoneIds []string `pulumi:"zoneIds"`
}

func GetAvailabilityZonesOutput(ctx *pulumi.Context, args GetAvailabilityZonesOutputArgs, opts ...pulumi.InvokeOption) GetAvailabilityZonesResultOutput {
	outputResult := pulumix.ApplyErr[*GetAvailabilityZonesArgs](args.ToOutput(), func(plainArgs *GetAvailabilityZonesArgs) (*GetAvailabilityZonesResult, error) {
		return GetAvailabilityZones(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[GetAvailabilityZonesResultOutput, *GetAvailabilityZonesResult](outputResult)
}

// A collection of arguments for invoking getAvailabilityZones.
type GetAvailabilityZonesOutputArgs struct {
	// Set to `true` to include all Availability Zones and Local Zones regardless of your opt in status.
	AllAvailabilityZones pulumix.Input[*bool] `pulumi:"allAvailabilityZones"`
	// List of Availability Zone names to exclude.
	ExcludeNames pulumix.Input[[]string] `pulumi:"excludeNames"`
	// List of Availability Zone IDs to exclude.
	ExcludeZoneIds pulumix.Input[[]string] `pulumi:"excludeZoneIds"`
	// Configuration block(s) for filtering. Detailed below.
	Filters pulumix.Input[[]*GetAvailabilityZonesFilterArgs] `pulumi:"filters"`
	// Allows to filter list of Availability Zones based on their
	// current state. Can be either `"available"`, `"information"`, `"impaired"` or
	// `"unavailable"`. By default the list includes a complete set of Availability Zones
	// to which the underlying AWS account has access, regardless of their state.
	State pulumix.Input[*string] `pulumi:"state"`
}

func (args GetAvailabilityZonesOutputArgs) ToOutput() pulumix.Output[*GetAvailabilityZonesArgs] {
	allArgs := pulumix.All(
		args.AllAvailabilityZones.ToOutput(context.Background()).AsAny(),
		args.ExcludeNames.ToOutput(context.Background()).AsAny(),
		args.ExcludeZoneIds.ToOutput(context.Background()).AsAny(),
		args.Filters.ToOutput(context.Background()).AsAny(),
		args.State.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *GetAvailabilityZonesArgs {
		return &GetAvailabilityZonesArgs{
			AllAvailabilityZones: resolvedArgs[0].(*bool),
			ExcludeNames:         resolvedArgs[1].([]string),
			ExcludeZoneIds:       resolvedArgs[2].([]string),
			Filters:              resolvedArgs[3].([]GetAvailabilityZonesFilter),
			State:                resolvedArgs[4].(*string),
		}
	})
}

type GetAvailabilityZonesResultOutput struct{ *pulumi.OutputState }

func (GetAvailabilityZonesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAvailabilityZonesResult)(nil)).Elem()
}

func (o GetAvailabilityZonesResultOutput) ToOutput(context.Context) pulumix.Output[*GetAvailabilityZonesResult] {
	return pulumix.Output[*GetAvailabilityZonesResult]{
		OutputState: o.OutputState,
	}
}

func (o GetAvailabilityZonesResultOutput) AllAvailabilityZones() pulumix.Output[*bool] {
	return pulumix.Apply[*GetAvailabilityZonesResult](o, func(v *GetAvailabilityZonesResult) *bool { return v.AllAvailabilityZones })
}

func (o GetAvailabilityZonesResultOutput) ExcludeNames() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[*GetAvailabilityZonesResult](o, func(v *GetAvailabilityZonesResult) []string { return v.ExcludeNames })
	return pulumix.ArrayOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o GetAvailabilityZonesResultOutput) ExcludeZoneIds() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[*GetAvailabilityZonesResult](o, func(v *GetAvailabilityZonesResult) []string { return v.ExcludeZoneIds })
	return pulumix.ArrayOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o GetAvailabilityZonesResultOutput) Filters() pulumix.GArrayOutput[GetAvailabilityZonesFilter, GetAvailabilityZonesFilterOutput] {
	value := pulumix.Apply[*GetAvailabilityZonesResult](o, func(v *GetAvailabilityZonesResult) []GetAvailabilityZonesFilter { return v.Filters })
	return pulumix.GArrayOutput[GetAvailabilityZonesFilter, GetAvailabilityZonesFilterOutput]{
		OutputState: value.OutputState,
	}
}

func (o GetAvailabilityZonesResultOutput) GroupNames() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[*GetAvailabilityZonesResult](o, func(v *GetAvailabilityZonesResult) []string { return v.GroupNames })
	return pulumix.ArrayOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o GetAvailabilityZonesResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*GetAvailabilityZonesResult](o, func(v *GetAvailabilityZonesResult) string { return v.Id })
}

func (o GetAvailabilityZonesResultOutput) Names() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[*GetAvailabilityZonesResult](o, func(v *GetAvailabilityZonesResult) []string { return v.Names })
	return pulumix.ArrayOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o GetAvailabilityZonesResultOutput) State() pulumix.Output[*string] {
	return pulumix.Apply[*GetAvailabilityZonesResult](o, func(v *GetAvailabilityZonesResult) *string { return v.State })
}

func (o GetAvailabilityZonesResultOutput) ZoneIds() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[*GetAvailabilityZonesResult](o, func(v *GetAvailabilityZonesResult) []string { return v.ZoneIds })
	return pulumix.ArrayOutput[string]{
		OutputState: value.OutputState,
	}
}
