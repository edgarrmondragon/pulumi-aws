// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Information about RDS orderable DB instances and valid parameter combinations.
func GetOrderableDbInstance(ctx *pulumi.Context, args *GetOrderableDbInstanceArgs, opts ...pulumi.InvokeOption) (*GetOrderableDbInstanceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetOrderableDbInstanceResult
	err := ctx.Invoke("aws:rds/getOrderableDbInstance:getOrderableDbInstance", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getOrderableDbInstance.
type GetOrderableDbInstanceArgs struct {
	// Availability zone group.
	AvailabilityZoneGroup *string `pulumi:"availabilityZoneGroup"`
	// DB engine. Engine values include `aurora`, `aurora-mysql`, `aurora-postgresql`, `docdb`, `mariadb`, `mysql`, `neptune`, `oracle-ee`, `oracle-se`, `oracle-se1`, `oracle-se2`, `postgres`, `sqlserver-ee`, `sqlserver-ex`, `sqlserver-se`, and `sqlserver-web`.
	Engine string `pulumi:"engine"`
	// Version of the DB engine. If none is provided, the AWS-defined default version will be used.
	EngineVersion *string `pulumi:"engineVersion"`
	// DB instance class. Examples of classes are `db.m3.2xlarge`, `db.t2.small`, and `db.m3.medium`.
	InstanceClass *string `pulumi:"instanceClass"`
	// License model. Examples of license models are `general-public-license`, `bring-your-own-license`, and `amazon-license`.
	LicenseModel *string `pulumi:"licenseModel"`
	// Ordered list of preferred RDS DB instance engine versions. The first match in this list will be returned. If no preferred matches are found and the original search returned more than one result, an error is returned.
	PreferredEngineVersions []string `pulumi:"preferredEngineVersions"`
	// Ordered list of preferred RDS DB instance classes. The first match in this list will be returned. If no preferred matches are found and the original search returned more than one result, an error is returned.
	PreferredInstanceClasses []string `pulumi:"preferredInstanceClasses"`
	// Storage types. Examples of storage types are `standard`, `io1`, `gp2`, and `aurora`.
	StorageType *string `pulumi:"storageType"`
	// Enable this to ensure a DB instance supports Enhanced Monitoring at intervals from 1 to 60 seconds.
	SupportsEnhancedMonitoring *bool `pulumi:"supportsEnhancedMonitoring"`
	// Enable this to ensure a DB instance supports Aurora global databases with a specific combination of other DB engine attributes.
	SupportsGlobalDatabases *bool `pulumi:"supportsGlobalDatabases"`
	// Enable this to ensure a DB instance supports IAM database authentication.
	SupportsIamDatabaseAuthentication *bool `pulumi:"supportsIamDatabaseAuthentication"`
	// Enable this to ensure a DB instance supports provisioned IOPS.
	SupportsIops *bool `pulumi:"supportsIops"`
	// Enable this to ensure a DB instance supports Kerberos Authentication.
	SupportsKerberosAuthentication *bool `pulumi:"supportsKerberosAuthentication"`
	// Enable this to ensure a DB instance supports Performance Insights.
	SupportsPerformanceInsights *bool `pulumi:"supportsPerformanceInsights"`
	// Enable this to ensure Amazon RDS can automatically scale storage for DB instances that use the specified DB instance class.
	SupportsStorageAutoscaling *bool `pulumi:"supportsStorageAutoscaling"`
	// Enable this to ensure a DB instance supports encrypted storage.
	SupportsStorageEncryption *bool `pulumi:"supportsStorageEncryption"`
	// Boolean that indicates whether to show only VPC or non-VPC offerings.
	Vpc *bool `pulumi:"vpc"`
}

// A collection of values returned by getOrderableDbInstance.
type GetOrderableDbInstanceResult struct {
	AvailabilityZoneGroup string `pulumi:"availabilityZoneGroup"`
	// Availability zones where the instance is available.
	AvailabilityZones []string `pulumi:"availabilityZones"`
	Engine            string   `pulumi:"engine"`
	EngineVersion     string   `pulumi:"engineVersion"`
	// The provider-assigned unique ID for this managed resource.
	Id            string `pulumi:"id"`
	InstanceClass string `pulumi:"instanceClass"`
	LicenseModel  string `pulumi:"licenseModel"`
	// Maximum total provisioned IOPS for a DB instance.
	MaxIopsPerDbInstance int `pulumi:"maxIopsPerDbInstance"`
	// Maximum provisioned IOPS per GiB for a DB instance.
	MaxIopsPerGib float64 `pulumi:"maxIopsPerGib"`
	// Maximum storage size for a DB instance.
	MaxStorageSize int `pulumi:"maxStorageSize"`
	// Minimum total provisioned IOPS for a DB instance.
	MinIopsPerDbInstance int `pulumi:"minIopsPerDbInstance"`
	// Minimum provisioned IOPS per GiB for a DB instance.
	MinIopsPerGib float64 `pulumi:"minIopsPerGib"`
	// Minimum storage size for a DB instance.
	MinStorageSize int `pulumi:"minStorageSize"`
	// Whether a DB instance is Multi-AZ capable.
	MultiAzCapable bool `pulumi:"multiAzCapable"`
	// Whether a DB instance supports RDS on Outposts.
	OutpostCapable           bool     `pulumi:"outpostCapable"`
	PreferredEngineVersions  []string `pulumi:"preferredEngineVersions"`
	PreferredInstanceClasses []string `pulumi:"preferredInstanceClasses"`
	// Whether a DB instance can have a read replica.
	ReadReplicaCapable bool   `pulumi:"readReplicaCapable"`
	StorageType        string `pulumi:"storageType"`
	// A list of the supported DB engine modes.
	SupportedEngineModes []string `pulumi:"supportedEngineModes"`
	// The network types supported by the DB instance (`IPV4` or `DUAL`).
	SupportedNetworkTypes             []string `pulumi:"supportedNetworkTypes"`
	SupportsEnhancedMonitoring        bool     `pulumi:"supportsEnhancedMonitoring"`
	SupportsGlobalDatabases           bool     `pulumi:"supportsGlobalDatabases"`
	SupportsIamDatabaseAuthentication bool     `pulumi:"supportsIamDatabaseAuthentication"`
	SupportsIops                      bool     `pulumi:"supportsIops"`
	SupportsKerberosAuthentication    bool     `pulumi:"supportsKerberosAuthentication"`
	SupportsPerformanceInsights       bool     `pulumi:"supportsPerformanceInsights"`
	SupportsStorageAutoscaling        bool     `pulumi:"supportsStorageAutoscaling"`
	SupportsStorageEncryption         bool     `pulumi:"supportsStorageEncryption"`
	Vpc                               bool     `pulumi:"vpc"`
}

func GetOrderableDbInstanceOutput(ctx *pulumi.Context, args GetOrderableDbInstanceOutputArgs, opts ...pulumi.InvokeOption) GetOrderableDbInstanceResultOutput {
	outputResult := pulumix.ApplyErr[*GetOrderableDbInstanceArgs](args.ToOutput(), func(plainArgs *GetOrderableDbInstanceArgs) (*GetOrderableDbInstanceResult, error) {
		return GetOrderableDbInstance(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[GetOrderableDbInstanceResultOutput, *GetOrderableDbInstanceResult](outputResult)
}

// A collection of arguments for invoking getOrderableDbInstance.
type GetOrderableDbInstanceOutputArgs struct {
	// Availability zone group.
	AvailabilityZoneGroup pulumix.Input[*string] `pulumi:"availabilityZoneGroup"`
	// DB engine. Engine values include `aurora`, `aurora-mysql`, `aurora-postgresql`, `docdb`, `mariadb`, `mysql`, `neptune`, `oracle-ee`, `oracle-se`, `oracle-se1`, `oracle-se2`, `postgres`, `sqlserver-ee`, `sqlserver-ex`, `sqlserver-se`, and `sqlserver-web`.
	Engine pulumix.Input[string] `pulumi:"engine"`
	// Version of the DB engine. If none is provided, the AWS-defined default version will be used.
	EngineVersion pulumix.Input[*string] `pulumi:"engineVersion"`
	// DB instance class. Examples of classes are `db.m3.2xlarge`, `db.t2.small`, and `db.m3.medium`.
	InstanceClass pulumix.Input[*string] `pulumi:"instanceClass"`
	// License model. Examples of license models are `general-public-license`, `bring-your-own-license`, and `amazon-license`.
	LicenseModel pulumix.Input[*string] `pulumi:"licenseModel"`
	// Ordered list of preferred RDS DB instance engine versions. The first match in this list will be returned. If no preferred matches are found and the original search returned more than one result, an error is returned.
	PreferredEngineVersions pulumix.Input[[]string] `pulumi:"preferredEngineVersions"`
	// Ordered list of preferred RDS DB instance classes. The first match in this list will be returned. If no preferred matches are found and the original search returned more than one result, an error is returned.
	PreferredInstanceClasses pulumix.Input[[]string] `pulumi:"preferredInstanceClasses"`
	// Storage types. Examples of storage types are `standard`, `io1`, `gp2`, and `aurora`.
	StorageType pulumix.Input[*string] `pulumi:"storageType"`
	// Enable this to ensure a DB instance supports Enhanced Monitoring at intervals from 1 to 60 seconds.
	SupportsEnhancedMonitoring pulumix.Input[*bool] `pulumi:"supportsEnhancedMonitoring"`
	// Enable this to ensure a DB instance supports Aurora global databases with a specific combination of other DB engine attributes.
	SupportsGlobalDatabases pulumix.Input[*bool] `pulumi:"supportsGlobalDatabases"`
	// Enable this to ensure a DB instance supports IAM database authentication.
	SupportsIamDatabaseAuthentication pulumix.Input[*bool] `pulumi:"supportsIamDatabaseAuthentication"`
	// Enable this to ensure a DB instance supports provisioned IOPS.
	SupportsIops pulumix.Input[*bool] `pulumi:"supportsIops"`
	// Enable this to ensure a DB instance supports Kerberos Authentication.
	SupportsKerberosAuthentication pulumix.Input[*bool] `pulumi:"supportsKerberosAuthentication"`
	// Enable this to ensure a DB instance supports Performance Insights.
	SupportsPerformanceInsights pulumix.Input[*bool] `pulumi:"supportsPerformanceInsights"`
	// Enable this to ensure Amazon RDS can automatically scale storage for DB instances that use the specified DB instance class.
	SupportsStorageAutoscaling pulumix.Input[*bool] `pulumi:"supportsStorageAutoscaling"`
	// Enable this to ensure a DB instance supports encrypted storage.
	SupportsStorageEncryption pulumix.Input[*bool] `pulumi:"supportsStorageEncryption"`
	// Boolean that indicates whether to show only VPC or non-VPC offerings.
	Vpc pulumix.Input[*bool] `pulumi:"vpc"`
}

func (args GetOrderableDbInstanceOutputArgs) ToOutput() pulumix.Output[*GetOrderableDbInstanceArgs] {
	allArgs := pulumix.All(
		args.AvailabilityZoneGroup.ToOutput(context.Background()).AsAny(),
		args.Engine.ToOutput(context.Background()).AsAny(),
		args.EngineVersion.ToOutput(context.Background()).AsAny(),
		args.InstanceClass.ToOutput(context.Background()).AsAny(),
		args.LicenseModel.ToOutput(context.Background()).AsAny(),
		args.PreferredEngineVersions.ToOutput(context.Background()).AsAny(),
		args.PreferredInstanceClasses.ToOutput(context.Background()).AsAny(),
		args.StorageType.ToOutput(context.Background()).AsAny(),
		args.SupportsEnhancedMonitoring.ToOutput(context.Background()).AsAny(),
		args.SupportsGlobalDatabases.ToOutput(context.Background()).AsAny(),
		args.SupportsIamDatabaseAuthentication.ToOutput(context.Background()).AsAny(),
		args.SupportsIops.ToOutput(context.Background()).AsAny(),
		args.SupportsKerberosAuthentication.ToOutput(context.Background()).AsAny(),
		args.SupportsPerformanceInsights.ToOutput(context.Background()).AsAny(),
		args.SupportsStorageAutoscaling.ToOutput(context.Background()).AsAny(),
		args.SupportsStorageEncryption.ToOutput(context.Background()).AsAny(),
		args.Vpc.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *GetOrderableDbInstanceArgs {
		return &GetOrderableDbInstanceArgs{
			AvailabilityZoneGroup:             resolvedArgs[0].(*string),
			Engine:                            resolvedArgs[1].(string),
			EngineVersion:                     resolvedArgs[2].(*string),
			InstanceClass:                     resolvedArgs[3].(*string),
			LicenseModel:                      resolvedArgs[4].(*string),
			PreferredEngineVersions:           resolvedArgs[5].([]string),
			PreferredInstanceClasses:          resolvedArgs[6].([]string),
			StorageType:                       resolvedArgs[7].(*string),
			SupportsEnhancedMonitoring:        resolvedArgs[8].(*bool),
			SupportsGlobalDatabases:           resolvedArgs[9].(*bool),
			SupportsIamDatabaseAuthentication: resolvedArgs[10].(*bool),
			SupportsIops:                      resolvedArgs[11].(*bool),
			SupportsKerberosAuthentication:    resolvedArgs[12].(*bool),
			SupportsPerformanceInsights:       resolvedArgs[13].(*bool),
			SupportsStorageAutoscaling:        resolvedArgs[14].(*bool),
			SupportsStorageEncryption:         resolvedArgs[15].(*bool),
			Vpc:                               resolvedArgs[16].(*bool),
		}
	})
}

type GetOrderableDbInstanceResultOutput struct{ *pulumi.OutputState }

func (GetOrderableDbInstanceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrderableDbInstanceResult)(nil)).Elem()
}

func (o GetOrderableDbInstanceResultOutput) ToOutput(context.Context) pulumix.Output[*GetOrderableDbInstanceResult] {
	return pulumix.Output[*GetOrderableDbInstanceResult]{
		OutputState: o.OutputState,
	}
}

func (o GetOrderableDbInstanceResultOutput) AvailabilityZoneGroup() pulumix.Output[string] {
	return pulumix.Apply[*GetOrderableDbInstanceResult](o, func(v *GetOrderableDbInstanceResult) string { return v.AvailabilityZoneGroup })
}

func (o GetOrderableDbInstanceResultOutput) AvailabilityZones() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[*GetOrderableDbInstanceResult](o, func(v *GetOrderableDbInstanceResult) []string { return v.AvailabilityZones })
	return pulumix.ArrayOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o GetOrderableDbInstanceResultOutput) Engine() pulumix.Output[string] {
	return pulumix.Apply[*GetOrderableDbInstanceResult](o, func(v *GetOrderableDbInstanceResult) string { return v.Engine })
}

func (o GetOrderableDbInstanceResultOutput) EngineVersion() pulumix.Output[string] {
	return pulumix.Apply[*GetOrderableDbInstanceResult](o, func(v *GetOrderableDbInstanceResult) string { return v.EngineVersion })
}

func (o GetOrderableDbInstanceResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*GetOrderableDbInstanceResult](o, func(v *GetOrderableDbInstanceResult) string { return v.Id })
}

func (o GetOrderableDbInstanceResultOutput) InstanceClass() pulumix.Output[string] {
	return pulumix.Apply[*GetOrderableDbInstanceResult](o, func(v *GetOrderableDbInstanceResult) string { return v.InstanceClass })
}

func (o GetOrderableDbInstanceResultOutput) LicenseModel() pulumix.Output[string] {
	return pulumix.Apply[*GetOrderableDbInstanceResult](o, func(v *GetOrderableDbInstanceResult) string { return v.LicenseModel })
}

func (o GetOrderableDbInstanceResultOutput) MaxIopsPerDbInstance() pulumix.Output[int] {
	return pulumix.Apply[*GetOrderableDbInstanceResult](o, func(v *GetOrderableDbInstanceResult) int { return v.MaxIopsPerDbInstance })
}

func (o GetOrderableDbInstanceResultOutput) MaxIopsPerGib() pulumix.Output[float64] {
	return pulumix.Apply[*GetOrderableDbInstanceResult](o, func(v *GetOrderableDbInstanceResult) float64 { return v.MaxIopsPerGib })
}

func (o GetOrderableDbInstanceResultOutput) MaxStorageSize() pulumix.Output[int] {
	return pulumix.Apply[*GetOrderableDbInstanceResult](o, func(v *GetOrderableDbInstanceResult) int { return v.MaxStorageSize })
}

func (o GetOrderableDbInstanceResultOutput) MinIopsPerDbInstance() pulumix.Output[int] {
	return pulumix.Apply[*GetOrderableDbInstanceResult](o, func(v *GetOrderableDbInstanceResult) int { return v.MinIopsPerDbInstance })
}

func (o GetOrderableDbInstanceResultOutput) MinIopsPerGib() pulumix.Output[float64] {
	return pulumix.Apply[*GetOrderableDbInstanceResult](o, func(v *GetOrderableDbInstanceResult) float64 { return v.MinIopsPerGib })
}

func (o GetOrderableDbInstanceResultOutput) MinStorageSize() pulumix.Output[int] {
	return pulumix.Apply[*GetOrderableDbInstanceResult](o, func(v *GetOrderableDbInstanceResult) int { return v.MinStorageSize })
}

func (o GetOrderableDbInstanceResultOutput) MultiAzCapable() pulumix.Output[bool] {
	return pulumix.Apply[*GetOrderableDbInstanceResult](o, func(v *GetOrderableDbInstanceResult) bool { return v.MultiAzCapable })
}

func (o GetOrderableDbInstanceResultOutput) OutpostCapable() pulumix.Output[bool] {
	return pulumix.Apply[*GetOrderableDbInstanceResult](o, func(v *GetOrderableDbInstanceResult) bool { return v.OutpostCapable })
}

func (o GetOrderableDbInstanceResultOutput) PreferredEngineVersions() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[*GetOrderableDbInstanceResult](o, func(v *GetOrderableDbInstanceResult) []string { return v.PreferredEngineVersions })
	return pulumix.ArrayOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o GetOrderableDbInstanceResultOutput) PreferredInstanceClasses() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[*GetOrderableDbInstanceResult](o, func(v *GetOrderableDbInstanceResult) []string { return v.PreferredInstanceClasses })
	return pulumix.ArrayOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o GetOrderableDbInstanceResultOutput) ReadReplicaCapable() pulumix.Output[bool] {
	return pulumix.Apply[*GetOrderableDbInstanceResult](o, func(v *GetOrderableDbInstanceResult) bool { return v.ReadReplicaCapable })
}

func (o GetOrderableDbInstanceResultOutput) StorageType() pulumix.Output[string] {
	return pulumix.Apply[*GetOrderableDbInstanceResult](o, func(v *GetOrderableDbInstanceResult) string { return v.StorageType })
}

func (o GetOrderableDbInstanceResultOutput) SupportedEngineModes() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[*GetOrderableDbInstanceResult](o, func(v *GetOrderableDbInstanceResult) []string { return v.SupportedEngineModes })
	return pulumix.ArrayOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o GetOrderableDbInstanceResultOutput) SupportedNetworkTypes() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[*GetOrderableDbInstanceResult](o, func(v *GetOrderableDbInstanceResult) []string { return v.SupportedNetworkTypes })
	return pulumix.ArrayOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o GetOrderableDbInstanceResultOutput) SupportsEnhancedMonitoring() pulumix.Output[bool] {
	return pulumix.Apply[*GetOrderableDbInstanceResult](o, func(v *GetOrderableDbInstanceResult) bool { return v.SupportsEnhancedMonitoring })
}

func (o GetOrderableDbInstanceResultOutput) SupportsGlobalDatabases() pulumix.Output[bool] {
	return pulumix.Apply[*GetOrderableDbInstanceResult](o, func(v *GetOrderableDbInstanceResult) bool { return v.SupportsGlobalDatabases })
}

func (o GetOrderableDbInstanceResultOutput) SupportsIamDatabaseAuthentication() pulumix.Output[bool] {
	return pulumix.Apply[*GetOrderableDbInstanceResult](o, func(v *GetOrderableDbInstanceResult) bool { return v.SupportsIamDatabaseAuthentication })
}

func (o GetOrderableDbInstanceResultOutput) SupportsIops() pulumix.Output[bool] {
	return pulumix.Apply[*GetOrderableDbInstanceResult](o, func(v *GetOrderableDbInstanceResult) bool { return v.SupportsIops })
}

func (o GetOrderableDbInstanceResultOutput) SupportsKerberosAuthentication() pulumix.Output[bool] {
	return pulumix.Apply[*GetOrderableDbInstanceResult](o, func(v *GetOrderableDbInstanceResult) bool { return v.SupportsKerberosAuthentication })
}

func (o GetOrderableDbInstanceResultOutput) SupportsPerformanceInsights() pulumix.Output[bool] {
	return pulumix.Apply[*GetOrderableDbInstanceResult](o, func(v *GetOrderableDbInstanceResult) bool { return v.SupportsPerformanceInsights })
}

func (o GetOrderableDbInstanceResultOutput) SupportsStorageAutoscaling() pulumix.Output[bool] {
	return pulumix.Apply[*GetOrderableDbInstanceResult](o, func(v *GetOrderableDbInstanceResult) bool { return v.SupportsStorageAutoscaling })
}

func (o GetOrderableDbInstanceResultOutput) SupportsStorageEncryption() pulumix.Output[bool] {
	return pulumix.Apply[*GetOrderableDbInstanceResult](o, func(v *GetOrderableDbInstanceResult) bool { return v.SupportsStorageEncryption })
}

func (o GetOrderableDbInstanceResultOutput) Vpc() pulumix.Output[bool] {
	return pulumix.Apply[*GetOrderableDbInstanceResult](o, func(v *GetOrderableDbInstanceResult) bool { return v.Vpc })
}
