// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package wafv2

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type WebAcl struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) of the IP Set that this statement references.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// Specifies custom configurations for the associations between the web ACL and protected resources. See `associationConfig` below for details.
	AssociationConfig pulumix.GPtrOutput[WebAclAssociationConfig, WebAclAssociationConfigOutput] `pulumi:"associationConfig"`
	// Web ACL capacity units (WCUs) currently being used by this web ACL.
	Capacity pulumix.Output[int] `pulumi:"capacity"`
	// Specifies how AWS WAF should handle CAPTCHA evaluations. See `captchaConfig` below for details.
	CaptchaConfig pulumix.GPtrOutput[WebAclCaptchaConfig, WebAclCaptchaConfigOutput] `pulumi:"captchaConfig"`
	// Defines custom response bodies that can be referenced by `customResponse` actions. See `customResponseBody` below for details.
	CustomResponseBodies pulumix.GArrayOutput[WebAclCustomResponseBody, WebAclCustomResponseBodyOutput] `pulumi:"customResponseBodies"`
	// Action to perform if none of the `rules` contained in the WebACL match. See `defaultAction` below for details.
	DefaultAction pulumix.GPtrOutput[WebAclDefaultAction, WebAclDefaultActionOutput] `pulumi:"defaultAction"`
	// Friendly description of the WebACL.
	Description pulumix.Output[*string] `pulumi:"description"`
	LockToken   pulumix.Output[string]  `pulumi:"lockToken"`
	// Friendly name of the WebACL.
	Name pulumix.Output[string] `pulumi:"name"`
	// Rule blocks used to identify the web requests that you want to `allow`, `block`, or `count`. See `rule` below for details.
	Rules pulumix.GArrayOutput[WebAclRule, WebAclRuleOutput] `pulumi:"rules"`
	// Specifies whether this is for an AWS CloudFront distribution or for a regional application. Valid values are `CLOUDFRONT` or `REGIONAL`. To work with CloudFront, you must also specify the region `us-east-1` (N. Virginia) on the AWS provider.
	Scope pulumix.Output[string] `pulumi:"scope"`
	// Map of key-value pairs to associate with the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// Specifies the domains that AWS WAF should accept in a web request token. This enables the use of tokens across multiple protected websites. When AWS WAF provides a token, it uses the domain of the AWS resource that the web ACL is protecting. If you don't specify a list of token domains, AWS WAF accepts tokens only for the domain of the protected resource. With a token domain list, AWS WAF accepts the resource's host domain plus all domains in the token domain list, including their prefixed subdomains.
	TokenDomains pulumix.ArrayOutput[string] `pulumi:"tokenDomains"`
	// Defines and enables Amazon CloudWatch metrics and web request sample collection. See `visibilityConfig` below for details.
	VisibilityConfig pulumix.GPtrOutput[WebAclVisibilityConfig, WebAclVisibilityConfigOutput] `pulumi:"visibilityConfig"`
}

// NewWebAcl registers a new resource with the given unique name, arguments, and options.
func NewWebAcl(ctx *pulumi.Context,
	name string, args *WebAclArgs, opts ...pulumi.ResourceOption) (*WebAcl, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DefaultAction == nil {
		return nil, errors.New("invalid value for required argument 'DefaultAction'")
	}
	if args.Scope == nil {
		return nil, errors.New("invalid value for required argument 'Scope'")
	}
	if args.VisibilityConfig == nil {
		return nil, errors.New("invalid value for required argument 'VisibilityConfig'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WebAcl
	err := ctx.RegisterResource("aws:wafv2/webAcl:WebAcl", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWebAcl gets an existing WebAcl resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWebAcl(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WebAclState, opts ...pulumi.ResourceOption) (*WebAcl, error) {
	var resource WebAcl
	err := ctx.ReadResource("aws:wafv2/webAcl:WebAcl", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WebAcl resources.
type webAclState struct {
	// The Amazon Resource Name (ARN) of the IP Set that this statement references.
	Arn *string `pulumi:"arn"`
	// Specifies custom configurations for the associations between the web ACL and protected resources. See `associationConfig` below for details.
	AssociationConfig *WebAclAssociationConfig `pulumi:"associationConfig"`
	// Web ACL capacity units (WCUs) currently being used by this web ACL.
	Capacity *int `pulumi:"capacity"`
	// Specifies how AWS WAF should handle CAPTCHA evaluations. See `captchaConfig` below for details.
	CaptchaConfig *WebAclCaptchaConfig `pulumi:"captchaConfig"`
	// Defines custom response bodies that can be referenced by `customResponse` actions. See `customResponseBody` below for details.
	CustomResponseBodies []WebAclCustomResponseBody `pulumi:"customResponseBodies"`
	// Action to perform if none of the `rules` contained in the WebACL match. See `defaultAction` below for details.
	DefaultAction *WebAclDefaultAction `pulumi:"defaultAction"`
	// Friendly description of the WebACL.
	Description *string `pulumi:"description"`
	LockToken   *string `pulumi:"lockToken"`
	// Friendly name of the WebACL.
	Name *string `pulumi:"name"`
	// Rule blocks used to identify the web requests that you want to `allow`, `block`, or `count`. See `rule` below for details.
	Rules []WebAclRule `pulumi:"rules"`
	// Specifies whether this is for an AWS CloudFront distribution or for a regional application. Valid values are `CLOUDFRONT` or `REGIONAL`. To work with CloudFront, you must also specify the region `us-east-1` (N. Virginia) on the AWS provider.
	Scope *string `pulumi:"scope"`
	// Map of key-value pairs to associate with the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// Specifies the domains that AWS WAF should accept in a web request token. This enables the use of tokens across multiple protected websites. When AWS WAF provides a token, it uses the domain of the AWS resource that the web ACL is protecting. If you don't specify a list of token domains, AWS WAF accepts tokens only for the domain of the protected resource. With a token domain list, AWS WAF accepts the resource's host domain plus all domains in the token domain list, including their prefixed subdomains.
	TokenDomains []string `pulumi:"tokenDomains"`
	// Defines and enables Amazon CloudWatch metrics and web request sample collection. See `visibilityConfig` below for details.
	VisibilityConfig *WebAclVisibilityConfig `pulumi:"visibilityConfig"`
}

type WebAclState struct {
	// The Amazon Resource Name (ARN) of the IP Set that this statement references.
	Arn pulumix.Input[*string]
	// Specifies custom configurations for the associations between the web ACL and protected resources. See `associationConfig` below for details.
	AssociationConfig pulumix.Input[*WebAclAssociationConfigArgs]
	// Web ACL capacity units (WCUs) currently being used by this web ACL.
	Capacity pulumix.Input[*int]
	// Specifies how AWS WAF should handle CAPTCHA evaluations. See `captchaConfig` below for details.
	CaptchaConfig pulumix.Input[*WebAclCaptchaConfigArgs]
	// Defines custom response bodies that can be referenced by `customResponse` actions. See `customResponseBody` below for details.
	CustomResponseBodies pulumix.Input[[]*WebAclCustomResponseBodyArgs]
	// Action to perform if none of the `rules` contained in the WebACL match. See `defaultAction` below for details.
	DefaultAction pulumix.Input[*WebAclDefaultActionArgs]
	// Friendly description of the WebACL.
	Description pulumix.Input[*string]
	LockToken   pulumix.Input[*string]
	// Friendly name of the WebACL.
	Name pulumix.Input[*string]
	// Rule blocks used to identify the web requests that you want to `allow`, `block`, or `count`. See `rule` below for details.
	Rules pulumix.Input[[]*WebAclRuleArgs]
	// Specifies whether this is for an AWS CloudFront distribution or for a regional application. Valid values are `CLOUDFRONT` or `REGIONAL`. To work with CloudFront, you must also specify the region `us-east-1` (N. Virginia) on the AWS provider.
	Scope pulumix.Input[*string]
	// Map of key-value pairs to associate with the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// Specifies the domains that AWS WAF should accept in a web request token. This enables the use of tokens across multiple protected websites. When AWS WAF provides a token, it uses the domain of the AWS resource that the web ACL is protecting. If you don't specify a list of token domains, AWS WAF accepts tokens only for the domain of the protected resource. With a token domain list, AWS WAF accepts the resource's host domain plus all domains in the token domain list, including their prefixed subdomains.
	TokenDomains pulumix.Input[[]string]
	// Defines and enables Amazon CloudWatch metrics and web request sample collection. See `visibilityConfig` below for details.
	VisibilityConfig pulumix.Input[*WebAclVisibilityConfigArgs]
}

func (WebAclState) ElementType() reflect.Type {
	return reflect.TypeOf((*webAclState)(nil)).Elem()
}

type webAclArgs struct {
	// Specifies custom configurations for the associations between the web ACL and protected resources. See `associationConfig` below for details.
	AssociationConfig *WebAclAssociationConfig `pulumi:"associationConfig"`
	// Specifies how AWS WAF should handle CAPTCHA evaluations. See `captchaConfig` below for details.
	CaptchaConfig *WebAclCaptchaConfig `pulumi:"captchaConfig"`
	// Defines custom response bodies that can be referenced by `customResponse` actions. See `customResponseBody` below for details.
	CustomResponseBodies []WebAclCustomResponseBody `pulumi:"customResponseBodies"`
	// Action to perform if none of the `rules` contained in the WebACL match. See `defaultAction` below for details.
	DefaultAction WebAclDefaultAction `pulumi:"defaultAction"`
	// Friendly description of the WebACL.
	Description *string `pulumi:"description"`
	// Friendly name of the WebACL.
	Name *string `pulumi:"name"`
	// Rule blocks used to identify the web requests that you want to `allow`, `block`, or `count`. See `rule` below for details.
	Rules []WebAclRule `pulumi:"rules"`
	// Specifies whether this is for an AWS CloudFront distribution or for a regional application. Valid values are `CLOUDFRONT` or `REGIONAL`. To work with CloudFront, you must also specify the region `us-east-1` (N. Virginia) on the AWS provider.
	Scope string `pulumi:"scope"`
	// Map of key-value pairs to associate with the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Specifies the domains that AWS WAF should accept in a web request token. This enables the use of tokens across multiple protected websites. When AWS WAF provides a token, it uses the domain of the AWS resource that the web ACL is protecting. If you don't specify a list of token domains, AWS WAF accepts tokens only for the domain of the protected resource. With a token domain list, AWS WAF accepts the resource's host domain plus all domains in the token domain list, including their prefixed subdomains.
	TokenDomains []string `pulumi:"tokenDomains"`
	// Defines and enables Amazon CloudWatch metrics and web request sample collection. See `visibilityConfig` below for details.
	VisibilityConfig WebAclVisibilityConfig `pulumi:"visibilityConfig"`
}

// The set of arguments for constructing a WebAcl resource.
type WebAclArgs struct {
	// Specifies custom configurations for the associations between the web ACL and protected resources. See `associationConfig` below for details.
	AssociationConfig pulumix.Input[*WebAclAssociationConfigArgs]
	// Specifies how AWS WAF should handle CAPTCHA evaluations. See `captchaConfig` below for details.
	CaptchaConfig pulumix.Input[*WebAclCaptchaConfigArgs]
	// Defines custom response bodies that can be referenced by `customResponse` actions. See `customResponseBody` below for details.
	CustomResponseBodies pulumix.Input[[]*WebAclCustomResponseBodyArgs]
	// Action to perform if none of the `rules` contained in the WebACL match. See `defaultAction` below for details.
	DefaultAction pulumix.Input[*WebAclDefaultActionArgs]
	// Friendly description of the WebACL.
	Description pulumix.Input[*string]
	// Friendly name of the WebACL.
	Name pulumix.Input[*string]
	// Rule blocks used to identify the web requests that you want to `allow`, `block`, or `count`. See `rule` below for details.
	Rules pulumix.Input[[]*WebAclRuleArgs]
	// Specifies whether this is for an AWS CloudFront distribution or for a regional application. Valid values are `CLOUDFRONT` or `REGIONAL`. To work with CloudFront, you must also specify the region `us-east-1` (N. Virginia) on the AWS provider.
	Scope pulumix.Input[string]
	// Map of key-value pairs to associate with the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// Specifies the domains that AWS WAF should accept in a web request token. This enables the use of tokens across multiple protected websites. When AWS WAF provides a token, it uses the domain of the AWS resource that the web ACL is protecting. If you don't specify a list of token domains, AWS WAF accepts tokens only for the domain of the protected resource. With a token domain list, AWS WAF accepts the resource's host domain plus all domains in the token domain list, including their prefixed subdomains.
	TokenDomains pulumix.Input[[]string]
	// Defines and enables Amazon CloudWatch metrics and web request sample collection. See `visibilityConfig` below for details.
	VisibilityConfig pulumix.Input[*WebAclVisibilityConfigArgs]
}

func (WebAclArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*webAclArgs)(nil)).Elem()
}

type WebAclOutput struct{ *pulumi.OutputState }

func (WebAclOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAcl)(nil)).Elem()
}

func (o WebAclOutput) ToWebAclOutput() WebAclOutput {
	return o
}

func (o WebAclOutput) ToWebAclOutputWithContext(ctx context.Context) WebAclOutput {
	return o
}

func (o WebAclOutput) ToOutput(ctx context.Context) pulumix.Output[WebAcl] {
	return pulumix.Output[WebAcl]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) of the IP Set that this statement references.
func (o WebAclOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[WebAcl](o, func(v WebAcl) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Specifies custom configurations for the associations between the web ACL and protected resources. See `associationConfig` below for details.
func (o WebAclOutput) AssociationConfig() pulumix.GPtrOutput[WebAclAssociationConfig, WebAclAssociationConfigOutput] {
	value := pulumix.Apply[WebAcl](o, func(v WebAcl) pulumix.GPtrOutput[WebAclAssociationConfig, WebAclAssociationConfigOutput] {
		return v.AssociationConfig
	})
	unwrapped := pulumix.Flatten[*WebAclAssociationConfig, pulumix.GPtrOutput[WebAclAssociationConfig, WebAclAssociationConfigOutput]](value)
	return pulumix.GPtrOutput[WebAclAssociationConfig, WebAclAssociationConfigOutput]{OutputState: unwrapped.OutputState}
}

// Web ACL capacity units (WCUs) currently being used by this web ACL.
func (o WebAclOutput) Capacity() pulumix.Output[int] {
	value := pulumix.Apply[WebAcl](o, func(v WebAcl) pulumix.Output[int] { return v.Capacity })
	return pulumix.Flatten[int, pulumix.Output[int]](value)
}

// Specifies how AWS WAF should handle CAPTCHA evaluations. See `captchaConfig` below for details.
func (o WebAclOutput) CaptchaConfig() pulumix.GPtrOutput[WebAclCaptchaConfig, WebAclCaptchaConfigOutput] {
	value := pulumix.Apply[WebAcl](o, func(v WebAcl) pulumix.GPtrOutput[WebAclCaptchaConfig, WebAclCaptchaConfigOutput] {
		return v.CaptchaConfig
	})
	unwrapped := pulumix.Flatten[*WebAclCaptchaConfig, pulumix.GPtrOutput[WebAclCaptchaConfig, WebAclCaptchaConfigOutput]](value)
	return pulumix.GPtrOutput[WebAclCaptchaConfig, WebAclCaptchaConfigOutput]{OutputState: unwrapped.OutputState}
}

// Defines custom response bodies that can be referenced by `customResponse` actions. See `customResponseBody` below for details.
func (o WebAclOutput) CustomResponseBodies() pulumix.GArrayOutput[WebAclCustomResponseBody, WebAclCustomResponseBodyOutput] {
	value := pulumix.Apply[WebAcl](o, func(v WebAcl) pulumix.GArrayOutput[WebAclCustomResponseBody, WebAclCustomResponseBodyOutput] {
		return v.CustomResponseBodies
	})
	unwrapped := pulumix.Flatten[[]WebAclCustomResponseBody, pulumix.GArrayOutput[WebAclCustomResponseBody, WebAclCustomResponseBodyOutput]](value)
	return pulumix.GArrayOutput[WebAclCustomResponseBody, WebAclCustomResponseBodyOutput]{OutputState: unwrapped.OutputState}
}

// Action to perform if none of the `rules` contained in the WebACL match. See `defaultAction` below for details.
func (o WebAclOutput) DefaultAction() pulumix.GPtrOutput[WebAclDefaultAction, WebAclDefaultActionOutput] {
	value := pulumix.Apply[WebAcl](o, func(v WebAcl) pulumix.GPtrOutput[WebAclDefaultAction, WebAclDefaultActionOutput] {
		return v.DefaultAction
	})
	unwrapped := pulumix.Flatten[*WebAclDefaultAction, pulumix.GPtrOutput[WebAclDefaultAction, WebAclDefaultActionOutput]](value)
	return pulumix.GPtrOutput[WebAclDefaultAction, WebAclDefaultActionOutput]{OutputState: unwrapped.OutputState}
}

// Friendly description of the WebACL.
func (o WebAclOutput) Description() pulumix.Output[*string] {
	value := pulumix.Apply[WebAcl](o, func(v WebAcl) pulumix.Output[*string] { return v.Description })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

func (o WebAclOutput) LockToken() pulumix.Output[string] {
	value := pulumix.Apply[WebAcl](o, func(v WebAcl) pulumix.Output[string] { return v.LockToken })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Friendly name of the WebACL.
func (o WebAclOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[WebAcl](o, func(v WebAcl) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Rule blocks used to identify the web requests that you want to `allow`, `block`, or `count`. See `rule` below for details.
func (o WebAclOutput) Rules() pulumix.GArrayOutput[WebAclRule, WebAclRuleOutput] {
	value := pulumix.Apply[WebAcl](o, func(v WebAcl) pulumix.GArrayOutput[WebAclRule, WebAclRuleOutput] { return v.Rules })
	unwrapped := pulumix.Flatten[[]WebAclRule, pulumix.GArrayOutput[WebAclRule, WebAclRuleOutput]](value)
	return pulumix.GArrayOutput[WebAclRule, WebAclRuleOutput]{OutputState: unwrapped.OutputState}
}

// Specifies whether this is for an AWS CloudFront distribution or for a regional application. Valid values are `CLOUDFRONT` or `REGIONAL`. To work with CloudFront, you must also specify the region `us-east-1` (N. Virginia) on the AWS provider.
func (o WebAclOutput) Scope() pulumix.Output[string] {
	value := pulumix.Apply[WebAcl](o, func(v WebAcl) pulumix.Output[string] { return v.Scope })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Map of key-value pairs to associate with the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o WebAclOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[WebAcl](o, func(v WebAcl) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o WebAclOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[WebAcl](o, func(v WebAcl) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Specifies the domains that AWS WAF should accept in a web request token. This enables the use of tokens across multiple protected websites. When AWS WAF provides a token, it uses the domain of the AWS resource that the web ACL is protecting. If you don't specify a list of token domains, AWS WAF accepts tokens only for the domain of the protected resource. With a token domain list, AWS WAF accepts the resource's host domain plus all domains in the token domain list, including their prefixed subdomains.
func (o WebAclOutput) TokenDomains() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[WebAcl](o, func(v WebAcl) pulumix.ArrayOutput[string] { return v.TokenDomains })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// Defines and enables Amazon CloudWatch metrics and web request sample collection. See `visibilityConfig` below for details.
func (o WebAclOutput) VisibilityConfig() pulumix.GPtrOutput[WebAclVisibilityConfig, WebAclVisibilityConfigOutput] {
	value := pulumix.Apply[WebAcl](o, func(v WebAcl) pulumix.GPtrOutput[WebAclVisibilityConfig, WebAclVisibilityConfigOutput] {
		return v.VisibilityConfig
	})
	unwrapped := pulumix.Flatten[*WebAclVisibilityConfig, pulumix.GPtrOutput[WebAclVisibilityConfig, WebAclVisibilityConfigOutput]](value)
	return pulumix.GPtrOutput[WebAclVisibilityConfig, WebAclVisibilityConfigOutput]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(WebAclOutput{})
}
