// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package opsworks

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an OpsWorks stack resource.
type Stack struct {
	pulumi.CustomResourceState

	// If set to `"LATEST"`, OpsWorks will automatically install the latest version.
	AgentVersion pulumix.Output[string] `pulumi:"agentVersion"`
	Arn          pulumix.Output[string] `pulumi:"arn"`
	// If `manageBerkshelf` is enabled, the version of Berkshelf to use.
	BerkshelfVersion pulumix.Output[*string] `pulumi:"berkshelfVersion"`
	// Color to paint next to the stack's resources in the OpsWorks console.
	Color pulumix.Output[*string] `pulumi:"color"`
	// Name of the configuration manager to use. Defaults to "Chef".
	ConfigurationManagerName pulumix.Output[*string] `pulumi:"configurationManagerName"`
	// Version of the configuration manager to use. Defaults to "11.4".
	ConfigurationManagerVersion pulumix.Output[*string] `pulumi:"configurationManagerVersion"`
	// When `useCustomCookbooks` is set, provide this sub-object as described below.
	CustomCookbooksSources pulumix.GArrayOutput[StackCustomCookbooksSource, StackCustomCookbooksSourceOutput] `pulumi:"customCookbooksSources"`
	// Custom JSON attributes to apply to the entire stack.
	CustomJson pulumix.Output[*string] `pulumi:"customJson"`
	// Name of the availability zone where instances will be created by default.
	// Cannot be set when `vpcId` is set.
	DefaultAvailabilityZone pulumix.Output[string] `pulumi:"defaultAvailabilityZone"`
	// The ARN of an IAM Instance Profile that created instances will have by default.
	DefaultInstanceProfileArn pulumix.Output[string] `pulumi:"defaultInstanceProfileArn"`
	// Name of OS that will be installed on instances by default.
	DefaultOs pulumix.Output[*string] `pulumi:"defaultOs"`
	// Name of the type of root device instances will have by default.
	DefaultRootDeviceType pulumix.Output[*string] `pulumi:"defaultRootDeviceType"`
	// Name of the SSH keypair that instances will have by default.
	DefaultSshKeyName pulumix.Output[*string] `pulumi:"defaultSshKeyName"`
	// ID of the subnet in which instances will be created by default.
	// Required if `vpcId` is set to a VPC other than the default VPC, and forbidden if it isn't.
	DefaultSubnetId pulumix.Output[string] `pulumi:"defaultSubnetId"`
	// Keyword representing the naming scheme that will be used for instance hostnames within this stack.
	HostnameTheme pulumix.Output[*string] `pulumi:"hostnameTheme"`
	// Boolean value controlling whether Opsworks will run Berkshelf for this stack.
	ManageBerkshelf pulumix.Output[*bool] `pulumi:"manageBerkshelf"`
	// The name of the stack.
	Name pulumix.Output[string] `pulumi:"name"`
	// The name of the region where the stack will exist.
	Region pulumix.Output[string] `pulumi:"region"`
	// The ARN of an IAM role that the OpsWorks service will act as.
	ServiceRoleArn pulumix.Output[string] `pulumi:"serviceRoleArn"`
	StackEndpoint  pulumix.Output[string] `pulumi:"stackEndpoint"`
	// A map of tags to assign to the resource.
	// If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// Boolean value controlling whether the custom cookbook settings are enabled.
	UseCustomCookbooks pulumix.Output[*bool] `pulumi:"useCustomCookbooks"`
	// Boolean value controlling whether the standard OpsWorks security groups apply to created instances.
	UseOpsworksSecurityGroups pulumix.Output[*bool] `pulumi:"useOpsworksSecurityGroups"`
	// ID of the VPC that this stack belongs to.
	// Defaults to the region's default VPC.
	VpcId pulumix.Output[string] `pulumi:"vpcId"`
}

// NewStack registers a new resource with the given unique name, arguments, and options.
func NewStack(ctx *pulumi.Context,
	name string, args *StackArgs, opts ...pulumi.ResourceOption) (*Stack, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DefaultInstanceProfileArn == nil {
		return nil, errors.New("invalid value for required argument 'DefaultInstanceProfileArn'")
	}
	if args.Region == nil {
		return nil, errors.New("invalid value for required argument 'Region'")
	}
	if args.ServiceRoleArn == nil {
		return nil, errors.New("invalid value for required argument 'ServiceRoleArn'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Stack
	err := ctx.RegisterResource("aws:opsworks/stack:Stack", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStack gets an existing Stack resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStack(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *StackState, opts ...pulumi.ResourceOption) (*Stack, error) {
	var resource Stack
	err := ctx.ReadResource("aws:opsworks/stack:Stack", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Stack resources.
type stackState struct {
	// If set to `"LATEST"`, OpsWorks will automatically install the latest version.
	AgentVersion *string `pulumi:"agentVersion"`
	Arn          *string `pulumi:"arn"`
	// If `manageBerkshelf` is enabled, the version of Berkshelf to use.
	BerkshelfVersion *string `pulumi:"berkshelfVersion"`
	// Color to paint next to the stack's resources in the OpsWorks console.
	Color *string `pulumi:"color"`
	// Name of the configuration manager to use. Defaults to "Chef".
	ConfigurationManagerName *string `pulumi:"configurationManagerName"`
	// Version of the configuration manager to use. Defaults to "11.4".
	ConfigurationManagerVersion *string `pulumi:"configurationManagerVersion"`
	// When `useCustomCookbooks` is set, provide this sub-object as described below.
	CustomCookbooksSources []StackCustomCookbooksSource `pulumi:"customCookbooksSources"`
	// Custom JSON attributes to apply to the entire stack.
	CustomJson *string `pulumi:"customJson"`
	// Name of the availability zone where instances will be created by default.
	// Cannot be set when `vpcId` is set.
	DefaultAvailabilityZone *string `pulumi:"defaultAvailabilityZone"`
	// The ARN of an IAM Instance Profile that created instances will have by default.
	DefaultInstanceProfileArn *string `pulumi:"defaultInstanceProfileArn"`
	// Name of OS that will be installed on instances by default.
	DefaultOs *string `pulumi:"defaultOs"`
	// Name of the type of root device instances will have by default.
	DefaultRootDeviceType *string `pulumi:"defaultRootDeviceType"`
	// Name of the SSH keypair that instances will have by default.
	DefaultSshKeyName *string `pulumi:"defaultSshKeyName"`
	// ID of the subnet in which instances will be created by default.
	// Required if `vpcId` is set to a VPC other than the default VPC, and forbidden if it isn't.
	DefaultSubnetId *string `pulumi:"defaultSubnetId"`
	// Keyword representing the naming scheme that will be used for instance hostnames within this stack.
	HostnameTheme *string `pulumi:"hostnameTheme"`
	// Boolean value controlling whether Opsworks will run Berkshelf for this stack.
	ManageBerkshelf *bool `pulumi:"manageBerkshelf"`
	// The name of the stack.
	Name *string `pulumi:"name"`
	// The name of the region where the stack will exist.
	Region *string `pulumi:"region"`
	// The ARN of an IAM role that the OpsWorks service will act as.
	ServiceRoleArn *string `pulumi:"serviceRoleArn"`
	StackEndpoint  *string `pulumi:"stackEndpoint"`
	// A map of tags to assign to the resource.
	// If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// Boolean value controlling whether the custom cookbook settings are enabled.
	UseCustomCookbooks *bool `pulumi:"useCustomCookbooks"`
	// Boolean value controlling whether the standard OpsWorks security groups apply to created instances.
	UseOpsworksSecurityGroups *bool `pulumi:"useOpsworksSecurityGroups"`
	// ID of the VPC that this stack belongs to.
	// Defaults to the region's default VPC.
	VpcId *string `pulumi:"vpcId"`
}

type StackState struct {
	// If set to `"LATEST"`, OpsWorks will automatically install the latest version.
	AgentVersion pulumix.Input[*string]
	Arn          pulumix.Input[*string]
	// If `manageBerkshelf` is enabled, the version of Berkshelf to use.
	BerkshelfVersion pulumix.Input[*string]
	// Color to paint next to the stack's resources in the OpsWorks console.
	Color pulumix.Input[*string]
	// Name of the configuration manager to use. Defaults to "Chef".
	ConfigurationManagerName pulumix.Input[*string]
	// Version of the configuration manager to use. Defaults to "11.4".
	ConfigurationManagerVersion pulumix.Input[*string]
	// When `useCustomCookbooks` is set, provide this sub-object as described below.
	CustomCookbooksSources pulumix.Input[[]*StackCustomCookbooksSourceArgs]
	// Custom JSON attributes to apply to the entire stack.
	CustomJson pulumix.Input[*string]
	// Name of the availability zone where instances will be created by default.
	// Cannot be set when `vpcId` is set.
	DefaultAvailabilityZone pulumix.Input[*string]
	// The ARN of an IAM Instance Profile that created instances will have by default.
	DefaultInstanceProfileArn pulumix.Input[*string]
	// Name of OS that will be installed on instances by default.
	DefaultOs pulumix.Input[*string]
	// Name of the type of root device instances will have by default.
	DefaultRootDeviceType pulumix.Input[*string]
	// Name of the SSH keypair that instances will have by default.
	DefaultSshKeyName pulumix.Input[*string]
	// ID of the subnet in which instances will be created by default.
	// Required if `vpcId` is set to a VPC other than the default VPC, and forbidden if it isn't.
	DefaultSubnetId pulumix.Input[*string]
	// Keyword representing the naming scheme that will be used for instance hostnames within this stack.
	HostnameTheme pulumix.Input[*string]
	// Boolean value controlling whether Opsworks will run Berkshelf for this stack.
	ManageBerkshelf pulumix.Input[*bool]
	// The name of the stack.
	Name pulumix.Input[*string]
	// The name of the region where the stack will exist.
	Region pulumix.Input[*string]
	// The ARN of an IAM role that the OpsWorks service will act as.
	ServiceRoleArn pulumix.Input[*string]
	StackEndpoint  pulumix.Input[*string]
	// A map of tags to assign to the resource.
	// If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// Boolean value controlling whether the custom cookbook settings are enabled.
	UseCustomCookbooks pulumix.Input[*bool]
	// Boolean value controlling whether the standard OpsWorks security groups apply to created instances.
	UseOpsworksSecurityGroups pulumix.Input[*bool]
	// ID of the VPC that this stack belongs to.
	// Defaults to the region's default VPC.
	VpcId pulumix.Input[*string]
}

func (StackState) ElementType() reflect.Type {
	return reflect.TypeOf((*stackState)(nil)).Elem()
}

type stackArgs struct {
	// If set to `"LATEST"`, OpsWorks will automatically install the latest version.
	AgentVersion *string `pulumi:"agentVersion"`
	// If `manageBerkshelf` is enabled, the version of Berkshelf to use.
	BerkshelfVersion *string `pulumi:"berkshelfVersion"`
	// Color to paint next to the stack's resources in the OpsWorks console.
	Color *string `pulumi:"color"`
	// Name of the configuration manager to use. Defaults to "Chef".
	ConfigurationManagerName *string `pulumi:"configurationManagerName"`
	// Version of the configuration manager to use. Defaults to "11.4".
	ConfigurationManagerVersion *string `pulumi:"configurationManagerVersion"`
	// When `useCustomCookbooks` is set, provide this sub-object as described below.
	CustomCookbooksSources []StackCustomCookbooksSource `pulumi:"customCookbooksSources"`
	// Custom JSON attributes to apply to the entire stack.
	CustomJson *string `pulumi:"customJson"`
	// Name of the availability zone where instances will be created by default.
	// Cannot be set when `vpcId` is set.
	DefaultAvailabilityZone *string `pulumi:"defaultAvailabilityZone"`
	// The ARN of an IAM Instance Profile that created instances will have by default.
	DefaultInstanceProfileArn string `pulumi:"defaultInstanceProfileArn"`
	// Name of OS that will be installed on instances by default.
	DefaultOs *string `pulumi:"defaultOs"`
	// Name of the type of root device instances will have by default.
	DefaultRootDeviceType *string `pulumi:"defaultRootDeviceType"`
	// Name of the SSH keypair that instances will have by default.
	DefaultSshKeyName *string `pulumi:"defaultSshKeyName"`
	// ID of the subnet in which instances will be created by default.
	// Required if `vpcId` is set to a VPC other than the default VPC, and forbidden if it isn't.
	DefaultSubnetId *string `pulumi:"defaultSubnetId"`
	// Keyword representing the naming scheme that will be used for instance hostnames within this stack.
	HostnameTheme *string `pulumi:"hostnameTheme"`
	// Boolean value controlling whether Opsworks will run Berkshelf for this stack.
	ManageBerkshelf *bool `pulumi:"manageBerkshelf"`
	// The name of the stack.
	Name *string `pulumi:"name"`
	// The name of the region where the stack will exist.
	Region string `pulumi:"region"`
	// The ARN of an IAM role that the OpsWorks service will act as.
	ServiceRoleArn string `pulumi:"serviceRoleArn"`
	// A map of tags to assign to the resource.
	// If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Boolean value controlling whether the custom cookbook settings are enabled.
	UseCustomCookbooks *bool `pulumi:"useCustomCookbooks"`
	// Boolean value controlling whether the standard OpsWorks security groups apply to created instances.
	UseOpsworksSecurityGroups *bool `pulumi:"useOpsworksSecurityGroups"`
	// ID of the VPC that this stack belongs to.
	// Defaults to the region's default VPC.
	VpcId *string `pulumi:"vpcId"`
}

// The set of arguments for constructing a Stack resource.
type StackArgs struct {
	// If set to `"LATEST"`, OpsWorks will automatically install the latest version.
	AgentVersion pulumix.Input[*string]
	// If `manageBerkshelf` is enabled, the version of Berkshelf to use.
	BerkshelfVersion pulumix.Input[*string]
	// Color to paint next to the stack's resources in the OpsWorks console.
	Color pulumix.Input[*string]
	// Name of the configuration manager to use. Defaults to "Chef".
	ConfigurationManagerName pulumix.Input[*string]
	// Version of the configuration manager to use. Defaults to "11.4".
	ConfigurationManagerVersion pulumix.Input[*string]
	// When `useCustomCookbooks` is set, provide this sub-object as described below.
	CustomCookbooksSources pulumix.Input[[]*StackCustomCookbooksSourceArgs]
	// Custom JSON attributes to apply to the entire stack.
	CustomJson pulumix.Input[*string]
	// Name of the availability zone where instances will be created by default.
	// Cannot be set when `vpcId` is set.
	DefaultAvailabilityZone pulumix.Input[*string]
	// The ARN of an IAM Instance Profile that created instances will have by default.
	DefaultInstanceProfileArn pulumix.Input[string]
	// Name of OS that will be installed on instances by default.
	DefaultOs pulumix.Input[*string]
	// Name of the type of root device instances will have by default.
	DefaultRootDeviceType pulumix.Input[*string]
	// Name of the SSH keypair that instances will have by default.
	DefaultSshKeyName pulumix.Input[*string]
	// ID of the subnet in which instances will be created by default.
	// Required if `vpcId` is set to a VPC other than the default VPC, and forbidden if it isn't.
	DefaultSubnetId pulumix.Input[*string]
	// Keyword representing the naming scheme that will be used for instance hostnames within this stack.
	HostnameTheme pulumix.Input[*string]
	// Boolean value controlling whether Opsworks will run Berkshelf for this stack.
	ManageBerkshelf pulumix.Input[*bool]
	// The name of the stack.
	Name pulumix.Input[*string]
	// The name of the region where the stack will exist.
	Region pulumix.Input[string]
	// The ARN of an IAM role that the OpsWorks service will act as.
	ServiceRoleArn pulumix.Input[string]
	// A map of tags to assign to the resource.
	// If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// Boolean value controlling whether the custom cookbook settings are enabled.
	UseCustomCookbooks pulumix.Input[*bool]
	// Boolean value controlling whether the standard OpsWorks security groups apply to created instances.
	UseOpsworksSecurityGroups pulumix.Input[*bool]
	// ID of the VPC that this stack belongs to.
	// Defaults to the region's default VPC.
	VpcId pulumix.Input[*string]
}

func (StackArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*stackArgs)(nil)).Elem()
}

type StackOutput struct{ *pulumi.OutputState }

func (StackOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Stack)(nil)).Elem()
}

func (o StackOutput) ToStackOutput() StackOutput {
	return o
}

func (o StackOutput) ToStackOutputWithContext(ctx context.Context) StackOutput {
	return o
}

func (o StackOutput) ToOutput(ctx context.Context) pulumix.Output[Stack] {
	return pulumix.Output[Stack]{
		OutputState: o.OutputState,
	}
}

// If set to `"LATEST"`, OpsWorks will automatically install the latest version.
func (o StackOutput) AgentVersion() pulumix.Output[string] {
	value := pulumix.Apply[Stack](o, func(v Stack) pulumix.Output[string] { return v.AgentVersion })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func (o StackOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Stack](o, func(v Stack) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// If `manageBerkshelf` is enabled, the version of Berkshelf to use.
func (o StackOutput) BerkshelfVersion() pulumix.Output[*string] {
	value := pulumix.Apply[Stack](o, func(v Stack) pulumix.Output[*string] { return v.BerkshelfVersion })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Color to paint next to the stack's resources in the OpsWorks console.
func (o StackOutput) Color() pulumix.Output[*string] {
	value := pulumix.Apply[Stack](o, func(v Stack) pulumix.Output[*string] { return v.Color })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Name of the configuration manager to use. Defaults to "Chef".
func (o StackOutput) ConfigurationManagerName() pulumix.Output[*string] {
	value := pulumix.Apply[Stack](o, func(v Stack) pulumix.Output[*string] { return v.ConfigurationManagerName })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Version of the configuration manager to use. Defaults to "11.4".
func (o StackOutput) ConfigurationManagerVersion() pulumix.Output[*string] {
	value := pulumix.Apply[Stack](o, func(v Stack) pulumix.Output[*string] { return v.ConfigurationManagerVersion })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// When `useCustomCookbooks` is set, provide this sub-object as described below.
func (o StackOutput) CustomCookbooksSources() pulumix.GArrayOutput[StackCustomCookbooksSource, StackCustomCookbooksSourceOutput] {
	value := pulumix.Apply[Stack](o, func(v Stack) pulumix.GArrayOutput[StackCustomCookbooksSource, StackCustomCookbooksSourceOutput] {
		return v.CustomCookbooksSources
	})
	unwrapped := pulumix.Flatten[[]StackCustomCookbooksSource, pulumix.GArrayOutput[StackCustomCookbooksSource, StackCustomCookbooksSourceOutput]](value)
	return pulumix.GArrayOutput[StackCustomCookbooksSource, StackCustomCookbooksSourceOutput]{OutputState: unwrapped.OutputState}
}

// Custom JSON attributes to apply to the entire stack.
func (o StackOutput) CustomJson() pulumix.Output[*string] {
	value := pulumix.Apply[Stack](o, func(v Stack) pulumix.Output[*string] { return v.CustomJson })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Name of the availability zone where instances will be created by default.
// Cannot be set when `vpcId` is set.
func (o StackOutput) DefaultAvailabilityZone() pulumix.Output[string] {
	value := pulumix.Apply[Stack](o, func(v Stack) pulumix.Output[string] { return v.DefaultAvailabilityZone })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The ARN of an IAM Instance Profile that created instances will have by default.
func (o StackOutput) DefaultInstanceProfileArn() pulumix.Output[string] {
	value := pulumix.Apply[Stack](o, func(v Stack) pulumix.Output[string] { return v.DefaultInstanceProfileArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Name of OS that will be installed on instances by default.
func (o StackOutput) DefaultOs() pulumix.Output[*string] {
	value := pulumix.Apply[Stack](o, func(v Stack) pulumix.Output[*string] { return v.DefaultOs })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Name of the type of root device instances will have by default.
func (o StackOutput) DefaultRootDeviceType() pulumix.Output[*string] {
	value := pulumix.Apply[Stack](o, func(v Stack) pulumix.Output[*string] { return v.DefaultRootDeviceType })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Name of the SSH keypair that instances will have by default.
func (o StackOutput) DefaultSshKeyName() pulumix.Output[*string] {
	value := pulumix.Apply[Stack](o, func(v Stack) pulumix.Output[*string] { return v.DefaultSshKeyName })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// ID of the subnet in which instances will be created by default.
// Required if `vpcId` is set to a VPC other than the default VPC, and forbidden if it isn't.
func (o StackOutput) DefaultSubnetId() pulumix.Output[string] {
	value := pulumix.Apply[Stack](o, func(v Stack) pulumix.Output[string] { return v.DefaultSubnetId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Keyword representing the naming scheme that will be used for instance hostnames within this stack.
func (o StackOutput) HostnameTheme() pulumix.Output[*string] {
	value := pulumix.Apply[Stack](o, func(v Stack) pulumix.Output[*string] { return v.HostnameTheme })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Boolean value controlling whether Opsworks will run Berkshelf for this stack.
func (o StackOutput) ManageBerkshelf() pulumix.Output[*bool] {
	value := pulumix.Apply[Stack](o, func(v Stack) pulumix.Output[*bool] { return v.ManageBerkshelf })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// The name of the stack.
func (o StackOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[Stack](o, func(v Stack) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The name of the region where the stack will exist.
func (o StackOutput) Region() pulumix.Output[string] {
	value := pulumix.Apply[Stack](o, func(v Stack) pulumix.Output[string] { return v.Region })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The ARN of an IAM role that the OpsWorks service will act as.
func (o StackOutput) ServiceRoleArn() pulumix.Output[string] {
	value := pulumix.Apply[Stack](o, func(v Stack) pulumix.Output[string] { return v.ServiceRoleArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func (o StackOutput) StackEndpoint() pulumix.Output[string] {
	value := pulumix.Apply[Stack](o, func(v Stack) pulumix.Output[string] { return v.StackEndpoint })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A map of tags to assign to the resource.
// If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o StackOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Stack](o, func(v Stack) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o StackOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[Stack](o, func(v Stack) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Boolean value controlling whether the custom cookbook settings are enabled.
func (o StackOutput) UseCustomCookbooks() pulumix.Output[*bool] {
	value := pulumix.Apply[Stack](o, func(v Stack) pulumix.Output[*bool] { return v.UseCustomCookbooks })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// Boolean value controlling whether the standard OpsWorks security groups apply to created instances.
func (o StackOutput) UseOpsworksSecurityGroups() pulumix.Output[*bool] {
	value := pulumix.Apply[Stack](o, func(v Stack) pulumix.Output[*bool] { return v.UseOpsworksSecurityGroups })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// ID of the VPC that this stack belongs to.
// Defaults to the region's default VPC.
func (o StackOutput) VpcId() pulumix.Output[string] {
	value := pulumix.Apply[Stack](o, func(v Stack) pulumix.Output[string] { return v.VpcId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(StackOutput{})
}
