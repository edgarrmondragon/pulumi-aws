// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package devicefarm

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a resource to manage AWS Device Farm Instance Profiles.
// âˆ‚
// > **NOTE:** AWS currently has limited regional support for Device Farm (e.g., `us-west-2`). See [AWS Device Farm endpoints and quotas](https://docs.aws.amazon.com/general/latest/gr/devicefarm.html) for information on supported regions.
type InstanceProfile struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name of this instance profile.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The description of the instance profile.
	Description pulumix.Output[*string] `pulumi:"description"`
	// An array of strings that specifies the list of app packages that should not be cleaned up from the device after a test run.
	ExcludeAppPackagesFromCleanups pulumix.ArrayOutput[string] `pulumi:"excludeAppPackagesFromCleanups"`
	// The name for the instance profile.
	Name pulumix.Output[string] `pulumi:"name"`
	// When set to `true`, Device Farm removes app packages after a test run. The default value is `false` for private devices.
	PackageCleanup pulumix.Output[*bool] `pulumi:"packageCleanup"`
	// When set to `true`, Device Farm reboots the instance after a test run. The default value is `true`.
	RebootAfterUse pulumix.Output[*bool] `pulumi:"rebootAfterUse"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
}

// NewInstanceProfile registers a new resource with the given unique name, arguments, and options.
func NewInstanceProfile(ctx *pulumi.Context,
	name string, args *InstanceProfileArgs, opts ...pulumi.ResourceOption) (*InstanceProfile, error) {
	if args == nil {
		args = &InstanceProfileArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource InstanceProfile
	err := ctx.RegisterResource("aws:devicefarm/instanceProfile:InstanceProfile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInstanceProfile gets an existing InstanceProfile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstanceProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InstanceProfileState, opts ...pulumi.ResourceOption) (*InstanceProfile, error) {
	var resource InstanceProfile
	err := ctx.ReadResource("aws:devicefarm/instanceProfile:InstanceProfile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering InstanceProfile resources.
type instanceProfileState struct {
	// The Amazon Resource Name of this instance profile.
	Arn *string `pulumi:"arn"`
	// The description of the instance profile.
	Description *string `pulumi:"description"`
	// An array of strings that specifies the list of app packages that should not be cleaned up from the device after a test run.
	ExcludeAppPackagesFromCleanups []string `pulumi:"excludeAppPackagesFromCleanups"`
	// The name for the instance profile.
	Name *string `pulumi:"name"`
	// When set to `true`, Device Farm removes app packages after a test run. The default value is `false` for private devices.
	PackageCleanup *bool `pulumi:"packageCleanup"`
	// When set to `true`, Device Farm reboots the instance after a test run. The default value is `true`.
	RebootAfterUse *bool `pulumi:"rebootAfterUse"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type InstanceProfileState struct {
	// The Amazon Resource Name of this instance profile.
	Arn pulumix.Input[*string]
	// The description of the instance profile.
	Description pulumix.Input[*string]
	// An array of strings that specifies the list of app packages that should not be cleaned up from the device after a test run.
	ExcludeAppPackagesFromCleanups pulumix.Input[[]string]
	// The name for the instance profile.
	Name pulumix.Input[*string]
	// When set to `true`, Device Farm removes app packages after a test run. The default value is `false` for private devices.
	PackageCleanup pulumix.Input[*bool]
	// When set to `true`, Device Farm reboots the instance after a test run. The default value is `true`.
	RebootAfterUse pulumix.Input[*bool]
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
}

func (InstanceProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceProfileState)(nil)).Elem()
}

type instanceProfileArgs struct {
	// The description of the instance profile.
	Description *string `pulumi:"description"`
	// An array of strings that specifies the list of app packages that should not be cleaned up from the device after a test run.
	ExcludeAppPackagesFromCleanups []string `pulumi:"excludeAppPackagesFromCleanups"`
	// The name for the instance profile.
	Name *string `pulumi:"name"`
	// When set to `true`, Device Farm removes app packages after a test run. The default value is `false` for private devices.
	PackageCleanup *bool `pulumi:"packageCleanup"`
	// When set to `true`, Device Farm reboots the instance after a test run. The default value is `true`.
	RebootAfterUse *bool `pulumi:"rebootAfterUse"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a InstanceProfile resource.
type InstanceProfileArgs struct {
	// The description of the instance profile.
	Description pulumix.Input[*string]
	// An array of strings that specifies the list of app packages that should not be cleaned up from the device after a test run.
	ExcludeAppPackagesFromCleanups pulumix.Input[[]string]
	// The name for the instance profile.
	Name pulumix.Input[*string]
	// When set to `true`, Device Farm removes app packages after a test run. The default value is `false` for private devices.
	PackageCleanup pulumix.Input[*bool]
	// When set to `true`, Device Farm reboots the instance after a test run. The default value is `true`.
	RebootAfterUse pulumix.Input[*bool]
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (InstanceProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceProfileArgs)(nil)).Elem()
}

type InstanceProfileOutput struct{ *pulumi.OutputState }

func (InstanceProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceProfile)(nil)).Elem()
}

func (o InstanceProfileOutput) ToInstanceProfileOutput() InstanceProfileOutput {
	return o
}

func (o InstanceProfileOutput) ToInstanceProfileOutputWithContext(ctx context.Context) InstanceProfileOutput {
	return o
}

func (o InstanceProfileOutput) ToOutput(ctx context.Context) pulumix.Output[InstanceProfile] {
	return pulumix.Output[InstanceProfile]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name of this instance profile.
func (o InstanceProfileOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[InstanceProfile](o, func(v InstanceProfile) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The description of the instance profile.
func (o InstanceProfileOutput) Description() pulumix.Output[*string] {
	value := pulumix.Apply[InstanceProfile](o, func(v InstanceProfile) pulumix.Output[*string] { return v.Description })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// An array of strings that specifies the list of app packages that should not be cleaned up from the device after a test run.
func (o InstanceProfileOutput) ExcludeAppPackagesFromCleanups() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[InstanceProfile](o, func(v InstanceProfile) pulumix.ArrayOutput[string] { return v.ExcludeAppPackagesFromCleanups })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// The name for the instance profile.
func (o InstanceProfileOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[InstanceProfile](o, func(v InstanceProfile) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// When set to `true`, Device Farm removes app packages after a test run. The default value is `false` for private devices.
func (o InstanceProfileOutput) PackageCleanup() pulumix.Output[*bool] {
	value := pulumix.Apply[InstanceProfile](o, func(v InstanceProfile) pulumix.Output[*bool] { return v.PackageCleanup })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// When set to `true`, Device Farm reboots the instance after a test run. The default value is `true`.
func (o InstanceProfileOutput) RebootAfterUse() pulumix.Output[*bool] {
	value := pulumix.Apply[InstanceProfile](o, func(v InstanceProfile) pulumix.Output[*bool] { return v.RebootAfterUse })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o InstanceProfileOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[InstanceProfile](o, func(v InstanceProfile) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o InstanceProfileOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[InstanceProfile](o, func(v InstanceProfile) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(InstanceProfileOutput{})
}
