// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package costexplorer

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides details about a specific CE Tags.
func GetTags(ctx *pulumi.Context, args *GetTagsArgs, opts ...pulumi.InvokeOption) (*GetTagsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetTagsResult
	err := ctx.Invoke("aws:costexplorer/getTags:getTags", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTags.
type GetTagsArgs struct {
	// Configuration block for the `Expression` object used to categorize costs. See below.
	Filter *GetTagsFilter `pulumi:"filter"`
	// Value that you want to search for.
	SearchString *string `pulumi:"searchString"`
	// Configuration block for the value by which you want to sort the data. See below.
	SortBies []GetTagsSortBy `pulumi:"sortBies"`
	// Key of the tag that you want to return values for.
	TagKey *string `pulumi:"tagKey"`
	// Configuration block for the start and end dates for retrieving the dimension values.
	//
	// The following arguments are optional:
	TimePeriod GetTagsTimePeriod `pulumi:"timePeriod"`
}

// A collection of values returned by getTags.
type GetTagsResult struct {
	Filter *GetTagsFilter `pulumi:"filter"`
	// The provider-assigned unique ID for this managed resource.
	Id           string          `pulumi:"id"`
	SearchString *string         `pulumi:"searchString"`
	SortBies     []GetTagsSortBy `pulumi:"sortBies"`
	TagKey       *string         `pulumi:"tagKey"`
	// Tags that match your request.
	Tags       []string          `pulumi:"tags"`
	TimePeriod GetTagsTimePeriod `pulumi:"timePeriod"`
}

func GetTagsOutput(ctx *pulumi.Context, args GetTagsOutputArgs, opts ...pulumi.InvokeOption) GetTagsResultOutput {
	outputResult := pulumix.ApplyErr[*GetTagsArgs](args.ToOutput(), func(plainArgs *GetTagsArgs) (*GetTagsResult, error) {
		return GetTags(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[GetTagsResultOutput, *GetTagsResult](outputResult)
}

// A collection of arguments for invoking getTags.
type GetTagsOutputArgs struct {
	// Configuration block for the `Expression` object used to categorize costs. See below.
	Filter pulumix.Input[*GetTagsFilterArgs] `pulumi:"filter"`
	// Value that you want to search for.
	SearchString pulumix.Input[*string] `pulumi:"searchString"`
	// Configuration block for the value by which you want to sort the data. See below.
	SortBies pulumix.Input[[]*GetTagsSortByArgs] `pulumi:"sortBies"`
	// Key of the tag that you want to return values for.
	TagKey pulumix.Input[*string] `pulumi:"tagKey"`
	// Configuration block for the start and end dates for retrieving the dimension values.
	//
	// The following arguments are optional:
	TimePeriod pulumix.Input[*GetTagsTimePeriodArgs] `pulumi:"timePeriod"`
}

func (args GetTagsOutputArgs) ToOutput() pulumix.Output[*GetTagsArgs] {
	allArgs := pulumix.All(
		args.Filter.ToOutput(context.Background()).AsAny(),
		args.SearchString.ToOutput(context.Background()).AsAny(),
		args.SortBies.ToOutput(context.Background()).AsAny(),
		args.TagKey.ToOutput(context.Background()).AsAny(),
		args.TimePeriod.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *GetTagsArgs {
		return &GetTagsArgs{
			Filter:       resolvedArgs[0].(*GetTagsFilter),
			SearchString: resolvedArgs[1].(*string),
			SortBies:     resolvedArgs[2].([]GetTagsSortBy),
			TagKey:       resolvedArgs[3].(*string),
			TimePeriod:   resolvedArgs[4].(GetTagsTimePeriod),
		}
	})
}

type GetTagsResultOutput struct{ *pulumi.OutputState }

func (GetTagsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTagsResult)(nil)).Elem()
}

func (o GetTagsResultOutput) ToOutput(context.Context) pulumix.Output[*GetTagsResult] {
	return pulumix.Output[*GetTagsResult]{
		OutputState: o.OutputState,
	}
}

func (o GetTagsResultOutput) Filter() pulumix.GPtrOutput[GetTagsFilter, GetTagsFilterOutput] {
	value := pulumix.Apply[*GetTagsResult](o, func(v *GetTagsResult) *GetTagsFilter { return v.Filter })
	return pulumix.GPtrOutput[GetTagsFilter, GetTagsFilterOutput]{
		OutputState: value.OutputState,
	}
}

func (o GetTagsResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*GetTagsResult](o, func(v *GetTagsResult) string { return v.Id })
}

func (o GetTagsResultOutput) SearchString() pulumix.Output[*string] {
	return pulumix.Apply[*GetTagsResult](o, func(v *GetTagsResult) *string { return v.SearchString })
}

func (o GetTagsResultOutput) SortBies() pulumix.GArrayOutput[GetTagsSortBy, GetTagsSortByOutput] {
	value := pulumix.Apply[*GetTagsResult](o, func(v *GetTagsResult) []GetTagsSortBy { return v.SortBies })
	return pulumix.GArrayOutput[GetTagsSortBy, GetTagsSortByOutput]{
		OutputState: value.OutputState,
	}
}

func (o GetTagsResultOutput) TagKey() pulumix.Output[*string] {
	return pulumix.Apply[*GetTagsResult](o, func(v *GetTagsResult) *string { return v.TagKey })
}

func (o GetTagsResultOutput) Tags() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[*GetTagsResult](o, func(v *GetTagsResult) []string { return v.Tags })
	return pulumix.ArrayOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o GetTagsResultOutput) TimePeriod() pulumix.GPtrOutput[GetTagsTimePeriod, GetTagsTimePeriodOutput] {
	value := pulumix.Apply[*GetTagsResult](o, func(v *GetTagsResult) GetTagsTimePeriod { return v.TimePeriod })
	return pulumix.GPtrOutput[GetTagsTimePeriod, GetTagsTimePeriodOutput]{
		OutputState: value.OutputState,
	}
}
