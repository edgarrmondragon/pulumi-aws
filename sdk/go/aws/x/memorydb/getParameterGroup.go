// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package memorydb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides information about a MemoryDB Parameter Group.
func LookupParameterGroup(ctx *pulumi.Context, args *LookupParameterGroupArgs, opts ...pulumi.InvokeOption) (*LookupParameterGroupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupParameterGroupResult
	err := ctx.Invoke("aws:memorydb/getParameterGroup:getParameterGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getParameterGroup.
type LookupParameterGroupArgs struct {
	// Name of the parameter group.
	Name string `pulumi:"name"`
	// Map of tags assigned to the parameter group.
	Tags map[string]string `pulumi:"tags"`
}

// A collection of values returned by getParameterGroup.
type LookupParameterGroupResult struct {
	// ARN of the parameter group.
	Arn string `pulumi:"arn"`
	// Description of the parameter group.
	Description string `pulumi:"description"`
	// Engine version that the parameter group can be used with.
	Family string `pulumi:"family"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Name of the parameter.
	Name string `pulumi:"name"`
	// Set of user-defined MemoryDB parameters applied by the parameter group.
	Parameters []GetParameterGroupParameter `pulumi:"parameters"`
	// Map of tags assigned to the parameter group.
	Tags map[string]string `pulumi:"tags"`
}

func LookupParameterGroupOutput(ctx *pulumi.Context, args LookupParameterGroupOutputArgs, opts ...pulumi.InvokeOption) LookupParameterGroupResultOutput {
	outputResult := pulumix.ApplyErr[*LookupParameterGroupArgs](args.ToOutput(), func(plainArgs *LookupParameterGroupArgs) (*LookupParameterGroupResult, error) {
		return LookupParameterGroup(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[LookupParameterGroupResultOutput, *LookupParameterGroupResult](outputResult)
}

// A collection of arguments for invoking getParameterGroup.
type LookupParameterGroupOutputArgs struct {
	// Name of the parameter group.
	Name pulumix.Input[string] `pulumi:"name"`
	// Map of tags assigned to the parameter group.
	Tags pulumix.Input[map[string]string] `pulumi:"tags"`
}

func (args LookupParameterGroupOutputArgs) ToOutput() pulumix.Output[*LookupParameterGroupArgs] {
	allArgs := pulumix.All(
		args.Name.ToOutput(context.Background()).AsAny(),
		args.Tags.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *LookupParameterGroupArgs {
		return &LookupParameterGroupArgs{
			Name: resolvedArgs[0].(string),
			Tags: resolvedArgs[1].(map[string]string),
		}
	})
}

type LookupParameterGroupResultOutput struct{ *pulumi.OutputState }

func (LookupParameterGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupParameterGroupResult)(nil)).Elem()
}

func (o LookupParameterGroupResultOutput) ToOutput(context.Context) pulumix.Output[*LookupParameterGroupResult] {
	return pulumix.Output[*LookupParameterGroupResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupParameterGroupResultOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[*LookupParameterGroupResult](o, func(v *LookupParameterGroupResult) string { return v.Arn })
}

func (o LookupParameterGroupResultOutput) Description() pulumix.Output[string] {
	return pulumix.Apply[*LookupParameterGroupResult](o, func(v *LookupParameterGroupResult) string { return v.Description })
}

func (o LookupParameterGroupResultOutput) Family() pulumix.Output[string] {
	return pulumix.Apply[*LookupParameterGroupResult](o, func(v *LookupParameterGroupResult) string { return v.Family })
}

func (o LookupParameterGroupResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*LookupParameterGroupResult](o, func(v *LookupParameterGroupResult) string { return v.Id })
}

func (o LookupParameterGroupResultOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[*LookupParameterGroupResult](o, func(v *LookupParameterGroupResult) string { return v.Name })
}

func (o LookupParameterGroupResultOutput) Parameters() pulumix.GArrayOutput[GetParameterGroupParameter, GetParameterGroupParameterOutput] {
	value := pulumix.Apply[*LookupParameterGroupResult](o, func(v *LookupParameterGroupResult) []GetParameterGroupParameter { return v.Parameters })
	return pulumix.GArrayOutput[GetParameterGroupParameter, GetParameterGroupParameterOutput]{
		OutputState: value.OutputState,
	}
}

func (o LookupParameterGroupResultOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[*LookupParameterGroupResult](o, func(v *LookupParameterGroupResult) map[string]string { return v.Tags })
	return pulumix.MapOutput[string]{
		OutputState: value.OutputState,
	}
}
