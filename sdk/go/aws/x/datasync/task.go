// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datasync

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manages an AWS DataSync Task, which represents a configuration for synchronization. Starting an execution of these DataSync Tasks (actually synchronizing files) is performed outside of this resource.
type Task struct {
	pulumi.CustomResourceState

	// Amazon Resource Name (ARN) of the DataSync Task.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// Amazon Resource Name (ARN) of the CloudWatch Log Group that is used to monitor and log events in the sync task.
	CloudwatchLogGroupArn pulumix.Output[*string] `pulumi:"cloudwatchLogGroupArn"`
	// Amazon Resource Name (ARN) of destination DataSync Location.
	DestinationLocationArn pulumix.Output[string] `pulumi:"destinationLocationArn"`
	// Filter rules that determines which files to exclude from a task.
	Excludes pulumix.GPtrOutput[TaskExcludes, TaskExcludesOutput] `pulumi:"excludes"`
	// Filter rules that determines which files to include in a task.
	Includes pulumix.GPtrOutput[TaskIncludes, TaskIncludesOutput] `pulumi:"includes"`
	// Name of the DataSync Task.
	Name pulumix.Output[string] `pulumi:"name"`
	// Configuration block containing option that controls the default behavior when you start an execution of this DataSync Task. For each individual task execution, you can override these options by specifying an overriding configuration in those executions.
	Options pulumix.GPtrOutput[TaskOptions, TaskOptionsOutput] `pulumi:"options"`
	// Specifies a schedule used to periodically transfer files from a source to a destination location.
	Schedule pulumix.GPtrOutput[TaskSchedule, TaskScheduleOutput] `pulumi:"schedule"`
	// Amazon Resource Name (ARN) of source DataSync Location.
	SourceLocationArn pulumix.Output[string] `pulumi:"sourceLocationArn"`
	// Key-value pairs of resource tags to assign to the DataSync Task. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
}

// NewTask registers a new resource with the given unique name, arguments, and options.
func NewTask(ctx *pulumi.Context,
	name string, args *TaskArgs, opts ...pulumi.ResourceOption) (*Task, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DestinationLocationArn == nil {
		return nil, errors.New("invalid value for required argument 'DestinationLocationArn'")
	}
	if args.SourceLocationArn == nil {
		return nil, errors.New("invalid value for required argument 'SourceLocationArn'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Task
	err := ctx.RegisterResource("aws:datasync/task:Task", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTask gets an existing Task resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTask(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TaskState, opts ...pulumi.ResourceOption) (*Task, error) {
	var resource Task
	err := ctx.ReadResource("aws:datasync/task:Task", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Task resources.
type taskState struct {
	// Amazon Resource Name (ARN) of the DataSync Task.
	Arn *string `pulumi:"arn"`
	// Amazon Resource Name (ARN) of the CloudWatch Log Group that is used to monitor and log events in the sync task.
	CloudwatchLogGroupArn *string `pulumi:"cloudwatchLogGroupArn"`
	// Amazon Resource Name (ARN) of destination DataSync Location.
	DestinationLocationArn *string `pulumi:"destinationLocationArn"`
	// Filter rules that determines which files to exclude from a task.
	Excludes *TaskExcludes `pulumi:"excludes"`
	// Filter rules that determines which files to include in a task.
	Includes *TaskIncludes `pulumi:"includes"`
	// Name of the DataSync Task.
	Name *string `pulumi:"name"`
	// Configuration block containing option that controls the default behavior when you start an execution of this DataSync Task. For each individual task execution, you can override these options by specifying an overriding configuration in those executions.
	Options *TaskOptions `pulumi:"options"`
	// Specifies a schedule used to periodically transfer files from a source to a destination location.
	Schedule *TaskSchedule `pulumi:"schedule"`
	// Amazon Resource Name (ARN) of source DataSync Location.
	SourceLocationArn *string `pulumi:"sourceLocationArn"`
	// Key-value pairs of resource tags to assign to the DataSync Task. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type TaskState struct {
	// Amazon Resource Name (ARN) of the DataSync Task.
	Arn pulumix.Input[*string]
	// Amazon Resource Name (ARN) of the CloudWatch Log Group that is used to monitor and log events in the sync task.
	CloudwatchLogGroupArn pulumix.Input[*string]
	// Amazon Resource Name (ARN) of destination DataSync Location.
	DestinationLocationArn pulumix.Input[*string]
	// Filter rules that determines which files to exclude from a task.
	Excludes pulumix.Input[*TaskExcludesArgs]
	// Filter rules that determines which files to include in a task.
	Includes pulumix.Input[*TaskIncludesArgs]
	// Name of the DataSync Task.
	Name pulumix.Input[*string]
	// Configuration block containing option that controls the default behavior when you start an execution of this DataSync Task. For each individual task execution, you can override these options by specifying an overriding configuration in those executions.
	Options pulumix.Input[*TaskOptionsArgs]
	// Specifies a schedule used to periodically transfer files from a source to a destination location.
	Schedule pulumix.Input[*TaskScheduleArgs]
	// Amazon Resource Name (ARN) of source DataSync Location.
	SourceLocationArn pulumix.Input[*string]
	// Key-value pairs of resource tags to assign to the DataSync Task. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
}

func (TaskState) ElementType() reflect.Type {
	return reflect.TypeOf((*taskState)(nil)).Elem()
}

type taskArgs struct {
	// Amazon Resource Name (ARN) of the CloudWatch Log Group that is used to monitor and log events in the sync task.
	CloudwatchLogGroupArn *string `pulumi:"cloudwatchLogGroupArn"`
	// Amazon Resource Name (ARN) of destination DataSync Location.
	DestinationLocationArn string `pulumi:"destinationLocationArn"`
	// Filter rules that determines which files to exclude from a task.
	Excludes *TaskExcludes `pulumi:"excludes"`
	// Filter rules that determines which files to include in a task.
	Includes *TaskIncludes `pulumi:"includes"`
	// Name of the DataSync Task.
	Name *string `pulumi:"name"`
	// Configuration block containing option that controls the default behavior when you start an execution of this DataSync Task. For each individual task execution, you can override these options by specifying an overriding configuration in those executions.
	Options *TaskOptions `pulumi:"options"`
	// Specifies a schedule used to periodically transfer files from a source to a destination location.
	Schedule *TaskSchedule `pulumi:"schedule"`
	// Amazon Resource Name (ARN) of source DataSync Location.
	SourceLocationArn string `pulumi:"sourceLocationArn"`
	// Key-value pairs of resource tags to assign to the DataSync Task. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Task resource.
type TaskArgs struct {
	// Amazon Resource Name (ARN) of the CloudWatch Log Group that is used to monitor and log events in the sync task.
	CloudwatchLogGroupArn pulumix.Input[*string]
	// Amazon Resource Name (ARN) of destination DataSync Location.
	DestinationLocationArn pulumix.Input[string]
	// Filter rules that determines which files to exclude from a task.
	Excludes pulumix.Input[*TaskExcludesArgs]
	// Filter rules that determines which files to include in a task.
	Includes pulumix.Input[*TaskIncludesArgs]
	// Name of the DataSync Task.
	Name pulumix.Input[*string]
	// Configuration block containing option that controls the default behavior when you start an execution of this DataSync Task. For each individual task execution, you can override these options by specifying an overriding configuration in those executions.
	Options pulumix.Input[*TaskOptionsArgs]
	// Specifies a schedule used to periodically transfer files from a source to a destination location.
	Schedule pulumix.Input[*TaskScheduleArgs]
	// Amazon Resource Name (ARN) of source DataSync Location.
	SourceLocationArn pulumix.Input[string]
	// Key-value pairs of resource tags to assign to the DataSync Task. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (TaskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*taskArgs)(nil)).Elem()
}

type TaskOutput struct{ *pulumi.OutputState }

func (TaskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Task)(nil)).Elem()
}

func (o TaskOutput) ToTaskOutput() TaskOutput {
	return o
}

func (o TaskOutput) ToTaskOutputWithContext(ctx context.Context) TaskOutput {
	return o
}

func (o TaskOutput) ToOutput(ctx context.Context) pulumix.Output[Task] {
	return pulumix.Output[Task]{
		OutputState: o.OutputState,
	}
}

// Amazon Resource Name (ARN) of the DataSync Task.
func (o TaskOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Task](o, func(v Task) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Amazon Resource Name (ARN) of the CloudWatch Log Group that is used to monitor and log events in the sync task.
func (o TaskOutput) CloudwatchLogGroupArn() pulumix.Output[*string] {
	value := pulumix.Apply[Task](o, func(v Task) pulumix.Output[*string] { return v.CloudwatchLogGroupArn })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Amazon Resource Name (ARN) of destination DataSync Location.
func (o TaskOutput) DestinationLocationArn() pulumix.Output[string] {
	value := pulumix.Apply[Task](o, func(v Task) pulumix.Output[string] { return v.DestinationLocationArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Filter rules that determines which files to exclude from a task.
func (o TaskOutput) Excludes() pulumix.GPtrOutput[TaskExcludes, TaskExcludesOutput] {
	value := pulumix.Apply[Task](o, func(v Task) pulumix.GPtrOutput[TaskExcludes, TaskExcludesOutput] { return v.Excludes })
	unwrapped := pulumix.Flatten[*TaskExcludes, pulumix.GPtrOutput[TaskExcludes, TaskExcludesOutput]](value)
	return pulumix.GPtrOutput[TaskExcludes, TaskExcludesOutput]{OutputState: unwrapped.OutputState}
}

// Filter rules that determines which files to include in a task.
func (o TaskOutput) Includes() pulumix.GPtrOutput[TaskIncludes, TaskIncludesOutput] {
	value := pulumix.Apply[Task](o, func(v Task) pulumix.GPtrOutput[TaskIncludes, TaskIncludesOutput] { return v.Includes })
	unwrapped := pulumix.Flatten[*TaskIncludes, pulumix.GPtrOutput[TaskIncludes, TaskIncludesOutput]](value)
	return pulumix.GPtrOutput[TaskIncludes, TaskIncludesOutput]{OutputState: unwrapped.OutputState}
}

// Name of the DataSync Task.
func (o TaskOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[Task](o, func(v Task) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Configuration block containing option that controls the default behavior when you start an execution of this DataSync Task. For each individual task execution, you can override these options by specifying an overriding configuration in those executions.
func (o TaskOutput) Options() pulumix.GPtrOutput[TaskOptions, TaskOptionsOutput] {
	value := pulumix.Apply[Task](o, func(v Task) pulumix.GPtrOutput[TaskOptions, TaskOptionsOutput] { return v.Options })
	unwrapped := pulumix.Flatten[*TaskOptions, pulumix.GPtrOutput[TaskOptions, TaskOptionsOutput]](value)
	return pulumix.GPtrOutput[TaskOptions, TaskOptionsOutput]{OutputState: unwrapped.OutputState}
}

// Specifies a schedule used to periodically transfer files from a source to a destination location.
func (o TaskOutput) Schedule() pulumix.GPtrOutput[TaskSchedule, TaskScheduleOutput] {
	value := pulumix.Apply[Task](o, func(v Task) pulumix.GPtrOutput[TaskSchedule, TaskScheduleOutput] { return v.Schedule })
	unwrapped := pulumix.Flatten[*TaskSchedule, pulumix.GPtrOutput[TaskSchedule, TaskScheduleOutput]](value)
	return pulumix.GPtrOutput[TaskSchedule, TaskScheduleOutput]{OutputState: unwrapped.OutputState}
}

// Amazon Resource Name (ARN) of source DataSync Location.
func (o TaskOutput) SourceLocationArn() pulumix.Output[string] {
	value := pulumix.Apply[Task](o, func(v Task) pulumix.Output[string] { return v.SourceLocationArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Key-value pairs of resource tags to assign to the DataSync Task. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o TaskOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Task](o, func(v Task) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o TaskOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[Task](o, func(v Task) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(TaskOutput{})
}
