// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sesv2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type ConfigurationSetDeliveryOptions struct {
	// The name of the dedicated IP pool to associate with the configuration set.
	SendingPoolName *string `pulumi:"sendingPoolName"`
	// Specifies whether messages that use the configuration set are required to use Transport Layer Security (TLS). Valid values: `REQUIRE`, `OPTIONAL`.
	TlsPolicy *string `pulumi:"tlsPolicy"`
}

type ConfigurationSetDeliveryOptionsArgs struct {
	// The name of the dedicated IP pool to associate with the configuration set.
	SendingPoolName pulumix.Input[*string] `pulumi:"sendingPoolName"`
	// Specifies whether messages that use the configuration set are required to use Transport Layer Security (TLS). Valid values: `REQUIRE`, `OPTIONAL`.
	TlsPolicy pulumix.Input[*string] `pulumi:"tlsPolicy"`
}

func (ConfigurationSetDeliveryOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationSetDeliveryOptions)(nil)).Elem()
}

func (i ConfigurationSetDeliveryOptionsArgs) ToConfigurationSetDeliveryOptionsOutput() ConfigurationSetDeliveryOptionsOutput {
	return i.ToConfigurationSetDeliveryOptionsOutputWithContext(context.Background())
}

func (i ConfigurationSetDeliveryOptionsArgs) ToConfigurationSetDeliveryOptionsOutputWithContext(ctx context.Context) ConfigurationSetDeliveryOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationSetDeliveryOptionsOutput)
}

func (i *ConfigurationSetDeliveryOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[*ConfigurationSetDeliveryOptionsArgs] {
	return pulumix.Val(i)
}

type ConfigurationSetDeliveryOptionsOutput struct{ *pulumi.OutputState }

func (ConfigurationSetDeliveryOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationSetDeliveryOptions)(nil)).Elem()
}

func (o ConfigurationSetDeliveryOptionsOutput) ToConfigurationSetDeliveryOptionsOutput() ConfigurationSetDeliveryOptionsOutput {
	return o
}

func (o ConfigurationSetDeliveryOptionsOutput) ToConfigurationSetDeliveryOptionsOutputWithContext(ctx context.Context) ConfigurationSetDeliveryOptionsOutput {
	return o
}

func (o ConfigurationSetDeliveryOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[ConfigurationSetDeliveryOptions] {
	return pulumix.Output[ConfigurationSetDeliveryOptions]{
		OutputState: o.OutputState,
	}
}

// The name of the dedicated IP pool to associate with the configuration set.
func (o ConfigurationSetDeliveryOptionsOutput) SendingPoolName() pulumix.Output[*string] {
	return pulumix.Apply[ConfigurationSetDeliveryOptions](o, func(v ConfigurationSetDeliveryOptions) *string { return v.SendingPoolName })
}

// Specifies whether messages that use the configuration set are required to use Transport Layer Security (TLS). Valid values: `REQUIRE`, `OPTIONAL`.
func (o ConfigurationSetDeliveryOptionsOutput) TlsPolicy() pulumix.Output[*string] {
	return pulumix.Apply[ConfigurationSetDeliveryOptions](o, func(v ConfigurationSetDeliveryOptions) *string { return v.TlsPolicy })
}

type ConfigurationSetEventDestinationEventDestination struct {
	// An object that defines an Amazon CloudWatch destination for email events. See cloudWatchDestination below
	CloudWatchDestination *ConfigurationSetEventDestinationEventDestinationCloudWatchDestination `pulumi:"cloudWatchDestination"`
	// When the event destination is enabled, the specified event types are sent to the destinations. Default: `false`.
	Enabled *bool `pulumi:"enabled"`
	// An object that defines an Amazon Kinesis Data Firehose destination for email events. See kinesisFirehoseDestination below.
	KinesisFirehoseDestination *ConfigurationSetEventDestinationEventDestinationKinesisFirehoseDestination `pulumi:"kinesisFirehoseDestination"`
	// An array that specifies which events the Amazon SES API v2 should send to the destinations. Valid values: `SEND`, `REJECT`, `BOUNCE`, `COMPLAINT`, `DELIVERY`, `OPEN`, `CLICK`, `RENDERING_FAILURE`, `DELIVERY_DELAY`, `SUBSCRIPTION`.
	//
	// The following arguments are optional:
	MatchingEventTypes []string `pulumi:"matchingEventTypes"`
	// An object that defines an Amazon Pinpoint project destination for email events. See pinpointDestination below.
	PinpointDestination *ConfigurationSetEventDestinationEventDestinationPinpointDestination `pulumi:"pinpointDestination"`
	// An object that defines an Amazon SNS destination for email events. See snsDestination below.
	SnsDestination *ConfigurationSetEventDestinationEventDestinationSnsDestination `pulumi:"snsDestination"`
}

type ConfigurationSetEventDestinationEventDestinationArgs struct {
	// An object that defines an Amazon CloudWatch destination for email events. See cloudWatchDestination below
	CloudWatchDestination pulumix.Input[*ConfigurationSetEventDestinationEventDestinationCloudWatchDestinationArgs] `pulumi:"cloudWatchDestination"`
	// When the event destination is enabled, the specified event types are sent to the destinations. Default: `false`.
	Enabled pulumix.Input[*bool] `pulumi:"enabled"`
	// An object that defines an Amazon Kinesis Data Firehose destination for email events. See kinesisFirehoseDestination below.
	KinesisFirehoseDestination pulumix.Input[*ConfigurationSetEventDestinationEventDestinationKinesisFirehoseDestinationArgs] `pulumi:"kinesisFirehoseDestination"`
	// An array that specifies which events the Amazon SES API v2 should send to the destinations. Valid values: `SEND`, `REJECT`, `BOUNCE`, `COMPLAINT`, `DELIVERY`, `OPEN`, `CLICK`, `RENDERING_FAILURE`, `DELIVERY_DELAY`, `SUBSCRIPTION`.
	//
	// The following arguments are optional:
	MatchingEventTypes pulumix.Input[[]string] `pulumi:"matchingEventTypes"`
	// An object that defines an Amazon Pinpoint project destination for email events. See pinpointDestination below.
	PinpointDestination pulumix.Input[*ConfigurationSetEventDestinationEventDestinationPinpointDestinationArgs] `pulumi:"pinpointDestination"`
	// An object that defines an Amazon SNS destination for email events. See snsDestination below.
	SnsDestination pulumix.Input[*ConfigurationSetEventDestinationEventDestinationSnsDestinationArgs] `pulumi:"snsDestination"`
}

func (ConfigurationSetEventDestinationEventDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationSetEventDestinationEventDestination)(nil)).Elem()
}

func (i ConfigurationSetEventDestinationEventDestinationArgs) ToConfigurationSetEventDestinationEventDestinationOutput() ConfigurationSetEventDestinationEventDestinationOutput {
	return i.ToConfigurationSetEventDestinationEventDestinationOutputWithContext(context.Background())
}

func (i ConfigurationSetEventDestinationEventDestinationArgs) ToConfigurationSetEventDestinationEventDestinationOutputWithContext(ctx context.Context) ConfigurationSetEventDestinationEventDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationSetEventDestinationEventDestinationOutput)
}

func (i *ConfigurationSetEventDestinationEventDestinationArgs) ToOutput(ctx context.Context) pulumix.Output[*ConfigurationSetEventDestinationEventDestinationArgs] {
	return pulumix.Val(i)
}

type ConfigurationSetEventDestinationEventDestinationOutput struct{ *pulumi.OutputState }

func (ConfigurationSetEventDestinationEventDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationSetEventDestinationEventDestination)(nil)).Elem()
}

func (o ConfigurationSetEventDestinationEventDestinationOutput) ToConfigurationSetEventDestinationEventDestinationOutput() ConfigurationSetEventDestinationEventDestinationOutput {
	return o
}

func (o ConfigurationSetEventDestinationEventDestinationOutput) ToConfigurationSetEventDestinationEventDestinationOutputWithContext(ctx context.Context) ConfigurationSetEventDestinationEventDestinationOutput {
	return o
}

func (o ConfigurationSetEventDestinationEventDestinationOutput) ToOutput(ctx context.Context) pulumix.Output[ConfigurationSetEventDestinationEventDestination] {
	return pulumix.Output[ConfigurationSetEventDestinationEventDestination]{
		OutputState: o.OutputState,
	}
}

// An object that defines an Amazon CloudWatch destination for email events. See cloudWatchDestination below
func (o ConfigurationSetEventDestinationEventDestinationOutput) CloudWatchDestination() pulumix.GPtrOutput[ConfigurationSetEventDestinationEventDestinationCloudWatchDestination, ConfigurationSetEventDestinationEventDestinationCloudWatchDestinationOutput] {
	value := pulumix.Apply[ConfigurationSetEventDestinationEventDestination](o, func(v ConfigurationSetEventDestinationEventDestination) *ConfigurationSetEventDestinationEventDestinationCloudWatchDestination {
		return v.CloudWatchDestination
	})
	return pulumix.GPtrOutput[ConfigurationSetEventDestinationEventDestinationCloudWatchDestination, ConfigurationSetEventDestinationEventDestinationCloudWatchDestinationOutput]{OutputState: value.OutputState}
}

// When the event destination is enabled, the specified event types are sent to the destinations. Default: `false`.
func (o ConfigurationSetEventDestinationEventDestinationOutput) Enabled() pulumix.Output[*bool] {
	return pulumix.Apply[ConfigurationSetEventDestinationEventDestination](o, func(v ConfigurationSetEventDestinationEventDestination) *bool { return v.Enabled })
}

// An object that defines an Amazon Kinesis Data Firehose destination for email events. See kinesisFirehoseDestination below.
func (o ConfigurationSetEventDestinationEventDestinationOutput) KinesisFirehoseDestination() pulumix.GPtrOutput[ConfigurationSetEventDestinationEventDestinationKinesisFirehoseDestination, ConfigurationSetEventDestinationEventDestinationKinesisFirehoseDestinationOutput] {
	value := pulumix.Apply[ConfigurationSetEventDestinationEventDestination](o, func(v ConfigurationSetEventDestinationEventDestination) *ConfigurationSetEventDestinationEventDestinationKinesisFirehoseDestination {
		return v.KinesisFirehoseDestination
	})
	return pulumix.GPtrOutput[ConfigurationSetEventDestinationEventDestinationKinesisFirehoseDestination, ConfigurationSetEventDestinationEventDestinationKinesisFirehoseDestinationOutput]{OutputState: value.OutputState}
}

// An array that specifies which events the Amazon SES API v2 should send to the destinations. Valid values: `SEND`, `REJECT`, `BOUNCE`, `COMPLAINT`, `DELIVERY`, `OPEN`, `CLICK`, `RENDERING_FAILURE`, `DELIVERY_DELAY`, `SUBSCRIPTION`.
//
// The following arguments are optional:
func (o ConfigurationSetEventDestinationEventDestinationOutput) MatchingEventTypes() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[ConfigurationSetEventDestinationEventDestination](o, func(v ConfigurationSetEventDestinationEventDestination) []string { return v.MatchingEventTypes })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// An object that defines an Amazon Pinpoint project destination for email events. See pinpointDestination below.
func (o ConfigurationSetEventDestinationEventDestinationOutput) PinpointDestination() pulumix.GPtrOutput[ConfigurationSetEventDestinationEventDestinationPinpointDestination, ConfigurationSetEventDestinationEventDestinationPinpointDestinationOutput] {
	value := pulumix.Apply[ConfigurationSetEventDestinationEventDestination](o, func(v ConfigurationSetEventDestinationEventDestination) *ConfigurationSetEventDestinationEventDestinationPinpointDestination {
		return v.PinpointDestination
	})
	return pulumix.GPtrOutput[ConfigurationSetEventDestinationEventDestinationPinpointDestination, ConfigurationSetEventDestinationEventDestinationPinpointDestinationOutput]{OutputState: value.OutputState}
}

// An object that defines an Amazon SNS destination for email events. See snsDestination below.
func (o ConfigurationSetEventDestinationEventDestinationOutput) SnsDestination() pulumix.GPtrOutput[ConfigurationSetEventDestinationEventDestinationSnsDestination, ConfigurationSetEventDestinationEventDestinationSnsDestinationOutput] {
	value := pulumix.Apply[ConfigurationSetEventDestinationEventDestination](o, func(v ConfigurationSetEventDestinationEventDestination) *ConfigurationSetEventDestinationEventDestinationSnsDestination {
		return v.SnsDestination
	})
	return pulumix.GPtrOutput[ConfigurationSetEventDestinationEventDestinationSnsDestination, ConfigurationSetEventDestinationEventDestinationSnsDestinationOutput]{OutputState: value.OutputState}
}

type ConfigurationSetEventDestinationEventDestinationCloudWatchDestination struct {
	// An array of objects that define the dimensions to use when you send email events to Amazon CloudWatch. See dimensionConfiguration below.
	DimensionConfigurations []ConfigurationSetEventDestinationEventDestinationCloudWatchDestinationDimensionConfiguration `pulumi:"dimensionConfigurations"`
}

type ConfigurationSetEventDestinationEventDestinationCloudWatchDestinationArgs struct {
	// An array of objects that define the dimensions to use when you send email events to Amazon CloudWatch. See dimensionConfiguration below.
	DimensionConfigurations pulumix.Input[[]*ConfigurationSetEventDestinationEventDestinationCloudWatchDestinationDimensionConfigurationArgs] `pulumi:"dimensionConfigurations"`
}

func (ConfigurationSetEventDestinationEventDestinationCloudWatchDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationSetEventDestinationEventDestinationCloudWatchDestination)(nil)).Elem()
}

func (i ConfigurationSetEventDestinationEventDestinationCloudWatchDestinationArgs) ToConfigurationSetEventDestinationEventDestinationCloudWatchDestinationOutput() ConfigurationSetEventDestinationEventDestinationCloudWatchDestinationOutput {
	return i.ToConfigurationSetEventDestinationEventDestinationCloudWatchDestinationOutputWithContext(context.Background())
}

func (i ConfigurationSetEventDestinationEventDestinationCloudWatchDestinationArgs) ToConfigurationSetEventDestinationEventDestinationCloudWatchDestinationOutputWithContext(ctx context.Context) ConfigurationSetEventDestinationEventDestinationCloudWatchDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationSetEventDestinationEventDestinationCloudWatchDestinationOutput)
}

func (i *ConfigurationSetEventDestinationEventDestinationCloudWatchDestinationArgs) ToOutput(ctx context.Context) pulumix.Output[*ConfigurationSetEventDestinationEventDestinationCloudWatchDestinationArgs] {
	return pulumix.Val(i)
}

type ConfigurationSetEventDestinationEventDestinationCloudWatchDestinationOutput struct{ *pulumi.OutputState }

func (ConfigurationSetEventDestinationEventDestinationCloudWatchDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationSetEventDestinationEventDestinationCloudWatchDestination)(nil)).Elem()
}

func (o ConfigurationSetEventDestinationEventDestinationCloudWatchDestinationOutput) ToConfigurationSetEventDestinationEventDestinationCloudWatchDestinationOutput() ConfigurationSetEventDestinationEventDestinationCloudWatchDestinationOutput {
	return o
}

func (o ConfigurationSetEventDestinationEventDestinationCloudWatchDestinationOutput) ToConfigurationSetEventDestinationEventDestinationCloudWatchDestinationOutputWithContext(ctx context.Context) ConfigurationSetEventDestinationEventDestinationCloudWatchDestinationOutput {
	return o
}

func (o ConfigurationSetEventDestinationEventDestinationCloudWatchDestinationOutput) ToOutput(ctx context.Context) pulumix.Output[ConfigurationSetEventDestinationEventDestinationCloudWatchDestination] {
	return pulumix.Output[ConfigurationSetEventDestinationEventDestinationCloudWatchDestination]{
		OutputState: o.OutputState,
	}
}

// An array of objects that define the dimensions to use when you send email events to Amazon CloudWatch. See dimensionConfiguration below.
func (o ConfigurationSetEventDestinationEventDestinationCloudWatchDestinationOutput) DimensionConfigurations() pulumix.GArrayOutput[ConfigurationSetEventDestinationEventDestinationCloudWatchDestinationDimensionConfiguration, ConfigurationSetEventDestinationEventDestinationCloudWatchDestinationDimensionConfigurationOutput] {
	value := pulumix.Apply[ConfigurationSetEventDestinationEventDestinationCloudWatchDestination](o, func(v ConfigurationSetEventDestinationEventDestinationCloudWatchDestination) []ConfigurationSetEventDestinationEventDestinationCloudWatchDestinationDimensionConfiguration {
		return v.DimensionConfigurations
	})
	return pulumix.GArrayOutput[ConfigurationSetEventDestinationEventDestinationCloudWatchDestinationDimensionConfiguration, ConfigurationSetEventDestinationEventDestinationCloudWatchDestinationDimensionConfigurationOutput]{OutputState: value.OutputState}
}

type ConfigurationSetEventDestinationEventDestinationCloudWatchDestinationDimensionConfiguration struct {
	// The default value of the dimension that is published to Amazon CloudWatch if you don't provide the value of the dimension when you send an email.
	DefaultDimensionValue string `pulumi:"defaultDimensionValue"`
	// The name of an Amazon CloudWatch dimension associated with an email sending metric.
	DimensionName string `pulumi:"dimensionName"`
	// The location where the Amazon SES API v2 finds the value of a dimension to publish to Amazon CloudWatch. Valid values: `MESSAGE_TAG`, `EMAIL_HEADER`, `LINK_TAG`.
	DimensionValueSource string `pulumi:"dimensionValueSource"`
}

type ConfigurationSetEventDestinationEventDestinationCloudWatchDestinationDimensionConfigurationArgs struct {
	// The default value of the dimension that is published to Amazon CloudWatch if you don't provide the value of the dimension when you send an email.
	DefaultDimensionValue pulumix.Input[string] `pulumi:"defaultDimensionValue"`
	// The name of an Amazon CloudWatch dimension associated with an email sending metric.
	DimensionName pulumix.Input[string] `pulumi:"dimensionName"`
	// The location where the Amazon SES API v2 finds the value of a dimension to publish to Amazon CloudWatch. Valid values: `MESSAGE_TAG`, `EMAIL_HEADER`, `LINK_TAG`.
	DimensionValueSource pulumix.Input[string] `pulumi:"dimensionValueSource"`
}

func (ConfigurationSetEventDestinationEventDestinationCloudWatchDestinationDimensionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationSetEventDestinationEventDestinationCloudWatchDestinationDimensionConfiguration)(nil)).Elem()
}

func (i ConfigurationSetEventDestinationEventDestinationCloudWatchDestinationDimensionConfigurationArgs) ToConfigurationSetEventDestinationEventDestinationCloudWatchDestinationDimensionConfigurationOutput() ConfigurationSetEventDestinationEventDestinationCloudWatchDestinationDimensionConfigurationOutput {
	return i.ToConfigurationSetEventDestinationEventDestinationCloudWatchDestinationDimensionConfigurationOutputWithContext(context.Background())
}

func (i ConfigurationSetEventDestinationEventDestinationCloudWatchDestinationDimensionConfigurationArgs) ToConfigurationSetEventDestinationEventDestinationCloudWatchDestinationDimensionConfigurationOutputWithContext(ctx context.Context) ConfigurationSetEventDestinationEventDestinationCloudWatchDestinationDimensionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationSetEventDestinationEventDestinationCloudWatchDestinationDimensionConfigurationOutput)
}

func (i *ConfigurationSetEventDestinationEventDestinationCloudWatchDestinationDimensionConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*ConfigurationSetEventDestinationEventDestinationCloudWatchDestinationDimensionConfigurationArgs] {
	return pulumix.Val(i)
}

type ConfigurationSetEventDestinationEventDestinationCloudWatchDestinationDimensionConfigurationOutput struct{ *pulumi.OutputState }

func (ConfigurationSetEventDestinationEventDestinationCloudWatchDestinationDimensionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationSetEventDestinationEventDestinationCloudWatchDestinationDimensionConfiguration)(nil)).Elem()
}

func (o ConfigurationSetEventDestinationEventDestinationCloudWatchDestinationDimensionConfigurationOutput) ToConfigurationSetEventDestinationEventDestinationCloudWatchDestinationDimensionConfigurationOutput() ConfigurationSetEventDestinationEventDestinationCloudWatchDestinationDimensionConfigurationOutput {
	return o
}

func (o ConfigurationSetEventDestinationEventDestinationCloudWatchDestinationDimensionConfigurationOutput) ToConfigurationSetEventDestinationEventDestinationCloudWatchDestinationDimensionConfigurationOutputWithContext(ctx context.Context) ConfigurationSetEventDestinationEventDestinationCloudWatchDestinationDimensionConfigurationOutput {
	return o
}

func (o ConfigurationSetEventDestinationEventDestinationCloudWatchDestinationDimensionConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[ConfigurationSetEventDestinationEventDestinationCloudWatchDestinationDimensionConfiguration] {
	return pulumix.Output[ConfigurationSetEventDestinationEventDestinationCloudWatchDestinationDimensionConfiguration]{
		OutputState: o.OutputState,
	}
}

// The default value of the dimension that is published to Amazon CloudWatch if you don't provide the value of the dimension when you send an email.
func (o ConfigurationSetEventDestinationEventDestinationCloudWatchDestinationDimensionConfigurationOutput) DefaultDimensionValue() pulumix.Output[string] {
	return pulumix.Apply[ConfigurationSetEventDestinationEventDestinationCloudWatchDestinationDimensionConfiguration](o, func(v ConfigurationSetEventDestinationEventDestinationCloudWatchDestinationDimensionConfiguration) string {
		return v.DefaultDimensionValue
	})
}

// The name of an Amazon CloudWatch dimension associated with an email sending metric.
func (o ConfigurationSetEventDestinationEventDestinationCloudWatchDestinationDimensionConfigurationOutput) DimensionName() pulumix.Output[string] {
	return pulumix.Apply[ConfigurationSetEventDestinationEventDestinationCloudWatchDestinationDimensionConfiguration](o, func(v ConfigurationSetEventDestinationEventDestinationCloudWatchDestinationDimensionConfiguration) string {
		return v.DimensionName
	})
}

// The location where the Amazon SES API v2 finds the value of a dimension to publish to Amazon CloudWatch. Valid values: `MESSAGE_TAG`, `EMAIL_HEADER`, `LINK_TAG`.
func (o ConfigurationSetEventDestinationEventDestinationCloudWatchDestinationDimensionConfigurationOutput) DimensionValueSource() pulumix.Output[string] {
	return pulumix.Apply[ConfigurationSetEventDestinationEventDestinationCloudWatchDestinationDimensionConfiguration](o, func(v ConfigurationSetEventDestinationEventDestinationCloudWatchDestinationDimensionConfiguration) string {
		return v.DimensionValueSource
	})
}

type ConfigurationSetEventDestinationEventDestinationKinesisFirehoseDestination struct {
	// The Amazon Resource Name (ARN) of the Amazon Kinesis Data Firehose stream that the Amazon SES API v2 sends email events to.
	DeliveryStreamArn string `pulumi:"deliveryStreamArn"`
	// The Amazon Resource Name (ARN) of the IAM role that the Amazon SES API v2 uses to send email events to the Amazon Kinesis Data Firehose stream.
	IamRoleArn string `pulumi:"iamRoleArn"`
}

type ConfigurationSetEventDestinationEventDestinationKinesisFirehoseDestinationArgs struct {
	// The Amazon Resource Name (ARN) of the Amazon Kinesis Data Firehose stream that the Amazon SES API v2 sends email events to.
	DeliveryStreamArn pulumix.Input[string] `pulumi:"deliveryStreamArn"`
	// The Amazon Resource Name (ARN) of the IAM role that the Amazon SES API v2 uses to send email events to the Amazon Kinesis Data Firehose stream.
	IamRoleArn pulumix.Input[string] `pulumi:"iamRoleArn"`
}

func (ConfigurationSetEventDestinationEventDestinationKinesisFirehoseDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationSetEventDestinationEventDestinationKinesisFirehoseDestination)(nil)).Elem()
}

func (i ConfigurationSetEventDestinationEventDestinationKinesisFirehoseDestinationArgs) ToConfigurationSetEventDestinationEventDestinationKinesisFirehoseDestinationOutput() ConfigurationSetEventDestinationEventDestinationKinesisFirehoseDestinationOutput {
	return i.ToConfigurationSetEventDestinationEventDestinationKinesisFirehoseDestinationOutputWithContext(context.Background())
}

func (i ConfigurationSetEventDestinationEventDestinationKinesisFirehoseDestinationArgs) ToConfigurationSetEventDestinationEventDestinationKinesisFirehoseDestinationOutputWithContext(ctx context.Context) ConfigurationSetEventDestinationEventDestinationKinesisFirehoseDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationSetEventDestinationEventDestinationKinesisFirehoseDestinationOutput)
}

func (i *ConfigurationSetEventDestinationEventDestinationKinesisFirehoseDestinationArgs) ToOutput(ctx context.Context) pulumix.Output[*ConfigurationSetEventDestinationEventDestinationKinesisFirehoseDestinationArgs] {
	return pulumix.Val(i)
}

type ConfigurationSetEventDestinationEventDestinationKinesisFirehoseDestinationOutput struct{ *pulumi.OutputState }

func (ConfigurationSetEventDestinationEventDestinationKinesisFirehoseDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationSetEventDestinationEventDestinationKinesisFirehoseDestination)(nil)).Elem()
}

func (o ConfigurationSetEventDestinationEventDestinationKinesisFirehoseDestinationOutput) ToConfigurationSetEventDestinationEventDestinationKinesisFirehoseDestinationOutput() ConfigurationSetEventDestinationEventDestinationKinesisFirehoseDestinationOutput {
	return o
}

func (o ConfigurationSetEventDestinationEventDestinationKinesisFirehoseDestinationOutput) ToConfigurationSetEventDestinationEventDestinationKinesisFirehoseDestinationOutputWithContext(ctx context.Context) ConfigurationSetEventDestinationEventDestinationKinesisFirehoseDestinationOutput {
	return o
}

func (o ConfigurationSetEventDestinationEventDestinationKinesisFirehoseDestinationOutput) ToOutput(ctx context.Context) pulumix.Output[ConfigurationSetEventDestinationEventDestinationKinesisFirehoseDestination] {
	return pulumix.Output[ConfigurationSetEventDestinationEventDestinationKinesisFirehoseDestination]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) of the Amazon Kinesis Data Firehose stream that the Amazon SES API v2 sends email events to.
func (o ConfigurationSetEventDestinationEventDestinationKinesisFirehoseDestinationOutput) DeliveryStreamArn() pulumix.Output[string] {
	return pulumix.Apply[ConfigurationSetEventDestinationEventDestinationKinesisFirehoseDestination](o, func(v ConfigurationSetEventDestinationEventDestinationKinesisFirehoseDestination) string {
		return v.DeliveryStreamArn
	})
}

// The Amazon Resource Name (ARN) of the IAM role that the Amazon SES API v2 uses to send email events to the Amazon Kinesis Data Firehose stream.
func (o ConfigurationSetEventDestinationEventDestinationKinesisFirehoseDestinationOutput) IamRoleArn() pulumix.Output[string] {
	return pulumix.Apply[ConfigurationSetEventDestinationEventDestinationKinesisFirehoseDestination](o, func(v ConfigurationSetEventDestinationEventDestinationKinesisFirehoseDestination) string {
		return v.IamRoleArn
	})
}

type ConfigurationSetEventDestinationEventDestinationPinpointDestination struct {
	ApplicationArn string `pulumi:"applicationArn"`
}

type ConfigurationSetEventDestinationEventDestinationPinpointDestinationArgs struct {
	ApplicationArn pulumix.Input[string] `pulumi:"applicationArn"`
}

func (ConfigurationSetEventDestinationEventDestinationPinpointDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationSetEventDestinationEventDestinationPinpointDestination)(nil)).Elem()
}

func (i ConfigurationSetEventDestinationEventDestinationPinpointDestinationArgs) ToConfigurationSetEventDestinationEventDestinationPinpointDestinationOutput() ConfigurationSetEventDestinationEventDestinationPinpointDestinationOutput {
	return i.ToConfigurationSetEventDestinationEventDestinationPinpointDestinationOutputWithContext(context.Background())
}

func (i ConfigurationSetEventDestinationEventDestinationPinpointDestinationArgs) ToConfigurationSetEventDestinationEventDestinationPinpointDestinationOutputWithContext(ctx context.Context) ConfigurationSetEventDestinationEventDestinationPinpointDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationSetEventDestinationEventDestinationPinpointDestinationOutput)
}

func (i *ConfigurationSetEventDestinationEventDestinationPinpointDestinationArgs) ToOutput(ctx context.Context) pulumix.Output[*ConfigurationSetEventDestinationEventDestinationPinpointDestinationArgs] {
	return pulumix.Val(i)
}

type ConfigurationSetEventDestinationEventDestinationPinpointDestinationOutput struct{ *pulumi.OutputState }

func (ConfigurationSetEventDestinationEventDestinationPinpointDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationSetEventDestinationEventDestinationPinpointDestination)(nil)).Elem()
}

func (o ConfigurationSetEventDestinationEventDestinationPinpointDestinationOutput) ToConfigurationSetEventDestinationEventDestinationPinpointDestinationOutput() ConfigurationSetEventDestinationEventDestinationPinpointDestinationOutput {
	return o
}

func (o ConfigurationSetEventDestinationEventDestinationPinpointDestinationOutput) ToConfigurationSetEventDestinationEventDestinationPinpointDestinationOutputWithContext(ctx context.Context) ConfigurationSetEventDestinationEventDestinationPinpointDestinationOutput {
	return o
}

func (o ConfigurationSetEventDestinationEventDestinationPinpointDestinationOutput) ToOutput(ctx context.Context) pulumix.Output[ConfigurationSetEventDestinationEventDestinationPinpointDestination] {
	return pulumix.Output[ConfigurationSetEventDestinationEventDestinationPinpointDestination]{
		OutputState: o.OutputState,
	}
}

func (o ConfigurationSetEventDestinationEventDestinationPinpointDestinationOutput) ApplicationArn() pulumix.Output[string] {
	return pulumix.Apply[ConfigurationSetEventDestinationEventDestinationPinpointDestination](o, func(v ConfigurationSetEventDestinationEventDestinationPinpointDestination) string {
		return v.ApplicationArn
	})
}

type ConfigurationSetEventDestinationEventDestinationSnsDestination struct {
	// The Amazon Resource Name (ARN) of the Amazon SNS topic to publish email events to.
	TopicArn string `pulumi:"topicArn"`
}

type ConfigurationSetEventDestinationEventDestinationSnsDestinationArgs struct {
	// The Amazon Resource Name (ARN) of the Amazon SNS topic to publish email events to.
	TopicArn pulumix.Input[string] `pulumi:"topicArn"`
}

func (ConfigurationSetEventDestinationEventDestinationSnsDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationSetEventDestinationEventDestinationSnsDestination)(nil)).Elem()
}

func (i ConfigurationSetEventDestinationEventDestinationSnsDestinationArgs) ToConfigurationSetEventDestinationEventDestinationSnsDestinationOutput() ConfigurationSetEventDestinationEventDestinationSnsDestinationOutput {
	return i.ToConfigurationSetEventDestinationEventDestinationSnsDestinationOutputWithContext(context.Background())
}

func (i ConfigurationSetEventDestinationEventDestinationSnsDestinationArgs) ToConfigurationSetEventDestinationEventDestinationSnsDestinationOutputWithContext(ctx context.Context) ConfigurationSetEventDestinationEventDestinationSnsDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationSetEventDestinationEventDestinationSnsDestinationOutput)
}

func (i *ConfigurationSetEventDestinationEventDestinationSnsDestinationArgs) ToOutput(ctx context.Context) pulumix.Output[*ConfigurationSetEventDestinationEventDestinationSnsDestinationArgs] {
	return pulumix.Val(i)
}

type ConfigurationSetEventDestinationEventDestinationSnsDestinationOutput struct{ *pulumi.OutputState }

func (ConfigurationSetEventDestinationEventDestinationSnsDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationSetEventDestinationEventDestinationSnsDestination)(nil)).Elem()
}

func (o ConfigurationSetEventDestinationEventDestinationSnsDestinationOutput) ToConfigurationSetEventDestinationEventDestinationSnsDestinationOutput() ConfigurationSetEventDestinationEventDestinationSnsDestinationOutput {
	return o
}

func (o ConfigurationSetEventDestinationEventDestinationSnsDestinationOutput) ToConfigurationSetEventDestinationEventDestinationSnsDestinationOutputWithContext(ctx context.Context) ConfigurationSetEventDestinationEventDestinationSnsDestinationOutput {
	return o
}

func (o ConfigurationSetEventDestinationEventDestinationSnsDestinationOutput) ToOutput(ctx context.Context) pulumix.Output[ConfigurationSetEventDestinationEventDestinationSnsDestination] {
	return pulumix.Output[ConfigurationSetEventDestinationEventDestinationSnsDestination]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) of the Amazon SNS topic to publish email events to.
func (o ConfigurationSetEventDestinationEventDestinationSnsDestinationOutput) TopicArn() pulumix.Output[string] {
	return pulumix.Apply[ConfigurationSetEventDestinationEventDestinationSnsDestination](o, func(v ConfigurationSetEventDestinationEventDestinationSnsDestination) string { return v.TopicArn })
}

type ConfigurationSetReputationOptions struct {
	// The date and time (in Unix time) when the reputation metrics were last given a fresh start. When your account is given a fresh start, your reputation metrics are calculated starting from the date of the fresh start.
	LastFreshStart *string `pulumi:"lastFreshStart"`
	// If `true`, tracking of reputation metrics is enabled for the configuration set. If `false`, tracking of reputation metrics is disabled for the configuration set.
	ReputationMetricsEnabled *bool `pulumi:"reputationMetricsEnabled"`
}

type ConfigurationSetReputationOptionsArgs struct {
	// The date and time (in Unix time) when the reputation metrics were last given a fresh start. When your account is given a fresh start, your reputation metrics are calculated starting from the date of the fresh start.
	LastFreshStart pulumix.Input[*string] `pulumi:"lastFreshStart"`
	// If `true`, tracking of reputation metrics is enabled for the configuration set. If `false`, tracking of reputation metrics is disabled for the configuration set.
	ReputationMetricsEnabled pulumix.Input[*bool] `pulumi:"reputationMetricsEnabled"`
}

func (ConfigurationSetReputationOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationSetReputationOptions)(nil)).Elem()
}

func (i ConfigurationSetReputationOptionsArgs) ToConfigurationSetReputationOptionsOutput() ConfigurationSetReputationOptionsOutput {
	return i.ToConfigurationSetReputationOptionsOutputWithContext(context.Background())
}

func (i ConfigurationSetReputationOptionsArgs) ToConfigurationSetReputationOptionsOutputWithContext(ctx context.Context) ConfigurationSetReputationOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationSetReputationOptionsOutput)
}

func (i *ConfigurationSetReputationOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[*ConfigurationSetReputationOptionsArgs] {
	return pulumix.Val(i)
}

type ConfigurationSetReputationOptionsOutput struct{ *pulumi.OutputState }

func (ConfigurationSetReputationOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationSetReputationOptions)(nil)).Elem()
}

func (o ConfigurationSetReputationOptionsOutput) ToConfigurationSetReputationOptionsOutput() ConfigurationSetReputationOptionsOutput {
	return o
}

func (o ConfigurationSetReputationOptionsOutput) ToConfigurationSetReputationOptionsOutputWithContext(ctx context.Context) ConfigurationSetReputationOptionsOutput {
	return o
}

func (o ConfigurationSetReputationOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[ConfigurationSetReputationOptions] {
	return pulumix.Output[ConfigurationSetReputationOptions]{
		OutputState: o.OutputState,
	}
}

// The date and time (in Unix time) when the reputation metrics were last given a fresh start. When your account is given a fresh start, your reputation metrics are calculated starting from the date of the fresh start.
func (o ConfigurationSetReputationOptionsOutput) LastFreshStart() pulumix.Output[*string] {
	return pulumix.Apply[ConfigurationSetReputationOptions](o, func(v ConfigurationSetReputationOptions) *string { return v.LastFreshStart })
}

// If `true`, tracking of reputation metrics is enabled for the configuration set. If `false`, tracking of reputation metrics is disabled for the configuration set.
func (o ConfigurationSetReputationOptionsOutput) ReputationMetricsEnabled() pulumix.Output[*bool] {
	return pulumix.Apply[ConfigurationSetReputationOptions](o, func(v ConfigurationSetReputationOptions) *bool { return v.ReputationMetricsEnabled })
}

type ConfigurationSetSendingOptions struct {
	// If `true`, email sending is enabled for the configuration set. If `false`, email sending is disabled for the configuration set.
	SendingEnabled *bool `pulumi:"sendingEnabled"`
}

type ConfigurationSetSendingOptionsArgs struct {
	// If `true`, email sending is enabled for the configuration set. If `false`, email sending is disabled for the configuration set.
	SendingEnabled pulumix.Input[*bool] `pulumi:"sendingEnabled"`
}

func (ConfigurationSetSendingOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationSetSendingOptions)(nil)).Elem()
}

func (i ConfigurationSetSendingOptionsArgs) ToConfigurationSetSendingOptionsOutput() ConfigurationSetSendingOptionsOutput {
	return i.ToConfigurationSetSendingOptionsOutputWithContext(context.Background())
}

func (i ConfigurationSetSendingOptionsArgs) ToConfigurationSetSendingOptionsOutputWithContext(ctx context.Context) ConfigurationSetSendingOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationSetSendingOptionsOutput)
}

func (i *ConfigurationSetSendingOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[*ConfigurationSetSendingOptionsArgs] {
	return pulumix.Val(i)
}

type ConfigurationSetSendingOptionsOutput struct{ *pulumi.OutputState }

func (ConfigurationSetSendingOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationSetSendingOptions)(nil)).Elem()
}

func (o ConfigurationSetSendingOptionsOutput) ToConfigurationSetSendingOptionsOutput() ConfigurationSetSendingOptionsOutput {
	return o
}

func (o ConfigurationSetSendingOptionsOutput) ToConfigurationSetSendingOptionsOutputWithContext(ctx context.Context) ConfigurationSetSendingOptionsOutput {
	return o
}

func (o ConfigurationSetSendingOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[ConfigurationSetSendingOptions] {
	return pulumix.Output[ConfigurationSetSendingOptions]{
		OutputState: o.OutputState,
	}
}

// If `true`, email sending is enabled for the configuration set. If `false`, email sending is disabled for the configuration set.
func (o ConfigurationSetSendingOptionsOutput) SendingEnabled() pulumix.Output[*bool] {
	return pulumix.Apply[ConfigurationSetSendingOptions](o, func(v ConfigurationSetSendingOptions) *bool { return v.SendingEnabled })
}

type ConfigurationSetSuppressionOptions struct {
	// A list that contains the reasons that email addresses are automatically added to the suppression list for your account. Valid values: `BOUNCE`, `COMPLAINT`.
	SuppressedReasons []string `pulumi:"suppressedReasons"`
}

type ConfigurationSetSuppressionOptionsArgs struct {
	// A list that contains the reasons that email addresses are automatically added to the suppression list for your account. Valid values: `BOUNCE`, `COMPLAINT`.
	SuppressedReasons pulumix.Input[[]string] `pulumi:"suppressedReasons"`
}

func (ConfigurationSetSuppressionOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationSetSuppressionOptions)(nil)).Elem()
}

func (i ConfigurationSetSuppressionOptionsArgs) ToConfigurationSetSuppressionOptionsOutput() ConfigurationSetSuppressionOptionsOutput {
	return i.ToConfigurationSetSuppressionOptionsOutputWithContext(context.Background())
}

func (i ConfigurationSetSuppressionOptionsArgs) ToConfigurationSetSuppressionOptionsOutputWithContext(ctx context.Context) ConfigurationSetSuppressionOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationSetSuppressionOptionsOutput)
}

func (i *ConfigurationSetSuppressionOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[*ConfigurationSetSuppressionOptionsArgs] {
	return pulumix.Val(i)
}

type ConfigurationSetSuppressionOptionsOutput struct{ *pulumi.OutputState }

func (ConfigurationSetSuppressionOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationSetSuppressionOptions)(nil)).Elem()
}

func (o ConfigurationSetSuppressionOptionsOutput) ToConfigurationSetSuppressionOptionsOutput() ConfigurationSetSuppressionOptionsOutput {
	return o
}

func (o ConfigurationSetSuppressionOptionsOutput) ToConfigurationSetSuppressionOptionsOutputWithContext(ctx context.Context) ConfigurationSetSuppressionOptionsOutput {
	return o
}

func (o ConfigurationSetSuppressionOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[ConfigurationSetSuppressionOptions] {
	return pulumix.Output[ConfigurationSetSuppressionOptions]{
		OutputState: o.OutputState,
	}
}

// A list that contains the reasons that email addresses are automatically added to the suppression list for your account. Valid values: `BOUNCE`, `COMPLAINT`.
func (o ConfigurationSetSuppressionOptionsOutput) SuppressedReasons() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[ConfigurationSetSuppressionOptions](o, func(v ConfigurationSetSuppressionOptions) []string { return v.SuppressedReasons })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type ConfigurationSetTrackingOptions struct {
	// The domain to use for tracking open and click events.
	CustomRedirectDomain string `pulumi:"customRedirectDomain"`
}

type ConfigurationSetTrackingOptionsArgs struct {
	// The domain to use for tracking open and click events.
	CustomRedirectDomain pulumix.Input[string] `pulumi:"customRedirectDomain"`
}

func (ConfigurationSetTrackingOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationSetTrackingOptions)(nil)).Elem()
}

func (i ConfigurationSetTrackingOptionsArgs) ToConfigurationSetTrackingOptionsOutput() ConfigurationSetTrackingOptionsOutput {
	return i.ToConfigurationSetTrackingOptionsOutputWithContext(context.Background())
}

func (i ConfigurationSetTrackingOptionsArgs) ToConfigurationSetTrackingOptionsOutputWithContext(ctx context.Context) ConfigurationSetTrackingOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationSetTrackingOptionsOutput)
}

func (i *ConfigurationSetTrackingOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[*ConfigurationSetTrackingOptionsArgs] {
	return pulumix.Val(i)
}

type ConfigurationSetTrackingOptionsOutput struct{ *pulumi.OutputState }

func (ConfigurationSetTrackingOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationSetTrackingOptions)(nil)).Elem()
}

func (o ConfigurationSetTrackingOptionsOutput) ToConfigurationSetTrackingOptionsOutput() ConfigurationSetTrackingOptionsOutput {
	return o
}

func (o ConfigurationSetTrackingOptionsOutput) ToConfigurationSetTrackingOptionsOutputWithContext(ctx context.Context) ConfigurationSetTrackingOptionsOutput {
	return o
}

func (o ConfigurationSetTrackingOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[ConfigurationSetTrackingOptions] {
	return pulumix.Output[ConfigurationSetTrackingOptions]{
		OutputState: o.OutputState,
	}
}

// The domain to use for tracking open and click events.
func (o ConfigurationSetTrackingOptionsOutput) CustomRedirectDomain() pulumix.Output[string] {
	return pulumix.Apply[ConfigurationSetTrackingOptions](o, func(v ConfigurationSetTrackingOptions) string { return v.CustomRedirectDomain })
}

type ConfigurationSetVdmOptions struct {
	// Specifies additional settings for your VDM configuration as applicable to the Dashboard.
	DashboardOptions *ConfigurationSetVdmOptionsDashboardOptions `pulumi:"dashboardOptions"`
	// Specifies additional settings for your VDM configuration as applicable to the Guardian.
	GuardianOptions *ConfigurationSetVdmOptionsGuardianOptions `pulumi:"guardianOptions"`
}

type ConfigurationSetVdmOptionsArgs struct {
	// Specifies additional settings for your VDM configuration as applicable to the Dashboard.
	DashboardOptions pulumix.Input[*ConfigurationSetVdmOptionsDashboardOptionsArgs] `pulumi:"dashboardOptions"`
	// Specifies additional settings for your VDM configuration as applicable to the Guardian.
	GuardianOptions pulumix.Input[*ConfigurationSetVdmOptionsGuardianOptionsArgs] `pulumi:"guardianOptions"`
}

func (ConfigurationSetVdmOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationSetVdmOptions)(nil)).Elem()
}

func (i ConfigurationSetVdmOptionsArgs) ToConfigurationSetVdmOptionsOutput() ConfigurationSetVdmOptionsOutput {
	return i.ToConfigurationSetVdmOptionsOutputWithContext(context.Background())
}

func (i ConfigurationSetVdmOptionsArgs) ToConfigurationSetVdmOptionsOutputWithContext(ctx context.Context) ConfigurationSetVdmOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationSetVdmOptionsOutput)
}

func (i *ConfigurationSetVdmOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[*ConfigurationSetVdmOptionsArgs] {
	return pulumix.Val(i)
}

type ConfigurationSetVdmOptionsOutput struct{ *pulumi.OutputState }

func (ConfigurationSetVdmOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationSetVdmOptions)(nil)).Elem()
}

func (o ConfigurationSetVdmOptionsOutput) ToConfigurationSetVdmOptionsOutput() ConfigurationSetVdmOptionsOutput {
	return o
}

func (o ConfigurationSetVdmOptionsOutput) ToConfigurationSetVdmOptionsOutputWithContext(ctx context.Context) ConfigurationSetVdmOptionsOutput {
	return o
}

func (o ConfigurationSetVdmOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[ConfigurationSetVdmOptions] {
	return pulumix.Output[ConfigurationSetVdmOptions]{
		OutputState: o.OutputState,
	}
}

// Specifies additional settings for your VDM configuration as applicable to the Dashboard.
func (o ConfigurationSetVdmOptionsOutput) DashboardOptions() pulumix.GPtrOutput[ConfigurationSetVdmOptionsDashboardOptions, ConfigurationSetVdmOptionsDashboardOptionsOutput] {
	value := pulumix.Apply[ConfigurationSetVdmOptions](o, func(v ConfigurationSetVdmOptions) *ConfigurationSetVdmOptionsDashboardOptions {
		return v.DashboardOptions
	})
	return pulumix.GPtrOutput[ConfigurationSetVdmOptionsDashboardOptions, ConfigurationSetVdmOptionsDashboardOptionsOutput]{OutputState: value.OutputState}
}

// Specifies additional settings for your VDM configuration as applicable to the Guardian.
func (o ConfigurationSetVdmOptionsOutput) GuardianOptions() pulumix.GPtrOutput[ConfigurationSetVdmOptionsGuardianOptions, ConfigurationSetVdmOptionsGuardianOptionsOutput] {
	value := pulumix.Apply[ConfigurationSetVdmOptions](o, func(v ConfigurationSetVdmOptions) *ConfigurationSetVdmOptionsGuardianOptions {
		return v.GuardianOptions
	})
	return pulumix.GPtrOutput[ConfigurationSetVdmOptionsGuardianOptions, ConfigurationSetVdmOptionsGuardianOptionsOutput]{OutputState: value.OutputState}
}

type ConfigurationSetVdmOptionsDashboardOptions struct {
	// Specifies the status of your VDM engagement metrics collection. Valid values: `ENABLED`, `DISABLED`.
	EngagementMetrics *string `pulumi:"engagementMetrics"`
}

type ConfigurationSetVdmOptionsDashboardOptionsArgs struct {
	// Specifies the status of your VDM engagement metrics collection. Valid values: `ENABLED`, `DISABLED`.
	EngagementMetrics pulumix.Input[*string] `pulumi:"engagementMetrics"`
}

func (ConfigurationSetVdmOptionsDashboardOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationSetVdmOptionsDashboardOptions)(nil)).Elem()
}

func (i ConfigurationSetVdmOptionsDashboardOptionsArgs) ToConfigurationSetVdmOptionsDashboardOptionsOutput() ConfigurationSetVdmOptionsDashboardOptionsOutput {
	return i.ToConfigurationSetVdmOptionsDashboardOptionsOutputWithContext(context.Background())
}

func (i ConfigurationSetVdmOptionsDashboardOptionsArgs) ToConfigurationSetVdmOptionsDashboardOptionsOutputWithContext(ctx context.Context) ConfigurationSetVdmOptionsDashboardOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationSetVdmOptionsDashboardOptionsOutput)
}

func (i *ConfigurationSetVdmOptionsDashboardOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[*ConfigurationSetVdmOptionsDashboardOptionsArgs] {
	return pulumix.Val(i)
}

type ConfigurationSetVdmOptionsDashboardOptionsOutput struct{ *pulumi.OutputState }

func (ConfigurationSetVdmOptionsDashboardOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationSetVdmOptionsDashboardOptions)(nil)).Elem()
}

func (o ConfigurationSetVdmOptionsDashboardOptionsOutput) ToConfigurationSetVdmOptionsDashboardOptionsOutput() ConfigurationSetVdmOptionsDashboardOptionsOutput {
	return o
}

func (o ConfigurationSetVdmOptionsDashboardOptionsOutput) ToConfigurationSetVdmOptionsDashboardOptionsOutputWithContext(ctx context.Context) ConfigurationSetVdmOptionsDashboardOptionsOutput {
	return o
}

func (o ConfigurationSetVdmOptionsDashboardOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[ConfigurationSetVdmOptionsDashboardOptions] {
	return pulumix.Output[ConfigurationSetVdmOptionsDashboardOptions]{
		OutputState: o.OutputState,
	}
}

// Specifies the status of your VDM engagement metrics collection. Valid values: `ENABLED`, `DISABLED`.
func (o ConfigurationSetVdmOptionsDashboardOptionsOutput) EngagementMetrics() pulumix.Output[*string] {
	return pulumix.Apply[ConfigurationSetVdmOptionsDashboardOptions](o, func(v ConfigurationSetVdmOptionsDashboardOptions) *string { return v.EngagementMetrics })
}

type ConfigurationSetVdmOptionsGuardianOptions struct {
	// Specifies the status of your VDM optimized shared delivery. Valid values: `ENABLED`, `DISABLED`.
	OptimizedSharedDelivery *string `pulumi:"optimizedSharedDelivery"`
}

type ConfigurationSetVdmOptionsGuardianOptionsArgs struct {
	// Specifies the status of your VDM optimized shared delivery. Valid values: `ENABLED`, `DISABLED`.
	OptimizedSharedDelivery pulumix.Input[*string] `pulumi:"optimizedSharedDelivery"`
}

func (ConfigurationSetVdmOptionsGuardianOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationSetVdmOptionsGuardianOptions)(nil)).Elem()
}

func (i ConfigurationSetVdmOptionsGuardianOptionsArgs) ToConfigurationSetVdmOptionsGuardianOptionsOutput() ConfigurationSetVdmOptionsGuardianOptionsOutput {
	return i.ToConfigurationSetVdmOptionsGuardianOptionsOutputWithContext(context.Background())
}

func (i ConfigurationSetVdmOptionsGuardianOptionsArgs) ToConfigurationSetVdmOptionsGuardianOptionsOutputWithContext(ctx context.Context) ConfigurationSetVdmOptionsGuardianOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationSetVdmOptionsGuardianOptionsOutput)
}

func (i *ConfigurationSetVdmOptionsGuardianOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[*ConfigurationSetVdmOptionsGuardianOptionsArgs] {
	return pulumix.Val(i)
}

type ConfigurationSetVdmOptionsGuardianOptionsOutput struct{ *pulumi.OutputState }

func (ConfigurationSetVdmOptionsGuardianOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationSetVdmOptionsGuardianOptions)(nil)).Elem()
}

func (o ConfigurationSetVdmOptionsGuardianOptionsOutput) ToConfigurationSetVdmOptionsGuardianOptionsOutput() ConfigurationSetVdmOptionsGuardianOptionsOutput {
	return o
}

func (o ConfigurationSetVdmOptionsGuardianOptionsOutput) ToConfigurationSetVdmOptionsGuardianOptionsOutputWithContext(ctx context.Context) ConfigurationSetVdmOptionsGuardianOptionsOutput {
	return o
}

func (o ConfigurationSetVdmOptionsGuardianOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[ConfigurationSetVdmOptionsGuardianOptions] {
	return pulumix.Output[ConfigurationSetVdmOptionsGuardianOptions]{
		OutputState: o.OutputState,
	}
}

// Specifies the status of your VDM optimized shared delivery. Valid values: `ENABLED`, `DISABLED`.
func (o ConfigurationSetVdmOptionsGuardianOptionsOutput) OptimizedSharedDelivery() pulumix.Output[*string] {
	return pulumix.Apply[ConfigurationSetVdmOptionsGuardianOptions](o, func(v ConfigurationSetVdmOptionsGuardianOptions) *string { return v.OptimizedSharedDelivery })
}

type ContactListTopic struct {
	// The default subscription status to be applied to a contact if the contact has not noted their preference for subscribing to a topic.
	DefaultSubscriptionStatus string `pulumi:"defaultSubscriptionStatus"`
	// A description of what the topic is about, which the contact will see.
	Description *string `pulumi:"description"`
	// The name of the topic the contact will see.
	DisplayName string `pulumi:"displayName"`
	// The name of the topic.
	//
	// The following arguments are optional:
	TopicName string `pulumi:"topicName"`
}

type ContactListTopicArgs struct {
	// The default subscription status to be applied to a contact if the contact has not noted their preference for subscribing to a topic.
	DefaultSubscriptionStatus pulumix.Input[string] `pulumi:"defaultSubscriptionStatus"`
	// A description of what the topic is about, which the contact will see.
	Description pulumix.Input[*string] `pulumi:"description"`
	// The name of the topic the contact will see.
	DisplayName pulumix.Input[string] `pulumi:"displayName"`
	// The name of the topic.
	//
	// The following arguments are optional:
	TopicName pulumix.Input[string] `pulumi:"topicName"`
}

func (ContactListTopicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactListTopic)(nil)).Elem()
}

func (i ContactListTopicArgs) ToContactListTopicOutput() ContactListTopicOutput {
	return i.ToContactListTopicOutputWithContext(context.Background())
}

func (i ContactListTopicArgs) ToContactListTopicOutputWithContext(ctx context.Context) ContactListTopicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactListTopicOutput)
}

func (i *ContactListTopicArgs) ToOutput(ctx context.Context) pulumix.Output[*ContactListTopicArgs] {
	return pulumix.Val(i)
}

type ContactListTopicOutput struct{ *pulumi.OutputState }

func (ContactListTopicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactListTopic)(nil)).Elem()
}

func (o ContactListTopicOutput) ToContactListTopicOutput() ContactListTopicOutput {
	return o
}

func (o ContactListTopicOutput) ToContactListTopicOutputWithContext(ctx context.Context) ContactListTopicOutput {
	return o
}

func (o ContactListTopicOutput) ToOutput(ctx context.Context) pulumix.Output[ContactListTopic] {
	return pulumix.Output[ContactListTopic]{
		OutputState: o.OutputState,
	}
}

// The default subscription status to be applied to a contact if the contact has not noted their preference for subscribing to a topic.
func (o ContactListTopicOutput) DefaultSubscriptionStatus() pulumix.Output[string] {
	return pulumix.Apply[ContactListTopic](o, func(v ContactListTopic) string { return v.DefaultSubscriptionStatus })
}

// A description of what the topic is about, which the contact will see.
func (o ContactListTopicOutput) Description() pulumix.Output[*string] {
	return pulumix.Apply[ContactListTopic](o, func(v ContactListTopic) *string { return v.Description })
}

// The name of the topic the contact will see.
func (o ContactListTopicOutput) DisplayName() pulumix.Output[string] {
	return pulumix.Apply[ContactListTopic](o, func(v ContactListTopic) string { return v.DisplayName })
}

// The name of the topic.
//
// The following arguments are optional:
func (o ContactListTopicOutput) TopicName() pulumix.Output[string] {
	return pulumix.Apply[ContactListTopic](o, func(v ContactListTopic) string { return v.TopicName })
}

type EmailIdentityDkimSigningAttributes struct {
	// [Easy DKIM] The key length of the DKIM key pair in use.
	CurrentSigningKeyLength *string `pulumi:"currentSigningKeyLength"`
	// [Bring Your Own DKIM] A private key that's used to generate a DKIM signature. The private key must use 1024 or 2048-bit RSA encryption, and must be encoded using base64 encoding.
	//
	// > **NOTE:** You have to delete the first and last lines ('-----BEGIN PRIVATE KEY-----' and '-----END PRIVATE KEY-----', respectively) of the generated private key. Additionally, you have to remove the line breaks in the generated private key. The resulting value is a string of characters with no spaces or line breaks.
	DomainSigningPrivateKey *string `pulumi:"domainSigningPrivateKey"`
	// [Bring Your Own DKIM] A string that's used to identify a public key in the DNS configuration for a domain.
	DomainSigningSelector *string `pulumi:"domainSigningSelector"`
	// [Easy DKIM] The last time a key pair was generated for this identity.
	LastKeyGenerationTimestamp *string `pulumi:"lastKeyGenerationTimestamp"`
	// [Easy DKIM] The key length of the future DKIM key pair to be generated. This can be changed at most once per day. Valid values: `RSA_1024_BIT`, `RSA_2048_BIT`.
	NextSigningKeyLength *string `pulumi:"nextSigningKeyLength"`
	// A string that indicates how DKIM was configured for the identity. `AWS_SES` indicates that DKIM was configured for the identity by using Easy DKIM. `EXTERNAL` indicates that DKIM was configured for the identity by using Bring Your Own DKIM (BYODKIM).
	SigningAttributesOrigin *string `pulumi:"signingAttributesOrigin"`
	// Describes whether or not Amazon SES has successfully located the DKIM records in the DNS records for the domain. See the [AWS SES API v2 Reference](https://docs.aws.amazon.com/ses/latest/APIReference-V2/API_DkimAttributes.html#SES-Type-DkimAttributes-Status) for supported statuses.
	Status *string `pulumi:"status"`
	// If you used Easy DKIM to configure DKIM authentication for the domain, then this object contains a set of unique strings that you use to create a set of CNAME records that you add to the DNS configuration for your domain. When Amazon SES detects these records in the DNS configuration for your domain, the DKIM authentication process is complete. If you configured DKIM authentication for the domain by providing your own public-private key pair, then this object contains the selector for the public key.
	Tokens []string `pulumi:"tokens"`
}

type EmailIdentityDkimSigningAttributesArgs struct {
	// [Easy DKIM] The key length of the DKIM key pair in use.
	CurrentSigningKeyLength pulumix.Input[*string] `pulumi:"currentSigningKeyLength"`
	// [Bring Your Own DKIM] A private key that's used to generate a DKIM signature. The private key must use 1024 or 2048-bit RSA encryption, and must be encoded using base64 encoding.
	//
	// > **NOTE:** You have to delete the first and last lines ('-----BEGIN PRIVATE KEY-----' and '-----END PRIVATE KEY-----', respectively) of the generated private key. Additionally, you have to remove the line breaks in the generated private key. The resulting value is a string of characters with no spaces or line breaks.
	DomainSigningPrivateKey pulumix.Input[*string] `pulumi:"domainSigningPrivateKey"`
	// [Bring Your Own DKIM] A string that's used to identify a public key in the DNS configuration for a domain.
	DomainSigningSelector pulumix.Input[*string] `pulumi:"domainSigningSelector"`
	// [Easy DKIM] The last time a key pair was generated for this identity.
	LastKeyGenerationTimestamp pulumix.Input[*string] `pulumi:"lastKeyGenerationTimestamp"`
	// [Easy DKIM] The key length of the future DKIM key pair to be generated. This can be changed at most once per day. Valid values: `RSA_1024_BIT`, `RSA_2048_BIT`.
	NextSigningKeyLength pulumix.Input[*string] `pulumi:"nextSigningKeyLength"`
	// A string that indicates how DKIM was configured for the identity. `AWS_SES` indicates that DKIM was configured for the identity by using Easy DKIM. `EXTERNAL` indicates that DKIM was configured for the identity by using Bring Your Own DKIM (BYODKIM).
	SigningAttributesOrigin pulumix.Input[*string] `pulumi:"signingAttributesOrigin"`
	// Describes whether or not Amazon SES has successfully located the DKIM records in the DNS records for the domain. See the [AWS SES API v2 Reference](https://docs.aws.amazon.com/ses/latest/APIReference-V2/API_DkimAttributes.html#SES-Type-DkimAttributes-Status) for supported statuses.
	Status pulumix.Input[*string] `pulumi:"status"`
	// If you used Easy DKIM to configure DKIM authentication for the domain, then this object contains a set of unique strings that you use to create a set of CNAME records that you add to the DNS configuration for your domain. When Amazon SES detects these records in the DNS configuration for your domain, the DKIM authentication process is complete. If you configured DKIM authentication for the domain by providing your own public-private key pair, then this object contains the selector for the public key.
	Tokens pulumix.Input[[]string] `pulumi:"tokens"`
}

func (EmailIdentityDkimSigningAttributesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailIdentityDkimSigningAttributes)(nil)).Elem()
}

func (i EmailIdentityDkimSigningAttributesArgs) ToEmailIdentityDkimSigningAttributesOutput() EmailIdentityDkimSigningAttributesOutput {
	return i.ToEmailIdentityDkimSigningAttributesOutputWithContext(context.Background())
}

func (i EmailIdentityDkimSigningAttributesArgs) ToEmailIdentityDkimSigningAttributesOutputWithContext(ctx context.Context) EmailIdentityDkimSigningAttributesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailIdentityDkimSigningAttributesOutput)
}

func (i *EmailIdentityDkimSigningAttributesArgs) ToOutput(ctx context.Context) pulumix.Output[*EmailIdentityDkimSigningAttributesArgs] {
	return pulumix.Val(i)
}

type EmailIdentityDkimSigningAttributesOutput struct{ *pulumi.OutputState }

func (EmailIdentityDkimSigningAttributesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailIdentityDkimSigningAttributes)(nil)).Elem()
}

func (o EmailIdentityDkimSigningAttributesOutput) ToEmailIdentityDkimSigningAttributesOutput() EmailIdentityDkimSigningAttributesOutput {
	return o
}

func (o EmailIdentityDkimSigningAttributesOutput) ToEmailIdentityDkimSigningAttributesOutputWithContext(ctx context.Context) EmailIdentityDkimSigningAttributesOutput {
	return o
}

func (o EmailIdentityDkimSigningAttributesOutput) ToOutput(ctx context.Context) pulumix.Output[EmailIdentityDkimSigningAttributes] {
	return pulumix.Output[EmailIdentityDkimSigningAttributes]{
		OutputState: o.OutputState,
	}
}

// [Easy DKIM] The key length of the DKIM key pair in use.
func (o EmailIdentityDkimSigningAttributesOutput) CurrentSigningKeyLength() pulumix.Output[*string] {
	return pulumix.Apply[EmailIdentityDkimSigningAttributes](o, func(v EmailIdentityDkimSigningAttributes) *string { return v.CurrentSigningKeyLength })
}

// [Bring Your Own DKIM] A private key that's used to generate a DKIM signature. The private key must use 1024 or 2048-bit RSA encryption, and must be encoded using base64 encoding.
//
// > **NOTE:** You have to delete the first and last lines ('-----BEGIN PRIVATE KEY-----' and '-----END PRIVATE KEY-----', respectively) of the generated private key. Additionally, you have to remove the line breaks in the generated private key. The resulting value is a string of characters with no spaces or line breaks.
func (o EmailIdentityDkimSigningAttributesOutput) DomainSigningPrivateKey() pulumix.Output[*string] {
	return pulumix.Apply[EmailIdentityDkimSigningAttributes](o, func(v EmailIdentityDkimSigningAttributes) *string { return v.DomainSigningPrivateKey })
}

// [Bring Your Own DKIM] A string that's used to identify a public key in the DNS configuration for a domain.
func (o EmailIdentityDkimSigningAttributesOutput) DomainSigningSelector() pulumix.Output[*string] {
	return pulumix.Apply[EmailIdentityDkimSigningAttributes](o, func(v EmailIdentityDkimSigningAttributes) *string { return v.DomainSigningSelector })
}

// [Easy DKIM] The last time a key pair was generated for this identity.
func (o EmailIdentityDkimSigningAttributesOutput) LastKeyGenerationTimestamp() pulumix.Output[*string] {
	return pulumix.Apply[EmailIdentityDkimSigningAttributes](o, func(v EmailIdentityDkimSigningAttributes) *string { return v.LastKeyGenerationTimestamp })
}

// [Easy DKIM] The key length of the future DKIM key pair to be generated. This can be changed at most once per day. Valid values: `RSA_1024_BIT`, `RSA_2048_BIT`.
func (o EmailIdentityDkimSigningAttributesOutput) NextSigningKeyLength() pulumix.Output[*string] {
	return pulumix.Apply[EmailIdentityDkimSigningAttributes](o, func(v EmailIdentityDkimSigningAttributes) *string { return v.NextSigningKeyLength })
}

// A string that indicates how DKIM was configured for the identity. `AWS_SES` indicates that DKIM was configured for the identity by using Easy DKIM. `EXTERNAL` indicates that DKIM was configured for the identity by using Bring Your Own DKIM (BYODKIM).
func (o EmailIdentityDkimSigningAttributesOutput) SigningAttributesOrigin() pulumix.Output[*string] {
	return pulumix.Apply[EmailIdentityDkimSigningAttributes](o, func(v EmailIdentityDkimSigningAttributes) *string { return v.SigningAttributesOrigin })
}

// Describes whether or not Amazon SES has successfully located the DKIM records in the DNS records for the domain. See the [AWS SES API v2 Reference](https://docs.aws.amazon.com/ses/latest/APIReference-V2/API_DkimAttributes.html#SES-Type-DkimAttributes-Status) for supported statuses.
func (o EmailIdentityDkimSigningAttributesOutput) Status() pulumix.Output[*string] {
	return pulumix.Apply[EmailIdentityDkimSigningAttributes](o, func(v EmailIdentityDkimSigningAttributes) *string { return v.Status })
}

// If you used Easy DKIM to configure DKIM authentication for the domain, then this object contains a set of unique strings that you use to create a set of CNAME records that you add to the DNS configuration for your domain. When Amazon SES detects these records in the DNS configuration for your domain, the DKIM authentication process is complete. If you configured DKIM authentication for the domain by providing your own public-private key pair, then this object contains the selector for the public key.
func (o EmailIdentityDkimSigningAttributesOutput) Tokens() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[EmailIdentityDkimSigningAttributes](o, func(v EmailIdentityDkimSigningAttributes) []string { return v.Tokens })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetConfigurationSetDeliveryOption struct {
	// The name of the dedicated IP pool to associate with the configuration set.
	SendingPoolName string `pulumi:"sendingPoolName"`
	// Specifies whether messages that use the configuration set are required to use Transport Layer Security (TLS).
	TlsPolicy string `pulumi:"tlsPolicy"`
}

type GetConfigurationSetDeliveryOptionArgs struct {
	// The name of the dedicated IP pool to associate with the configuration set.
	SendingPoolName pulumix.Input[string] `pulumi:"sendingPoolName"`
	// Specifies whether messages that use the configuration set are required to use Transport Layer Security (TLS).
	TlsPolicy pulumix.Input[string] `pulumi:"tlsPolicy"`
}

func (GetConfigurationSetDeliveryOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigurationSetDeliveryOption)(nil)).Elem()
}

func (i GetConfigurationSetDeliveryOptionArgs) ToGetConfigurationSetDeliveryOptionOutput() GetConfigurationSetDeliveryOptionOutput {
	return i.ToGetConfigurationSetDeliveryOptionOutputWithContext(context.Background())
}

func (i GetConfigurationSetDeliveryOptionArgs) ToGetConfigurationSetDeliveryOptionOutputWithContext(ctx context.Context) GetConfigurationSetDeliveryOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigurationSetDeliveryOptionOutput)
}

func (i *GetConfigurationSetDeliveryOptionArgs) ToOutput(ctx context.Context) pulumix.Output[*GetConfigurationSetDeliveryOptionArgs] {
	return pulumix.Val(i)
}

type GetConfigurationSetDeliveryOptionOutput struct{ *pulumi.OutputState }

func (GetConfigurationSetDeliveryOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigurationSetDeliveryOption)(nil)).Elem()
}

func (o GetConfigurationSetDeliveryOptionOutput) ToGetConfigurationSetDeliveryOptionOutput() GetConfigurationSetDeliveryOptionOutput {
	return o
}

func (o GetConfigurationSetDeliveryOptionOutput) ToGetConfigurationSetDeliveryOptionOutputWithContext(ctx context.Context) GetConfigurationSetDeliveryOptionOutput {
	return o
}

func (o GetConfigurationSetDeliveryOptionOutput) ToOutput(ctx context.Context) pulumix.Output[GetConfigurationSetDeliveryOption] {
	return pulumix.Output[GetConfigurationSetDeliveryOption]{
		OutputState: o.OutputState,
	}
}

// The name of the dedicated IP pool to associate with the configuration set.
func (o GetConfigurationSetDeliveryOptionOutput) SendingPoolName() pulumix.Output[string] {
	return pulumix.Apply[GetConfigurationSetDeliveryOption](o, func(v GetConfigurationSetDeliveryOption) string { return v.SendingPoolName })
}

// Specifies whether messages that use the configuration set are required to use Transport Layer Security (TLS).
func (o GetConfigurationSetDeliveryOptionOutput) TlsPolicy() pulumix.Output[string] {
	return pulumix.Apply[GetConfigurationSetDeliveryOption](o, func(v GetConfigurationSetDeliveryOption) string { return v.TlsPolicy })
}

type GetConfigurationSetReputationOption struct {
	// The date and time (in Unix time) when the reputation metrics were last given a fresh start.
	LastFreshStart string `pulumi:"lastFreshStart"`
	// Specifies whether tracking of reputation metrics is enabled.
	ReputationMetricsEnabled bool `pulumi:"reputationMetricsEnabled"`
}

type GetConfigurationSetReputationOptionArgs struct {
	// The date and time (in Unix time) when the reputation metrics were last given a fresh start.
	LastFreshStart pulumix.Input[string] `pulumi:"lastFreshStart"`
	// Specifies whether tracking of reputation metrics is enabled.
	ReputationMetricsEnabled pulumix.Input[bool] `pulumi:"reputationMetricsEnabled"`
}

func (GetConfigurationSetReputationOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigurationSetReputationOption)(nil)).Elem()
}

func (i GetConfigurationSetReputationOptionArgs) ToGetConfigurationSetReputationOptionOutput() GetConfigurationSetReputationOptionOutput {
	return i.ToGetConfigurationSetReputationOptionOutputWithContext(context.Background())
}

func (i GetConfigurationSetReputationOptionArgs) ToGetConfigurationSetReputationOptionOutputWithContext(ctx context.Context) GetConfigurationSetReputationOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigurationSetReputationOptionOutput)
}

func (i *GetConfigurationSetReputationOptionArgs) ToOutput(ctx context.Context) pulumix.Output[*GetConfigurationSetReputationOptionArgs] {
	return pulumix.Val(i)
}

type GetConfigurationSetReputationOptionOutput struct{ *pulumi.OutputState }

func (GetConfigurationSetReputationOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigurationSetReputationOption)(nil)).Elem()
}

func (o GetConfigurationSetReputationOptionOutput) ToGetConfigurationSetReputationOptionOutput() GetConfigurationSetReputationOptionOutput {
	return o
}

func (o GetConfigurationSetReputationOptionOutput) ToGetConfigurationSetReputationOptionOutputWithContext(ctx context.Context) GetConfigurationSetReputationOptionOutput {
	return o
}

func (o GetConfigurationSetReputationOptionOutput) ToOutput(ctx context.Context) pulumix.Output[GetConfigurationSetReputationOption] {
	return pulumix.Output[GetConfigurationSetReputationOption]{
		OutputState: o.OutputState,
	}
}

// The date and time (in Unix time) when the reputation metrics were last given a fresh start.
func (o GetConfigurationSetReputationOptionOutput) LastFreshStart() pulumix.Output[string] {
	return pulumix.Apply[GetConfigurationSetReputationOption](o, func(v GetConfigurationSetReputationOption) string { return v.LastFreshStart })
}

// Specifies whether tracking of reputation metrics is enabled.
func (o GetConfigurationSetReputationOptionOutput) ReputationMetricsEnabled() pulumix.Output[bool] {
	return pulumix.Apply[GetConfigurationSetReputationOption](o, func(v GetConfigurationSetReputationOption) bool { return v.ReputationMetricsEnabled })
}

type GetConfigurationSetSendingOption struct {
	// Specifies whether email sending is enabled.
	SendingEnabled bool `pulumi:"sendingEnabled"`
}

type GetConfigurationSetSendingOptionArgs struct {
	// Specifies whether email sending is enabled.
	SendingEnabled pulumix.Input[bool] `pulumi:"sendingEnabled"`
}

func (GetConfigurationSetSendingOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigurationSetSendingOption)(nil)).Elem()
}

func (i GetConfigurationSetSendingOptionArgs) ToGetConfigurationSetSendingOptionOutput() GetConfigurationSetSendingOptionOutput {
	return i.ToGetConfigurationSetSendingOptionOutputWithContext(context.Background())
}

func (i GetConfigurationSetSendingOptionArgs) ToGetConfigurationSetSendingOptionOutputWithContext(ctx context.Context) GetConfigurationSetSendingOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigurationSetSendingOptionOutput)
}

func (i *GetConfigurationSetSendingOptionArgs) ToOutput(ctx context.Context) pulumix.Output[*GetConfigurationSetSendingOptionArgs] {
	return pulumix.Val(i)
}

type GetConfigurationSetSendingOptionOutput struct{ *pulumi.OutputState }

func (GetConfigurationSetSendingOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigurationSetSendingOption)(nil)).Elem()
}

func (o GetConfigurationSetSendingOptionOutput) ToGetConfigurationSetSendingOptionOutput() GetConfigurationSetSendingOptionOutput {
	return o
}

func (o GetConfigurationSetSendingOptionOutput) ToGetConfigurationSetSendingOptionOutputWithContext(ctx context.Context) GetConfigurationSetSendingOptionOutput {
	return o
}

func (o GetConfigurationSetSendingOptionOutput) ToOutput(ctx context.Context) pulumix.Output[GetConfigurationSetSendingOption] {
	return pulumix.Output[GetConfigurationSetSendingOption]{
		OutputState: o.OutputState,
	}
}

// Specifies whether email sending is enabled.
func (o GetConfigurationSetSendingOptionOutput) SendingEnabled() pulumix.Output[bool] {
	return pulumix.Apply[GetConfigurationSetSendingOption](o, func(v GetConfigurationSetSendingOption) bool { return v.SendingEnabled })
}

type GetConfigurationSetSuppressionOption struct {
	// A list that contains the reasons that email addresses are automatically added to the suppression list for your account.
	SuppressedReasons []string `pulumi:"suppressedReasons"`
}

type GetConfigurationSetSuppressionOptionArgs struct {
	// A list that contains the reasons that email addresses are automatically added to the suppression list for your account.
	SuppressedReasons pulumix.Input[[]string] `pulumi:"suppressedReasons"`
}

func (GetConfigurationSetSuppressionOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigurationSetSuppressionOption)(nil)).Elem()
}

func (i GetConfigurationSetSuppressionOptionArgs) ToGetConfigurationSetSuppressionOptionOutput() GetConfigurationSetSuppressionOptionOutput {
	return i.ToGetConfigurationSetSuppressionOptionOutputWithContext(context.Background())
}

func (i GetConfigurationSetSuppressionOptionArgs) ToGetConfigurationSetSuppressionOptionOutputWithContext(ctx context.Context) GetConfigurationSetSuppressionOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigurationSetSuppressionOptionOutput)
}

func (i *GetConfigurationSetSuppressionOptionArgs) ToOutput(ctx context.Context) pulumix.Output[*GetConfigurationSetSuppressionOptionArgs] {
	return pulumix.Val(i)
}

type GetConfigurationSetSuppressionOptionOutput struct{ *pulumi.OutputState }

func (GetConfigurationSetSuppressionOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigurationSetSuppressionOption)(nil)).Elem()
}

func (o GetConfigurationSetSuppressionOptionOutput) ToGetConfigurationSetSuppressionOptionOutput() GetConfigurationSetSuppressionOptionOutput {
	return o
}

func (o GetConfigurationSetSuppressionOptionOutput) ToGetConfigurationSetSuppressionOptionOutputWithContext(ctx context.Context) GetConfigurationSetSuppressionOptionOutput {
	return o
}

func (o GetConfigurationSetSuppressionOptionOutput) ToOutput(ctx context.Context) pulumix.Output[GetConfigurationSetSuppressionOption] {
	return pulumix.Output[GetConfigurationSetSuppressionOption]{
		OutputState: o.OutputState,
	}
}

// A list that contains the reasons that email addresses are automatically added to the suppression list for your account.
func (o GetConfigurationSetSuppressionOptionOutput) SuppressedReasons() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetConfigurationSetSuppressionOption](o, func(v GetConfigurationSetSuppressionOption) []string { return v.SuppressedReasons })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetConfigurationSetTrackingOption struct {
	// The domain to use for tracking open and click events.
	CustomRedirectDomain string `pulumi:"customRedirectDomain"`
}

type GetConfigurationSetTrackingOptionArgs struct {
	// The domain to use for tracking open and click events.
	CustomRedirectDomain pulumix.Input[string] `pulumi:"customRedirectDomain"`
}

func (GetConfigurationSetTrackingOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigurationSetTrackingOption)(nil)).Elem()
}

func (i GetConfigurationSetTrackingOptionArgs) ToGetConfigurationSetTrackingOptionOutput() GetConfigurationSetTrackingOptionOutput {
	return i.ToGetConfigurationSetTrackingOptionOutputWithContext(context.Background())
}

func (i GetConfigurationSetTrackingOptionArgs) ToGetConfigurationSetTrackingOptionOutputWithContext(ctx context.Context) GetConfigurationSetTrackingOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigurationSetTrackingOptionOutput)
}

func (i *GetConfigurationSetTrackingOptionArgs) ToOutput(ctx context.Context) pulumix.Output[*GetConfigurationSetTrackingOptionArgs] {
	return pulumix.Val(i)
}

type GetConfigurationSetTrackingOptionOutput struct{ *pulumi.OutputState }

func (GetConfigurationSetTrackingOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigurationSetTrackingOption)(nil)).Elem()
}

func (o GetConfigurationSetTrackingOptionOutput) ToGetConfigurationSetTrackingOptionOutput() GetConfigurationSetTrackingOptionOutput {
	return o
}

func (o GetConfigurationSetTrackingOptionOutput) ToGetConfigurationSetTrackingOptionOutputWithContext(ctx context.Context) GetConfigurationSetTrackingOptionOutput {
	return o
}

func (o GetConfigurationSetTrackingOptionOutput) ToOutput(ctx context.Context) pulumix.Output[GetConfigurationSetTrackingOption] {
	return pulumix.Output[GetConfigurationSetTrackingOption]{
		OutputState: o.OutputState,
	}
}

// The domain to use for tracking open and click events.
func (o GetConfigurationSetTrackingOptionOutput) CustomRedirectDomain() pulumix.Output[string] {
	return pulumix.Apply[GetConfigurationSetTrackingOption](o, func(v GetConfigurationSetTrackingOption) string { return v.CustomRedirectDomain })
}

type GetConfigurationSetVdmOption struct {
	// Specifies additional settings for your VDM configuration as applicable to the Dashboard.
	DashboardOptions []GetConfigurationSetVdmOptionDashboardOption `pulumi:"dashboardOptions"`
	// Specifies additional settings for your VDM configuration as applicable to the Guardian.
	GuardianOptions []GetConfigurationSetVdmOptionGuardianOption `pulumi:"guardianOptions"`
}

type GetConfigurationSetVdmOptionArgs struct {
	// Specifies additional settings for your VDM configuration as applicable to the Dashboard.
	DashboardOptions pulumix.Input[[]*GetConfigurationSetVdmOptionDashboardOptionArgs] `pulumi:"dashboardOptions"`
	// Specifies additional settings for your VDM configuration as applicable to the Guardian.
	GuardianOptions pulumix.Input[[]*GetConfigurationSetVdmOptionGuardianOptionArgs] `pulumi:"guardianOptions"`
}

func (GetConfigurationSetVdmOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigurationSetVdmOption)(nil)).Elem()
}

func (i GetConfigurationSetVdmOptionArgs) ToGetConfigurationSetVdmOptionOutput() GetConfigurationSetVdmOptionOutput {
	return i.ToGetConfigurationSetVdmOptionOutputWithContext(context.Background())
}

func (i GetConfigurationSetVdmOptionArgs) ToGetConfigurationSetVdmOptionOutputWithContext(ctx context.Context) GetConfigurationSetVdmOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigurationSetVdmOptionOutput)
}

func (i *GetConfigurationSetVdmOptionArgs) ToOutput(ctx context.Context) pulumix.Output[*GetConfigurationSetVdmOptionArgs] {
	return pulumix.Val(i)
}

type GetConfigurationSetVdmOptionOutput struct{ *pulumi.OutputState }

func (GetConfigurationSetVdmOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigurationSetVdmOption)(nil)).Elem()
}

func (o GetConfigurationSetVdmOptionOutput) ToGetConfigurationSetVdmOptionOutput() GetConfigurationSetVdmOptionOutput {
	return o
}

func (o GetConfigurationSetVdmOptionOutput) ToGetConfigurationSetVdmOptionOutputWithContext(ctx context.Context) GetConfigurationSetVdmOptionOutput {
	return o
}

func (o GetConfigurationSetVdmOptionOutput) ToOutput(ctx context.Context) pulumix.Output[GetConfigurationSetVdmOption] {
	return pulumix.Output[GetConfigurationSetVdmOption]{
		OutputState: o.OutputState,
	}
}

// Specifies additional settings for your VDM configuration as applicable to the Dashboard.
func (o GetConfigurationSetVdmOptionOutput) DashboardOptions() pulumix.GArrayOutput[GetConfigurationSetVdmOptionDashboardOption, GetConfigurationSetVdmOptionDashboardOptionOutput] {
	value := pulumix.Apply[GetConfigurationSetVdmOption](o, func(v GetConfigurationSetVdmOption) []GetConfigurationSetVdmOptionDashboardOption {
		return v.DashboardOptions
	})
	return pulumix.GArrayOutput[GetConfigurationSetVdmOptionDashboardOption, GetConfigurationSetVdmOptionDashboardOptionOutput]{OutputState: value.OutputState}
}

// Specifies additional settings for your VDM configuration as applicable to the Guardian.
func (o GetConfigurationSetVdmOptionOutput) GuardianOptions() pulumix.GArrayOutput[GetConfigurationSetVdmOptionGuardianOption, GetConfigurationSetVdmOptionGuardianOptionOutput] {
	value := pulumix.Apply[GetConfigurationSetVdmOption](o, func(v GetConfigurationSetVdmOption) []GetConfigurationSetVdmOptionGuardianOption {
		return v.GuardianOptions
	})
	return pulumix.GArrayOutput[GetConfigurationSetVdmOptionGuardianOption, GetConfigurationSetVdmOptionGuardianOptionOutput]{OutputState: value.OutputState}
}

type GetConfigurationSetVdmOptionDashboardOption struct {
	// Specifies the status of your VDM engagement metrics collection.
	EngagementMetrics string `pulumi:"engagementMetrics"`
}

type GetConfigurationSetVdmOptionDashboardOptionArgs struct {
	// Specifies the status of your VDM engagement metrics collection.
	EngagementMetrics pulumix.Input[string] `pulumi:"engagementMetrics"`
}

func (GetConfigurationSetVdmOptionDashboardOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigurationSetVdmOptionDashboardOption)(nil)).Elem()
}

func (i GetConfigurationSetVdmOptionDashboardOptionArgs) ToGetConfigurationSetVdmOptionDashboardOptionOutput() GetConfigurationSetVdmOptionDashboardOptionOutput {
	return i.ToGetConfigurationSetVdmOptionDashboardOptionOutputWithContext(context.Background())
}

func (i GetConfigurationSetVdmOptionDashboardOptionArgs) ToGetConfigurationSetVdmOptionDashboardOptionOutputWithContext(ctx context.Context) GetConfigurationSetVdmOptionDashboardOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigurationSetVdmOptionDashboardOptionOutput)
}

func (i *GetConfigurationSetVdmOptionDashboardOptionArgs) ToOutput(ctx context.Context) pulumix.Output[*GetConfigurationSetVdmOptionDashboardOptionArgs] {
	return pulumix.Val(i)
}

type GetConfigurationSetVdmOptionDashboardOptionOutput struct{ *pulumi.OutputState }

func (GetConfigurationSetVdmOptionDashboardOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigurationSetVdmOptionDashboardOption)(nil)).Elem()
}

func (o GetConfigurationSetVdmOptionDashboardOptionOutput) ToGetConfigurationSetVdmOptionDashboardOptionOutput() GetConfigurationSetVdmOptionDashboardOptionOutput {
	return o
}

func (o GetConfigurationSetVdmOptionDashboardOptionOutput) ToGetConfigurationSetVdmOptionDashboardOptionOutputWithContext(ctx context.Context) GetConfigurationSetVdmOptionDashboardOptionOutput {
	return o
}

func (o GetConfigurationSetVdmOptionDashboardOptionOutput) ToOutput(ctx context.Context) pulumix.Output[GetConfigurationSetVdmOptionDashboardOption] {
	return pulumix.Output[GetConfigurationSetVdmOptionDashboardOption]{
		OutputState: o.OutputState,
	}
}

// Specifies the status of your VDM engagement metrics collection.
func (o GetConfigurationSetVdmOptionDashboardOptionOutput) EngagementMetrics() pulumix.Output[string] {
	return pulumix.Apply[GetConfigurationSetVdmOptionDashboardOption](o, func(v GetConfigurationSetVdmOptionDashboardOption) string { return v.EngagementMetrics })
}

type GetConfigurationSetVdmOptionGuardianOption struct {
	// Specifies the status of your VDM optimized shared delivery.
	OptimizedSharedDelivery string `pulumi:"optimizedSharedDelivery"`
}

type GetConfigurationSetVdmOptionGuardianOptionArgs struct {
	// Specifies the status of your VDM optimized shared delivery.
	OptimizedSharedDelivery pulumix.Input[string] `pulumi:"optimizedSharedDelivery"`
}

func (GetConfigurationSetVdmOptionGuardianOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigurationSetVdmOptionGuardianOption)(nil)).Elem()
}

func (i GetConfigurationSetVdmOptionGuardianOptionArgs) ToGetConfigurationSetVdmOptionGuardianOptionOutput() GetConfigurationSetVdmOptionGuardianOptionOutput {
	return i.ToGetConfigurationSetVdmOptionGuardianOptionOutputWithContext(context.Background())
}

func (i GetConfigurationSetVdmOptionGuardianOptionArgs) ToGetConfigurationSetVdmOptionGuardianOptionOutputWithContext(ctx context.Context) GetConfigurationSetVdmOptionGuardianOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigurationSetVdmOptionGuardianOptionOutput)
}

func (i *GetConfigurationSetVdmOptionGuardianOptionArgs) ToOutput(ctx context.Context) pulumix.Output[*GetConfigurationSetVdmOptionGuardianOptionArgs] {
	return pulumix.Val(i)
}

type GetConfigurationSetVdmOptionGuardianOptionOutput struct{ *pulumi.OutputState }

func (GetConfigurationSetVdmOptionGuardianOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigurationSetVdmOptionGuardianOption)(nil)).Elem()
}

func (o GetConfigurationSetVdmOptionGuardianOptionOutput) ToGetConfigurationSetVdmOptionGuardianOptionOutput() GetConfigurationSetVdmOptionGuardianOptionOutput {
	return o
}

func (o GetConfigurationSetVdmOptionGuardianOptionOutput) ToGetConfigurationSetVdmOptionGuardianOptionOutputWithContext(ctx context.Context) GetConfigurationSetVdmOptionGuardianOptionOutput {
	return o
}

func (o GetConfigurationSetVdmOptionGuardianOptionOutput) ToOutput(ctx context.Context) pulumix.Output[GetConfigurationSetVdmOptionGuardianOption] {
	return pulumix.Output[GetConfigurationSetVdmOptionGuardianOption]{
		OutputState: o.OutputState,
	}
}

// Specifies the status of your VDM optimized shared delivery.
func (o GetConfigurationSetVdmOptionGuardianOptionOutput) OptimizedSharedDelivery() pulumix.Output[string] {
	return pulumix.Apply[GetConfigurationSetVdmOptionGuardianOption](o, func(v GetConfigurationSetVdmOptionGuardianOption) string { return v.OptimizedSharedDelivery })
}

type GetDedicatedIpPoolDedicatedIp struct {
	// IPv4 address.
	Ip string `pulumi:"ip"`
	// Indicates how complete the dedicated IP warm-up process is. When this value equals `1`, the address has completed the warm-up process and is ready for use.
	WarmupPercentage int `pulumi:"warmupPercentage"`
	// The warm-up status of a dedicated IP address. Valid values: `IN_PROGRESS`, `DONE`.
	WarmupStatus string `pulumi:"warmupStatus"`
}

type GetDedicatedIpPoolDedicatedIpArgs struct {
	// IPv4 address.
	Ip pulumix.Input[string] `pulumi:"ip"`
	// Indicates how complete the dedicated IP warm-up process is. When this value equals `1`, the address has completed the warm-up process and is ready for use.
	WarmupPercentage pulumix.Input[int] `pulumi:"warmupPercentage"`
	// The warm-up status of a dedicated IP address. Valid values: `IN_PROGRESS`, `DONE`.
	WarmupStatus pulumix.Input[string] `pulumi:"warmupStatus"`
}

func (GetDedicatedIpPoolDedicatedIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDedicatedIpPoolDedicatedIp)(nil)).Elem()
}

func (i GetDedicatedIpPoolDedicatedIpArgs) ToGetDedicatedIpPoolDedicatedIpOutput() GetDedicatedIpPoolDedicatedIpOutput {
	return i.ToGetDedicatedIpPoolDedicatedIpOutputWithContext(context.Background())
}

func (i GetDedicatedIpPoolDedicatedIpArgs) ToGetDedicatedIpPoolDedicatedIpOutputWithContext(ctx context.Context) GetDedicatedIpPoolDedicatedIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDedicatedIpPoolDedicatedIpOutput)
}

func (i *GetDedicatedIpPoolDedicatedIpArgs) ToOutput(ctx context.Context) pulumix.Output[*GetDedicatedIpPoolDedicatedIpArgs] {
	return pulumix.Val(i)
}

type GetDedicatedIpPoolDedicatedIpOutput struct{ *pulumi.OutputState }

func (GetDedicatedIpPoolDedicatedIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDedicatedIpPoolDedicatedIp)(nil)).Elem()
}

func (o GetDedicatedIpPoolDedicatedIpOutput) ToGetDedicatedIpPoolDedicatedIpOutput() GetDedicatedIpPoolDedicatedIpOutput {
	return o
}

func (o GetDedicatedIpPoolDedicatedIpOutput) ToGetDedicatedIpPoolDedicatedIpOutputWithContext(ctx context.Context) GetDedicatedIpPoolDedicatedIpOutput {
	return o
}

func (o GetDedicatedIpPoolDedicatedIpOutput) ToOutput(ctx context.Context) pulumix.Output[GetDedicatedIpPoolDedicatedIp] {
	return pulumix.Output[GetDedicatedIpPoolDedicatedIp]{
		OutputState: o.OutputState,
	}
}

// IPv4 address.
func (o GetDedicatedIpPoolDedicatedIpOutput) Ip() pulumix.Output[string] {
	return pulumix.Apply[GetDedicatedIpPoolDedicatedIp](o, func(v GetDedicatedIpPoolDedicatedIp) string { return v.Ip })
}

// Indicates how complete the dedicated IP warm-up process is. When this value equals `1`, the address has completed the warm-up process and is ready for use.
func (o GetDedicatedIpPoolDedicatedIpOutput) WarmupPercentage() pulumix.Output[int] {
	return pulumix.Apply[GetDedicatedIpPoolDedicatedIp](o, func(v GetDedicatedIpPoolDedicatedIp) int { return v.WarmupPercentage })
}

// The warm-up status of a dedicated IP address. Valid values: `IN_PROGRESS`, `DONE`.
func (o GetDedicatedIpPoolDedicatedIpOutput) WarmupStatus() pulumix.Output[string] {
	return pulumix.Apply[GetDedicatedIpPoolDedicatedIp](o, func(v GetDedicatedIpPoolDedicatedIp) string { return v.WarmupStatus })
}

type GetEmailIdentityDkimSigningAttribute struct {
	// [Easy DKIM] The key length of the DKIM key pair in use.
	CurrentSigningKeyLength string `pulumi:"currentSigningKeyLength"`
	DomainSigningPrivateKey string `pulumi:"domainSigningPrivateKey"`
	DomainSigningSelector   string `pulumi:"domainSigningSelector"`
	// [Easy DKIM] The last time a key pair was generated for this identity.
	LastKeyGenerationTimestamp string `pulumi:"lastKeyGenerationTimestamp"`
	// [Easy DKIM] The key length of the future DKIM key pair to be generated. This can be changed at most once per day.
	NextSigningKeyLength string `pulumi:"nextSigningKeyLength"`
	// A string that indicates how DKIM was configured for the identity. `AWS_SES` indicates that DKIM was configured for the identity by using Easy DKIM. `EXTERNAL` indicates that DKIM was configured for the identity by using Bring Your Own DKIM (BYODKIM).
	SigningAttributesOrigin string `pulumi:"signingAttributesOrigin"`
	// Describes whether or not Amazon SES has successfully located the DKIM records in the DNS records for the domain. See the [AWS SES API v2 Reference](https://docs.aws.amazon.com/ses/latest/APIReference-V2/API_DkimAttributes.html#SES-Type-DkimAttributes-Status) for supported statuses.
	Status string `pulumi:"status"`
	// If you used Easy DKIM to configure DKIM authentication for the domain, then this object contains a set of unique strings that you use to create a set of CNAME records that you add to the DNS configuration for your domain. When Amazon SES detects these records in the DNS configuration for your domain, the DKIM authentication process is complete. If you configured DKIM authentication for the domain by providing your own public-private key pair, then this object contains the selector for the public key.
	Tokens []string `pulumi:"tokens"`
}

type GetEmailIdentityDkimSigningAttributeArgs struct {
	// [Easy DKIM] The key length of the DKIM key pair in use.
	CurrentSigningKeyLength pulumix.Input[string] `pulumi:"currentSigningKeyLength"`
	DomainSigningPrivateKey pulumix.Input[string] `pulumi:"domainSigningPrivateKey"`
	DomainSigningSelector   pulumix.Input[string] `pulumi:"domainSigningSelector"`
	// [Easy DKIM] The last time a key pair was generated for this identity.
	LastKeyGenerationTimestamp pulumix.Input[string] `pulumi:"lastKeyGenerationTimestamp"`
	// [Easy DKIM] The key length of the future DKIM key pair to be generated. This can be changed at most once per day.
	NextSigningKeyLength pulumix.Input[string] `pulumi:"nextSigningKeyLength"`
	// A string that indicates how DKIM was configured for the identity. `AWS_SES` indicates that DKIM was configured for the identity by using Easy DKIM. `EXTERNAL` indicates that DKIM was configured for the identity by using Bring Your Own DKIM (BYODKIM).
	SigningAttributesOrigin pulumix.Input[string] `pulumi:"signingAttributesOrigin"`
	// Describes whether or not Amazon SES has successfully located the DKIM records in the DNS records for the domain. See the [AWS SES API v2 Reference](https://docs.aws.amazon.com/ses/latest/APIReference-V2/API_DkimAttributes.html#SES-Type-DkimAttributes-Status) for supported statuses.
	Status pulumix.Input[string] `pulumi:"status"`
	// If you used Easy DKIM to configure DKIM authentication for the domain, then this object contains a set of unique strings that you use to create a set of CNAME records that you add to the DNS configuration for your domain. When Amazon SES detects these records in the DNS configuration for your domain, the DKIM authentication process is complete. If you configured DKIM authentication for the domain by providing your own public-private key pair, then this object contains the selector for the public key.
	Tokens pulumix.Input[[]string] `pulumi:"tokens"`
}

func (GetEmailIdentityDkimSigningAttributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEmailIdentityDkimSigningAttribute)(nil)).Elem()
}

func (i GetEmailIdentityDkimSigningAttributeArgs) ToGetEmailIdentityDkimSigningAttributeOutput() GetEmailIdentityDkimSigningAttributeOutput {
	return i.ToGetEmailIdentityDkimSigningAttributeOutputWithContext(context.Background())
}

func (i GetEmailIdentityDkimSigningAttributeArgs) ToGetEmailIdentityDkimSigningAttributeOutputWithContext(ctx context.Context) GetEmailIdentityDkimSigningAttributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEmailIdentityDkimSigningAttributeOutput)
}

func (i *GetEmailIdentityDkimSigningAttributeArgs) ToOutput(ctx context.Context) pulumix.Output[*GetEmailIdentityDkimSigningAttributeArgs] {
	return pulumix.Val(i)
}

type GetEmailIdentityDkimSigningAttributeOutput struct{ *pulumi.OutputState }

func (GetEmailIdentityDkimSigningAttributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEmailIdentityDkimSigningAttribute)(nil)).Elem()
}

func (o GetEmailIdentityDkimSigningAttributeOutput) ToGetEmailIdentityDkimSigningAttributeOutput() GetEmailIdentityDkimSigningAttributeOutput {
	return o
}

func (o GetEmailIdentityDkimSigningAttributeOutput) ToGetEmailIdentityDkimSigningAttributeOutputWithContext(ctx context.Context) GetEmailIdentityDkimSigningAttributeOutput {
	return o
}

func (o GetEmailIdentityDkimSigningAttributeOutput) ToOutput(ctx context.Context) pulumix.Output[GetEmailIdentityDkimSigningAttribute] {
	return pulumix.Output[GetEmailIdentityDkimSigningAttribute]{
		OutputState: o.OutputState,
	}
}

// [Easy DKIM] The key length of the DKIM key pair in use.
func (o GetEmailIdentityDkimSigningAttributeOutput) CurrentSigningKeyLength() pulumix.Output[string] {
	return pulumix.Apply[GetEmailIdentityDkimSigningAttribute](o, func(v GetEmailIdentityDkimSigningAttribute) string { return v.CurrentSigningKeyLength })
}

func (o GetEmailIdentityDkimSigningAttributeOutput) DomainSigningPrivateKey() pulumix.Output[string] {
	return pulumix.Apply[GetEmailIdentityDkimSigningAttribute](o, func(v GetEmailIdentityDkimSigningAttribute) string { return v.DomainSigningPrivateKey })
}

func (o GetEmailIdentityDkimSigningAttributeOutput) DomainSigningSelector() pulumix.Output[string] {
	return pulumix.Apply[GetEmailIdentityDkimSigningAttribute](o, func(v GetEmailIdentityDkimSigningAttribute) string { return v.DomainSigningSelector })
}

// [Easy DKIM] The last time a key pair was generated for this identity.
func (o GetEmailIdentityDkimSigningAttributeOutput) LastKeyGenerationTimestamp() pulumix.Output[string] {
	return pulumix.Apply[GetEmailIdentityDkimSigningAttribute](o, func(v GetEmailIdentityDkimSigningAttribute) string { return v.LastKeyGenerationTimestamp })
}

// [Easy DKIM] The key length of the future DKIM key pair to be generated. This can be changed at most once per day.
func (o GetEmailIdentityDkimSigningAttributeOutput) NextSigningKeyLength() pulumix.Output[string] {
	return pulumix.Apply[GetEmailIdentityDkimSigningAttribute](o, func(v GetEmailIdentityDkimSigningAttribute) string { return v.NextSigningKeyLength })
}

// A string that indicates how DKIM was configured for the identity. `AWS_SES` indicates that DKIM was configured for the identity by using Easy DKIM. `EXTERNAL` indicates that DKIM was configured for the identity by using Bring Your Own DKIM (BYODKIM).
func (o GetEmailIdentityDkimSigningAttributeOutput) SigningAttributesOrigin() pulumix.Output[string] {
	return pulumix.Apply[GetEmailIdentityDkimSigningAttribute](o, func(v GetEmailIdentityDkimSigningAttribute) string { return v.SigningAttributesOrigin })
}

// Describes whether or not Amazon SES has successfully located the DKIM records in the DNS records for the domain. See the [AWS SES API v2 Reference](https://docs.aws.amazon.com/ses/latest/APIReference-V2/API_DkimAttributes.html#SES-Type-DkimAttributes-Status) for supported statuses.
func (o GetEmailIdentityDkimSigningAttributeOutput) Status() pulumix.Output[string] {
	return pulumix.Apply[GetEmailIdentityDkimSigningAttribute](o, func(v GetEmailIdentityDkimSigningAttribute) string { return v.Status })
}

// If you used Easy DKIM to configure DKIM authentication for the domain, then this object contains a set of unique strings that you use to create a set of CNAME records that you add to the DNS configuration for your domain. When Amazon SES detects these records in the DNS configuration for your domain, the DKIM authentication process is complete. If you configured DKIM authentication for the domain by providing your own public-private key pair, then this object contains the selector for the public key.
func (o GetEmailIdentityDkimSigningAttributeOutput) Tokens() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetEmailIdentityDkimSigningAttribute](o, func(v GetEmailIdentityDkimSigningAttribute) []string { return v.Tokens })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func init() {
	pulumi.RegisterOutputType(ConfigurationSetDeliveryOptionsOutput{})
	pulumi.RegisterOutputType(ConfigurationSetEventDestinationEventDestinationOutput{})
	pulumi.RegisterOutputType(ConfigurationSetEventDestinationEventDestinationCloudWatchDestinationOutput{})
	pulumi.RegisterOutputType(ConfigurationSetEventDestinationEventDestinationCloudWatchDestinationDimensionConfigurationOutput{})
	pulumi.RegisterOutputType(ConfigurationSetEventDestinationEventDestinationKinesisFirehoseDestinationOutput{})
	pulumi.RegisterOutputType(ConfigurationSetEventDestinationEventDestinationPinpointDestinationOutput{})
	pulumi.RegisterOutputType(ConfigurationSetEventDestinationEventDestinationSnsDestinationOutput{})
	pulumi.RegisterOutputType(ConfigurationSetReputationOptionsOutput{})
	pulumi.RegisterOutputType(ConfigurationSetSendingOptionsOutput{})
	pulumi.RegisterOutputType(ConfigurationSetSuppressionOptionsOutput{})
	pulumi.RegisterOutputType(ConfigurationSetTrackingOptionsOutput{})
	pulumi.RegisterOutputType(ConfigurationSetVdmOptionsOutput{})
	pulumi.RegisterOutputType(ConfigurationSetVdmOptionsDashboardOptionsOutput{})
	pulumi.RegisterOutputType(ConfigurationSetVdmOptionsGuardianOptionsOutput{})
	pulumi.RegisterOutputType(ContactListTopicOutput{})
	pulumi.RegisterOutputType(EmailIdentityDkimSigningAttributesOutput{})
	pulumi.RegisterOutputType(GetConfigurationSetDeliveryOptionOutput{})
	pulumi.RegisterOutputType(GetConfigurationSetReputationOptionOutput{})
	pulumi.RegisterOutputType(GetConfigurationSetSendingOptionOutput{})
	pulumi.RegisterOutputType(GetConfigurationSetSuppressionOptionOutput{})
	pulumi.RegisterOutputType(GetConfigurationSetTrackingOptionOutput{})
	pulumi.RegisterOutputType(GetConfigurationSetVdmOptionOutput{})
	pulumi.RegisterOutputType(GetConfigurationSetVdmOptionDashboardOptionOutput{})
	pulumi.RegisterOutputType(GetConfigurationSetVdmOptionGuardianOptionOutput{})
	pulumi.RegisterOutputType(GetDedicatedIpPoolDedicatedIpOutput{})
	pulumi.RegisterOutputType(GetEmailIdentityDkimSigningAttributeOutput{})
}
