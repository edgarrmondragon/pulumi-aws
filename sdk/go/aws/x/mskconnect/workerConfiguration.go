// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mskconnect

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an Amazon MSK Connect Worker Configuration Resource.
type WorkerConfiguration struct {
	pulumi.CustomResourceState

	// the Amazon Resource Name (ARN) of the worker configuration.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// A summary description of the worker configuration.
	Description pulumix.Output[*string] `pulumi:"description"`
	// an ID of the latest successfully created revision of the worker configuration.
	LatestRevision pulumix.Output[int] `pulumi:"latestRevision"`
	// The name of the worker configuration.
	Name pulumix.Output[string] `pulumi:"name"`
	// Contents of connect-distributed.properties file. The value can be either base64 encoded or in raw format.
	//
	// The following arguments are optional:
	PropertiesFileContent pulumix.Output[string] `pulumi:"propertiesFileContent"`
}

// NewWorkerConfiguration registers a new resource with the given unique name, arguments, and options.
func NewWorkerConfiguration(ctx *pulumi.Context,
	name string, args *WorkerConfigurationArgs, opts ...pulumi.ResourceOption) (*WorkerConfiguration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PropertiesFileContent == nil {
		return nil, errors.New("invalid value for required argument 'PropertiesFileContent'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WorkerConfiguration
	err := ctx.RegisterResource("aws:mskconnect/workerConfiguration:WorkerConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkerConfiguration gets an existing WorkerConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkerConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkerConfigurationState, opts ...pulumi.ResourceOption) (*WorkerConfiguration, error) {
	var resource WorkerConfiguration
	err := ctx.ReadResource("aws:mskconnect/workerConfiguration:WorkerConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkerConfiguration resources.
type workerConfigurationState struct {
	// the Amazon Resource Name (ARN) of the worker configuration.
	Arn *string `pulumi:"arn"`
	// A summary description of the worker configuration.
	Description *string `pulumi:"description"`
	// an ID of the latest successfully created revision of the worker configuration.
	LatestRevision *int `pulumi:"latestRevision"`
	// The name of the worker configuration.
	Name *string `pulumi:"name"`
	// Contents of connect-distributed.properties file. The value can be either base64 encoded or in raw format.
	//
	// The following arguments are optional:
	PropertiesFileContent *string `pulumi:"propertiesFileContent"`
}

type WorkerConfigurationState struct {
	// the Amazon Resource Name (ARN) of the worker configuration.
	Arn pulumix.Input[*string]
	// A summary description of the worker configuration.
	Description pulumix.Input[*string]
	// an ID of the latest successfully created revision of the worker configuration.
	LatestRevision pulumix.Input[*int]
	// The name of the worker configuration.
	Name pulumix.Input[*string]
	// Contents of connect-distributed.properties file. The value can be either base64 encoded or in raw format.
	//
	// The following arguments are optional:
	PropertiesFileContent pulumix.Input[*string]
}

func (WorkerConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*workerConfigurationState)(nil)).Elem()
}

type workerConfigurationArgs struct {
	// A summary description of the worker configuration.
	Description *string `pulumi:"description"`
	// The name of the worker configuration.
	Name *string `pulumi:"name"`
	// Contents of connect-distributed.properties file. The value can be either base64 encoded or in raw format.
	//
	// The following arguments are optional:
	PropertiesFileContent string `pulumi:"propertiesFileContent"`
}

// The set of arguments for constructing a WorkerConfiguration resource.
type WorkerConfigurationArgs struct {
	// A summary description of the worker configuration.
	Description pulumix.Input[*string]
	// The name of the worker configuration.
	Name pulumix.Input[*string]
	// Contents of connect-distributed.properties file. The value can be either base64 encoded or in raw format.
	//
	// The following arguments are optional:
	PropertiesFileContent pulumix.Input[string]
}

func (WorkerConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workerConfigurationArgs)(nil)).Elem()
}

type WorkerConfigurationOutput struct{ *pulumi.OutputState }

func (WorkerConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkerConfiguration)(nil)).Elem()
}

func (o WorkerConfigurationOutput) ToWorkerConfigurationOutput() WorkerConfigurationOutput {
	return o
}

func (o WorkerConfigurationOutput) ToWorkerConfigurationOutputWithContext(ctx context.Context) WorkerConfigurationOutput {
	return o
}

func (o WorkerConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[WorkerConfiguration] {
	return pulumix.Output[WorkerConfiguration]{
		OutputState: o.OutputState,
	}
}

// the Amazon Resource Name (ARN) of the worker configuration.
func (o WorkerConfigurationOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[WorkerConfiguration](o, func(v WorkerConfiguration) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A summary description of the worker configuration.
func (o WorkerConfigurationOutput) Description() pulumix.Output[*string] {
	value := pulumix.Apply[WorkerConfiguration](o, func(v WorkerConfiguration) pulumix.Output[*string] { return v.Description })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// an ID of the latest successfully created revision of the worker configuration.
func (o WorkerConfigurationOutput) LatestRevision() pulumix.Output[int] {
	value := pulumix.Apply[WorkerConfiguration](o, func(v WorkerConfiguration) pulumix.Output[int] { return v.LatestRevision })
	return pulumix.Flatten[int, pulumix.Output[int]](value)
}

// The name of the worker configuration.
func (o WorkerConfigurationOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[WorkerConfiguration](o, func(v WorkerConfiguration) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Contents of connect-distributed.properties file. The value can be either base64 encoded or in raw format.
//
// The following arguments are optional:
func (o WorkerConfigurationOutput) PropertiesFileContent() pulumix.Output[string] {
	value := pulumix.Apply[WorkerConfiguration](o, func(v WorkerConfiguration) pulumix.Output[string] { return v.PropertiesFileContent })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(WorkerConfigurationOutput{})
}
