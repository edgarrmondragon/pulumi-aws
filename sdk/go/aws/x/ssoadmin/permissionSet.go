// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ssoadmin

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a Single Sign-On (SSO) Permission Set resource
//
// > **NOTE:** Updating this resource will automatically [Provision the Permission Set](https://docs.aws.amazon.com/singlesignon/latest/APIReference/API_ProvisionPermissionSet.html) to apply the corresponding updates to all assigned accounts.
type PermissionSet struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) of the Permission Set.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The date the Permission Set was created in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8).
	CreatedDate pulumix.Output[string] `pulumi:"createdDate"`
	// The description of the Permission Set.
	Description pulumix.Output[*string] `pulumi:"description"`
	// The Amazon Resource Name (ARN) of the SSO Instance under which the operation will be executed.
	InstanceArn pulumix.Output[string] `pulumi:"instanceArn"`
	// The name of the Permission Set.
	Name pulumix.Output[string] `pulumi:"name"`
	// The relay state URL used to redirect users within the application during the federation authentication process.
	RelayState pulumix.Output[*string] `pulumi:"relayState"`
	// The length of time that the application user sessions are valid in the ISO-8601 standard. Default: `PT1H`.
	SessionDuration pulumix.Output[*string] `pulumi:"sessionDuration"`
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
}

// NewPermissionSet registers a new resource with the given unique name, arguments, and options.
func NewPermissionSet(ctx *pulumi.Context,
	name string, args *PermissionSetArgs, opts ...pulumi.ResourceOption) (*PermissionSet, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceArn == nil {
		return nil, errors.New("invalid value for required argument 'InstanceArn'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PermissionSet
	err := ctx.RegisterResource("aws:ssoadmin/permissionSet:PermissionSet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPermissionSet gets an existing PermissionSet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPermissionSet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PermissionSetState, opts ...pulumi.ResourceOption) (*PermissionSet, error) {
	var resource PermissionSet
	err := ctx.ReadResource("aws:ssoadmin/permissionSet:PermissionSet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PermissionSet resources.
type permissionSetState struct {
	// The Amazon Resource Name (ARN) of the Permission Set.
	Arn *string `pulumi:"arn"`
	// The date the Permission Set was created in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8).
	CreatedDate *string `pulumi:"createdDate"`
	// The description of the Permission Set.
	Description *string `pulumi:"description"`
	// The Amazon Resource Name (ARN) of the SSO Instance under which the operation will be executed.
	InstanceArn *string `pulumi:"instanceArn"`
	// The name of the Permission Set.
	Name *string `pulumi:"name"`
	// The relay state URL used to redirect users within the application during the federation authentication process.
	RelayState *string `pulumi:"relayState"`
	// The length of time that the application user sessions are valid in the ISO-8601 standard. Default: `PT1H`.
	SessionDuration *string `pulumi:"sessionDuration"`
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type PermissionSetState struct {
	// The Amazon Resource Name (ARN) of the Permission Set.
	Arn pulumix.Input[*string]
	// The date the Permission Set was created in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8).
	CreatedDate pulumix.Input[*string]
	// The description of the Permission Set.
	Description pulumix.Input[*string]
	// The Amazon Resource Name (ARN) of the SSO Instance under which the operation will be executed.
	InstanceArn pulumix.Input[*string]
	// The name of the Permission Set.
	Name pulumix.Input[*string]
	// The relay state URL used to redirect users within the application during the federation authentication process.
	RelayState pulumix.Input[*string]
	// The length of time that the application user sessions are valid in the ISO-8601 standard. Default: `PT1H`.
	SessionDuration pulumix.Input[*string]
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
}

func (PermissionSetState) ElementType() reflect.Type {
	return reflect.TypeOf((*permissionSetState)(nil)).Elem()
}

type permissionSetArgs struct {
	// The description of the Permission Set.
	Description *string `pulumi:"description"`
	// The Amazon Resource Name (ARN) of the SSO Instance under which the operation will be executed.
	InstanceArn string `pulumi:"instanceArn"`
	// The name of the Permission Set.
	Name *string `pulumi:"name"`
	// The relay state URL used to redirect users within the application during the federation authentication process.
	RelayState *string `pulumi:"relayState"`
	// The length of time that the application user sessions are valid in the ISO-8601 standard. Default: `PT1H`.
	SessionDuration *string `pulumi:"sessionDuration"`
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a PermissionSet resource.
type PermissionSetArgs struct {
	// The description of the Permission Set.
	Description pulumix.Input[*string]
	// The Amazon Resource Name (ARN) of the SSO Instance under which the operation will be executed.
	InstanceArn pulumix.Input[string]
	// The name of the Permission Set.
	Name pulumix.Input[*string]
	// The relay state URL used to redirect users within the application during the federation authentication process.
	RelayState pulumix.Input[*string]
	// The length of time that the application user sessions are valid in the ISO-8601 standard. Default: `PT1H`.
	SessionDuration pulumix.Input[*string]
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (PermissionSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*permissionSetArgs)(nil)).Elem()
}

type PermissionSetOutput struct{ *pulumi.OutputState }

func (PermissionSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PermissionSet)(nil)).Elem()
}

func (o PermissionSetOutput) ToPermissionSetOutput() PermissionSetOutput {
	return o
}

func (o PermissionSetOutput) ToPermissionSetOutputWithContext(ctx context.Context) PermissionSetOutput {
	return o
}

func (o PermissionSetOutput) ToOutput(ctx context.Context) pulumix.Output[PermissionSet] {
	return pulumix.Output[PermissionSet]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) of the Permission Set.
func (o PermissionSetOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[PermissionSet](o, func(v PermissionSet) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The date the Permission Set was created in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8).
func (o PermissionSetOutput) CreatedDate() pulumix.Output[string] {
	value := pulumix.Apply[PermissionSet](o, func(v PermissionSet) pulumix.Output[string] { return v.CreatedDate })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The description of the Permission Set.
func (o PermissionSetOutput) Description() pulumix.Output[*string] {
	value := pulumix.Apply[PermissionSet](o, func(v PermissionSet) pulumix.Output[*string] { return v.Description })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The Amazon Resource Name (ARN) of the SSO Instance under which the operation will be executed.
func (o PermissionSetOutput) InstanceArn() pulumix.Output[string] {
	value := pulumix.Apply[PermissionSet](o, func(v PermissionSet) pulumix.Output[string] { return v.InstanceArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The name of the Permission Set.
func (o PermissionSetOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[PermissionSet](o, func(v PermissionSet) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The relay state URL used to redirect users within the application during the federation authentication process.
func (o PermissionSetOutput) RelayState() pulumix.Output[*string] {
	value := pulumix.Apply[PermissionSet](o, func(v PermissionSet) pulumix.Output[*string] { return v.RelayState })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The length of time that the application user sessions are valid in the ISO-8601 standard. Default: `PT1H`.
func (o PermissionSetOutput) SessionDuration() pulumix.Output[*string] {
	value := pulumix.Apply[PermissionSet](o, func(v PermissionSet) pulumix.Output[*string] { return v.SessionDuration })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o PermissionSetOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[PermissionSet](o, func(v PermissionSet) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o PermissionSetOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[PermissionSet](o, func(v PermissionSet) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(PermissionSetOutput{})
}
