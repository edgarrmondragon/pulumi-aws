// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package comprehend

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Resource for managing an AWS Comprehend Document Classifier.
type DocumentClassifier struct {
	pulumi.CustomResourceState

	// ARN of the Document Classifier version.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The ARN for an IAM Role which allows Comprehend to read the training and testing data.
	DataAccessRoleArn pulumix.Output[string] `pulumi:"dataAccessRoleArn"`
	// Configuration for the training and testing data.
	// See the `inputDataConfig` Configuration Block section below.
	InputDataConfig pulumix.GPtrOutput[DocumentClassifierInputDataConfig, DocumentClassifierInputDataConfigOutput] `pulumi:"inputDataConfig"`
	// Two-letter language code for the language.
	// One of `en`, `es`, `fr`, `it`, `de`, or `pt`.
	LanguageCode pulumix.Output[string] `pulumi:"languageCode"`
	// The document classification mode.
	// One of `MULTI_CLASS` or `MULTI_LABEL`.
	// `MULTI_CLASS` is also known as "Single Label" in the AWS Console.
	Mode pulumix.Output[*string] `pulumi:"mode"`
	// KMS Key used to encrypt trained Document Classifiers.
	// Can be a KMS Key ID or a KMS Key ARN.
	ModelKmsKeyId pulumix.Output[*string] `pulumi:"modelKmsKeyId"`
	// Name for the Document Classifier.
	// Has a maximum length of 63 characters.
	// Can contain upper- and lower-case letters, numbers, and hypen (`-`).
	//
	// The following arguments are optional:
	Name pulumix.Output[string] `pulumi:"name"`
	// Configuration for the output results of training.
	// See the `outputDataConfig` Configuration Block section below.
	OutputDataConfig pulumix.GPtrOutput[DocumentClassifierOutputDataConfig, DocumentClassifierOutputDataConfigOutput] `pulumi:"outputDataConfig"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` Configuration Block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// Name for the version of the Document Classifier.
	// Each version must have a unique name within the Document Classifier.
	// If omitted, the provider will assign a random, unique version name.
	// If explicitly set to `""`, no version name will be set.
	// Has a maximum length of 63 characters.
	// Can contain upper- and lower-case letters, numbers, and hypen (`-`).
	// Conflicts with `versionNamePrefix`.
	VersionName pulumix.Output[string] `pulumi:"versionName"`
	// Creates a unique version name beginning with the specified prefix.
	// Has a maximum length of 37 characters.
	// Can contain upper- and lower-case letters, numbers, and hypen (`-`).
	// Conflicts with `versionName`.
	VersionNamePrefix pulumix.Output[string] `pulumi:"versionNamePrefix"`
	// KMS Key used to encrypt storage volumes during job processing.
	// Can be a KMS Key ID or a KMS Key ARN.
	VolumeKmsKeyId pulumix.Output[*string] `pulumi:"volumeKmsKeyId"`
	// Configuration parameters for VPC to contain Document Classifier resources.
	// See the `vpcConfig` Configuration Block section below.
	VpcConfig pulumix.GPtrOutput[DocumentClassifierVpcConfig, DocumentClassifierVpcConfigOutput] `pulumi:"vpcConfig"`
}

// NewDocumentClassifier registers a new resource with the given unique name, arguments, and options.
func NewDocumentClassifier(ctx *pulumi.Context,
	name string, args *DocumentClassifierArgs, opts ...pulumi.ResourceOption) (*DocumentClassifier, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DataAccessRoleArn == nil {
		return nil, errors.New("invalid value for required argument 'DataAccessRoleArn'")
	}
	if args.InputDataConfig == nil {
		return nil, errors.New("invalid value for required argument 'InputDataConfig'")
	}
	if args.LanguageCode == nil {
		return nil, errors.New("invalid value for required argument 'LanguageCode'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DocumentClassifier
	err := ctx.RegisterResource("aws:comprehend/documentClassifier:DocumentClassifier", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDocumentClassifier gets an existing DocumentClassifier resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDocumentClassifier(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DocumentClassifierState, opts ...pulumi.ResourceOption) (*DocumentClassifier, error) {
	var resource DocumentClassifier
	err := ctx.ReadResource("aws:comprehend/documentClassifier:DocumentClassifier", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DocumentClassifier resources.
type documentClassifierState struct {
	// ARN of the Document Classifier version.
	Arn *string `pulumi:"arn"`
	// The ARN for an IAM Role which allows Comprehend to read the training and testing data.
	DataAccessRoleArn *string `pulumi:"dataAccessRoleArn"`
	// Configuration for the training and testing data.
	// See the `inputDataConfig` Configuration Block section below.
	InputDataConfig *DocumentClassifierInputDataConfig `pulumi:"inputDataConfig"`
	// Two-letter language code for the language.
	// One of `en`, `es`, `fr`, `it`, `de`, or `pt`.
	LanguageCode *string `pulumi:"languageCode"`
	// The document classification mode.
	// One of `MULTI_CLASS` or `MULTI_LABEL`.
	// `MULTI_CLASS` is also known as "Single Label" in the AWS Console.
	Mode *string `pulumi:"mode"`
	// KMS Key used to encrypt trained Document Classifiers.
	// Can be a KMS Key ID or a KMS Key ARN.
	ModelKmsKeyId *string `pulumi:"modelKmsKeyId"`
	// Name for the Document Classifier.
	// Has a maximum length of 63 characters.
	// Can contain upper- and lower-case letters, numbers, and hypen (`-`).
	//
	// The following arguments are optional:
	Name *string `pulumi:"name"`
	// Configuration for the output results of training.
	// See the `outputDataConfig` Configuration Block section below.
	OutputDataConfig *DocumentClassifierOutputDataConfig `pulumi:"outputDataConfig"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` Configuration Block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// Name for the version of the Document Classifier.
	// Each version must have a unique name within the Document Classifier.
	// If omitted, the provider will assign a random, unique version name.
	// If explicitly set to `""`, no version name will be set.
	// Has a maximum length of 63 characters.
	// Can contain upper- and lower-case letters, numbers, and hypen (`-`).
	// Conflicts with `versionNamePrefix`.
	VersionName *string `pulumi:"versionName"`
	// Creates a unique version name beginning with the specified prefix.
	// Has a maximum length of 37 characters.
	// Can contain upper- and lower-case letters, numbers, and hypen (`-`).
	// Conflicts with `versionName`.
	VersionNamePrefix *string `pulumi:"versionNamePrefix"`
	// KMS Key used to encrypt storage volumes during job processing.
	// Can be a KMS Key ID or a KMS Key ARN.
	VolumeKmsKeyId *string `pulumi:"volumeKmsKeyId"`
	// Configuration parameters for VPC to contain Document Classifier resources.
	// See the `vpcConfig` Configuration Block section below.
	VpcConfig *DocumentClassifierVpcConfig `pulumi:"vpcConfig"`
}

type DocumentClassifierState struct {
	// ARN of the Document Classifier version.
	Arn pulumix.Input[*string]
	// The ARN for an IAM Role which allows Comprehend to read the training and testing data.
	DataAccessRoleArn pulumix.Input[*string]
	// Configuration for the training and testing data.
	// See the `inputDataConfig` Configuration Block section below.
	InputDataConfig pulumix.Input[*DocumentClassifierInputDataConfigArgs]
	// Two-letter language code for the language.
	// One of `en`, `es`, `fr`, `it`, `de`, or `pt`.
	LanguageCode pulumix.Input[*string]
	// The document classification mode.
	// One of `MULTI_CLASS` or `MULTI_LABEL`.
	// `MULTI_CLASS` is also known as "Single Label" in the AWS Console.
	Mode pulumix.Input[*string]
	// KMS Key used to encrypt trained Document Classifiers.
	// Can be a KMS Key ID or a KMS Key ARN.
	ModelKmsKeyId pulumix.Input[*string]
	// Name for the Document Classifier.
	// Has a maximum length of 63 characters.
	// Can contain upper- and lower-case letters, numbers, and hypen (`-`).
	//
	// The following arguments are optional:
	Name pulumix.Input[*string]
	// Configuration for the output results of training.
	// See the `outputDataConfig` Configuration Block section below.
	OutputDataConfig pulumix.Input[*DocumentClassifierOutputDataConfigArgs]
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` Configuration Block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// Name for the version of the Document Classifier.
	// Each version must have a unique name within the Document Classifier.
	// If omitted, the provider will assign a random, unique version name.
	// If explicitly set to `""`, no version name will be set.
	// Has a maximum length of 63 characters.
	// Can contain upper- and lower-case letters, numbers, and hypen (`-`).
	// Conflicts with `versionNamePrefix`.
	VersionName pulumix.Input[*string]
	// Creates a unique version name beginning with the specified prefix.
	// Has a maximum length of 37 characters.
	// Can contain upper- and lower-case letters, numbers, and hypen (`-`).
	// Conflicts with `versionName`.
	VersionNamePrefix pulumix.Input[*string]
	// KMS Key used to encrypt storage volumes during job processing.
	// Can be a KMS Key ID or a KMS Key ARN.
	VolumeKmsKeyId pulumix.Input[*string]
	// Configuration parameters for VPC to contain Document Classifier resources.
	// See the `vpcConfig` Configuration Block section below.
	VpcConfig pulumix.Input[*DocumentClassifierVpcConfigArgs]
}

func (DocumentClassifierState) ElementType() reflect.Type {
	return reflect.TypeOf((*documentClassifierState)(nil)).Elem()
}

type documentClassifierArgs struct {
	// The ARN for an IAM Role which allows Comprehend to read the training and testing data.
	DataAccessRoleArn string `pulumi:"dataAccessRoleArn"`
	// Configuration for the training and testing data.
	// See the `inputDataConfig` Configuration Block section below.
	InputDataConfig DocumentClassifierInputDataConfig `pulumi:"inputDataConfig"`
	// Two-letter language code for the language.
	// One of `en`, `es`, `fr`, `it`, `de`, or `pt`.
	LanguageCode string `pulumi:"languageCode"`
	// The document classification mode.
	// One of `MULTI_CLASS` or `MULTI_LABEL`.
	// `MULTI_CLASS` is also known as "Single Label" in the AWS Console.
	Mode *string `pulumi:"mode"`
	// KMS Key used to encrypt trained Document Classifiers.
	// Can be a KMS Key ID or a KMS Key ARN.
	ModelKmsKeyId *string `pulumi:"modelKmsKeyId"`
	// Name for the Document Classifier.
	// Has a maximum length of 63 characters.
	// Can contain upper- and lower-case letters, numbers, and hypen (`-`).
	//
	// The following arguments are optional:
	Name *string `pulumi:"name"`
	// Configuration for the output results of training.
	// See the `outputDataConfig` Configuration Block section below.
	OutputDataConfig *DocumentClassifierOutputDataConfig `pulumi:"outputDataConfig"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` Configuration Block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Name for the version of the Document Classifier.
	// Each version must have a unique name within the Document Classifier.
	// If omitted, the provider will assign a random, unique version name.
	// If explicitly set to `""`, no version name will be set.
	// Has a maximum length of 63 characters.
	// Can contain upper- and lower-case letters, numbers, and hypen (`-`).
	// Conflicts with `versionNamePrefix`.
	VersionName *string `pulumi:"versionName"`
	// Creates a unique version name beginning with the specified prefix.
	// Has a maximum length of 37 characters.
	// Can contain upper- and lower-case letters, numbers, and hypen (`-`).
	// Conflicts with `versionName`.
	VersionNamePrefix *string `pulumi:"versionNamePrefix"`
	// KMS Key used to encrypt storage volumes during job processing.
	// Can be a KMS Key ID or a KMS Key ARN.
	VolumeKmsKeyId *string `pulumi:"volumeKmsKeyId"`
	// Configuration parameters for VPC to contain Document Classifier resources.
	// See the `vpcConfig` Configuration Block section below.
	VpcConfig *DocumentClassifierVpcConfig `pulumi:"vpcConfig"`
}

// The set of arguments for constructing a DocumentClassifier resource.
type DocumentClassifierArgs struct {
	// The ARN for an IAM Role which allows Comprehend to read the training and testing data.
	DataAccessRoleArn pulumix.Input[string]
	// Configuration for the training and testing data.
	// See the `inputDataConfig` Configuration Block section below.
	InputDataConfig pulumix.Input[*DocumentClassifierInputDataConfigArgs]
	// Two-letter language code for the language.
	// One of `en`, `es`, `fr`, `it`, `de`, or `pt`.
	LanguageCode pulumix.Input[string]
	// The document classification mode.
	// One of `MULTI_CLASS` or `MULTI_LABEL`.
	// `MULTI_CLASS` is also known as "Single Label" in the AWS Console.
	Mode pulumix.Input[*string]
	// KMS Key used to encrypt trained Document Classifiers.
	// Can be a KMS Key ID or a KMS Key ARN.
	ModelKmsKeyId pulumix.Input[*string]
	// Name for the Document Classifier.
	// Has a maximum length of 63 characters.
	// Can contain upper- and lower-case letters, numbers, and hypen (`-`).
	//
	// The following arguments are optional:
	Name pulumix.Input[*string]
	// Configuration for the output results of training.
	// See the `outputDataConfig` Configuration Block section below.
	OutputDataConfig pulumix.Input[*DocumentClassifierOutputDataConfigArgs]
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` Configuration Block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// Name for the version of the Document Classifier.
	// Each version must have a unique name within the Document Classifier.
	// If omitted, the provider will assign a random, unique version name.
	// If explicitly set to `""`, no version name will be set.
	// Has a maximum length of 63 characters.
	// Can contain upper- and lower-case letters, numbers, and hypen (`-`).
	// Conflicts with `versionNamePrefix`.
	VersionName pulumix.Input[*string]
	// Creates a unique version name beginning with the specified prefix.
	// Has a maximum length of 37 characters.
	// Can contain upper- and lower-case letters, numbers, and hypen (`-`).
	// Conflicts with `versionName`.
	VersionNamePrefix pulumix.Input[*string]
	// KMS Key used to encrypt storage volumes during job processing.
	// Can be a KMS Key ID or a KMS Key ARN.
	VolumeKmsKeyId pulumix.Input[*string]
	// Configuration parameters for VPC to contain Document Classifier resources.
	// See the `vpcConfig` Configuration Block section below.
	VpcConfig pulumix.Input[*DocumentClassifierVpcConfigArgs]
}

func (DocumentClassifierArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*documentClassifierArgs)(nil)).Elem()
}

type DocumentClassifierOutput struct{ *pulumi.OutputState }

func (DocumentClassifierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DocumentClassifier)(nil)).Elem()
}

func (o DocumentClassifierOutput) ToDocumentClassifierOutput() DocumentClassifierOutput {
	return o
}

func (o DocumentClassifierOutput) ToDocumentClassifierOutputWithContext(ctx context.Context) DocumentClassifierOutput {
	return o
}

func (o DocumentClassifierOutput) ToOutput(ctx context.Context) pulumix.Output[DocumentClassifier] {
	return pulumix.Output[DocumentClassifier]{
		OutputState: o.OutputState,
	}
}

// ARN of the Document Classifier version.
func (o DocumentClassifierOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[DocumentClassifier](o, func(v DocumentClassifier) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The ARN for an IAM Role which allows Comprehend to read the training and testing data.
func (o DocumentClassifierOutput) DataAccessRoleArn() pulumix.Output[string] {
	value := pulumix.Apply[DocumentClassifier](o, func(v DocumentClassifier) pulumix.Output[string] { return v.DataAccessRoleArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Configuration for the training and testing data.
// See the `inputDataConfig` Configuration Block section below.
func (o DocumentClassifierOutput) InputDataConfig() pulumix.GPtrOutput[DocumentClassifierInputDataConfig, DocumentClassifierInputDataConfigOutput] {
	value := pulumix.Apply[DocumentClassifier](o, func(v DocumentClassifier) pulumix.GPtrOutput[DocumentClassifierInputDataConfig, DocumentClassifierInputDataConfigOutput] {
		return v.InputDataConfig
	})
	unwrapped := pulumix.Flatten[*DocumentClassifierInputDataConfig, pulumix.GPtrOutput[DocumentClassifierInputDataConfig, DocumentClassifierInputDataConfigOutput]](value)
	return pulumix.GPtrOutput[DocumentClassifierInputDataConfig, DocumentClassifierInputDataConfigOutput]{OutputState: unwrapped.OutputState}
}

// Two-letter language code for the language.
// One of `en`, `es`, `fr`, `it`, `de`, or `pt`.
func (o DocumentClassifierOutput) LanguageCode() pulumix.Output[string] {
	value := pulumix.Apply[DocumentClassifier](o, func(v DocumentClassifier) pulumix.Output[string] { return v.LanguageCode })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The document classification mode.
// One of `MULTI_CLASS` or `MULTI_LABEL`.
// `MULTI_CLASS` is also known as "Single Label" in the AWS Console.
func (o DocumentClassifierOutput) Mode() pulumix.Output[*string] {
	value := pulumix.Apply[DocumentClassifier](o, func(v DocumentClassifier) pulumix.Output[*string] { return v.Mode })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// KMS Key used to encrypt trained Document Classifiers.
// Can be a KMS Key ID or a KMS Key ARN.
func (o DocumentClassifierOutput) ModelKmsKeyId() pulumix.Output[*string] {
	value := pulumix.Apply[DocumentClassifier](o, func(v DocumentClassifier) pulumix.Output[*string] { return v.ModelKmsKeyId })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Name for the Document Classifier.
// Has a maximum length of 63 characters.
// Can contain upper- and lower-case letters, numbers, and hypen (`-`).
//
// The following arguments are optional:
func (o DocumentClassifierOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[DocumentClassifier](o, func(v DocumentClassifier) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Configuration for the output results of training.
// See the `outputDataConfig` Configuration Block section below.
func (o DocumentClassifierOutput) OutputDataConfig() pulumix.GPtrOutput[DocumentClassifierOutputDataConfig, DocumentClassifierOutputDataConfigOutput] {
	value := pulumix.Apply[DocumentClassifier](o, func(v DocumentClassifier) pulumix.GPtrOutput[DocumentClassifierOutputDataConfig, DocumentClassifierOutputDataConfigOutput] {
		return v.OutputDataConfig
	})
	unwrapped := pulumix.Flatten[*DocumentClassifierOutputDataConfig, pulumix.GPtrOutput[DocumentClassifierOutputDataConfig, DocumentClassifierOutputDataConfigOutput]](value)
	return pulumix.GPtrOutput[DocumentClassifierOutputDataConfig, DocumentClassifierOutputDataConfigOutput]{OutputState: unwrapped.OutputState}
}

// A map of tags to assign to the resource. If configured with a provider `defaultTags` Configuration Block present, tags with matching keys will overwrite those defined at the provider-level.
func (o DocumentClassifierOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[DocumentClassifier](o, func(v DocumentClassifier) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o DocumentClassifierOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[DocumentClassifier](o, func(v DocumentClassifier) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Name for the version of the Document Classifier.
// Each version must have a unique name within the Document Classifier.
// If omitted, the provider will assign a random, unique version name.
// If explicitly set to `""`, no version name will be set.
// Has a maximum length of 63 characters.
// Can contain upper- and lower-case letters, numbers, and hypen (`-`).
// Conflicts with `versionNamePrefix`.
func (o DocumentClassifierOutput) VersionName() pulumix.Output[string] {
	value := pulumix.Apply[DocumentClassifier](o, func(v DocumentClassifier) pulumix.Output[string] { return v.VersionName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Creates a unique version name beginning with the specified prefix.
// Has a maximum length of 37 characters.
// Can contain upper- and lower-case letters, numbers, and hypen (`-`).
// Conflicts with `versionName`.
func (o DocumentClassifierOutput) VersionNamePrefix() pulumix.Output[string] {
	value := pulumix.Apply[DocumentClassifier](o, func(v DocumentClassifier) pulumix.Output[string] { return v.VersionNamePrefix })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// KMS Key used to encrypt storage volumes during job processing.
// Can be a KMS Key ID or a KMS Key ARN.
func (o DocumentClassifierOutput) VolumeKmsKeyId() pulumix.Output[*string] {
	value := pulumix.Apply[DocumentClassifier](o, func(v DocumentClassifier) pulumix.Output[*string] { return v.VolumeKmsKeyId })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Configuration parameters for VPC to contain Document Classifier resources.
// See the `vpcConfig` Configuration Block section below.
func (o DocumentClassifierOutput) VpcConfig() pulumix.GPtrOutput[DocumentClassifierVpcConfig, DocumentClassifierVpcConfigOutput] {
	value := pulumix.Apply[DocumentClassifier](o, func(v DocumentClassifier) pulumix.GPtrOutput[DocumentClassifierVpcConfig, DocumentClassifierVpcConfigOutput] {
		return v.VpcConfig
	})
	unwrapped := pulumix.Flatten[*DocumentClassifierVpcConfig, pulumix.GPtrOutput[DocumentClassifierVpcConfig, DocumentClassifierVpcConfigOutput]](value)
	return pulumix.GPtrOutput[DocumentClassifierVpcConfig, DocumentClassifierVpcConfigOutput]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(DocumentClassifierOutput{})
}
