// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package codebuild

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a CodeBuild Report Groups Resource.
type ReportGroup struct {
	pulumi.CustomResourceState

	// The ARN of Report Group.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The date and time this Report Group was created.
	Created pulumix.Output[string] `pulumi:"created"`
	// If `true`, deletes any reports that belong to a report group before deleting the report group. If `false`, you must delete any reports in the report group before deleting it. Default value is `false`.
	DeleteReports pulumix.Output[*bool] `pulumi:"deleteReports"`
	// Information about the destination where the raw data of this Report Group is exported. see Export Config documented below.
	ExportConfig pulumix.GPtrOutput[ReportGroupExportConfig, ReportGroupExportConfigOutput] `pulumi:"exportConfig"`
	// The name of a Report Group.
	Name pulumix.Output[string] `pulumi:"name"`
	// Key-value mapping of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// The type of the Report Group. Valid value are `TEST` and `CODE_COVERAGE`.
	Type pulumix.Output[string] `pulumi:"type"`
}

// NewReportGroup registers a new resource with the given unique name, arguments, and options.
func NewReportGroup(ctx *pulumi.Context,
	name string, args *ReportGroupArgs, opts ...pulumi.ResourceOption) (*ReportGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ExportConfig == nil {
		return nil, errors.New("invalid value for required argument 'ExportConfig'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ReportGroup
	err := ctx.RegisterResource("aws:codebuild/reportGroup:ReportGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetReportGroup gets an existing ReportGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetReportGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ReportGroupState, opts ...pulumi.ResourceOption) (*ReportGroup, error) {
	var resource ReportGroup
	err := ctx.ReadResource("aws:codebuild/reportGroup:ReportGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ReportGroup resources.
type reportGroupState struct {
	// The ARN of Report Group.
	Arn *string `pulumi:"arn"`
	// The date and time this Report Group was created.
	Created *string `pulumi:"created"`
	// If `true`, deletes any reports that belong to a report group before deleting the report group. If `false`, you must delete any reports in the report group before deleting it. Default value is `false`.
	DeleteReports *bool `pulumi:"deleteReports"`
	// Information about the destination where the raw data of this Report Group is exported. see Export Config documented below.
	ExportConfig *ReportGroupExportConfig `pulumi:"exportConfig"`
	// The name of a Report Group.
	Name *string `pulumi:"name"`
	// Key-value mapping of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// The type of the Report Group. Valid value are `TEST` and `CODE_COVERAGE`.
	Type *string `pulumi:"type"`
}

type ReportGroupState struct {
	// The ARN of Report Group.
	Arn pulumix.Input[*string]
	// The date and time this Report Group was created.
	Created pulumix.Input[*string]
	// If `true`, deletes any reports that belong to a report group before deleting the report group. If `false`, you must delete any reports in the report group before deleting it. Default value is `false`.
	DeleteReports pulumix.Input[*bool]
	// Information about the destination where the raw data of this Report Group is exported. see Export Config documented below.
	ExportConfig pulumix.Input[*ReportGroupExportConfigArgs]
	// The name of a Report Group.
	Name pulumix.Input[*string]
	// Key-value mapping of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// The type of the Report Group. Valid value are `TEST` and `CODE_COVERAGE`.
	Type pulumix.Input[*string]
}

func (ReportGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*reportGroupState)(nil)).Elem()
}

type reportGroupArgs struct {
	// If `true`, deletes any reports that belong to a report group before deleting the report group. If `false`, you must delete any reports in the report group before deleting it. Default value is `false`.
	DeleteReports *bool `pulumi:"deleteReports"`
	// Information about the destination where the raw data of this Report Group is exported. see Export Config documented below.
	ExportConfig ReportGroupExportConfig `pulumi:"exportConfig"`
	// The name of a Report Group.
	Name *string `pulumi:"name"`
	// Key-value mapping of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// The type of the Report Group. Valid value are `TEST` and `CODE_COVERAGE`.
	Type string `pulumi:"type"`
}

// The set of arguments for constructing a ReportGroup resource.
type ReportGroupArgs struct {
	// If `true`, deletes any reports that belong to a report group before deleting the report group. If `false`, you must delete any reports in the report group before deleting it. Default value is `false`.
	DeleteReports pulumix.Input[*bool]
	// Information about the destination where the raw data of this Report Group is exported. see Export Config documented below.
	ExportConfig pulumix.Input[*ReportGroupExportConfigArgs]
	// The name of a Report Group.
	Name pulumix.Input[*string]
	// Key-value mapping of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// The type of the Report Group. Valid value are `TEST` and `CODE_COVERAGE`.
	Type pulumix.Input[string]
}

func (ReportGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*reportGroupArgs)(nil)).Elem()
}

type ReportGroupOutput struct{ *pulumi.OutputState }

func (ReportGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportGroup)(nil)).Elem()
}

func (o ReportGroupOutput) ToReportGroupOutput() ReportGroupOutput {
	return o
}

func (o ReportGroupOutput) ToReportGroupOutputWithContext(ctx context.Context) ReportGroupOutput {
	return o
}

func (o ReportGroupOutput) ToOutput(ctx context.Context) pulumix.Output[ReportGroup] {
	return pulumix.Output[ReportGroup]{
		OutputState: o.OutputState,
	}
}

// The ARN of Report Group.
func (o ReportGroupOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[ReportGroup](o, func(v ReportGroup) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The date and time this Report Group was created.
func (o ReportGroupOutput) Created() pulumix.Output[string] {
	value := pulumix.Apply[ReportGroup](o, func(v ReportGroup) pulumix.Output[string] { return v.Created })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// If `true`, deletes any reports that belong to a report group before deleting the report group. If `false`, you must delete any reports in the report group before deleting it. Default value is `false`.
func (o ReportGroupOutput) DeleteReports() pulumix.Output[*bool] {
	value := pulumix.Apply[ReportGroup](o, func(v ReportGroup) pulumix.Output[*bool] { return v.DeleteReports })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// Information about the destination where the raw data of this Report Group is exported. see Export Config documented below.
func (o ReportGroupOutput) ExportConfig() pulumix.GPtrOutput[ReportGroupExportConfig, ReportGroupExportConfigOutput] {
	value := pulumix.Apply[ReportGroup](o, func(v ReportGroup) pulumix.GPtrOutput[ReportGroupExportConfig, ReportGroupExportConfigOutput] {
		return v.ExportConfig
	})
	unwrapped := pulumix.Flatten[*ReportGroupExportConfig, pulumix.GPtrOutput[ReportGroupExportConfig, ReportGroupExportConfigOutput]](value)
	return pulumix.GPtrOutput[ReportGroupExportConfig, ReportGroupExportConfigOutput]{OutputState: unwrapped.OutputState}
}

// The name of a Report Group.
func (o ReportGroupOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[ReportGroup](o, func(v ReportGroup) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Key-value mapping of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o ReportGroupOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[ReportGroup](o, func(v ReportGroup) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o ReportGroupOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[ReportGroup](o, func(v ReportGroup) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// The type of the Report Group. Valid value are `TEST` and `CODE_COVERAGE`.
func (o ReportGroupOutput) Type() pulumix.Output[string] {
	value := pulumix.Apply[ReportGroup](o, func(v ReportGroup) pulumix.Output[string] { return v.Type })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(ReportGroupOutput{})
}
