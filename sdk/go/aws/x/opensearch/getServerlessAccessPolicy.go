// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package opensearch

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Data source for managing an AWS OpenSearch Serverless Access Policy.
func LookupServerlessAccessPolicy(ctx *pulumi.Context, args *LookupServerlessAccessPolicyArgs, opts ...pulumi.InvokeOption) (*LookupServerlessAccessPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupServerlessAccessPolicyResult
	err := ctx.Invoke("aws:opensearch/getServerlessAccessPolicy:getServerlessAccessPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getServerlessAccessPolicy.
type LookupServerlessAccessPolicyArgs struct {
	// Name of the policy.
	Name string `pulumi:"name"`
	// Type of access policy. Must be `data`.
	Type string `pulumi:"type"`
}

// A collection of values returned by getServerlessAccessPolicy.
type LookupServerlessAccessPolicyResult struct {
	// Description of the policy. Typically used to store information about the permissions defined in the policy.
	Description string `pulumi:"description"`
	Id          string `pulumi:"id"`
	Name        string `pulumi:"name"`
	// JSON policy document to use as the content for the new policy.
	Policy string `pulumi:"policy"`
	// Version of the policy.
	PolicyVersion string `pulumi:"policyVersion"`
	Type          string `pulumi:"type"`
}

func LookupServerlessAccessPolicyOutput(ctx *pulumi.Context, args LookupServerlessAccessPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupServerlessAccessPolicyResultOutput {
	outputResult := pulumix.ApplyErr[*LookupServerlessAccessPolicyArgs](args.ToOutput(), func(plainArgs *LookupServerlessAccessPolicyArgs) (*LookupServerlessAccessPolicyResult, error) {
		return LookupServerlessAccessPolicy(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[LookupServerlessAccessPolicyResultOutput, *LookupServerlessAccessPolicyResult](outputResult)
}

// A collection of arguments for invoking getServerlessAccessPolicy.
type LookupServerlessAccessPolicyOutputArgs struct {
	// Name of the policy.
	Name pulumix.Input[string] `pulumi:"name"`
	// Type of access policy. Must be `data`.
	Type pulumix.Input[string] `pulumi:"type"`
}

func (args LookupServerlessAccessPolicyOutputArgs) ToOutput() pulumix.Output[*LookupServerlessAccessPolicyArgs] {
	allArgs := pulumix.All(
		args.Name.ToOutput(context.Background()).AsAny(),
		args.Type.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *LookupServerlessAccessPolicyArgs {
		return &LookupServerlessAccessPolicyArgs{
			Name: resolvedArgs[0].(string),
			Type: resolvedArgs[1].(string),
		}
	})
}

type LookupServerlessAccessPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupServerlessAccessPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServerlessAccessPolicyResult)(nil)).Elem()
}

func (o LookupServerlessAccessPolicyResultOutput) ToOutput(context.Context) pulumix.Output[*LookupServerlessAccessPolicyResult] {
	return pulumix.Output[*LookupServerlessAccessPolicyResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupServerlessAccessPolicyResultOutput) Description() pulumix.Output[string] {
	return pulumix.Apply[*LookupServerlessAccessPolicyResult](o, func(v *LookupServerlessAccessPolicyResult) string { return v.Description })
}

func (o LookupServerlessAccessPolicyResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*LookupServerlessAccessPolicyResult](o, func(v *LookupServerlessAccessPolicyResult) string { return v.Id })
}

func (o LookupServerlessAccessPolicyResultOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[*LookupServerlessAccessPolicyResult](o, func(v *LookupServerlessAccessPolicyResult) string { return v.Name })
}

func (o LookupServerlessAccessPolicyResultOutput) Policy() pulumix.Output[string] {
	return pulumix.Apply[*LookupServerlessAccessPolicyResult](o, func(v *LookupServerlessAccessPolicyResult) string { return v.Policy })
}

func (o LookupServerlessAccessPolicyResultOutput) PolicyVersion() pulumix.Output[string] {
	return pulumix.Apply[*LookupServerlessAccessPolicyResult](o, func(v *LookupServerlessAccessPolicyResult) string { return v.PolicyVersion })
}

func (o LookupServerlessAccessPolicyResultOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[*LookupServerlessAccessPolicyResult](o, func(v *LookupServerlessAccessPolicyResult) string { return v.Type })
}
