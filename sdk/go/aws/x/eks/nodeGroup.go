// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package eks

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manages an EKS Node Group, which can provision and optionally update an Auto Scaling Group of Kubernetes worker nodes compatible with EKS. Additional documentation about this functionality can be found in the [EKS User Guide](https://docs.aws.amazon.com/eks/latest/userguide/managed-node-groups.html).
type NodeGroup struct {
	pulumi.CustomResourceState

	// Type of Amazon Machine Image (AMI) associated with the EKS Node Group. See the [AWS documentation](https://docs.aws.amazon.com/eks/latest/APIReference/API_Nodegroup.html#AmazonEKS-Type-Nodegroup-amiType) for valid values. This provider will only perform drift detection if a configuration value is provided.
	AmiType pulumix.Output[string] `pulumi:"amiType"`
	// Amazon Resource Name (ARN) of the EKS Node Group.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// Type of capacity associated with the EKS Node Group. Valid values: `ON_DEMAND`, `SPOT`. This provider will only perform drift detection if a configuration value is provided.
	CapacityType pulumix.Output[string] `pulumi:"capacityType"`
	// Name of the EKS Cluster. Must be between 1-100 characters in length. Must begin with an alphanumeric character, and must only contain alphanumeric characters, dashes and underscores (`^[0-9A-Za-z][A-Za-z0-9\-_]+$`).
	ClusterName pulumix.Output[string] `pulumi:"clusterName"`
	// Disk size in GiB for worker nodes. Defaults to `50` for Windows, `20` all other node groups. The provider will only perform drift detection if a configuration value is provided.
	DiskSize pulumix.Output[int] `pulumi:"diskSize"`
	// Force version update if existing pods are unable to be drained due to a pod disruption budget issue.
	ForceUpdateVersion pulumix.Output[*bool] `pulumi:"forceUpdateVersion"`
	// List of instance types associated with the EKS Node Group. Defaults to `["t3.medium"]`. The provider will only perform drift detection if a configuration value is provided.
	InstanceTypes pulumix.ArrayOutput[string] `pulumi:"instanceTypes"`
	// Key-value map of Kubernetes labels. Only labels that are applied with the EKS API are managed by this argument. Other Kubernetes labels applied to the EKS Node Group will not be managed.
	Labels pulumix.MapOutput[string] `pulumi:"labels"`
	// Configuration block with Launch Template settings. See `launchTemplate` below for details.
	LaunchTemplate pulumix.GPtrOutput[NodeGroupLaunchTemplate, NodeGroupLaunchTemplateOutput] `pulumi:"launchTemplate"`
	// Name of the EKS Node Group. If omitted, the provider will assign a random, unique name. Conflicts with `nodeGroupNamePrefix`. The node group name can't be longer than 63 characters. It must start with a letter or digit, but can also include hyphens and underscores for the remaining characters.
	NodeGroupName pulumix.Output[string] `pulumi:"nodeGroupName"`
	// Creates a unique name beginning with the specified prefix. Conflicts with `nodeGroupName`.
	NodeGroupNamePrefix pulumix.Output[string] `pulumi:"nodeGroupNamePrefix"`
	// Amazon Resource Name (ARN) of the IAM Role that provides permissions for the EKS Node Group.
	NodeRoleArn pulumix.Output[string] `pulumi:"nodeRoleArn"`
	// AMI version of the EKS Node Group. Defaults to latest version for Kubernetes version.
	ReleaseVersion pulumix.Output[string] `pulumi:"releaseVersion"`
	// Configuration block with remote access settings. See `remoteAccess` below for details.
	RemoteAccess pulumix.GPtrOutput[NodeGroupRemoteAccess, NodeGroupRemoteAccessOutput] `pulumi:"remoteAccess"`
	// List of objects containing information about underlying resources.
	Resources pulumix.GArrayOutput[NodeGroupResource, NodeGroupResourceOutput] `pulumi:"resources"`
	// Configuration block with scaling settings. See `scalingConfig` below for details.
	ScalingConfig pulumix.GPtrOutput[NodeGroupScalingConfig, NodeGroupScalingConfigOutput] `pulumi:"scalingConfig"`
	// Status of the EKS Node Group.
	Status pulumix.Output[string] `pulumi:"status"`
	// Identifiers of EC2 Subnets to associate with the EKS Node Group.
	//
	// The following arguments are optional:
	SubnetIds pulumix.ArrayOutput[string] `pulumi:"subnetIds"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// The Kubernetes taints to be applied to the nodes in the node group. Maximum of 50 taints per node group. See taint below for details.
	Taints pulumix.GArrayOutput[NodeGroupTaint, NodeGroupTaintOutput] `pulumi:"taints"`
	// Configuration block with update settings. See `updateConfig` below for details.
	UpdateConfig pulumix.GPtrOutput[NodeGroupUpdateConfig, NodeGroupUpdateConfigOutput] `pulumi:"updateConfig"`
	// Kubernetes version. Defaults to EKS Cluster Kubernetes version. The provider will only perform drift detection if a configuration value is provided.
	Version pulumix.Output[string] `pulumi:"version"`
}

// NewNodeGroup registers a new resource with the given unique name, arguments, and options.
func NewNodeGroup(ctx *pulumi.Context,
	name string, args *NodeGroupArgs, opts ...pulumi.ResourceOption) (*NodeGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterName == nil {
		return nil, errors.New("invalid value for required argument 'ClusterName'")
	}
	if args.NodeRoleArn == nil {
		return nil, errors.New("invalid value for required argument 'NodeRoleArn'")
	}
	if args.ScalingConfig == nil {
		return nil, errors.New("invalid value for required argument 'ScalingConfig'")
	}
	if args.SubnetIds == nil {
		return nil, errors.New("invalid value for required argument 'SubnetIds'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource NodeGroup
	err := ctx.RegisterResource("aws:eks/nodeGroup:NodeGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNodeGroup gets an existing NodeGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNodeGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NodeGroupState, opts ...pulumi.ResourceOption) (*NodeGroup, error) {
	var resource NodeGroup
	err := ctx.ReadResource("aws:eks/nodeGroup:NodeGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NodeGroup resources.
type nodeGroupState struct {
	// Type of Amazon Machine Image (AMI) associated with the EKS Node Group. See the [AWS documentation](https://docs.aws.amazon.com/eks/latest/APIReference/API_Nodegroup.html#AmazonEKS-Type-Nodegroup-amiType) for valid values. This provider will only perform drift detection if a configuration value is provided.
	AmiType *string `pulumi:"amiType"`
	// Amazon Resource Name (ARN) of the EKS Node Group.
	Arn *string `pulumi:"arn"`
	// Type of capacity associated with the EKS Node Group. Valid values: `ON_DEMAND`, `SPOT`. This provider will only perform drift detection if a configuration value is provided.
	CapacityType *string `pulumi:"capacityType"`
	// Name of the EKS Cluster. Must be between 1-100 characters in length. Must begin with an alphanumeric character, and must only contain alphanumeric characters, dashes and underscores (`^[0-9A-Za-z][A-Za-z0-9\-_]+$`).
	ClusterName *string `pulumi:"clusterName"`
	// Disk size in GiB for worker nodes. Defaults to `50` for Windows, `20` all other node groups. The provider will only perform drift detection if a configuration value is provided.
	DiskSize *int `pulumi:"diskSize"`
	// Force version update if existing pods are unable to be drained due to a pod disruption budget issue.
	ForceUpdateVersion *bool `pulumi:"forceUpdateVersion"`
	// List of instance types associated with the EKS Node Group. Defaults to `["t3.medium"]`. The provider will only perform drift detection if a configuration value is provided.
	InstanceTypes []string `pulumi:"instanceTypes"`
	// Key-value map of Kubernetes labels. Only labels that are applied with the EKS API are managed by this argument. Other Kubernetes labels applied to the EKS Node Group will not be managed.
	Labels map[string]string `pulumi:"labels"`
	// Configuration block with Launch Template settings. See `launchTemplate` below for details.
	LaunchTemplate *NodeGroupLaunchTemplate `pulumi:"launchTemplate"`
	// Name of the EKS Node Group. If omitted, the provider will assign a random, unique name. Conflicts with `nodeGroupNamePrefix`. The node group name can't be longer than 63 characters. It must start with a letter or digit, but can also include hyphens and underscores for the remaining characters.
	NodeGroupName *string `pulumi:"nodeGroupName"`
	// Creates a unique name beginning with the specified prefix. Conflicts with `nodeGroupName`.
	NodeGroupNamePrefix *string `pulumi:"nodeGroupNamePrefix"`
	// Amazon Resource Name (ARN) of the IAM Role that provides permissions for the EKS Node Group.
	NodeRoleArn *string `pulumi:"nodeRoleArn"`
	// AMI version of the EKS Node Group. Defaults to latest version for Kubernetes version.
	ReleaseVersion *string `pulumi:"releaseVersion"`
	// Configuration block with remote access settings. See `remoteAccess` below for details.
	RemoteAccess *NodeGroupRemoteAccess `pulumi:"remoteAccess"`
	// List of objects containing information about underlying resources.
	Resources []NodeGroupResource `pulumi:"resources"`
	// Configuration block with scaling settings. See `scalingConfig` below for details.
	ScalingConfig *NodeGroupScalingConfig `pulumi:"scalingConfig"`
	// Status of the EKS Node Group.
	Status *string `pulumi:"status"`
	// Identifiers of EC2 Subnets to associate with the EKS Node Group.
	//
	// The following arguments are optional:
	SubnetIds []string `pulumi:"subnetIds"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// The Kubernetes taints to be applied to the nodes in the node group. Maximum of 50 taints per node group. See taint below for details.
	Taints []NodeGroupTaint `pulumi:"taints"`
	// Configuration block with update settings. See `updateConfig` below for details.
	UpdateConfig *NodeGroupUpdateConfig `pulumi:"updateConfig"`
	// Kubernetes version. Defaults to EKS Cluster Kubernetes version. The provider will only perform drift detection if a configuration value is provided.
	Version *string `pulumi:"version"`
}

type NodeGroupState struct {
	// Type of Amazon Machine Image (AMI) associated with the EKS Node Group. See the [AWS documentation](https://docs.aws.amazon.com/eks/latest/APIReference/API_Nodegroup.html#AmazonEKS-Type-Nodegroup-amiType) for valid values. This provider will only perform drift detection if a configuration value is provided.
	AmiType pulumix.Input[*string]
	// Amazon Resource Name (ARN) of the EKS Node Group.
	Arn pulumix.Input[*string]
	// Type of capacity associated with the EKS Node Group. Valid values: `ON_DEMAND`, `SPOT`. This provider will only perform drift detection if a configuration value is provided.
	CapacityType pulumix.Input[*string]
	// Name of the EKS Cluster. Must be between 1-100 characters in length. Must begin with an alphanumeric character, and must only contain alphanumeric characters, dashes and underscores (`^[0-9A-Za-z][A-Za-z0-9\-_]+$`).
	ClusterName pulumix.Input[*string]
	// Disk size in GiB for worker nodes. Defaults to `50` for Windows, `20` all other node groups. The provider will only perform drift detection if a configuration value is provided.
	DiskSize pulumix.Input[*int]
	// Force version update if existing pods are unable to be drained due to a pod disruption budget issue.
	ForceUpdateVersion pulumix.Input[*bool]
	// List of instance types associated with the EKS Node Group. Defaults to `["t3.medium"]`. The provider will only perform drift detection if a configuration value is provided.
	InstanceTypes pulumix.Input[[]string]
	// Key-value map of Kubernetes labels. Only labels that are applied with the EKS API are managed by this argument. Other Kubernetes labels applied to the EKS Node Group will not be managed.
	Labels pulumix.Input[map[string]string]
	// Configuration block with Launch Template settings. See `launchTemplate` below for details.
	LaunchTemplate pulumix.Input[*NodeGroupLaunchTemplateArgs]
	// Name of the EKS Node Group. If omitted, the provider will assign a random, unique name. Conflicts with `nodeGroupNamePrefix`. The node group name can't be longer than 63 characters. It must start with a letter or digit, but can also include hyphens and underscores for the remaining characters.
	NodeGroupName pulumix.Input[*string]
	// Creates a unique name beginning with the specified prefix. Conflicts with `nodeGroupName`.
	NodeGroupNamePrefix pulumix.Input[*string]
	// Amazon Resource Name (ARN) of the IAM Role that provides permissions for the EKS Node Group.
	NodeRoleArn pulumix.Input[*string]
	// AMI version of the EKS Node Group. Defaults to latest version for Kubernetes version.
	ReleaseVersion pulumix.Input[*string]
	// Configuration block with remote access settings. See `remoteAccess` below for details.
	RemoteAccess pulumix.Input[*NodeGroupRemoteAccessArgs]
	// List of objects containing information about underlying resources.
	Resources pulumix.Input[[]*NodeGroupResourceArgs]
	// Configuration block with scaling settings. See `scalingConfig` below for details.
	ScalingConfig pulumix.Input[*NodeGroupScalingConfigArgs]
	// Status of the EKS Node Group.
	Status pulumix.Input[*string]
	// Identifiers of EC2 Subnets to associate with the EKS Node Group.
	//
	// The following arguments are optional:
	SubnetIds pulumix.Input[[]string]
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// The Kubernetes taints to be applied to the nodes in the node group. Maximum of 50 taints per node group. See taint below for details.
	Taints pulumix.Input[[]*NodeGroupTaintArgs]
	// Configuration block with update settings. See `updateConfig` below for details.
	UpdateConfig pulumix.Input[*NodeGroupUpdateConfigArgs]
	// Kubernetes version. Defaults to EKS Cluster Kubernetes version. The provider will only perform drift detection if a configuration value is provided.
	Version pulumix.Input[*string]
}

func (NodeGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*nodeGroupState)(nil)).Elem()
}

type nodeGroupArgs struct {
	// Type of Amazon Machine Image (AMI) associated with the EKS Node Group. See the [AWS documentation](https://docs.aws.amazon.com/eks/latest/APIReference/API_Nodegroup.html#AmazonEKS-Type-Nodegroup-amiType) for valid values. This provider will only perform drift detection if a configuration value is provided.
	AmiType *string `pulumi:"amiType"`
	// Type of capacity associated with the EKS Node Group. Valid values: `ON_DEMAND`, `SPOT`. This provider will only perform drift detection if a configuration value is provided.
	CapacityType *string `pulumi:"capacityType"`
	// Name of the EKS Cluster. Must be between 1-100 characters in length. Must begin with an alphanumeric character, and must only contain alphanumeric characters, dashes and underscores (`^[0-9A-Za-z][A-Za-z0-9\-_]+$`).
	ClusterName string `pulumi:"clusterName"`
	// Disk size in GiB for worker nodes. Defaults to `50` for Windows, `20` all other node groups. The provider will only perform drift detection if a configuration value is provided.
	DiskSize *int `pulumi:"diskSize"`
	// Force version update if existing pods are unable to be drained due to a pod disruption budget issue.
	ForceUpdateVersion *bool `pulumi:"forceUpdateVersion"`
	// List of instance types associated with the EKS Node Group. Defaults to `["t3.medium"]`. The provider will only perform drift detection if a configuration value is provided.
	InstanceTypes []string `pulumi:"instanceTypes"`
	// Key-value map of Kubernetes labels. Only labels that are applied with the EKS API are managed by this argument. Other Kubernetes labels applied to the EKS Node Group will not be managed.
	Labels map[string]string `pulumi:"labels"`
	// Configuration block with Launch Template settings. See `launchTemplate` below for details.
	LaunchTemplate *NodeGroupLaunchTemplate `pulumi:"launchTemplate"`
	// Name of the EKS Node Group. If omitted, the provider will assign a random, unique name. Conflicts with `nodeGroupNamePrefix`. The node group name can't be longer than 63 characters. It must start with a letter or digit, but can also include hyphens and underscores for the remaining characters.
	NodeGroupName *string `pulumi:"nodeGroupName"`
	// Creates a unique name beginning with the specified prefix. Conflicts with `nodeGroupName`.
	NodeGroupNamePrefix *string `pulumi:"nodeGroupNamePrefix"`
	// Amazon Resource Name (ARN) of the IAM Role that provides permissions for the EKS Node Group.
	NodeRoleArn string `pulumi:"nodeRoleArn"`
	// AMI version of the EKS Node Group. Defaults to latest version for Kubernetes version.
	ReleaseVersion *string `pulumi:"releaseVersion"`
	// Configuration block with remote access settings. See `remoteAccess` below for details.
	RemoteAccess *NodeGroupRemoteAccess `pulumi:"remoteAccess"`
	// Configuration block with scaling settings. See `scalingConfig` below for details.
	ScalingConfig NodeGroupScalingConfig `pulumi:"scalingConfig"`
	// Identifiers of EC2 Subnets to associate with the EKS Node Group.
	//
	// The following arguments are optional:
	SubnetIds []string `pulumi:"subnetIds"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// The Kubernetes taints to be applied to the nodes in the node group. Maximum of 50 taints per node group. See taint below for details.
	Taints []NodeGroupTaint `pulumi:"taints"`
	// Configuration block with update settings. See `updateConfig` below for details.
	UpdateConfig *NodeGroupUpdateConfig `pulumi:"updateConfig"`
	// Kubernetes version. Defaults to EKS Cluster Kubernetes version. The provider will only perform drift detection if a configuration value is provided.
	Version *string `pulumi:"version"`
}

// The set of arguments for constructing a NodeGroup resource.
type NodeGroupArgs struct {
	// Type of Amazon Machine Image (AMI) associated with the EKS Node Group. See the [AWS documentation](https://docs.aws.amazon.com/eks/latest/APIReference/API_Nodegroup.html#AmazonEKS-Type-Nodegroup-amiType) for valid values. This provider will only perform drift detection if a configuration value is provided.
	AmiType pulumix.Input[*string]
	// Type of capacity associated with the EKS Node Group. Valid values: `ON_DEMAND`, `SPOT`. This provider will only perform drift detection if a configuration value is provided.
	CapacityType pulumix.Input[*string]
	// Name of the EKS Cluster. Must be between 1-100 characters in length. Must begin with an alphanumeric character, and must only contain alphanumeric characters, dashes and underscores (`^[0-9A-Za-z][A-Za-z0-9\-_]+$`).
	ClusterName pulumix.Input[string]
	// Disk size in GiB for worker nodes. Defaults to `50` for Windows, `20` all other node groups. The provider will only perform drift detection if a configuration value is provided.
	DiskSize pulumix.Input[*int]
	// Force version update if existing pods are unable to be drained due to a pod disruption budget issue.
	ForceUpdateVersion pulumix.Input[*bool]
	// List of instance types associated with the EKS Node Group. Defaults to `["t3.medium"]`. The provider will only perform drift detection if a configuration value is provided.
	InstanceTypes pulumix.Input[[]string]
	// Key-value map of Kubernetes labels. Only labels that are applied with the EKS API are managed by this argument. Other Kubernetes labels applied to the EKS Node Group will not be managed.
	Labels pulumix.Input[map[string]string]
	// Configuration block with Launch Template settings. See `launchTemplate` below for details.
	LaunchTemplate pulumix.Input[*NodeGroupLaunchTemplateArgs]
	// Name of the EKS Node Group. If omitted, the provider will assign a random, unique name. Conflicts with `nodeGroupNamePrefix`. The node group name can't be longer than 63 characters. It must start with a letter or digit, but can also include hyphens and underscores for the remaining characters.
	NodeGroupName pulumix.Input[*string]
	// Creates a unique name beginning with the specified prefix. Conflicts with `nodeGroupName`.
	NodeGroupNamePrefix pulumix.Input[*string]
	// Amazon Resource Name (ARN) of the IAM Role that provides permissions for the EKS Node Group.
	NodeRoleArn pulumix.Input[string]
	// AMI version of the EKS Node Group. Defaults to latest version for Kubernetes version.
	ReleaseVersion pulumix.Input[*string]
	// Configuration block with remote access settings. See `remoteAccess` below for details.
	RemoteAccess pulumix.Input[*NodeGroupRemoteAccessArgs]
	// Configuration block with scaling settings. See `scalingConfig` below for details.
	ScalingConfig pulumix.Input[*NodeGroupScalingConfigArgs]
	// Identifiers of EC2 Subnets to associate with the EKS Node Group.
	//
	// The following arguments are optional:
	SubnetIds pulumix.Input[[]string]
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// The Kubernetes taints to be applied to the nodes in the node group. Maximum of 50 taints per node group. See taint below for details.
	Taints pulumix.Input[[]*NodeGroupTaintArgs]
	// Configuration block with update settings. See `updateConfig` below for details.
	UpdateConfig pulumix.Input[*NodeGroupUpdateConfigArgs]
	// Kubernetes version. Defaults to EKS Cluster Kubernetes version. The provider will only perform drift detection if a configuration value is provided.
	Version pulumix.Input[*string]
}

func (NodeGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*nodeGroupArgs)(nil)).Elem()
}

type NodeGroupOutput struct{ *pulumi.OutputState }

func (NodeGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeGroup)(nil)).Elem()
}

func (o NodeGroupOutput) ToNodeGroupOutput() NodeGroupOutput {
	return o
}

func (o NodeGroupOutput) ToNodeGroupOutputWithContext(ctx context.Context) NodeGroupOutput {
	return o
}

func (o NodeGroupOutput) ToOutput(ctx context.Context) pulumix.Output[NodeGroup] {
	return pulumix.Output[NodeGroup]{
		OutputState: o.OutputState,
	}
}

// Type of Amazon Machine Image (AMI) associated with the EKS Node Group. See the [AWS documentation](https://docs.aws.amazon.com/eks/latest/APIReference/API_Nodegroup.html#AmazonEKS-Type-Nodegroup-amiType) for valid values. This provider will only perform drift detection if a configuration value is provided.
func (o NodeGroupOutput) AmiType() pulumix.Output[string] {
	value := pulumix.Apply[NodeGroup](o, func(v NodeGroup) pulumix.Output[string] { return v.AmiType })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Amazon Resource Name (ARN) of the EKS Node Group.
func (o NodeGroupOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[NodeGroup](o, func(v NodeGroup) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Type of capacity associated with the EKS Node Group. Valid values: `ON_DEMAND`, `SPOT`. This provider will only perform drift detection if a configuration value is provided.
func (o NodeGroupOutput) CapacityType() pulumix.Output[string] {
	value := pulumix.Apply[NodeGroup](o, func(v NodeGroup) pulumix.Output[string] { return v.CapacityType })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Name of the EKS Cluster. Must be between 1-100 characters in length. Must begin with an alphanumeric character, and must only contain alphanumeric characters, dashes and underscores (`^[0-9A-Za-z][A-Za-z0-9\-_]+$`).
func (o NodeGroupOutput) ClusterName() pulumix.Output[string] {
	value := pulumix.Apply[NodeGroup](o, func(v NodeGroup) pulumix.Output[string] { return v.ClusterName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Disk size in GiB for worker nodes. Defaults to `50` for Windows, `20` all other node groups. The provider will only perform drift detection if a configuration value is provided.
func (o NodeGroupOutput) DiskSize() pulumix.Output[int] {
	value := pulumix.Apply[NodeGroup](o, func(v NodeGroup) pulumix.Output[int] { return v.DiskSize })
	return pulumix.Flatten[int, pulumix.Output[int]](value)
}

// Force version update if existing pods are unable to be drained due to a pod disruption budget issue.
func (o NodeGroupOutput) ForceUpdateVersion() pulumix.Output[*bool] {
	value := pulumix.Apply[NodeGroup](o, func(v NodeGroup) pulumix.Output[*bool] { return v.ForceUpdateVersion })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// List of instance types associated with the EKS Node Group. Defaults to `["t3.medium"]`. The provider will only perform drift detection if a configuration value is provided.
func (o NodeGroupOutput) InstanceTypes() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[NodeGroup](o, func(v NodeGroup) pulumix.ArrayOutput[string] { return v.InstanceTypes })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// Key-value map of Kubernetes labels. Only labels that are applied with the EKS API are managed by this argument. Other Kubernetes labels applied to the EKS Node Group will not be managed.
func (o NodeGroupOutput) Labels() pulumix.MapOutput[string] {
	value := pulumix.Apply[NodeGroup](o, func(v NodeGroup) pulumix.MapOutput[string] { return v.Labels })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Configuration block with Launch Template settings. See `launchTemplate` below for details.
func (o NodeGroupOutput) LaunchTemplate() pulumix.GPtrOutput[NodeGroupLaunchTemplate, NodeGroupLaunchTemplateOutput] {
	value := pulumix.Apply[NodeGroup](o, func(v NodeGroup) pulumix.GPtrOutput[NodeGroupLaunchTemplate, NodeGroupLaunchTemplateOutput] {
		return v.LaunchTemplate
	})
	unwrapped := pulumix.Flatten[*NodeGroupLaunchTemplate, pulumix.GPtrOutput[NodeGroupLaunchTemplate, NodeGroupLaunchTemplateOutput]](value)
	return pulumix.GPtrOutput[NodeGroupLaunchTemplate, NodeGroupLaunchTemplateOutput]{OutputState: unwrapped.OutputState}
}

// Name of the EKS Node Group. If omitted, the provider will assign a random, unique name. Conflicts with `nodeGroupNamePrefix`. The node group name can't be longer than 63 characters. It must start with a letter or digit, but can also include hyphens and underscores for the remaining characters.
func (o NodeGroupOutput) NodeGroupName() pulumix.Output[string] {
	value := pulumix.Apply[NodeGroup](o, func(v NodeGroup) pulumix.Output[string] { return v.NodeGroupName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Creates a unique name beginning with the specified prefix. Conflicts with `nodeGroupName`.
func (o NodeGroupOutput) NodeGroupNamePrefix() pulumix.Output[string] {
	value := pulumix.Apply[NodeGroup](o, func(v NodeGroup) pulumix.Output[string] { return v.NodeGroupNamePrefix })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Amazon Resource Name (ARN) of the IAM Role that provides permissions for the EKS Node Group.
func (o NodeGroupOutput) NodeRoleArn() pulumix.Output[string] {
	value := pulumix.Apply[NodeGroup](o, func(v NodeGroup) pulumix.Output[string] { return v.NodeRoleArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// AMI version of the EKS Node Group. Defaults to latest version for Kubernetes version.
func (o NodeGroupOutput) ReleaseVersion() pulumix.Output[string] {
	value := pulumix.Apply[NodeGroup](o, func(v NodeGroup) pulumix.Output[string] { return v.ReleaseVersion })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Configuration block with remote access settings. See `remoteAccess` below for details.
func (o NodeGroupOutput) RemoteAccess() pulumix.GPtrOutput[NodeGroupRemoteAccess, NodeGroupRemoteAccessOutput] {
	value := pulumix.Apply[NodeGroup](o, func(v NodeGroup) pulumix.GPtrOutput[NodeGroupRemoteAccess, NodeGroupRemoteAccessOutput] {
		return v.RemoteAccess
	})
	unwrapped := pulumix.Flatten[*NodeGroupRemoteAccess, pulumix.GPtrOutput[NodeGroupRemoteAccess, NodeGroupRemoteAccessOutput]](value)
	return pulumix.GPtrOutput[NodeGroupRemoteAccess, NodeGroupRemoteAccessOutput]{OutputState: unwrapped.OutputState}
}

// List of objects containing information about underlying resources.
func (o NodeGroupOutput) Resources() pulumix.GArrayOutput[NodeGroupResource, NodeGroupResourceOutput] {
	value := pulumix.Apply[NodeGroup](o, func(v NodeGroup) pulumix.GArrayOutput[NodeGroupResource, NodeGroupResourceOutput] { return v.Resources })
	unwrapped := pulumix.Flatten[[]NodeGroupResource, pulumix.GArrayOutput[NodeGroupResource, NodeGroupResourceOutput]](value)
	return pulumix.GArrayOutput[NodeGroupResource, NodeGroupResourceOutput]{OutputState: unwrapped.OutputState}
}

// Configuration block with scaling settings. See `scalingConfig` below for details.
func (o NodeGroupOutput) ScalingConfig() pulumix.GPtrOutput[NodeGroupScalingConfig, NodeGroupScalingConfigOutput] {
	value := pulumix.Apply[NodeGroup](o, func(v NodeGroup) pulumix.GPtrOutput[NodeGroupScalingConfig, NodeGroupScalingConfigOutput] {
		return v.ScalingConfig
	})
	unwrapped := pulumix.Flatten[*NodeGroupScalingConfig, pulumix.GPtrOutput[NodeGroupScalingConfig, NodeGroupScalingConfigOutput]](value)
	return pulumix.GPtrOutput[NodeGroupScalingConfig, NodeGroupScalingConfigOutput]{OutputState: unwrapped.OutputState}
}

// Status of the EKS Node Group.
func (o NodeGroupOutput) Status() pulumix.Output[string] {
	value := pulumix.Apply[NodeGroup](o, func(v NodeGroup) pulumix.Output[string] { return v.Status })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Identifiers of EC2 Subnets to associate with the EKS Node Group.
//
// The following arguments are optional:
func (o NodeGroupOutput) SubnetIds() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[NodeGroup](o, func(v NodeGroup) pulumix.ArrayOutput[string] { return v.SubnetIds })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o NodeGroupOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[NodeGroup](o, func(v NodeGroup) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o NodeGroupOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[NodeGroup](o, func(v NodeGroup) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// The Kubernetes taints to be applied to the nodes in the node group. Maximum of 50 taints per node group. See taint below for details.
func (o NodeGroupOutput) Taints() pulumix.GArrayOutput[NodeGroupTaint, NodeGroupTaintOutput] {
	value := pulumix.Apply[NodeGroup](o, func(v NodeGroup) pulumix.GArrayOutput[NodeGroupTaint, NodeGroupTaintOutput] { return v.Taints })
	unwrapped := pulumix.Flatten[[]NodeGroupTaint, pulumix.GArrayOutput[NodeGroupTaint, NodeGroupTaintOutput]](value)
	return pulumix.GArrayOutput[NodeGroupTaint, NodeGroupTaintOutput]{OutputState: unwrapped.OutputState}
}

// Configuration block with update settings. See `updateConfig` below for details.
func (o NodeGroupOutput) UpdateConfig() pulumix.GPtrOutput[NodeGroupUpdateConfig, NodeGroupUpdateConfigOutput] {
	value := pulumix.Apply[NodeGroup](o, func(v NodeGroup) pulumix.GPtrOutput[NodeGroupUpdateConfig, NodeGroupUpdateConfigOutput] {
		return v.UpdateConfig
	})
	unwrapped := pulumix.Flatten[*NodeGroupUpdateConfig, pulumix.GPtrOutput[NodeGroupUpdateConfig, NodeGroupUpdateConfigOutput]](value)
	return pulumix.GPtrOutput[NodeGroupUpdateConfig, NodeGroupUpdateConfigOutput]{OutputState: unwrapped.OutputState}
}

// Kubernetes version. Defaults to EKS Cluster Kubernetes version. The provider will only perform drift detection if a configuration value is provided.
func (o NodeGroupOutput) Version() pulumix.Output[string] {
	value := pulumix.Apply[NodeGroup](o, func(v NodeGroup) pulumix.Output[string] { return v.Version })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(NodeGroupOutput{})
}
