// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ssm

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Associates an SSM Document to an instance or EC2 tag.
type Association struct {
	pulumi.CustomResourceState

	// By default, when you create a new or update associations, the system runs it immediately and then according to the schedule you specified. Enable this option if you do not want an association to run immediately after you create or update it. This parameter is not supported for rate expressions. Default: `false`.
	ApplyOnlyAtCronInterval pulumix.Output[*bool] `pulumi:"applyOnlyAtCronInterval"`
	// The ARN of the SSM association
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The ID of the SSM association.
	AssociationId pulumix.Output[string] `pulumi:"associationId"`
	// The descriptive name for the association.
	AssociationName pulumix.Output[*string] `pulumi:"associationName"`
	// Specify the target for the association. This target is required for associations that use an `Automation` document and target resources by using rate controls. This should be set to the SSM document `parameter` that will define how your automation will branch out.
	AutomationTargetParameterName pulumix.Output[*string] `pulumi:"automationTargetParameterName"`
	// The compliance severity for the association. Can be one of the following: `UNSPECIFIED`, `LOW`, `MEDIUM`, `HIGH` or `CRITICAL`
	ComplianceSeverity pulumix.Output[*string] `pulumi:"complianceSeverity"`
	// The document version you want to associate with the target(s). Can be a specific version or the default version.
	DocumentVersion pulumix.Output[string] `pulumi:"documentVersion"`
	// The instance ID to apply an SSM document to. Use `targets` with key `InstanceIds` for document schema versions 2.0 and above. Use the `targets` attribute instead.
	//
	// Deprecated: use 'targets' argument instead. https://docs.aws.amazon.com/systems-manager/latest/APIReference/API_CreateAssociation.html#systemsmanager-CreateAssociation-request-InstanceId
	InstanceId pulumix.Output[*string] `pulumi:"instanceId"`
	// The maximum number of targets allowed to run the association at the same time. You can specify a number, for example 10, or a percentage of the target set, for example 10%.
	MaxConcurrency pulumix.Output[*string] `pulumi:"maxConcurrency"`
	// The number of errors that are allowed before the system stops sending requests to run the association on additional targets. You can specify a number, for example 10, or a percentage of the target set, for example 10%. If you specify a threshold of 3, the stop command is sent when the fourth error is returned. If you specify a threshold of 10% for 50 associations, the stop command is sent when the sixth error is returned.
	MaxErrors pulumix.Output[*string] `pulumi:"maxErrors"`
	// The name of the SSM document to apply.
	Name pulumix.Output[string] `pulumi:"name"`
	// An output location block. Output Location is documented below.
	OutputLocation pulumix.GPtrOutput[AssociationOutputLocation, AssociationOutputLocationOutput] `pulumi:"outputLocation"`
	// A block of arbitrary string parameters to pass to the SSM document.
	Parameters pulumix.MapOutput[string] `pulumi:"parameters"`
	// A [cron or rate expression](https://docs.aws.amazon.com/systems-manager/latest/userguide/reference-cron-and-rate-expressions.html) that specifies when the association runs.
	ScheduleExpression pulumix.Output[*string] `pulumi:"scheduleExpression"`
	// A block containing the targets of the SSM association. Targets are documented below. AWS currently supports a maximum of 5 targets.
	Targets pulumix.GArrayOutput[AssociationTarget, AssociationTargetOutput] `pulumi:"targets"`
	// The number of seconds to wait for the association status to be `Success`. If `Success` status is not reached within the given time, create opration will fail.
	//
	// Output Location (`outputLocation`) is an S3 bucket where you want to store the results of this association:
	WaitForSuccessTimeoutSeconds pulumix.Output[*int] `pulumi:"waitForSuccessTimeoutSeconds"`
}

// NewAssociation registers a new resource with the given unique name, arguments, and options.
func NewAssociation(ctx *pulumi.Context,
	name string, args *AssociationArgs, opts ...pulumi.ResourceOption) (*Association, error) {
	if args == nil {
		args = &AssociationArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Association
	err := ctx.RegisterResource("aws:ssm/association:Association", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAssociation gets an existing Association resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AssociationState, opts ...pulumi.ResourceOption) (*Association, error) {
	var resource Association
	err := ctx.ReadResource("aws:ssm/association:Association", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Association resources.
type associationState struct {
	// By default, when you create a new or update associations, the system runs it immediately and then according to the schedule you specified. Enable this option if you do not want an association to run immediately after you create or update it. This parameter is not supported for rate expressions. Default: `false`.
	ApplyOnlyAtCronInterval *bool `pulumi:"applyOnlyAtCronInterval"`
	// The ARN of the SSM association
	Arn *string `pulumi:"arn"`
	// The ID of the SSM association.
	AssociationId *string `pulumi:"associationId"`
	// The descriptive name for the association.
	AssociationName *string `pulumi:"associationName"`
	// Specify the target for the association. This target is required for associations that use an `Automation` document and target resources by using rate controls. This should be set to the SSM document `parameter` that will define how your automation will branch out.
	AutomationTargetParameterName *string `pulumi:"automationTargetParameterName"`
	// The compliance severity for the association. Can be one of the following: `UNSPECIFIED`, `LOW`, `MEDIUM`, `HIGH` or `CRITICAL`
	ComplianceSeverity *string `pulumi:"complianceSeverity"`
	// The document version you want to associate with the target(s). Can be a specific version or the default version.
	DocumentVersion *string `pulumi:"documentVersion"`
	// The instance ID to apply an SSM document to. Use `targets` with key `InstanceIds` for document schema versions 2.0 and above. Use the `targets` attribute instead.
	//
	// Deprecated: use 'targets' argument instead. https://docs.aws.amazon.com/systems-manager/latest/APIReference/API_CreateAssociation.html#systemsmanager-CreateAssociation-request-InstanceId
	InstanceId *string `pulumi:"instanceId"`
	// The maximum number of targets allowed to run the association at the same time. You can specify a number, for example 10, or a percentage of the target set, for example 10%.
	MaxConcurrency *string `pulumi:"maxConcurrency"`
	// The number of errors that are allowed before the system stops sending requests to run the association on additional targets. You can specify a number, for example 10, or a percentage of the target set, for example 10%. If you specify a threshold of 3, the stop command is sent when the fourth error is returned. If you specify a threshold of 10% for 50 associations, the stop command is sent when the sixth error is returned.
	MaxErrors *string `pulumi:"maxErrors"`
	// The name of the SSM document to apply.
	Name *string `pulumi:"name"`
	// An output location block. Output Location is documented below.
	OutputLocation *AssociationOutputLocation `pulumi:"outputLocation"`
	// A block of arbitrary string parameters to pass to the SSM document.
	Parameters map[string]string `pulumi:"parameters"`
	// A [cron or rate expression](https://docs.aws.amazon.com/systems-manager/latest/userguide/reference-cron-and-rate-expressions.html) that specifies when the association runs.
	ScheduleExpression *string `pulumi:"scheduleExpression"`
	// A block containing the targets of the SSM association. Targets are documented below. AWS currently supports a maximum of 5 targets.
	Targets []AssociationTarget `pulumi:"targets"`
	// The number of seconds to wait for the association status to be `Success`. If `Success` status is not reached within the given time, create opration will fail.
	//
	// Output Location (`outputLocation`) is an S3 bucket where you want to store the results of this association:
	WaitForSuccessTimeoutSeconds *int `pulumi:"waitForSuccessTimeoutSeconds"`
}

type AssociationState struct {
	// By default, when you create a new or update associations, the system runs it immediately and then according to the schedule you specified. Enable this option if you do not want an association to run immediately after you create or update it. This parameter is not supported for rate expressions. Default: `false`.
	ApplyOnlyAtCronInterval pulumix.Input[*bool]
	// The ARN of the SSM association
	Arn pulumix.Input[*string]
	// The ID of the SSM association.
	AssociationId pulumix.Input[*string]
	// The descriptive name for the association.
	AssociationName pulumix.Input[*string]
	// Specify the target for the association. This target is required for associations that use an `Automation` document and target resources by using rate controls. This should be set to the SSM document `parameter` that will define how your automation will branch out.
	AutomationTargetParameterName pulumix.Input[*string]
	// The compliance severity for the association. Can be one of the following: `UNSPECIFIED`, `LOW`, `MEDIUM`, `HIGH` or `CRITICAL`
	ComplianceSeverity pulumix.Input[*string]
	// The document version you want to associate with the target(s). Can be a specific version or the default version.
	DocumentVersion pulumix.Input[*string]
	// The instance ID to apply an SSM document to. Use `targets` with key `InstanceIds` for document schema versions 2.0 and above. Use the `targets` attribute instead.
	//
	// Deprecated: use 'targets' argument instead. https://docs.aws.amazon.com/systems-manager/latest/APIReference/API_CreateAssociation.html#systemsmanager-CreateAssociation-request-InstanceId
	InstanceId pulumix.Input[*string]
	// The maximum number of targets allowed to run the association at the same time. You can specify a number, for example 10, or a percentage of the target set, for example 10%.
	MaxConcurrency pulumix.Input[*string]
	// The number of errors that are allowed before the system stops sending requests to run the association on additional targets. You can specify a number, for example 10, or a percentage of the target set, for example 10%. If you specify a threshold of 3, the stop command is sent when the fourth error is returned. If you specify a threshold of 10% for 50 associations, the stop command is sent when the sixth error is returned.
	MaxErrors pulumix.Input[*string]
	// The name of the SSM document to apply.
	Name pulumix.Input[*string]
	// An output location block. Output Location is documented below.
	OutputLocation pulumix.Input[*AssociationOutputLocationArgs]
	// A block of arbitrary string parameters to pass to the SSM document.
	Parameters pulumix.Input[map[string]string]
	// A [cron or rate expression](https://docs.aws.amazon.com/systems-manager/latest/userguide/reference-cron-and-rate-expressions.html) that specifies when the association runs.
	ScheduleExpression pulumix.Input[*string]
	// A block containing the targets of the SSM association. Targets are documented below. AWS currently supports a maximum of 5 targets.
	Targets pulumix.Input[[]*AssociationTargetArgs]
	// The number of seconds to wait for the association status to be `Success`. If `Success` status is not reached within the given time, create opration will fail.
	//
	// Output Location (`outputLocation`) is an S3 bucket where you want to store the results of this association:
	WaitForSuccessTimeoutSeconds pulumix.Input[*int]
}

func (AssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*associationState)(nil)).Elem()
}

type associationArgs struct {
	// By default, when you create a new or update associations, the system runs it immediately and then according to the schedule you specified. Enable this option if you do not want an association to run immediately after you create or update it. This parameter is not supported for rate expressions. Default: `false`.
	ApplyOnlyAtCronInterval *bool `pulumi:"applyOnlyAtCronInterval"`
	// The descriptive name for the association.
	AssociationName *string `pulumi:"associationName"`
	// Specify the target for the association. This target is required for associations that use an `Automation` document and target resources by using rate controls. This should be set to the SSM document `parameter` that will define how your automation will branch out.
	AutomationTargetParameterName *string `pulumi:"automationTargetParameterName"`
	// The compliance severity for the association. Can be one of the following: `UNSPECIFIED`, `LOW`, `MEDIUM`, `HIGH` or `CRITICAL`
	ComplianceSeverity *string `pulumi:"complianceSeverity"`
	// The document version you want to associate with the target(s). Can be a specific version or the default version.
	DocumentVersion *string `pulumi:"documentVersion"`
	// The instance ID to apply an SSM document to. Use `targets` with key `InstanceIds` for document schema versions 2.0 and above. Use the `targets` attribute instead.
	//
	// Deprecated: use 'targets' argument instead. https://docs.aws.amazon.com/systems-manager/latest/APIReference/API_CreateAssociation.html#systemsmanager-CreateAssociation-request-InstanceId
	InstanceId *string `pulumi:"instanceId"`
	// The maximum number of targets allowed to run the association at the same time. You can specify a number, for example 10, or a percentage of the target set, for example 10%.
	MaxConcurrency *string `pulumi:"maxConcurrency"`
	// The number of errors that are allowed before the system stops sending requests to run the association on additional targets. You can specify a number, for example 10, or a percentage of the target set, for example 10%. If you specify a threshold of 3, the stop command is sent when the fourth error is returned. If you specify a threshold of 10% for 50 associations, the stop command is sent when the sixth error is returned.
	MaxErrors *string `pulumi:"maxErrors"`
	// The name of the SSM document to apply.
	Name *string `pulumi:"name"`
	// An output location block. Output Location is documented below.
	OutputLocation *AssociationOutputLocation `pulumi:"outputLocation"`
	// A block of arbitrary string parameters to pass to the SSM document.
	Parameters map[string]string `pulumi:"parameters"`
	// A [cron or rate expression](https://docs.aws.amazon.com/systems-manager/latest/userguide/reference-cron-and-rate-expressions.html) that specifies when the association runs.
	ScheduleExpression *string `pulumi:"scheduleExpression"`
	// A block containing the targets of the SSM association. Targets are documented below. AWS currently supports a maximum of 5 targets.
	Targets []AssociationTarget `pulumi:"targets"`
	// The number of seconds to wait for the association status to be `Success`. If `Success` status is not reached within the given time, create opration will fail.
	//
	// Output Location (`outputLocation`) is an S3 bucket where you want to store the results of this association:
	WaitForSuccessTimeoutSeconds *int `pulumi:"waitForSuccessTimeoutSeconds"`
}

// The set of arguments for constructing a Association resource.
type AssociationArgs struct {
	// By default, when you create a new or update associations, the system runs it immediately and then according to the schedule you specified. Enable this option if you do not want an association to run immediately after you create or update it. This parameter is not supported for rate expressions. Default: `false`.
	ApplyOnlyAtCronInterval pulumix.Input[*bool]
	// The descriptive name for the association.
	AssociationName pulumix.Input[*string]
	// Specify the target for the association. This target is required for associations that use an `Automation` document and target resources by using rate controls. This should be set to the SSM document `parameter` that will define how your automation will branch out.
	AutomationTargetParameterName pulumix.Input[*string]
	// The compliance severity for the association. Can be one of the following: `UNSPECIFIED`, `LOW`, `MEDIUM`, `HIGH` or `CRITICAL`
	ComplianceSeverity pulumix.Input[*string]
	// The document version you want to associate with the target(s). Can be a specific version or the default version.
	DocumentVersion pulumix.Input[*string]
	// The instance ID to apply an SSM document to. Use `targets` with key `InstanceIds` for document schema versions 2.0 and above. Use the `targets` attribute instead.
	//
	// Deprecated: use 'targets' argument instead. https://docs.aws.amazon.com/systems-manager/latest/APIReference/API_CreateAssociation.html#systemsmanager-CreateAssociation-request-InstanceId
	InstanceId pulumix.Input[*string]
	// The maximum number of targets allowed to run the association at the same time. You can specify a number, for example 10, or a percentage of the target set, for example 10%.
	MaxConcurrency pulumix.Input[*string]
	// The number of errors that are allowed before the system stops sending requests to run the association on additional targets. You can specify a number, for example 10, or a percentage of the target set, for example 10%. If you specify a threshold of 3, the stop command is sent when the fourth error is returned. If you specify a threshold of 10% for 50 associations, the stop command is sent when the sixth error is returned.
	MaxErrors pulumix.Input[*string]
	// The name of the SSM document to apply.
	Name pulumix.Input[*string]
	// An output location block. Output Location is documented below.
	OutputLocation pulumix.Input[*AssociationOutputLocationArgs]
	// A block of arbitrary string parameters to pass to the SSM document.
	Parameters pulumix.Input[map[string]string]
	// A [cron or rate expression](https://docs.aws.amazon.com/systems-manager/latest/userguide/reference-cron-and-rate-expressions.html) that specifies when the association runs.
	ScheduleExpression pulumix.Input[*string]
	// A block containing the targets of the SSM association. Targets are documented below. AWS currently supports a maximum of 5 targets.
	Targets pulumix.Input[[]*AssociationTargetArgs]
	// The number of seconds to wait for the association status to be `Success`. If `Success` status is not reached within the given time, create opration will fail.
	//
	// Output Location (`outputLocation`) is an S3 bucket where you want to store the results of this association:
	WaitForSuccessTimeoutSeconds pulumix.Input[*int]
}

func (AssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*associationArgs)(nil)).Elem()
}

type AssociationOutput struct{ *pulumi.OutputState }

func (AssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Association)(nil)).Elem()
}

func (o AssociationOutput) ToAssociationOutput() AssociationOutput {
	return o
}

func (o AssociationOutput) ToAssociationOutputWithContext(ctx context.Context) AssociationOutput {
	return o
}

func (o AssociationOutput) ToOutput(ctx context.Context) pulumix.Output[Association] {
	return pulumix.Output[Association]{
		OutputState: o.OutputState,
	}
}

// By default, when you create a new or update associations, the system runs it immediately and then according to the schedule you specified. Enable this option if you do not want an association to run immediately after you create or update it. This parameter is not supported for rate expressions. Default: `false`.
func (o AssociationOutput) ApplyOnlyAtCronInterval() pulumix.Output[*bool] {
	value := pulumix.Apply[Association](o, func(v Association) pulumix.Output[*bool] { return v.ApplyOnlyAtCronInterval })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// The ARN of the SSM association
func (o AssociationOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Association](o, func(v Association) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The ID of the SSM association.
func (o AssociationOutput) AssociationId() pulumix.Output[string] {
	value := pulumix.Apply[Association](o, func(v Association) pulumix.Output[string] { return v.AssociationId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The descriptive name for the association.
func (o AssociationOutput) AssociationName() pulumix.Output[*string] {
	value := pulumix.Apply[Association](o, func(v Association) pulumix.Output[*string] { return v.AssociationName })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Specify the target for the association. This target is required for associations that use an `Automation` document and target resources by using rate controls. This should be set to the SSM document `parameter` that will define how your automation will branch out.
func (o AssociationOutput) AutomationTargetParameterName() pulumix.Output[*string] {
	value := pulumix.Apply[Association](o, func(v Association) pulumix.Output[*string] { return v.AutomationTargetParameterName })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The compliance severity for the association. Can be one of the following: `UNSPECIFIED`, `LOW`, `MEDIUM`, `HIGH` or `CRITICAL`
func (o AssociationOutput) ComplianceSeverity() pulumix.Output[*string] {
	value := pulumix.Apply[Association](o, func(v Association) pulumix.Output[*string] { return v.ComplianceSeverity })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The document version you want to associate with the target(s). Can be a specific version or the default version.
func (o AssociationOutput) DocumentVersion() pulumix.Output[string] {
	value := pulumix.Apply[Association](o, func(v Association) pulumix.Output[string] { return v.DocumentVersion })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The instance ID to apply an SSM document to. Use `targets` with key `InstanceIds` for document schema versions 2.0 and above. Use the `targets` attribute instead.
//
// Deprecated: use 'targets' argument instead. https://docs.aws.amazon.com/systems-manager/latest/APIReference/API_CreateAssociation.html#systemsmanager-CreateAssociation-request-InstanceId
func (o AssociationOutput) InstanceId() pulumix.Output[*string] {
	value := pulumix.Apply[Association](o, func(v Association) pulumix.Output[*string] { return v.InstanceId })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The maximum number of targets allowed to run the association at the same time. You can specify a number, for example 10, or a percentage of the target set, for example 10%.
func (o AssociationOutput) MaxConcurrency() pulumix.Output[*string] {
	value := pulumix.Apply[Association](o, func(v Association) pulumix.Output[*string] { return v.MaxConcurrency })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The number of errors that are allowed before the system stops sending requests to run the association on additional targets. You can specify a number, for example 10, or a percentage of the target set, for example 10%. If you specify a threshold of 3, the stop command is sent when the fourth error is returned. If you specify a threshold of 10% for 50 associations, the stop command is sent when the sixth error is returned.
func (o AssociationOutput) MaxErrors() pulumix.Output[*string] {
	value := pulumix.Apply[Association](o, func(v Association) pulumix.Output[*string] { return v.MaxErrors })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The name of the SSM document to apply.
func (o AssociationOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[Association](o, func(v Association) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// An output location block. Output Location is documented below.
func (o AssociationOutput) OutputLocation() pulumix.GPtrOutput[AssociationOutputLocation, AssociationOutputLocationOutput] {
	value := pulumix.Apply[Association](o, func(v Association) pulumix.GPtrOutput[AssociationOutputLocation, AssociationOutputLocationOutput] {
		return v.OutputLocation
	})
	unwrapped := pulumix.Flatten[*AssociationOutputLocation, pulumix.GPtrOutput[AssociationOutputLocation, AssociationOutputLocationOutput]](value)
	return pulumix.GPtrOutput[AssociationOutputLocation, AssociationOutputLocationOutput]{OutputState: unwrapped.OutputState}
}

// A block of arbitrary string parameters to pass to the SSM document.
func (o AssociationOutput) Parameters() pulumix.MapOutput[string] {
	value := pulumix.Apply[Association](o, func(v Association) pulumix.MapOutput[string] { return v.Parameters })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A [cron or rate expression](https://docs.aws.amazon.com/systems-manager/latest/userguide/reference-cron-and-rate-expressions.html) that specifies when the association runs.
func (o AssociationOutput) ScheduleExpression() pulumix.Output[*string] {
	value := pulumix.Apply[Association](o, func(v Association) pulumix.Output[*string] { return v.ScheduleExpression })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// A block containing the targets of the SSM association. Targets are documented below. AWS currently supports a maximum of 5 targets.
func (o AssociationOutput) Targets() pulumix.GArrayOutput[AssociationTarget, AssociationTargetOutput] {
	value := pulumix.Apply[Association](o, func(v Association) pulumix.GArrayOutput[AssociationTarget, AssociationTargetOutput] { return v.Targets })
	unwrapped := pulumix.Flatten[[]AssociationTarget, pulumix.GArrayOutput[AssociationTarget, AssociationTargetOutput]](value)
	return pulumix.GArrayOutput[AssociationTarget, AssociationTargetOutput]{OutputState: unwrapped.OutputState}
}

// The number of seconds to wait for the association status to be `Success`. If `Success` status is not reached within the given time, create opration will fail.
//
// Output Location (`outputLocation`) is an S3 bucket where you want to store the results of this association:
func (o AssociationOutput) WaitForSuccessTimeoutSeconds() pulumix.Output[*int] {
	value := pulumix.Apply[Association](o, func(v Association) pulumix.Output[*int] { return v.WaitForSuccessTimeoutSeconds })
	return pulumix.Flatten[*int, pulumix.Output[*int]](value)
}

func init() {
	pulumi.RegisterOutputType(AssociationOutput{})
}
