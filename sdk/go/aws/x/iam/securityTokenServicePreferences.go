// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iam

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an IAM Security Token Service Preferences resource.
type SecurityTokenServicePreferences struct {
	pulumi.CustomResourceState

	// The version of the STS global endpoint token. Valid values: `v1Token`, `v2Token`.
	GlobalEndpointTokenVersion pulumix.Output[string] `pulumi:"globalEndpointTokenVersion"`
}

// NewSecurityTokenServicePreferences registers a new resource with the given unique name, arguments, and options.
func NewSecurityTokenServicePreferences(ctx *pulumi.Context,
	name string, args *SecurityTokenServicePreferencesArgs, opts ...pulumi.ResourceOption) (*SecurityTokenServicePreferences, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.GlobalEndpointTokenVersion == nil {
		return nil, errors.New("invalid value for required argument 'GlobalEndpointTokenVersion'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SecurityTokenServicePreferences
	err := ctx.RegisterResource("aws:iam/securityTokenServicePreferences:SecurityTokenServicePreferences", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecurityTokenServicePreferences gets an existing SecurityTokenServicePreferences resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecurityTokenServicePreferences(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecurityTokenServicePreferencesState, opts ...pulumi.ResourceOption) (*SecurityTokenServicePreferences, error) {
	var resource SecurityTokenServicePreferences
	err := ctx.ReadResource("aws:iam/securityTokenServicePreferences:SecurityTokenServicePreferences", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SecurityTokenServicePreferences resources.
type securityTokenServicePreferencesState struct {
	// The version of the STS global endpoint token. Valid values: `v1Token`, `v2Token`.
	GlobalEndpointTokenVersion *string `pulumi:"globalEndpointTokenVersion"`
}

type SecurityTokenServicePreferencesState struct {
	// The version of the STS global endpoint token. Valid values: `v1Token`, `v2Token`.
	GlobalEndpointTokenVersion pulumix.Input[*string]
}

func (SecurityTokenServicePreferencesState) ElementType() reflect.Type {
	return reflect.TypeOf((*securityTokenServicePreferencesState)(nil)).Elem()
}

type securityTokenServicePreferencesArgs struct {
	// The version of the STS global endpoint token. Valid values: `v1Token`, `v2Token`.
	GlobalEndpointTokenVersion string `pulumi:"globalEndpointTokenVersion"`
}

// The set of arguments for constructing a SecurityTokenServicePreferences resource.
type SecurityTokenServicePreferencesArgs struct {
	// The version of the STS global endpoint token. Valid values: `v1Token`, `v2Token`.
	GlobalEndpointTokenVersion pulumix.Input[string]
}

func (SecurityTokenServicePreferencesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*securityTokenServicePreferencesArgs)(nil)).Elem()
}

type SecurityTokenServicePreferencesOutput struct{ *pulumi.OutputState }

func (SecurityTokenServicePreferencesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityTokenServicePreferences)(nil)).Elem()
}

func (o SecurityTokenServicePreferencesOutput) ToSecurityTokenServicePreferencesOutput() SecurityTokenServicePreferencesOutput {
	return o
}

func (o SecurityTokenServicePreferencesOutput) ToSecurityTokenServicePreferencesOutputWithContext(ctx context.Context) SecurityTokenServicePreferencesOutput {
	return o
}

func (o SecurityTokenServicePreferencesOutput) ToOutput(ctx context.Context) pulumix.Output[SecurityTokenServicePreferences] {
	return pulumix.Output[SecurityTokenServicePreferences]{
		OutputState: o.OutputState,
	}
}

// The version of the STS global endpoint token. Valid values: `v1Token`, `v2Token`.
func (o SecurityTokenServicePreferencesOutput) GlobalEndpointTokenVersion() pulumix.Output[string] {
	value := pulumix.Apply[SecurityTokenServicePreferences](o, func(v SecurityTokenServicePreferences) pulumix.Output[string] { return v.GlobalEndpointTokenVersion })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(SecurityTokenServicePreferencesOutput{})
}
