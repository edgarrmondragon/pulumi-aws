// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package chime

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Adds termination SIP credentials for the specified Amazon Chime Voice Connector.
//
// > **Note:** Voice Connector Termination Credentials requires a Voice Connector Termination to be present. Use of `dependsOn` (as shown below) is recommended to avoid race conditions.
type VoiceConnectorTerminationCredentials struct {
	pulumi.CustomResourceState

	// List of termination SIP credentials.
	Credentials pulumix.GArrayOutput[VoiceConnectorTerminationCredentialsCredential, VoiceConnectorTerminationCredentialsCredentialOutput] `pulumi:"credentials"`
	// Amazon Chime Voice Connector ID.
	VoiceConnectorId pulumix.Output[string] `pulumi:"voiceConnectorId"`
}

// NewVoiceConnectorTerminationCredentials registers a new resource with the given unique name, arguments, and options.
func NewVoiceConnectorTerminationCredentials(ctx *pulumi.Context,
	name string, args *VoiceConnectorTerminationCredentialsArgs, opts ...pulumi.ResourceOption) (*VoiceConnectorTerminationCredentials, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Credentials == nil {
		return nil, errors.New("invalid value for required argument 'Credentials'")
	}
	if args.VoiceConnectorId == nil {
		return nil, errors.New("invalid value for required argument 'VoiceConnectorId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource VoiceConnectorTerminationCredentials
	err := ctx.RegisterResource("aws:chime/voiceConnectorTerminationCredentials:VoiceConnectorTerminationCredentials", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVoiceConnectorTerminationCredentials gets an existing VoiceConnectorTerminationCredentials resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVoiceConnectorTerminationCredentials(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VoiceConnectorTerminationCredentialsState, opts ...pulumi.ResourceOption) (*VoiceConnectorTerminationCredentials, error) {
	var resource VoiceConnectorTerminationCredentials
	err := ctx.ReadResource("aws:chime/voiceConnectorTerminationCredentials:VoiceConnectorTerminationCredentials", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VoiceConnectorTerminationCredentials resources.
type voiceConnectorTerminationCredentialsState struct {
	// List of termination SIP credentials.
	Credentials []VoiceConnectorTerminationCredentialsCredential `pulumi:"credentials"`
	// Amazon Chime Voice Connector ID.
	VoiceConnectorId *string `pulumi:"voiceConnectorId"`
}

type VoiceConnectorTerminationCredentialsState struct {
	// List of termination SIP credentials.
	Credentials pulumix.Input[[]*VoiceConnectorTerminationCredentialsCredentialArgs]
	// Amazon Chime Voice Connector ID.
	VoiceConnectorId pulumix.Input[*string]
}

func (VoiceConnectorTerminationCredentialsState) ElementType() reflect.Type {
	return reflect.TypeOf((*voiceConnectorTerminationCredentialsState)(nil)).Elem()
}

type voiceConnectorTerminationCredentialsArgs struct {
	// List of termination SIP credentials.
	Credentials []VoiceConnectorTerminationCredentialsCredential `pulumi:"credentials"`
	// Amazon Chime Voice Connector ID.
	VoiceConnectorId string `pulumi:"voiceConnectorId"`
}

// The set of arguments for constructing a VoiceConnectorTerminationCredentials resource.
type VoiceConnectorTerminationCredentialsArgs struct {
	// List of termination SIP credentials.
	Credentials pulumix.Input[[]*VoiceConnectorTerminationCredentialsCredentialArgs]
	// Amazon Chime Voice Connector ID.
	VoiceConnectorId pulumix.Input[string]
}

func (VoiceConnectorTerminationCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*voiceConnectorTerminationCredentialsArgs)(nil)).Elem()
}

type VoiceConnectorTerminationCredentialsOutput struct{ *pulumi.OutputState }

func (VoiceConnectorTerminationCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VoiceConnectorTerminationCredentials)(nil)).Elem()
}

func (o VoiceConnectorTerminationCredentialsOutput) ToVoiceConnectorTerminationCredentialsOutput() VoiceConnectorTerminationCredentialsOutput {
	return o
}

func (o VoiceConnectorTerminationCredentialsOutput) ToVoiceConnectorTerminationCredentialsOutputWithContext(ctx context.Context) VoiceConnectorTerminationCredentialsOutput {
	return o
}

func (o VoiceConnectorTerminationCredentialsOutput) ToOutput(ctx context.Context) pulumix.Output[VoiceConnectorTerminationCredentials] {
	return pulumix.Output[VoiceConnectorTerminationCredentials]{
		OutputState: o.OutputState,
	}
}

// List of termination SIP credentials.
func (o VoiceConnectorTerminationCredentialsOutput) Credentials() pulumix.GArrayOutput[VoiceConnectorTerminationCredentialsCredential, VoiceConnectorTerminationCredentialsCredentialOutput] {
	value := pulumix.Apply[VoiceConnectorTerminationCredentials](o, func(v VoiceConnectorTerminationCredentials) pulumix.GArrayOutput[VoiceConnectorTerminationCredentialsCredential, VoiceConnectorTerminationCredentialsCredentialOutput] {
		return v.Credentials
	})
	unwrapped := pulumix.Flatten[[]VoiceConnectorTerminationCredentialsCredential, pulumix.GArrayOutput[VoiceConnectorTerminationCredentialsCredential, VoiceConnectorTerminationCredentialsCredentialOutput]](value)
	return pulumix.GArrayOutput[VoiceConnectorTerminationCredentialsCredential, VoiceConnectorTerminationCredentialsCredentialOutput]{OutputState: unwrapped.OutputState}
}

// Amazon Chime Voice Connector ID.
func (o VoiceConnectorTerminationCredentialsOutput) VoiceConnectorId() pulumix.Output[string] {
	value := pulumix.Apply[VoiceConnectorTerminationCredentials](o, func(v VoiceConnectorTerminationCredentials) pulumix.Output[string] { return v.VoiceConnectorId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(VoiceConnectorTerminationCredentialsOutput{})
}
