// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package storagegateway

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manages an AWS Storage Gateway NFS File Share.
type NfsFileShare struct {
	pulumi.CustomResourceState

	// Amazon Resource Name (ARN) of the NFS File Share.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The Amazon Resource Name (ARN) of the storage used for audit logs.
	AuditDestinationArn pulumix.Output[*string] `pulumi:"auditDestinationArn"`
	// The region of the S3 bucket used by the file share. Required when specifying `vpcEndpointDnsName`.
	BucketRegion pulumix.Output[*string] `pulumi:"bucketRegion"`
	// Refresh cache information. see Cache Attributes for more details.
	CacheAttributes pulumix.GPtrOutput[NfsFileShareCacheAttributes, NfsFileShareCacheAttributesOutput] `pulumi:"cacheAttributes"`
	// The list of clients that are allowed to access the file gateway. The list must contain either valid IP addresses or valid CIDR blocks. Set to `["0.0.0.0/0"]` to not limit access. Minimum 1 item. Maximum 100 items.
	ClientLists pulumix.ArrayOutput[string] `pulumi:"clientLists"`
	// The default [storage class](https://docs.aws.amazon.com/storagegateway/latest/APIReference/API_CreateNFSFileShare.html#StorageGateway-CreateNFSFileShare-request-DefaultStorageClass) for objects put into an Amazon S3 bucket by the file gateway. Defaults to `S3_STANDARD`.
	DefaultStorageClass pulumix.Output[*string] `pulumi:"defaultStorageClass"`
	// The name of the file share. Must be set if an S3 prefix name is set in `locationArn`.
	FileShareName pulumix.Output[string] `pulumi:"fileShareName"`
	// ID of the NFS File Share.
	FileshareId pulumix.Output[string] `pulumi:"fileshareId"`
	// Amazon Resource Name (ARN) of the file gateway.
	GatewayArn pulumix.Output[string] `pulumi:"gatewayArn"`
	// Boolean value that enables guessing of the MIME type for uploaded objects based on file extensions. Defaults to `true`.
	GuessMimeTypeEnabled pulumix.Output[*bool] `pulumi:"guessMimeTypeEnabled"`
	// Boolean value if `true` to use Amazon S3 server side encryption with your own AWS KMS key, or `false` to use a key managed by Amazon S3. Defaults to `false`.
	KmsEncrypted pulumix.Output[*bool] `pulumi:"kmsEncrypted"`
	// Amazon Resource Name (ARN) for KMS key used for Amazon S3 server side encryption. This value can only be set when `kmsEncrypted` is true.
	KmsKeyArn pulumix.Output[*string] `pulumi:"kmsKeyArn"`
	// The ARN of the backed storage used for storing file data.
	LocationArn pulumix.Output[string] `pulumi:"locationArn"`
	// Nested argument with file share default values. More information below. see NFS File Share Defaults for more details.
	NfsFileShareDefaults pulumix.GPtrOutput[NfsFileShareNfsFileShareDefaults, NfsFileShareNfsFileShareDefaultsOutput] `pulumi:"nfsFileShareDefaults"`
	// The notification policy of the file share. For more information see the [AWS Documentation](https://docs.aws.amazon.com/storagegateway/latest/APIReference/API_CreateNFSFileShare.html#StorageGateway-CreateNFSFileShare-request-NotificationPolicy). Default value is `{}`.
	NotificationPolicy pulumix.Output[*string] `pulumi:"notificationPolicy"`
	// Access Control List permission for S3 objects. Defaults to `private`.
	ObjectAcl pulumix.Output[*string] `pulumi:"objectAcl"`
	// File share path used by the NFS client to identify the mount point.
	Path pulumix.Output[string] `pulumi:"path"`
	// Boolean to indicate write status of file share. File share does not accept writes if `true`. Defaults to `false`.
	ReadOnly pulumix.Output[*bool] `pulumi:"readOnly"`
	// Boolean who pays the cost of the request and the data download from the Amazon S3 bucket. Set this value to `true` if you want the requester to pay instead of the bucket owner. Defaults to `false`.
	RequesterPays pulumix.Output[*bool] `pulumi:"requesterPays"`
	// The ARN of the AWS Identity and Access Management (IAM) role that a file gateway assumes when it accesses the underlying storage.
	RoleArn pulumix.Output[string] `pulumi:"roleArn"`
	// Maps a user to anonymous user. Defaults to `RootSquash`. Valid values: `RootSquash` (only root is mapped to anonymous user), `NoSquash` (no one is mapped to anonymous user), `AllSquash` (everyone is mapped to anonymous user)
	Squash pulumix.Output[*string] `pulumi:"squash"`
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// The DNS name of the VPC endpoint for S3 PrivateLink.
	VpcEndpointDnsName pulumix.Output[*string] `pulumi:"vpcEndpointDnsName"`
}

// NewNfsFileShare registers a new resource with the given unique name, arguments, and options.
func NewNfsFileShare(ctx *pulumi.Context,
	name string, args *NfsFileShareArgs, opts ...pulumi.ResourceOption) (*NfsFileShare, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClientLists == nil {
		return nil, errors.New("invalid value for required argument 'ClientLists'")
	}
	if args.GatewayArn == nil {
		return nil, errors.New("invalid value for required argument 'GatewayArn'")
	}
	if args.LocationArn == nil {
		return nil, errors.New("invalid value for required argument 'LocationArn'")
	}
	if args.RoleArn == nil {
		return nil, errors.New("invalid value for required argument 'RoleArn'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource NfsFileShare
	err := ctx.RegisterResource("aws:storagegateway/nfsFileShare:NfsFileShare", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNfsFileShare gets an existing NfsFileShare resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNfsFileShare(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NfsFileShareState, opts ...pulumi.ResourceOption) (*NfsFileShare, error) {
	var resource NfsFileShare
	err := ctx.ReadResource("aws:storagegateway/nfsFileShare:NfsFileShare", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NfsFileShare resources.
type nfsFileShareState struct {
	// Amazon Resource Name (ARN) of the NFS File Share.
	Arn *string `pulumi:"arn"`
	// The Amazon Resource Name (ARN) of the storage used for audit logs.
	AuditDestinationArn *string `pulumi:"auditDestinationArn"`
	// The region of the S3 bucket used by the file share. Required when specifying `vpcEndpointDnsName`.
	BucketRegion *string `pulumi:"bucketRegion"`
	// Refresh cache information. see Cache Attributes for more details.
	CacheAttributes *NfsFileShareCacheAttributes `pulumi:"cacheAttributes"`
	// The list of clients that are allowed to access the file gateway. The list must contain either valid IP addresses or valid CIDR blocks. Set to `["0.0.0.0/0"]` to not limit access. Minimum 1 item. Maximum 100 items.
	ClientLists []string `pulumi:"clientLists"`
	// The default [storage class](https://docs.aws.amazon.com/storagegateway/latest/APIReference/API_CreateNFSFileShare.html#StorageGateway-CreateNFSFileShare-request-DefaultStorageClass) for objects put into an Amazon S3 bucket by the file gateway. Defaults to `S3_STANDARD`.
	DefaultStorageClass *string `pulumi:"defaultStorageClass"`
	// The name of the file share. Must be set if an S3 prefix name is set in `locationArn`.
	FileShareName *string `pulumi:"fileShareName"`
	// ID of the NFS File Share.
	FileshareId *string `pulumi:"fileshareId"`
	// Amazon Resource Name (ARN) of the file gateway.
	GatewayArn *string `pulumi:"gatewayArn"`
	// Boolean value that enables guessing of the MIME type for uploaded objects based on file extensions. Defaults to `true`.
	GuessMimeTypeEnabled *bool `pulumi:"guessMimeTypeEnabled"`
	// Boolean value if `true` to use Amazon S3 server side encryption with your own AWS KMS key, or `false` to use a key managed by Amazon S3. Defaults to `false`.
	KmsEncrypted *bool `pulumi:"kmsEncrypted"`
	// Amazon Resource Name (ARN) for KMS key used for Amazon S3 server side encryption. This value can only be set when `kmsEncrypted` is true.
	KmsKeyArn *string `pulumi:"kmsKeyArn"`
	// The ARN of the backed storage used for storing file data.
	LocationArn *string `pulumi:"locationArn"`
	// Nested argument with file share default values. More information below. see NFS File Share Defaults for more details.
	NfsFileShareDefaults *NfsFileShareNfsFileShareDefaults `pulumi:"nfsFileShareDefaults"`
	// The notification policy of the file share. For more information see the [AWS Documentation](https://docs.aws.amazon.com/storagegateway/latest/APIReference/API_CreateNFSFileShare.html#StorageGateway-CreateNFSFileShare-request-NotificationPolicy). Default value is `{}`.
	NotificationPolicy *string `pulumi:"notificationPolicy"`
	// Access Control List permission for S3 objects. Defaults to `private`.
	ObjectAcl *string `pulumi:"objectAcl"`
	// File share path used by the NFS client to identify the mount point.
	Path *string `pulumi:"path"`
	// Boolean to indicate write status of file share. File share does not accept writes if `true`. Defaults to `false`.
	ReadOnly *bool `pulumi:"readOnly"`
	// Boolean who pays the cost of the request and the data download from the Amazon S3 bucket. Set this value to `true` if you want the requester to pay instead of the bucket owner. Defaults to `false`.
	RequesterPays *bool `pulumi:"requesterPays"`
	// The ARN of the AWS Identity and Access Management (IAM) role that a file gateway assumes when it accesses the underlying storage.
	RoleArn *string `pulumi:"roleArn"`
	// Maps a user to anonymous user. Defaults to `RootSquash`. Valid values: `RootSquash` (only root is mapped to anonymous user), `NoSquash` (no one is mapped to anonymous user), `AllSquash` (everyone is mapped to anonymous user)
	Squash *string `pulumi:"squash"`
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// The DNS name of the VPC endpoint for S3 PrivateLink.
	VpcEndpointDnsName *string `pulumi:"vpcEndpointDnsName"`
}

type NfsFileShareState struct {
	// Amazon Resource Name (ARN) of the NFS File Share.
	Arn pulumix.Input[*string]
	// The Amazon Resource Name (ARN) of the storage used for audit logs.
	AuditDestinationArn pulumix.Input[*string]
	// The region of the S3 bucket used by the file share. Required when specifying `vpcEndpointDnsName`.
	BucketRegion pulumix.Input[*string]
	// Refresh cache information. see Cache Attributes for more details.
	CacheAttributes pulumix.Input[*NfsFileShareCacheAttributesArgs]
	// The list of clients that are allowed to access the file gateway. The list must contain either valid IP addresses or valid CIDR blocks. Set to `["0.0.0.0/0"]` to not limit access. Minimum 1 item. Maximum 100 items.
	ClientLists pulumix.Input[[]string]
	// The default [storage class](https://docs.aws.amazon.com/storagegateway/latest/APIReference/API_CreateNFSFileShare.html#StorageGateway-CreateNFSFileShare-request-DefaultStorageClass) for objects put into an Amazon S3 bucket by the file gateway. Defaults to `S3_STANDARD`.
	DefaultStorageClass pulumix.Input[*string]
	// The name of the file share. Must be set if an S3 prefix name is set in `locationArn`.
	FileShareName pulumix.Input[*string]
	// ID of the NFS File Share.
	FileshareId pulumix.Input[*string]
	// Amazon Resource Name (ARN) of the file gateway.
	GatewayArn pulumix.Input[*string]
	// Boolean value that enables guessing of the MIME type for uploaded objects based on file extensions. Defaults to `true`.
	GuessMimeTypeEnabled pulumix.Input[*bool]
	// Boolean value if `true` to use Amazon S3 server side encryption with your own AWS KMS key, or `false` to use a key managed by Amazon S3. Defaults to `false`.
	KmsEncrypted pulumix.Input[*bool]
	// Amazon Resource Name (ARN) for KMS key used for Amazon S3 server side encryption. This value can only be set when `kmsEncrypted` is true.
	KmsKeyArn pulumix.Input[*string]
	// The ARN of the backed storage used for storing file data.
	LocationArn pulumix.Input[*string]
	// Nested argument with file share default values. More information below. see NFS File Share Defaults for more details.
	NfsFileShareDefaults pulumix.Input[*NfsFileShareNfsFileShareDefaultsArgs]
	// The notification policy of the file share. For more information see the [AWS Documentation](https://docs.aws.amazon.com/storagegateway/latest/APIReference/API_CreateNFSFileShare.html#StorageGateway-CreateNFSFileShare-request-NotificationPolicy). Default value is `{}`.
	NotificationPolicy pulumix.Input[*string]
	// Access Control List permission for S3 objects. Defaults to `private`.
	ObjectAcl pulumix.Input[*string]
	// File share path used by the NFS client to identify the mount point.
	Path pulumix.Input[*string]
	// Boolean to indicate write status of file share. File share does not accept writes if `true`. Defaults to `false`.
	ReadOnly pulumix.Input[*bool]
	// Boolean who pays the cost of the request and the data download from the Amazon S3 bucket. Set this value to `true` if you want the requester to pay instead of the bucket owner. Defaults to `false`.
	RequesterPays pulumix.Input[*bool]
	// The ARN of the AWS Identity and Access Management (IAM) role that a file gateway assumes when it accesses the underlying storage.
	RoleArn pulumix.Input[*string]
	// Maps a user to anonymous user. Defaults to `RootSquash`. Valid values: `RootSquash` (only root is mapped to anonymous user), `NoSquash` (no one is mapped to anonymous user), `AllSquash` (everyone is mapped to anonymous user)
	Squash pulumix.Input[*string]
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// The DNS name of the VPC endpoint for S3 PrivateLink.
	VpcEndpointDnsName pulumix.Input[*string]
}

func (NfsFileShareState) ElementType() reflect.Type {
	return reflect.TypeOf((*nfsFileShareState)(nil)).Elem()
}

type nfsFileShareArgs struct {
	// The Amazon Resource Name (ARN) of the storage used for audit logs.
	AuditDestinationArn *string `pulumi:"auditDestinationArn"`
	// The region of the S3 bucket used by the file share. Required when specifying `vpcEndpointDnsName`.
	BucketRegion *string `pulumi:"bucketRegion"`
	// Refresh cache information. see Cache Attributes for more details.
	CacheAttributes *NfsFileShareCacheAttributes `pulumi:"cacheAttributes"`
	// The list of clients that are allowed to access the file gateway. The list must contain either valid IP addresses or valid CIDR blocks. Set to `["0.0.0.0/0"]` to not limit access. Minimum 1 item. Maximum 100 items.
	ClientLists []string `pulumi:"clientLists"`
	// The default [storage class](https://docs.aws.amazon.com/storagegateway/latest/APIReference/API_CreateNFSFileShare.html#StorageGateway-CreateNFSFileShare-request-DefaultStorageClass) for objects put into an Amazon S3 bucket by the file gateway. Defaults to `S3_STANDARD`.
	DefaultStorageClass *string `pulumi:"defaultStorageClass"`
	// The name of the file share. Must be set if an S3 prefix name is set in `locationArn`.
	FileShareName *string `pulumi:"fileShareName"`
	// Amazon Resource Name (ARN) of the file gateway.
	GatewayArn string `pulumi:"gatewayArn"`
	// Boolean value that enables guessing of the MIME type for uploaded objects based on file extensions. Defaults to `true`.
	GuessMimeTypeEnabled *bool `pulumi:"guessMimeTypeEnabled"`
	// Boolean value if `true` to use Amazon S3 server side encryption with your own AWS KMS key, or `false` to use a key managed by Amazon S3. Defaults to `false`.
	KmsEncrypted *bool `pulumi:"kmsEncrypted"`
	// Amazon Resource Name (ARN) for KMS key used for Amazon S3 server side encryption. This value can only be set when `kmsEncrypted` is true.
	KmsKeyArn *string `pulumi:"kmsKeyArn"`
	// The ARN of the backed storage used for storing file data.
	LocationArn string `pulumi:"locationArn"`
	// Nested argument with file share default values. More information below. see NFS File Share Defaults for more details.
	NfsFileShareDefaults *NfsFileShareNfsFileShareDefaults `pulumi:"nfsFileShareDefaults"`
	// The notification policy of the file share. For more information see the [AWS Documentation](https://docs.aws.amazon.com/storagegateway/latest/APIReference/API_CreateNFSFileShare.html#StorageGateway-CreateNFSFileShare-request-NotificationPolicy). Default value is `{}`.
	NotificationPolicy *string `pulumi:"notificationPolicy"`
	// Access Control List permission for S3 objects. Defaults to `private`.
	ObjectAcl *string `pulumi:"objectAcl"`
	// Boolean to indicate write status of file share. File share does not accept writes if `true`. Defaults to `false`.
	ReadOnly *bool `pulumi:"readOnly"`
	// Boolean who pays the cost of the request and the data download from the Amazon S3 bucket. Set this value to `true` if you want the requester to pay instead of the bucket owner. Defaults to `false`.
	RequesterPays *bool `pulumi:"requesterPays"`
	// The ARN of the AWS Identity and Access Management (IAM) role that a file gateway assumes when it accesses the underlying storage.
	RoleArn string `pulumi:"roleArn"`
	// Maps a user to anonymous user. Defaults to `RootSquash`. Valid values: `RootSquash` (only root is mapped to anonymous user), `NoSquash` (no one is mapped to anonymous user), `AllSquash` (everyone is mapped to anonymous user)
	Squash *string `pulumi:"squash"`
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// The DNS name of the VPC endpoint for S3 PrivateLink.
	VpcEndpointDnsName *string `pulumi:"vpcEndpointDnsName"`
}

// The set of arguments for constructing a NfsFileShare resource.
type NfsFileShareArgs struct {
	// The Amazon Resource Name (ARN) of the storage used for audit logs.
	AuditDestinationArn pulumix.Input[*string]
	// The region of the S3 bucket used by the file share. Required when specifying `vpcEndpointDnsName`.
	BucketRegion pulumix.Input[*string]
	// Refresh cache information. see Cache Attributes for more details.
	CacheAttributes pulumix.Input[*NfsFileShareCacheAttributesArgs]
	// The list of clients that are allowed to access the file gateway. The list must contain either valid IP addresses or valid CIDR blocks. Set to `["0.0.0.0/0"]` to not limit access. Minimum 1 item. Maximum 100 items.
	ClientLists pulumix.Input[[]string]
	// The default [storage class](https://docs.aws.amazon.com/storagegateway/latest/APIReference/API_CreateNFSFileShare.html#StorageGateway-CreateNFSFileShare-request-DefaultStorageClass) for objects put into an Amazon S3 bucket by the file gateway. Defaults to `S3_STANDARD`.
	DefaultStorageClass pulumix.Input[*string]
	// The name of the file share. Must be set if an S3 prefix name is set in `locationArn`.
	FileShareName pulumix.Input[*string]
	// Amazon Resource Name (ARN) of the file gateway.
	GatewayArn pulumix.Input[string]
	// Boolean value that enables guessing of the MIME type for uploaded objects based on file extensions. Defaults to `true`.
	GuessMimeTypeEnabled pulumix.Input[*bool]
	// Boolean value if `true` to use Amazon S3 server side encryption with your own AWS KMS key, or `false` to use a key managed by Amazon S3. Defaults to `false`.
	KmsEncrypted pulumix.Input[*bool]
	// Amazon Resource Name (ARN) for KMS key used for Amazon S3 server side encryption. This value can only be set when `kmsEncrypted` is true.
	KmsKeyArn pulumix.Input[*string]
	// The ARN of the backed storage used for storing file data.
	LocationArn pulumix.Input[string]
	// Nested argument with file share default values. More information below. see NFS File Share Defaults for more details.
	NfsFileShareDefaults pulumix.Input[*NfsFileShareNfsFileShareDefaultsArgs]
	// The notification policy of the file share. For more information see the [AWS Documentation](https://docs.aws.amazon.com/storagegateway/latest/APIReference/API_CreateNFSFileShare.html#StorageGateway-CreateNFSFileShare-request-NotificationPolicy). Default value is `{}`.
	NotificationPolicy pulumix.Input[*string]
	// Access Control List permission for S3 objects. Defaults to `private`.
	ObjectAcl pulumix.Input[*string]
	// Boolean to indicate write status of file share. File share does not accept writes if `true`. Defaults to `false`.
	ReadOnly pulumix.Input[*bool]
	// Boolean who pays the cost of the request and the data download from the Amazon S3 bucket. Set this value to `true` if you want the requester to pay instead of the bucket owner. Defaults to `false`.
	RequesterPays pulumix.Input[*bool]
	// The ARN of the AWS Identity and Access Management (IAM) role that a file gateway assumes when it accesses the underlying storage.
	RoleArn pulumix.Input[string]
	// Maps a user to anonymous user. Defaults to `RootSquash`. Valid values: `RootSquash` (only root is mapped to anonymous user), `NoSquash` (no one is mapped to anonymous user), `AllSquash` (everyone is mapped to anonymous user)
	Squash pulumix.Input[*string]
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// The DNS name of the VPC endpoint for S3 PrivateLink.
	VpcEndpointDnsName pulumix.Input[*string]
}

func (NfsFileShareArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*nfsFileShareArgs)(nil)).Elem()
}

type NfsFileShareOutput struct{ *pulumi.OutputState }

func (NfsFileShareOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NfsFileShare)(nil)).Elem()
}

func (o NfsFileShareOutput) ToNfsFileShareOutput() NfsFileShareOutput {
	return o
}

func (o NfsFileShareOutput) ToNfsFileShareOutputWithContext(ctx context.Context) NfsFileShareOutput {
	return o
}

func (o NfsFileShareOutput) ToOutput(ctx context.Context) pulumix.Output[NfsFileShare] {
	return pulumix.Output[NfsFileShare]{
		OutputState: o.OutputState,
	}
}

// Amazon Resource Name (ARN) of the NFS File Share.
func (o NfsFileShareOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[NfsFileShare](o, func(v NfsFileShare) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The Amazon Resource Name (ARN) of the storage used for audit logs.
func (o NfsFileShareOutput) AuditDestinationArn() pulumix.Output[*string] {
	value := pulumix.Apply[NfsFileShare](o, func(v NfsFileShare) pulumix.Output[*string] { return v.AuditDestinationArn })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The region of the S3 bucket used by the file share. Required when specifying `vpcEndpointDnsName`.
func (o NfsFileShareOutput) BucketRegion() pulumix.Output[*string] {
	value := pulumix.Apply[NfsFileShare](o, func(v NfsFileShare) pulumix.Output[*string] { return v.BucketRegion })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Refresh cache information. see Cache Attributes for more details.
func (o NfsFileShareOutput) CacheAttributes() pulumix.GPtrOutput[NfsFileShareCacheAttributes, NfsFileShareCacheAttributesOutput] {
	value := pulumix.Apply[NfsFileShare](o, func(v NfsFileShare) pulumix.GPtrOutput[NfsFileShareCacheAttributes, NfsFileShareCacheAttributesOutput] {
		return v.CacheAttributes
	})
	unwrapped := pulumix.Flatten[*NfsFileShareCacheAttributes, pulumix.GPtrOutput[NfsFileShareCacheAttributes, NfsFileShareCacheAttributesOutput]](value)
	return pulumix.GPtrOutput[NfsFileShareCacheAttributes, NfsFileShareCacheAttributesOutput]{OutputState: unwrapped.OutputState}
}

// The list of clients that are allowed to access the file gateway. The list must contain either valid IP addresses or valid CIDR blocks. Set to `["0.0.0.0/0"]` to not limit access. Minimum 1 item. Maximum 100 items.
func (o NfsFileShareOutput) ClientLists() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[NfsFileShare](o, func(v NfsFileShare) pulumix.ArrayOutput[string] { return v.ClientLists })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// The default [storage class](https://docs.aws.amazon.com/storagegateway/latest/APIReference/API_CreateNFSFileShare.html#StorageGateway-CreateNFSFileShare-request-DefaultStorageClass) for objects put into an Amazon S3 bucket by the file gateway. Defaults to `S3_STANDARD`.
func (o NfsFileShareOutput) DefaultStorageClass() pulumix.Output[*string] {
	value := pulumix.Apply[NfsFileShare](o, func(v NfsFileShare) pulumix.Output[*string] { return v.DefaultStorageClass })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The name of the file share. Must be set if an S3 prefix name is set in `locationArn`.
func (o NfsFileShareOutput) FileShareName() pulumix.Output[string] {
	value := pulumix.Apply[NfsFileShare](o, func(v NfsFileShare) pulumix.Output[string] { return v.FileShareName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// ID of the NFS File Share.
func (o NfsFileShareOutput) FileshareId() pulumix.Output[string] {
	value := pulumix.Apply[NfsFileShare](o, func(v NfsFileShare) pulumix.Output[string] { return v.FileshareId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Amazon Resource Name (ARN) of the file gateway.
func (o NfsFileShareOutput) GatewayArn() pulumix.Output[string] {
	value := pulumix.Apply[NfsFileShare](o, func(v NfsFileShare) pulumix.Output[string] { return v.GatewayArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Boolean value that enables guessing of the MIME type for uploaded objects based on file extensions. Defaults to `true`.
func (o NfsFileShareOutput) GuessMimeTypeEnabled() pulumix.Output[*bool] {
	value := pulumix.Apply[NfsFileShare](o, func(v NfsFileShare) pulumix.Output[*bool] { return v.GuessMimeTypeEnabled })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// Boolean value if `true` to use Amazon S3 server side encryption with your own AWS KMS key, or `false` to use a key managed by Amazon S3. Defaults to `false`.
func (o NfsFileShareOutput) KmsEncrypted() pulumix.Output[*bool] {
	value := pulumix.Apply[NfsFileShare](o, func(v NfsFileShare) pulumix.Output[*bool] { return v.KmsEncrypted })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// Amazon Resource Name (ARN) for KMS key used for Amazon S3 server side encryption. This value can only be set when `kmsEncrypted` is true.
func (o NfsFileShareOutput) KmsKeyArn() pulumix.Output[*string] {
	value := pulumix.Apply[NfsFileShare](o, func(v NfsFileShare) pulumix.Output[*string] { return v.KmsKeyArn })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The ARN of the backed storage used for storing file data.
func (o NfsFileShareOutput) LocationArn() pulumix.Output[string] {
	value := pulumix.Apply[NfsFileShare](o, func(v NfsFileShare) pulumix.Output[string] { return v.LocationArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Nested argument with file share default values. More information below. see NFS File Share Defaults for more details.
func (o NfsFileShareOutput) NfsFileShareDefaults() pulumix.GPtrOutput[NfsFileShareNfsFileShareDefaults, NfsFileShareNfsFileShareDefaultsOutput] {
	value := pulumix.Apply[NfsFileShare](o, func(v NfsFileShare) pulumix.GPtrOutput[NfsFileShareNfsFileShareDefaults, NfsFileShareNfsFileShareDefaultsOutput] {
		return v.NfsFileShareDefaults
	})
	unwrapped := pulumix.Flatten[*NfsFileShareNfsFileShareDefaults, pulumix.GPtrOutput[NfsFileShareNfsFileShareDefaults, NfsFileShareNfsFileShareDefaultsOutput]](value)
	return pulumix.GPtrOutput[NfsFileShareNfsFileShareDefaults, NfsFileShareNfsFileShareDefaultsOutput]{OutputState: unwrapped.OutputState}
}

// The notification policy of the file share. For more information see the [AWS Documentation](https://docs.aws.amazon.com/storagegateway/latest/APIReference/API_CreateNFSFileShare.html#StorageGateway-CreateNFSFileShare-request-NotificationPolicy). Default value is `{}`.
func (o NfsFileShareOutput) NotificationPolicy() pulumix.Output[*string] {
	value := pulumix.Apply[NfsFileShare](o, func(v NfsFileShare) pulumix.Output[*string] { return v.NotificationPolicy })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Access Control List permission for S3 objects. Defaults to `private`.
func (o NfsFileShareOutput) ObjectAcl() pulumix.Output[*string] {
	value := pulumix.Apply[NfsFileShare](o, func(v NfsFileShare) pulumix.Output[*string] { return v.ObjectAcl })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// File share path used by the NFS client to identify the mount point.
func (o NfsFileShareOutput) Path() pulumix.Output[string] {
	value := pulumix.Apply[NfsFileShare](o, func(v NfsFileShare) pulumix.Output[string] { return v.Path })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Boolean to indicate write status of file share. File share does not accept writes if `true`. Defaults to `false`.
func (o NfsFileShareOutput) ReadOnly() pulumix.Output[*bool] {
	value := pulumix.Apply[NfsFileShare](o, func(v NfsFileShare) pulumix.Output[*bool] { return v.ReadOnly })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// Boolean who pays the cost of the request and the data download from the Amazon S3 bucket. Set this value to `true` if you want the requester to pay instead of the bucket owner. Defaults to `false`.
func (o NfsFileShareOutput) RequesterPays() pulumix.Output[*bool] {
	value := pulumix.Apply[NfsFileShare](o, func(v NfsFileShare) pulumix.Output[*bool] { return v.RequesterPays })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// The ARN of the AWS Identity and Access Management (IAM) role that a file gateway assumes when it accesses the underlying storage.
func (o NfsFileShareOutput) RoleArn() pulumix.Output[string] {
	value := pulumix.Apply[NfsFileShare](o, func(v NfsFileShare) pulumix.Output[string] { return v.RoleArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Maps a user to anonymous user. Defaults to `RootSquash`. Valid values: `RootSquash` (only root is mapped to anonymous user), `NoSquash` (no one is mapped to anonymous user), `AllSquash` (everyone is mapped to anonymous user)
func (o NfsFileShareOutput) Squash() pulumix.Output[*string] {
	value := pulumix.Apply[NfsFileShare](o, func(v NfsFileShare) pulumix.Output[*string] { return v.Squash })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o NfsFileShareOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[NfsFileShare](o, func(v NfsFileShare) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o NfsFileShareOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[NfsFileShare](o, func(v NfsFileShare) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// The DNS name of the VPC endpoint for S3 PrivateLink.
func (o NfsFileShareOutput) VpcEndpointDnsName() pulumix.Output[*string] {
	value := pulumix.Apply[NfsFileShare](o, func(v NfsFileShare) pulumix.Output[*string] { return v.VpcEndpointDnsName })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

func init() {
	pulumi.RegisterOutputType(NfsFileShareOutput{})
}
