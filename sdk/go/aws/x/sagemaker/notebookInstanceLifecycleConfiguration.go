// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sagemaker

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a lifecycle configuration for SageMaker Notebook Instances.
type NotebookInstanceLifecycleConfiguration struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) assigned by AWS to this lifecycle configuration.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The name of the lifecycle configuration (must be unique). If omitted, this provider will assign a random, unique name.
	Name pulumix.Output[string] `pulumi:"name"`
	// A shell script (base64-encoded) that runs only once when the SageMaker Notebook Instance is created.
	OnCreate pulumix.Output[*string] `pulumi:"onCreate"`
	// A shell script (base64-encoded) that runs every time the SageMaker Notebook Instance is started including the time it's created.
	OnStart pulumix.Output[*string] `pulumi:"onStart"`
}

// NewNotebookInstanceLifecycleConfiguration registers a new resource with the given unique name, arguments, and options.
func NewNotebookInstanceLifecycleConfiguration(ctx *pulumi.Context,
	name string, args *NotebookInstanceLifecycleConfigurationArgs, opts ...pulumi.ResourceOption) (*NotebookInstanceLifecycleConfiguration, error) {
	if args == nil {
		args = &NotebookInstanceLifecycleConfigurationArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource NotebookInstanceLifecycleConfiguration
	err := ctx.RegisterResource("aws:sagemaker/notebookInstanceLifecycleConfiguration:NotebookInstanceLifecycleConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNotebookInstanceLifecycleConfiguration gets an existing NotebookInstanceLifecycleConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNotebookInstanceLifecycleConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NotebookInstanceLifecycleConfigurationState, opts ...pulumi.ResourceOption) (*NotebookInstanceLifecycleConfiguration, error) {
	var resource NotebookInstanceLifecycleConfiguration
	err := ctx.ReadResource("aws:sagemaker/notebookInstanceLifecycleConfiguration:NotebookInstanceLifecycleConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NotebookInstanceLifecycleConfiguration resources.
type notebookInstanceLifecycleConfigurationState struct {
	// The Amazon Resource Name (ARN) assigned by AWS to this lifecycle configuration.
	Arn *string `pulumi:"arn"`
	// The name of the lifecycle configuration (must be unique). If omitted, this provider will assign a random, unique name.
	Name *string `pulumi:"name"`
	// A shell script (base64-encoded) that runs only once when the SageMaker Notebook Instance is created.
	OnCreate *string `pulumi:"onCreate"`
	// A shell script (base64-encoded) that runs every time the SageMaker Notebook Instance is started including the time it's created.
	OnStart *string `pulumi:"onStart"`
}

type NotebookInstanceLifecycleConfigurationState struct {
	// The Amazon Resource Name (ARN) assigned by AWS to this lifecycle configuration.
	Arn pulumix.Input[*string]
	// The name of the lifecycle configuration (must be unique). If omitted, this provider will assign a random, unique name.
	Name pulumix.Input[*string]
	// A shell script (base64-encoded) that runs only once when the SageMaker Notebook Instance is created.
	OnCreate pulumix.Input[*string]
	// A shell script (base64-encoded) that runs every time the SageMaker Notebook Instance is started including the time it's created.
	OnStart pulumix.Input[*string]
}

func (NotebookInstanceLifecycleConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*notebookInstanceLifecycleConfigurationState)(nil)).Elem()
}

type notebookInstanceLifecycleConfigurationArgs struct {
	// The name of the lifecycle configuration (must be unique). If omitted, this provider will assign a random, unique name.
	Name *string `pulumi:"name"`
	// A shell script (base64-encoded) that runs only once when the SageMaker Notebook Instance is created.
	OnCreate *string `pulumi:"onCreate"`
	// A shell script (base64-encoded) that runs every time the SageMaker Notebook Instance is started including the time it's created.
	OnStart *string `pulumi:"onStart"`
}

// The set of arguments for constructing a NotebookInstanceLifecycleConfiguration resource.
type NotebookInstanceLifecycleConfigurationArgs struct {
	// The name of the lifecycle configuration (must be unique). If omitted, this provider will assign a random, unique name.
	Name pulumix.Input[*string]
	// A shell script (base64-encoded) that runs only once when the SageMaker Notebook Instance is created.
	OnCreate pulumix.Input[*string]
	// A shell script (base64-encoded) that runs every time the SageMaker Notebook Instance is started including the time it's created.
	OnStart pulumix.Input[*string]
}

func (NotebookInstanceLifecycleConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*notebookInstanceLifecycleConfigurationArgs)(nil)).Elem()
}

type NotebookInstanceLifecycleConfigurationOutput struct{ *pulumi.OutputState }

func (NotebookInstanceLifecycleConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotebookInstanceLifecycleConfiguration)(nil)).Elem()
}

func (o NotebookInstanceLifecycleConfigurationOutput) ToNotebookInstanceLifecycleConfigurationOutput() NotebookInstanceLifecycleConfigurationOutput {
	return o
}

func (o NotebookInstanceLifecycleConfigurationOutput) ToNotebookInstanceLifecycleConfigurationOutputWithContext(ctx context.Context) NotebookInstanceLifecycleConfigurationOutput {
	return o
}

func (o NotebookInstanceLifecycleConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[NotebookInstanceLifecycleConfiguration] {
	return pulumix.Output[NotebookInstanceLifecycleConfiguration]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) assigned by AWS to this lifecycle configuration.
func (o NotebookInstanceLifecycleConfigurationOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[NotebookInstanceLifecycleConfiguration](o, func(v NotebookInstanceLifecycleConfiguration) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The name of the lifecycle configuration (must be unique). If omitted, this provider will assign a random, unique name.
func (o NotebookInstanceLifecycleConfigurationOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[NotebookInstanceLifecycleConfiguration](o, func(v NotebookInstanceLifecycleConfiguration) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A shell script (base64-encoded) that runs only once when the SageMaker Notebook Instance is created.
func (o NotebookInstanceLifecycleConfigurationOutput) OnCreate() pulumix.Output[*string] {
	value := pulumix.Apply[NotebookInstanceLifecycleConfiguration](o, func(v NotebookInstanceLifecycleConfiguration) pulumix.Output[*string] { return v.OnCreate })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// A shell script (base64-encoded) that runs every time the SageMaker Notebook Instance is started including the time it's created.
func (o NotebookInstanceLifecycleConfigurationOutput) OnStart() pulumix.Output[*string] {
	value := pulumix.Apply[NotebookInstanceLifecycleConfiguration](o, func(v NotebookInstanceLifecycleConfiguration) pulumix.Output[*string] { return v.OnStart })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

func init() {
	pulumi.RegisterOutputType(NotebookInstanceLifecycleConfigurationOutput{})
}
