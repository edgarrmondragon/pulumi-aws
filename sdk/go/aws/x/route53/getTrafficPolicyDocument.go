// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package route53

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Generates an Route53 traffic policy document in JSON format for use with resources that expect policy documents such as `route53.TrafficPolicy`.
func GetTrafficPolicyDocument(ctx *pulumi.Context, args *GetTrafficPolicyDocumentArgs, opts ...pulumi.InvokeOption) (*GetTrafficPolicyDocumentResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetTrafficPolicyDocumentResult
	err := ctx.Invoke("aws:route53/getTrafficPolicyDocument:getTrafficPolicyDocument", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTrafficPolicyDocument.
type GetTrafficPolicyDocumentArgs struct {
	// Configuration block for the definitions of the endpoints that you want to use in this traffic policy. See below
	Endpoints []GetTrafficPolicyDocumentEndpoint `pulumi:"endpoints"`
	// DNS type of all of the resource record sets that Amazon Route 53 will create based on this traffic policy.
	RecordType *string `pulumi:"recordType"`
	// Configuration block for definitions of the rules that you want to use in this traffic policy. See below
	Rules []GetTrafficPolicyDocumentRule `pulumi:"rules"`
	// An endpoint to be as the starting point for the traffic policy.
	StartEndpoint *string `pulumi:"startEndpoint"`
	// A rule to be as the starting point for the traffic policy.
	StartRule *string `pulumi:"startRule"`
	// Version of the traffic policy format.
	Version *string `pulumi:"version"`
}

// A collection of values returned by getTrafficPolicyDocument.
type GetTrafficPolicyDocumentResult struct {
	Endpoints []GetTrafficPolicyDocumentEndpoint `pulumi:"endpoints"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Standard JSON policy document rendered based on the arguments above.
	Json          string                         `pulumi:"json"`
	RecordType    *string                        `pulumi:"recordType"`
	Rules         []GetTrafficPolicyDocumentRule `pulumi:"rules"`
	StartEndpoint *string                        `pulumi:"startEndpoint"`
	StartRule     *string                        `pulumi:"startRule"`
	Version       *string                        `pulumi:"version"`
}

func GetTrafficPolicyDocumentOutput(ctx *pulumi.Context, args GetTrafficPolicyDocumentOutputArgs, opts ...pulumi.InvokeOption) GetTrafficPolicyDocumentResultOutput {
	outputResult := pulumix.ApplyErr[*GetTrafficPolicyDocumentArgs](args.ToOutput(), func(plainArgs *GetTrafficPolicyDocumentArgs) (*GetTrafficPolicyDocumentResult, error) {
		return GetTrafficPolicyDocument(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[GetTrafficPolicyDocumentResultOutput, *GetTrafficPolicyDocumentResult](outputResult)
}

// A collection of arguments for invoking getTrafficPolicyDocument.
type GetTrafficPolicyDocumentOutputArgs struct {
	// Configuration block for the definitions of the endpoints that you want to use in this traffic policy. See below
	Endpoints pulumix.Input[[]*GetTrafficPolicyDocumentEndpointArgs] `pulumi:"endpoints"`
	// DNS type of all of the resource record sets that Amazon Route 53 will create based on this traffic policy.
	RecordType pulumix.Input[*string] `pulumi:"recordType"`
	// Configuration block for definitions of the rules that you want to use in this traffic policy. See below
	Rules pulumix.Input[[]*GetTrafficPolicyDocumentRuleArgs] `pulumi:"rules"`
	// An endpoint to be as the starting point for the traffic policy.
	StartEndpoint pulumix.Input[*string] `pulumi:"startEndpoint"`
	// A rule to be as the starting point for the traffic policy.
	StartRule pulumix.Input[*string] `pulumi:"startRule"`
	// Version of the traffic policy format.
	Version pulumix.Input[*string] `pulumi:"version"`
}

func (args GetTrafficPolicyDocumentOutputArgs) ToOutput() pulumix.Output[*GetTrafficPolicyDocumentArgs] {
	allArgs := pulumix.All(
		args.Endpoints.ToOutput(context.Background()).AsAny(),
		args.RecordType.ToOutput(context.Background()).AsAny(),
		args.Rules.ToOutput(context.Background()).AsAny(),
		args.StartEndpoint.ToOutput(context.Background()).AsAny(),
		args.StartRule.ToOutput(context.Background()).AsAny(),
		args.Version.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *GetTrafficPolicyDocumentArgs {
		return &GetTrafficPolicyDocumentArgs{
			Endpoints:     resolvedArgs[0].([]GetTrafficPolicyDocumentEndpoint),
			RecordType:    resolvedArgs[1].(*string),
			Rules:         resolvedArgs[2].([]GetTrafficPolicyDocumentRule),
			StartEndpoint: resolvedArgs[3].(*string),
			StartRule:     resolvedArgs[4].(*string),
			Version:       resolvedArgs[5].(*string),
		}
	})
}

type GetTrafficPolicyDocumentResultOutput struct{ *pulumi.OutputState }

func (GetTrafficPolicyDocumentResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrafficPolicyDocumentResult)(nil)).Elem()
}

func (o GetTrafficPolicyDocumentResultOutput) ToOutput(context.Context) pulumix.Output[*GetTrafficPolicyDocumentResult] {
	return pulumix.Output[*GetTrafficPolicyDocumentResult]{
		OutputState: o.OutputState,
	}
}

func (o GetTrafficPolicyDocumentResultOutput) Endpoints() pulumix.GArrayOutput[GetTrafficPolicyDocumentEndpoint, GetTrafficPolicyDocumentEndpointOutput] {
	value := pulumix.Apply[*GetTrafficPolicyDocumentResult](o, func(v *GetTrafficPolicyDocumentResult) []GetTrafficPolicyDocumentEndpoint { return v.Endpoints })
	return pulumix.GArrayOutput[GetTrafficPolicyDocumentEndpoint, GetTrafficPolicyDocumentEndpointOutput]{
		OutputState: value.OutputState,
	}
}

func (o GetTrafficPolicyDocumentResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*GetTrafficPolicyDocumentResult](o, func(v *GetTrafficPolicyDocumentResult) string { return v.Id })
}

func (o GetTrafficPolicyDocumentResultOutput) Json() pulumix.Output[string] {
	return pulumix.Apply[*GetTrafficPolicyDocumentResult](o, func(v *GetTrafficPolicyDocumentResult) string { return v.Json })
}

func (o GetTrafficPolicyDocumentResultOutput) RecordType() pulumix.Output[*string] {
	return pulumix.Apply[*GetTrafficPolicyDocumentResult](o, func(v *GetTrafficPolicyDocumentResult) *string { return v.RecordType })
}

func (o GetTrafficPolicyDocumentResultOutput) Rules() pulumix.GArrayOutput[GetTrafficPolicyDocumentRule, GetTrafficPolicyDocumentRuleOutput] {
	value := pulumix.Apply[*GetTrafficPolicyDocumentResult](o, func(v *GetTrafficPolicyDocumentResult) []GetTrafficPolicyDocumentRule { return v.Rules })
	return pulumix.GArrayOutput[GetTrafficPolicyDocumentRule, GetTrafficPolicyDocumentRuleOutput]{
		OutputState: value.OutputState,
	}
}

func (o GetTrafficPolicyDocumentResultOutput) StartEndpoint() pulumix.Output[*string] {
	return pulumix.Apply[*GetTrafficPolicyDocumentResult](o, func(v *GetTrafficPolicyDocumentResult) *string { return v.StartEndpoint })
}

func (o GetTrafficPolicyDocumentResultOutput) StartRule() pulumix.Output[*string] {
	return pulumix.Apply[*GetTrafficPolicyDocumentResult](o, func(v *GetTrafficPolicyDocumentResult) *string { return v.StartRule })
}

func (o GetTrafficPolicyDocumentResultOutput) Version() pulumix.Output[*string] {
	return pulumix.Apply[*GetTrafficPolicyDocumentResult](o, func(v *GetTrafficPolicyDocumentResult) *string { return v.Version })
}
