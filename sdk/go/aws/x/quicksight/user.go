// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package quicksight

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Resource for managing QuickSight User
type User struct {
	pulumi.CustomResourceState

	// Amazon Resource Name (ARN) of the user
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The ID for the AWS account that the user is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.
	AwsAccountId pulumix.Output[string] `pulumi:"awsAccountId"`
	// The email address of the user that you want to register.
	Email pulumix.Output[string] `pulumi:"email"`
	// The ARN of the IAM user or role that you are registering with Amazon QuickSight.
	IamArn pulumix.Output[*string] `pulumi:"iamArn"`
	// Amazon QuickSight supports several ways of managing the identity of users. This parameter accepts either  `IAM` or `QUICKSIGHT`. If `IAM` is specified, the `iamArn` must also be specified.
	IdentityType pulumix.Output[string] `pulumi:"identityType"`
	// The Amazon Quicksight namespace to create the user in. Defaults to `default`.
	Namespace pulumix.Output[*string] `pulumi:"namespace"`
	// The name of the IAM session to use when assuming roles that can embed QuickSight dashboards. Only valid for registering users using an assumed IAM role. Additionally, if registering multiple users using the same IAM role, each user needs to have a unique session name.
	SessionName pulumix.Output[*string] `pulumi:"sessionName"`
	// The Amazon QuickSight user name that you want to create for the user you are registering. Only valid for registering a user with `identityType` set to `QUICKSIGHT`.
	UserName pulumix.Output[*string] `pulumi:"userName"`
	// The Amazon QuickSight role of the user. The user role can be one of the following: `READER`, `AUTHOR`, or `ADMIN`
	UserRole pulumix.Output[string] `pulumi:"userRole"`
}

// NewUser registers a new resource with the given unique name, arguments, and options.
func NewUser(ctx *pulumi.Context,
	name string, args *UserArgs, opts ...pulumi.ResourceOption) (*User, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Email == nil {
		return nil, errors.New("invalid value for required argument 'Email'")
	}
	if args.IdentityType == nil {
		return nil, errors.New("invalid value for required argument 'IdentityType'")
	}
	if args.UserRole == nil {
		return nil, errors.New("invalid value for required argument 'UserRole'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource User
	err := ctx.RegisterResource("aws:quicksight/user:User", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetUser gets an existing User resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetUser(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *UserState, opts ...pulumi.ResourceOption) (*User, error) {
	var resource User
	err := ctx.ReadResource("aws:quicksight/user:User", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering User resources.
type userState struct {
	// Amazon Resource Name (ARN) of the user
	Arn *string `pulumi:"arn"`
	// The ID for the AWS account that the user is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.
	AwsAccountId *string `pulumi:"awsAccountId"`
	// The email address of the user that you want to register.
	Email *string `pulumi:"email"`
	// The ARN of the IAM user or role that you are registering with Amazon QuickSight.
	IamArn *string `pulumi:"iamArn"`
	// Amazon QuickSight supports several ways of managing the identity of users. This parameter accepts either  `IAM` or `QUICKSIGHT`. If `IAM` is specified, the `iamArn` must also be specified.
	IdentityType *string `pulumi:"identityType"`
	// The Amazon Quicksight namespace to create the user in. Defaults to `default`.
	Namespace *string `pulumi:"namespace"`
	// The name of the IAM session to use when assuming roles that can embed QuickSight dashboards. Only valid for registering users using an assumed IAM role. Additionally, if registering multiple users using the same IAM role, each user needs to have a unique session name.
	SessionName *string `pulumi:"sessionName"`
	// The Amazon QuickSight user name that you want to create for the user you are registering. Only valid for registering a user with `identityType` set to `QUICKSIGHT`.
	UserName *string `pulumi:"userName"`
	// The Amazon QuickSight role of the user. The user role can be one of the following: `READER`, `AUTHOR`, or `ADMIN`
	UserRole *string `pulumi:"userRole"`
}

type UserState struct {
	// Amazon Resource Name (ARN) of the user
	Arn pulumix.Input[*string]
	// The ID for the AWS account that the user is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.
	AwsAccountId pulumix.Input[*string]
	// The email address of the user that you want to register.
	Email pulumix.Input[*string]
	// The ARN of the IAM user or role that you are registering with Amazon QuickSight.
	IamArn pulumix.Input[*string]
	// Amazon QuickSight supports several ways of managing the identity of users. This parameter accepts either  `IAM` or `QUICKSIGHT`. If `IAM` is specified, the `iamArn` must also be specified.
	IdentityType pulumix.Input[*string]
	// The Amazon Quicksight namespace to create the user in. Defaults to `default`.
	Namespace pulumix.Input[*string]
	// The name of the IAM session to use when assuming roles that can embed QuickSight dashboards. Only valid for registering users using an assumed IAM role. Additionally, if registering multiple users using the same IAM role, each user needs to have a unique session name.
	SessionName pulumix.Input[*string]
	// The Amazon QuickSight user name that you want to create for the user you are registering. Only valid for registering a user with `identityType` set to `QUICKSIGHT`.
	UserName pulumix.Input[*string]
	// The Amazon QuickSight role of the user. The user role can be one of the following: `READER`, `AUTHOR`, or `ADMIN`
	UserRole pulumix.Input[*string]
}

func (UserState) ElementType() reflect.Type {
	return reflect.TypeOf((*userState)(nil)).Elem()
}

type userArgs struct {
	// The ID for the AWS account that the user is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.
	AwsAccountId *string `pulumi:"awsAccountId"`
	// The email address of the user that you want to register.
	Email string `pulumi:"email"`
	// The ARN of the IAM user or role that you are registering with Amazon QuickSight.
	IamArn *string `pulumi:"iamArn"`
	// Amazon QuickSight supports several ways of managing the identity of users. This parameter accepts either  `IAM` or `QUICKSIGHT`. If `IAM` is specified, the `iamArn` must also be specified.
	IdentityType string `pulumi:"identityType"`
	// The Amazon Quicksight namespace to create the user in. Defaults to `default`.
	Namespace *string `pulumi:"namespace"`
	// The name of the IAM session to use when assuming roles that can embed QuickSight dashboards. Only valid for registering users using an assumed IAM role. Additionally, if registering multiple users using the same IAM role, each user needs to have a unique session name.
	SessionName *string `pulumi:"sessionName"`
	// The Amazon QuickSight user name that you want to create for the user you are registering. Only valid for registering a user with `identityType` set to `QUICKSIGHT`.
	UserName *string `pulumi:"userName"`
	// The Amazon QuickSight role of the user. The user role can be one of the following: `READER`, `AUTHOR`, or `ADMIN`
	UserRole string `pulumi:"userRole"`
}

// The set of arguments for constructing a User resource.
type UserArgs struct {
	// The ID for the AWS account that the user is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.
	AwsAccountId pulumix.Input[*string]
	// The email address of the user that you want to register.
	Email pulumix.Input[string]
	// The ARN of the IAM user or role that you are registering with Amazon QuickSight.
	IamArn pulumix.Input[*string]
	// Amazon QuickSight supports several ways of managing the identity of users. This parameter accepts either  `IAM` or `QUICKSIGHT`. If `IAM` is specified, the `iamArn` must also be specified.
	IdentityType pulumix.Input[string]
	// The Amazon Quicksight namespace to create the user in. Defaults to `default`.
	Namespace pulumix.Input[*string]
	// The name of the IAM session to use when assuming roles that can embed QuickSight dashboards. Only valid for registering users using an assumed IAM role. Additionally, if registering multiple users using the same IAM role, each user needs to have a unique session name.
	SessionName pulumix.Input[*string]
	// The Amazon QuickSight user name that you want to create for the user you are registering. Only valid for registering a user with `identityType` set to `QUICKSIGHT`.
	UserName pulumix.Input[*string]
	// The Amazon QuickSight role of the user. The user role can be one of the following: `READER`, `AUTHOR`, or `ADMIN`
	UserRole pulumix.Input[string]
}

func (UserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*userArgs)(nil)).Elem()
}

type UserOutput struct{ *pulumi.OutputState }

func (UserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*User)(nil)).Elem()
}

func (o UserOutput) ToUserOutput() UserOutput {
	return o
}

func (o UserOutput) ToUserOutputWithContext(ctx context.Context) UserOutput {
	return o
}

func (o UserOutput) ToOutput(ctx context.Context) pulumix.Output[User] {
	return pulumix.Output[User]{
		OutputState: o.OutputState,
	}
}

// Amazon Resource Name (ARN) of the user
func (o UserOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[User](o, func(v User) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The ID for the AWS account that the user is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.
func (o UserOutput) AwsAccountId() pulumix.Output[string] {
	value := pulumix.Apply[User](o, func(v User) pulumix.Output[string] { return v.AwsAccountId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The email address of the user that you want to register.
func (o UserOutput) Email() pulumix.Output[string] {
	value := pulumix.Apply[User](o, func(v User) pulumix.Output[string] { return v.Email })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The ARN of the IAM user or role that you are registering with Amazon QuickSight.
func (o UserOutput) IamArn() pulumix.Output[*string] {
	value := pulumix.Apply[User](o, func(v User) pulumix.Output[*string] { return v.IamArn })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Amazon QuickSight supports several ways of managing the identity of users. This parameter accepts either  `IAM` or `QUICKSIGHT`. If `IAM` is specified, the `iamArn` must also be specified.
func (o UserOutput) IdentityType() pulumix.Output[string] {
	value := pulumix.Apply[User](o, func(v User) pulumix.Output[string] { return v.IdentityType })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The Amazon Quicksight namespace to create the user in. Defaults to `default`.
func (o UserOutput) Namespace() pulumix.Output[*string] {
	value := pulumix.Apply[User](o, func(v User) pulumix.Output[*string] { return v.Namespace })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The name of the IAM session to use when assuming roles that can embed QuickSight dashboards. Only valid for registering users using an assumed IAM role. Additionally, if registering multiple users using the same IAM role, each user needs to have a unique session name.
func (o UserOutput) SessionName() pulumix.Output[*string] {
	value := pulumix.Apply[User](o, func(v User) pulumix.Output[*string] { return v.SessionName })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The Amazon QuickSight user name that you want to create for the user you are registering. Only valid for registering a user with `identityType` set to `QUICKSIGHT`.
func (o UserOutput) UserName() pulumix.Output[*string] {
	value := pulumix.Apply[User](o, func(v User) pulumix.Output[*string] { return v.UserName })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The Amazon QuickSight role of the user. The user role can be one of the following: `READER`, `AUTHOR`, or `ADMIN`
func (o UserOutput) UserRole() pulumix.Output[string] {
	value := pulumix.Apply[User](o, func(v User) pulumix.Output[string] { return v.UserRole })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(UserOutput{})
}
