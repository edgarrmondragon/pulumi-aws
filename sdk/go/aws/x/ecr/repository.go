// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ecr

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an Elastic Container Registry Repository.
type Repository struct {
	pulumi.CustomResourceState

	// Full ARN of the repository.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// Encryption configuration for the repository. See below for schema.
	EncryptionConfigurations pulumix.GArrayOutput[RepositoryEncryptionConfiguration, RepositoryEncryptionConfigurationOutput] `pulumi:"encryptionConfigurations"`
	// If `true`, will delete the repository even if it contains images.
	// Defaults to `false`.
	ForceDelete pulumix.Output[*bool] `pulumi:"forceDelete"`
	// Configuration block that defines image scanning configuration for the repository. By default, image scanning must be manually triggered. See the [ECR User Guide](https://docs.aws.amazon.com/AmazonECR/latest/userguide/image-scanning.html) for more information about image scanning.
	ImageScanningConfiguration pulumix.GPtrOutput[RepositoryImageScanningConfiguration, RepositoryImageScanningConfigurationOutput] `pulumi:"imageScanningConfiguration"`
	// The tag mutability setting for the repository. Must be one of: `MUTABLE` or `IMMUTABLE`. Defaults to `MUTABLE`.
	ImageTagMutability pulumix.Output[*string] `pulumi:"imageTagMutability"`
	// Name of the repository.
	Name pulumix.Output[string] `pulumi:"name"`
	// The registry ID where the repository was created.
	RegistryId pulumix.Output[string] `pulumi:"registryId"`
	// The URL of the repository (in the form `aws_account_id.dkr.ecr.region.amazonaws.com/repositoryName`).
	RepositoryUrl pulumix.Output[string] `pulumi:"repositoryUrl"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
}

// NewRepository registers a new resource with the given unique name, arguments, and options.
func NewRepository(ctx *pulumi.Context,
	name string, args *RepositoryArgs, opts ...pulumi.ResourceOption) (*Repository, error) {
	if args == nil {
		args = &RepositoryArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Repository
	err := ctx.RegisterResource("aws:ecr/repository:Repository", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRepository gets an existing Repository resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRepository(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RepositoryState, opts ...pulumi.ResourceOption) (*Repository, error) {
	var resource Repository
	err := ctx.ReadResource("aws:ecr/repository:Repository", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Repository resources.
type repositoryState struct {
	// Full ARN of the repository.
	Arn *string `pulumi:"arn"`
	// Encryption configuration for the repository. See below for schema.
	EncryptionConfigurations []RepositoryEncryptionConfiguration `pulumi:"encryptionConfigurations"`
	// If `true`, will delete the repository even if it contains images.
	// Defaults to `false`.
	ForceDelete *bool `pulumi:"forceDelete"`
	// Configuration block that defines image scanning configuration for the repository. By default, image scanning must be manually triggered. See the [ECR User Guide](https://docs.aws.amazon.com/AmazonECR/latest/userguide/image-scanning.html) for more information about image scanning.
	ImageScanningConfiguration *RepositoryImageScanningConfiguration `pulumi:"imageScanningConfiguration"`
	// The tag mutability setting for the repository. Must be one of: `MUTABLE` or `IMMUTABLE`. Defaults to `MUTABLE`.
	ImageTagMutability *string `pulumi:"imageTagMutability"`
	// Name of the repository.
	Name *string `pulumi:"name"`
	// The registry ID where the repository was created.
	RegistryId *string `pulumi:"registryId"`
	// The URL of the repository (in the form `aws_account_id.dkr.ecr.region.amazonaws.com/repositoryName`).
	RepositoryUrl *string `pulumi:"repositoryUrl"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type RepositoryState struct {
	// Full ARN of the repository.
	Arn pulumix.Input[*string]
	// Encryption configuration for the repository. See below for schema.
	EncryptionConfigurations pulumix.Input[[]*RepositoryEncryptionConfigurationArgs]
	// If `true`, will delete the repository even if it contains images.
	// Defaults to `false`.
	ForceDelete pulumix.Input[*bool]
	// Configuration block that defines image scanning configuration for the repository. By default, image scanning must be manually triggered. See the [ECR User Guide](https://docs.aws.amazon.com/AmazonECR/latest/userguide/image-scanning.html) for more information about image scanning.
	ImageScanningConfiguration pulumix.Input[*RepositoryImageScanningConfigurationArgs]
	// The tag mutability setting for the repository. Must be one of: `MUTABLE` or `IMMUTABLE`. Defaults to `MUTABLE`.
	ImageTagMutability pulumix.Input[*string]
	// Name of the repository.
	Name pulumix.Input[*string]
	// The registry ID where the repository was created.
	RegistryId pulumix.Input[*string]
	// The URL of the repository (in the form `aws_account_id.dkr.ecr.region.amazonaws.com/repositoryName`).
	RepositoryUrl pulumix.Input[*string]
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
}

func (RepositoryState) ElementType() reflect.Type {
	return reflect.TypeOf((*repositoryState)(nil)).Elem()
}

type repositoryArgs struct {
	// Encryption configuration for the repository. See below for schema.
	EncryptionConfigurations []RepositoryEncryptionConfiguration `pulumi:"encryptionConfigurations"`
	// If `true`, will delete the repository even if it contains images.
	// Defaults to `false`.
	ForceDelete *bool `pulumi:"forceDelete"`
	// Configuration block that defines image scanning configuration for the repository. By default, image scanning must be manually triggered. See the [ECR User Guide](https://docs.aws.amazon.com/AmazonECR/latest/userguide/image-scanning.html) for more information about image scanning.
	ImageScanningConfiguration *RepositoryImageScanningConfiguration `pulumi:"imageScanningConfiguration"`
	// The tag mutability setting for the repository. Must be one of: `MUTABLE` or `IMMUTABLE`. Defaults to `MUTABLE`.
	ImageTagMutability *string `pulumi:"imageTagMutability"`
	// Name of the repository.
	Name *string `pulumi:"name"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Repository resource.
type RepositoryArgs struct {
	// Encryption configuration for the repository. See below for schema.
	EncryptionConfigurations pulumix.Input[[]*RepositoryEncryptionConfigurationArgs]
	// If `true`, will delete the repository even if it contains images.
	// Defaults to `false`.
	ForceDelete pulumix.Input[*bool]
	// Configuration block that defines image scanning configuration for the repository. By default, image scanning must be manually triggered. See the [ECR User Guide](https://docs.aws.amazon.com/AmazonECR/latest/userguide/image-scanning.html) for more information about image scanning.
	ImageScanningConfiguration pulumix.Input[*RepositoryImageScanningConfigurationArgs]
	// The tag mutability setting for the repository. Must be one of: `MUTABLE` or `IMMUTABLE`. Defaults to `MUTABLE`.
	ImageTagMutability pulumix.Input[*string]
	// Name of the repository.
	Name pulumix.Input[*string]
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (RepositoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*repositoryArgs)(nil)).Elem()
}

type RepositoryOutput struct{ *pulumi.OutputState }

func (RepositoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Repository)(nil)).Elem()
}

func (o RepositoryOutput) ToRepositoryOutput() RepositoryOutput {
	return o
}

func (o RepositoryOutput) ToRepositoryOutputWithContext(ctx context.Context) RepositoryOutput {
	return o
}

func (o RepositoryOutput) ToOutput(ctx context.Context) pulumix.Output[Repository] {
	return pulumix.Output[Repository]{
		OutputState: o.OutputState,
	}
}

// Full ARN of the repository.
func (o RepositoryOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Repository](o, func(v Repository) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Encryption configuration for the repository. See below for schema.
func (o RepositoryOutput) EncryptionConfigurations() pulumix.GArrayOutput[RepositoryEncryptionConfiguration, RepositoryEncryptionConfigurationOutput] {
	value := pulumix.Apply[Repository](o, func(v Repository) pulumix.GArrayOutput[RepositoryEncryptionConfiguration, RepositoryEncryptionConfigurationOutput] {
		return v.EncryptionConfigurations
	})
	unwrapped := pulumix.Flatten[[]RepositoryEncryptionConfiguration, pulumix.GArrayOutput[RepositoryEncryptionConfiguration, RepositoryEncryptionConfigurationOutput]](value)
	return pulumix.GArrayOutput[RepositoryEncryptionConfiguration, RepositoryEncryptionConfigurationOutput]{OutputState: unwrapped.OutputState}
}

// If `true`, will delete the repository even if it contains images.
// Defaults to `false`.
func (o RepositoryOutput) ForceDelete() pulumix.Output[*bool] {
	value := pulumix.Apply[Repository](o, func(v Repository) pulumix.Output[*bool] { return v.ForceDelete })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// Configuration block that defines image scanning configuration for the repository. By default, image scanning must be manually triggered. See the [ECR User Guide](https://docs.aws.amazon.com/AmazonECR/latest/userguide/image-scanning.html) for more information about image scanning.
func (o RepositoryOutput) ImageScanningConfiguration() pulumix.GPtrOutput[RepositoryImageScanningConfiguration, RepositoryImageScanningConfigurationOutput] {
	value := pulumix.Apply[Repository](o, func(v Repository) pulumix.GPtrOutput[RepositoryImageScanningConfiguration, RepositoryImageScanningConfigurationOutput] {
		return v.ImageScanningConfiguration
	})
	unwrapped := pulumix.Flatten[*RepositoryImageScanningConfiguration, pulumix.GPtrOutput[RepositoryImageScanningConfiguration, RepositoryImageScanningConfigurationOutput]](value)
	return pulumix.GPtrOutput[RepositoryImageScanningConfiguration, RepositoryImageScanningConfigurationOutput]{OutputState: unwrapped.OutputState}
}

// The tag mutability setting for the repository. Must be one of: `MUTABLE` or `IMMUTABLE`. Defaults to `MUTABLE`.
func (o RepositoryOutput) ImageTagMutability() pulumix.Output[*string] {
	value := pulumix.Apply[Repository](o, func(v Repository) pulumix.Output[*string] { return v.ImageTagMutability })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Name of the repository.
func (o RepositoryOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[Repository](o, func(v Repository) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The registry ID where the repository was created.
func (o RepositoryOutput) RegistryId() pulumix.Output[string] {
	value := pulumix.Apply[Repository](o, func(v Repository) pulumix.Output[string] { return v.RegistryId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The URL of the repository (in the form `aws_account_id.dkr.ecr.region.amazonaws.com/repositoryName`).
func (o RepositoryOutput) RepositoryUrl() pulumix.Output[string] {
	value := pulumix.Apply[Repository](o, func(v Repository) pulumix.Output[string] { return v.RepositoryUrl })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o RepositoryOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Repository](o, func(v Repository) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o RepositoryOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[Repository](o, func(v Repository) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(RepositoryOutput{})
}
