// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package connect

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an Amazon Connect User Hierarchy Structure resource. For more information see
// [Amazon Connect: Getting Started](https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-get-started.html)
type UserHierarchyStructure struct {
	pulumi.CustomResourceState

	// A block that defines the hierarchy structure's levels. The `hierarchyStructure` block is documented below.
	HierarchyStructure pulumix.GPtrOutput[UserHierarchyStructureHierarchyStructure, UserHierarchyStructureHierarchyStructureOutput] `pulumi:"hierarchyStructure"`
	// Specifies the identifier of the hosting Amazon Connect Instance.
	InstanceId pulumix.Output[string] `pulumi:"instanceId"`
}

// NewUserHierarchyStructure registers a new resource with the given unique name, arguments, and options.
func NewUserHierarchyStructure(ctx *pulumi.Context,
	name string, args *UserHierarchyStructureArgs, opts ...pulumi.ResourceOption) (*UserHierarchyStructure, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.HierarchyStructure == nil {
		return nil, errors.New("invalid value for required argument 'HierarchyStructure'")
	}
	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource UserHierarchyStructure
	err := ctx.RegisterResource("aws:connect/userHierarchyStructure:UserHierarchyStructure", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetUserHierarchyStructure gets an existing UserHierarchyStructure resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetUserHierarchyStructure(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *UserHierarchyStructureState, opts ...pulumi.ResourceOption) (*UserHierarchyStructure, error) {
	var resource UserHierarchyStructure
	err := ctx.ReadResource("aws:connect/userHierarchyStructure:UserHierarchyStructure", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering UserHierarchyStructure resources.
type userHierarchyStructureState struct {
	// A block that defines the hierarchy structure's levels. The `hierarchyStructure` block is documented below.
	HierarchyStructure *UserHierarchyStructureHierarchyStructure `pulumi:"hierarchyStructure"`
	// Specifies the identifier of the hosting Amazon Connect Instance.
	InstanceId *string `pulumi:"instanceId"`
}

type UserHierarchyStructureState struct {
	// A block that defines the hierarchy structure's levels. The `hierarchyStructure` block is documented below.
	HierarchyStructure pulumix.Input[*UserHierarchyStructureHierarchyStructureArgs]
	// Specifies the identifier of the hosting Amazon Connect Instance.
	InstanceId pulumix.Input[*string]
}

func (UserHierarchyStructureState) ElementType() reflect.Type {
	return reflect.TypeOf((*userHierarchyStructureState)(nil)).Elem()
}

type userHierarchyStructureArgs struct {
	// A block that defines the hierarchy structure's levels. The `hierarchyStructure` block is documented below.
	HierarchyStructure UserHierarchyStructureHierarchyStructure `pulumi:"hierarchyStructure"`
	// Specifies the identifier of the hosting Amazon Connect Instance.
	InstanceId string `pulumi:"instanceId"`
}

// The set of arguments for constructing a UserHierarchyStructure resource.
type UserHierarchyStructureArgs struct {
	// A block that defines the hierarchy structure's levels. The `hierarchyStructure` block is documented below.
	HierarchyStructure pulumix.Input[*UserHierarchyStructureHierarchyStructureArgs]
	// Specifies the identifier of the hosting Amazon Connect Instance.
	InstanceId pulumix.Input[string]
}

func (UserHierarchyStructureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*userHierarchyStructureArgs)(nil)).Elem()
}

type UserHierarchyStructureOutput struct{ *pulumi.OutputState }

func (UserHierarchyStructureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserHierarchyStructure)(nil)).Elem()
}

func (o UserHierarchyStructureOutput) ToUserHierarchyStructureOutput() UserHierarchyStructureOutput {
	return o
}

func (o UserHierarchyStructureOutput) ToUserHierarchyStructureOutputWithContext(ctx context.Context) UserHierarchyStructureOutput {
	return o
}

func (o UserHierarchyStructureOutput) ToOutput(ctx context.Context) pulumix.Output[UserHierarchyStructure] {
	return pulumix.Output[UserHierarchyStructure]{
		OutputState: o.OutputState,
	}
}

// A block that defines the hierarchy structure's levels. The `hierarchyStructure` block is documented below.
func (o UserHierarchyStructureOutput) HierarchyStructure() pulumix.GPtrOutput[UserHierarchyStructureHierarchyStructure, UserHierarchyStructureHierarchyStructureOutput] {
	value := pulumix.Apply[UserHierarchyStructure](o, func(v UserHierarchyStructure) pulumix.GPtrOutput[UserHierarchyStructureHierarchyStructure, UserHierarchyStructureHierarchyStructureOutput] {
		return v.HierarchyStructure
	})
	unwrapped := pulumix.Flatten[*UserHierarchyStructureHierarchyStructure, pulumix.GPtrOutput[UserHierarchyStructureHierarchyStructure, UserHierarchyStructureHierarchyStructureOutput]](value)
	return pulumix.GPtrOutput[UserHierarchyStructureHierarchyStructure, UserHierarchyStructureHierarchyStructureOutput]{OutputState: unwrapped.OutputState}
}

// Specifies the identifier of the hosting Amazon Connect Instance.
func (o UserHierarchyStructureOutput) InstanceId() pulumix.Output[string] {
	value := pulumix.Apply[UserHierarchyStructure](o, func(v UserHierarchyStructure) pulumix.Output[string] { return v.InstanceId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(UserHierarchyStructureOutput{})
}
