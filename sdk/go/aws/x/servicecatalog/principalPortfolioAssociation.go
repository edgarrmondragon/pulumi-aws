// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package servicecatalog

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manages a Service Catalog Principal Portfolio Association.
type PrincipalPortfolioAssociation struct {
	pulumi.CustomResourceState

	// Language code. Valid values: `en` (English), `jp` (Japanese), `zh` (Chinese). Default value is `en`.
	AcceptLanguage pulumix.Output[*string] `pulumi:"acceptLanguage"`
	// Portfolio identifier.
	PortfolioId pulumix.Output[string] `pulumi:"portfolioId"`
	// Principal ARN.
	//
	// The following arguments are optional:
	PrincipalArn pulumix.Output[string] `pulumi:"principalArn"`
	// Principal type. Setting this argument empty (e.g., `principalType = ""`) will result in an error. Valid value is `IAM`. Default is `IAM`.
	PrincipalType pulumix.Output[*string] `pulumi:"principalType"`
}

// NewPrincipalPortfolioAssociation registers a new resource with the given unique name, arguments, and options.
func NewPrincipalPortfolioAssociation(ctx *pulumi.Context,
	name string, args *PrincipalPortfolioAssociationArgs, opts ...pulumi.ResourceOption) (*PrincipalPortfolioAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PortfolioId == nil {
		return nil, errors.New("invalid value for required argument 'PortfolioId'")
	}
	if args.PrincipalArn == nil {
		return nil, errors.New("invalid value for required argument 'PrincipalArn'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PrincipalPortfolioAssociation
	err := ctx.RegisterResource("aws:servicecatalog/principalPortfolioAssociation:PrincipalPortfolioAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPrincipalPortfolioAssociation gets an existing PrincipalPortfolioAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPrincipalPortfolioAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PrincipalPortfolioAssociationState, opts ...pulumi.ResourceOption) (*PrincipalPortfolioAssociation, error) {
	var resource PrincipalPortfolioAssociation
	err := ctx.ReadResource("aws:servicecatalog/principalPortfolioAssociation:PrincipalPortfolioAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PrincipalPortfolioAssociation resources.
type principalPortfolioAssociationState struct {
	// Language code. Valid values: `en` (English), `jp` (Japanese), `zh` (Chinese). Default value is `en`.
	AcceptLanguage *string `pulumi:"acceptLanguage"`
	// Portfolio identifier.
	PortfolioId *string `pulumi:"portfolioId"`
	// Principal ARN.
	//
	// The following arguments are optional:
	PrincipalArn *string `pulumi:"principalArn"`
	// Principal type. Setting this argument empty (e.g., `principalType = ""`) will result in an error. Valid value is `IAM`. Default is `IAM`.
	PrincipalType *string `pulumi:"principalType"`
}

type PrincipalPortfolioAssociationState struct {
	// Language code. Valid values: `en` (English), `jp` (Japanese), `zh` (Chinese). Default value is `en`.
	AcceptLanguage pulumix.Input[*string]
	// Portfolio identifier.
	PortfolioId pulumix.Input[*string]
	// Principal ARN.
	//
	// The following arguments are optional:
	PrincipalArn pulumix.Input[*string]
	// Principal type. Setting this argument empty (e.g., `principalType = ""`) will result in an error. Valid value is `IAM`. Default is `IAM`.
	PrincipalType pulumix.Input[*string]
}

func (PrincipalPortfolioAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*principalPortfolioAssociationState)(nil)).Elem()
}

type principalPortfolioAssociationArgs struct {
	// Language code. Valid values: `en` (English), `jp` (Japanese), `zh` (Chinese). Default value is `en`.
	AcceptLanguage *string `pulumi:"acceptLanguage"`
	// Portfolio identifier.
	PortfolioId string `pulumi:"portfolioId"`
	// Principal ARN.
	//
	// The following arguments are optional:
	PrincipalArn string `pulumi:"principalArn"`
	// Principal type. Setting this argument empty (e.g., `principalType = ""`) will result in an error. Valid value is `IAM`. Default is `IAM`.
	PrincipalType *string `pulumi:"principalType"`
}

// The set of arguments for constructing a PrincipalPortfolioAssociation resource.
type PrincipalPortfolioAssociationArgs struct {
	// Language code. Valid values: `en` (English), `jp` (Japanese), `zh` (Chinese). Default value is `en`.
	AcceptLanguage pulumix.Input[*string]
	// Portfolio identifier.
	PortfolioId pulumix.Input[string]
	// Principal ARN.
	//
	// The following arguments are optional:
	PrincipalArn pulumix.Input[string]
	// Principal type. Setting this argument empty (e.g., `principalType = ""`) will result in an error. Valid value is `IAM`. Default is `IAM`.
	PrincipalType pulumix.Input[*string]
}

func (PrincipalPortfolioAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*principalPortfolioAssociationArgs)(nil)).Elem()
}

type PrincipalPortfolioAssociationOutput struct{ *pulumi.OutputState }

func (PrincipalPortfolioAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrincipalPortfolioAssociation)(nil)).Elem()
}

func (o PrincipalPortfolioAssociationOutput) ToPrincipalPortfolioAssociationOutput() PrincipalPortfolioAssociationOutput {
	return o
}

func (o PrincipalPortfolioAssociationOutput) ToPrincipalPortfolioAssociationOutputWithContext(ctx context.Context) PrincipalPortfolioAssociationOutput {
	return o
}

func (o PrincipalPortfolioAssociationOutput) ToOutput(ctx context.Context) pulumix.Output[PrincipalPortfolioAssociation] {
	return pulumix.Output[PrincipalPortfolioAssociation]{
		OutputState: o.OutputState,
	}
}

// Language code. Valid values: `en` (English), `jp` (Japanese), `zh` (Chinese). Default value is `en`.
func (o PrincipalPortfolioAssociationOutput) AcceptLanguage() pulumix.Output[*string] {
	value := pulumix.Apply[PrincipalPortfolioAssociation](o, func(v PrincipalPortfolioAssociation) pulumix.Output[*string] { return v.AcceptLanguage })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Portfolio identifier.
func (o PrincipalPortfolioAssociationOutput) PortfolioId() pulumix.Output[string] {
	value := pulumix.Apply[PrincipalPortfolioAssociation](o, func(v PrincipalPortfolioAssociation) pulumix.Output[string] { return v.PortfolioId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Principal ARN.
//
// The following arguments are optional:
func (o PrincipalPortfolioAssociationOutput) PrincipalArn() pulumix.Output[string] {
	value := pulumix.Apply[PrincipalPortfolioAssociation](o, func(v PrincipalPortfolioAssociation) pulumix.Output[string] { return v.PrincipalArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Principal type. Setting this argument empty (e.g., `principalType = ""`) will result in an error. Valid value is `IAM`. Default is `IAM`.
func (o PrincipalPortfolioAssociationOutput) PrincipalType() pulumix.Output[*string] {
	value := pulumix.Apply[PrincipalPortfolioAssociation](o, func(v PrincipalPortfolioAssociation) pulumix.Output[*string] { return v.PrincipalType })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

func init() {
	pulumi.RegisterOutputType(PrincipalPortfolioAssociationOutput{})
}
