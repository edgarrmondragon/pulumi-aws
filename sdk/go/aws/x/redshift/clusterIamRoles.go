// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package redshift

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a Redshift Cluster IAM Roles resource.
//
// > **NOTE:** A Redshift cluster's default IAM role can be managed both by this resource's `defaultIamRoleArn` argument and the `redshift.Cluster` resource's `defaultIamRoleArn` argument. Do not configure different values for both arguments. Doing so will cause a conflict of default IAM roles.
type ClusterIamRoles struct {
	pulumi.CustomResourceState

	// The name of the Redshift Cluster IAM Roles.
	ClusterIdentifier pulumix.Output[string] `pulumi:"clusterIdentifier"`
	// The Amazon Resource Name (ARN) for the IAM role that was set as default for the cluster when the cluster was created.
	DefaultIamRoleArn pulumix.Output[string] `pulumi:"defaultIamRoleArn"`
	// A list of IAM Role ARNs to associate with the cluster. A Maximum of 10 can be associated to the cluster at any time.
	IamRoleArns pulumix.ArrayOutput[string] `pulumi:"iamRoleArns"`
}

// NewClusterIamRoles registers a new resource with the given unique name, arguments, and options.
func NewClusterIamRoles(ctx *pulumi.Context,
	name string, args *ClusterIamRolesArgs, opts ...pulumi.ResourceOption) (*ClusterIamRoles, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterIdentifier == nil {
		return nil, errors.New("invalid value for required argument 'ClusterIdentifier'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ClusterIamRoles
	err := ctx.RegisterResource("aws:redshift/clusterIamRoles:ClusterIamRoles", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetClusterIamRoles gets an existing ClusterIamRoles resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetClusterIamRoles(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ClusterIamRolesState, opts ...pulumi.ResourceOption) (*ClusterIamRoles, error) {
	var resource ClusterIamRoles
	err := ctx.ReadResource("aws:redshift/clusterIamRoles:ClusterIamRoles", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ClusterIamRoles resources.
type clusterIamRolesState struct {
	// The name of the Redshift Cluster IAM Roles.
	ClusterIdentifier *string `pulumi:"clusterIdentifier"`
	// The Amazon Resource Name (ARN) for the IAM role that was set as default for the cluster when the cluster was created.
	DefaultIamRoleArn *string `pulumi:"defaultIamRoleArn"`
	// A list of IAM Role ARNs to associate with the cluster. A Maximum of 10 can be associated to the cluster at any time.
	IamRoleArns []string `pulumi:"iamRoleArns"`
}

type ClusterIamRolesState struct {
	// The name of the Redshift Cluster IAM Roles.
	ClusterIdentifier pulumix.Input[*string]
	// The Amazon Resource Name (ARN) for the IAM role that was set as default for the cluster when the cluster was created.
	DefaultIamRoleArn pulumix.Input[*string]
	// A list of IAM Role ARNs to associate with the cluster. A Maximum of 10 can be associated to the cluster at any time.
	IamRoleArns pulumix.Input[[]string]
}

func (ClusterIamRolesState) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterIamRolesState)(nil)).Elem()
}

type clusterIamRolesArgs struct {
	// The name of the Redshift Cluster IAM Roles.
	ClusterIdentifier string `pulumi:"clusterIdentifier"`
	// The Amazon Resource Name (ARN) for the IAM role that was set as default for the cluster when the cluster was created.
	DefaultIamRoleArn *string `pulumi:"defaultIamRoleArn"`
	// A list of IAM Role ARNs to associate with the cluster. A Maximum of 10 can be associated to the cluster at any time.
	IamRoleArns []string `pulumi:"iamRoleArns"`
}

// The set of arguments for constructing a ClusterIamRoles resource.
type ClusterIamRolesArgs struct {
	// The name of the Redshift Cluster IAM Roles.
	ClusterIdentifier pulumix.Input[string]
	// The Amazon Resource Name (ARN) for the IAM role that was set as default for the cluster when the cluster was created.
	DefaultIamRoleArn pulumix.Input[*string]
	// A list of IAM Role ARNs to associate with the cluster. A Maximum of 10 can be associated to the cluster at any time.
	IamRoleArns pulumix.Input[[]string]
}

func (ClusterIamRolesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterIamRolesArgs)(nil)).Elem()
}

type ClusterIamRolesOutput struct{ *pulumi.OutputState }

func (ClusterIamRolesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIamRoles)(nil)).Elem()
}

func (o ClusterIamRolesOutput) ToClusterIamRolesOutput() ClusterIamRolesOutput {
	return o
}

func (o ClusterIamRolesOutput) ToClusterIamRolesOutputWithContext(ctx context.Context) ClusterIamRolesOutput {
	return o
}

func (o ClusterIamRolesOutput) ToOutput(ctx context.Context) pulumix.Output[ClusterIamRoles] {
	return pulumix.Output[ClusterIamRoles]{
		OutputState: o.OutputState,
	}
}

// The name of the Redshift Cluster IAM Roles.
func (o ClusterIamRolesOutput) ClusterIdentifier() pulumix.Output[string] {
	value := pulumix.Apply[ClusterIamRoles](o, func(v ClusterIamRoles) pulumix.Output[string] { return v.ClusterIdentifier })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The Amazon Resource Name (ARN) for the IAM role that was set as default for the cluster when the cluster was created.
func (o ClusterIamRolesOutput) DefaultIamRoleArn() pulumix.Output[string] {
	value := pulumix.Apply[ClusterIamRoles](o, func(v ClusterIamRoles) pulumix.Output[string] { return v.DefaultIamRoleArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A list of IAM Role ARNs to associate with the cluster. A Maximum of 10 can be associated to the cluster at any time.
func (o ClusterIamRolesOutput) IamRoleArns() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[ClusterIamRoles](o, func(v ClusterIamRoles) pulumix.ArrayOutput[string] { return v.IamRoleArns })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(ClusterIamRolesOutput{})
}
