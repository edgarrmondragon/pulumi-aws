// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package s3control

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a resource to manage an S3 Control Bucket.
//
// > This functionality is for managing [S3 on Outposts](https://docs.aws.amazon.com/AmazonS3/latest/dev/S3onOutposts.html). To manage S3 Buckets in an AWS Partition, see the `s3.BucketV2` resource.
type Bucket struct {
	pulumi.CustomResourceState

	// Amazon Resource Name (ARN) of the bucket.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// Name of the bucket.
	Bucket pulumix.Output[string] `pulumi:"bucket"`
	// UTC creation date in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8).
	CreationDate pulumix.Output[string] `pulumi:"creationDate"`
	// Identifier of the Outpost to contain this bucket.
	OutpostId pulumix.Output[string] `pulumi:"outpostId"`
	// Boolean whether Public Access Block is enabled.
	PublicAccessBlockEnabled pulumix.Output[bool] `pulumi:"publicAccessBlockEnabled"`
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
}

// NewBucket registers a new resource with the given unique name, arguments, and options.
func NewBucket(ctx *pulumi.Context,
	name string, args *BucketArgs, opts ...pulumi.ResourceOption) (*Bucket, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Bucket == nil {
		return nil, errors.New("invalid value for required argument 'Bucket'")
	}
	if args.OutpostId == nil {
		return nil, errors.New("invalid value for required argument 'OutpostId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Bucket
	err := ctx.RegisterResource("aws:s3control/bucket:Bucket", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBucket gets an existing Bucket resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBucket(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BucketState, opts ...pulumi.ResourceOption) (*Bucket, error) {
	var resource Bucket
	err := ctx.ReadResource("aws:s3control/bucket:Bucket", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Bucket resources.
type bucketState struct {
	// Amazon Resource Name (ARN) of the bucket.
	Arn *string `pulumi:"arn"`
	// Name of the bucket.
	Bucket *string `pulumi:"bucket"`
	// UTC creation date in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8).
	CreationDate *string `pulumi:"creationDate"`
	// Identifier of the Outpost to contain this bucket.
	OutpostId *string `pulumi:"outpostId"`
	// Boolean whether Public Access Block is enabled.
	PublicAccessBlockEnabled *bool `pulumi:"publicAccessBlockEnabled"`
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type BucketState struct {
	// Amazon Resource Name (ARN) of the bucket.
	Arn pulumix.Input[*string]
	// Name of the bucket.
	Bucket pulumix.Input[*string]
	// UTC creation date in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8).
	CreationDate pulumix.Input[*string]
	// Identifier of the Outpost to contain this bucket.
	OutpostId pulumix.Input[*string]
	// Boolean whether Public Access Block is enabled.
	PublicAccessBlockEnabled pulumix.Input[*bool]
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
}

func (BucketState) ElementType() reflect.Type {
	return reflect.TypeOf((*bucketState)(nil)).Elem()
}

type bucketArgs struct {
	// Name of the bucket.
	Bucket string `pulumi:"bucket"`
	// Identifier of the Outpost to contain this bucket.
	OutpostId string `pulumi:"outpostId"`
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Bucket resource.
type BucketArgs struct {
	// Name of the bucket.
	Bucket pulumix.Input[string]
	// Identifier of the Outpost to contain this bucket.
	OutpostId pulumix.Input[string]
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (BucketArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bucketArgs)(nil)).Elem()
}

type BucketOutput struct{ *pulumi.OutputState }

func (BucketOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Bucket)(nil)).Elem()
}

func (o BucketOutput) ToBucketOutput() BucketOutput {
	return o
}

func (o BucketOutput) ToBucketOutputWithContext(ctx context.Context) BucketOutput {
	return o
}

func (o BucketOutput) ToOutput(ctx context.Context) pulumix.Output[Bucket] {
	return pulumix.Output[Bucket]{
		OutputState: o.OutputState,
	}
}

// Amazon Resource Name (ARN) of the bucket.
func (o BucketOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Bucket](o, func(v Bucket) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Name of the bucket.
func (o BucketOutput) Bucket() pulumix.Output[string] {
	value := pulumix.Apply[Bucket](o, func(v Bucket) pulumix.Output[string] { return v.Bucket })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// UTC creation date in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8).
func (o BucketOutput) CreationDate() pulumix.Output[string] {
	value := pulumix.Apply[Bucket](o, func(v Bucket) pulumix.Output[string] { return v.CreationDate })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Identifier of the Outpost to contain this bucket.
func (o BucketOutput) OutpostId() pulumix.Output[string] {
	value := pulumix.Apply[Bucket](o, func(v Bucket) pulumix.Output[string] { return v.OutpostId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Boolean whether Public Access Block is enabled.
func (o BucketOutput) PublicAccessBlockEnabled() pulumix.Output[bool] {
	value := pulumix.Apply[Bucket](o, func(v Bucket) pulumix.Output[bool] { return v.PublicAccessBlockEnabled })
	return pulumix.Flatten[bool, pulumix.Output[bool]](value)
}

// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o BucketOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Bucket](o, func(v Bucket) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o BucketOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[Bucket](o, func(v Bucket) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(BucketOutput{})
}
