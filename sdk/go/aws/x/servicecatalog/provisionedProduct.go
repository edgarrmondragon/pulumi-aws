// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package servicecatalog

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// This resource provisions and manages a Service Catalog provisioned product.
//
// A provisioned product is a resourced instance of a product. For example, provisioning a product based on a CloudFormation template launches a CloudFormation stack and its underlying resources.
//
// Like this resource, the `awsServicecatalogRecord` data source also provides information about a provisioned product. Although a Service Catalog record provides some overlapping information with this resource, a record is tied to a provisioned product event, such as provisioning, termination, and updating.
//
// > **Tip:** If you include conflicted keys as tags, AWS will report an error, "Parameter validation failed: Missing required parameter in Tags[N]:Value".
//
// > **Tip:** A "provisioning artifact" is also referred to as a "version." A "distributor" is also referred to as a "vendor."
type ProvisionedProduct struct {
	pulumi.CustomResourceState

	// Language code. Valid values: `en` (English), `jp` (Japanese), `zh` (Chinese). Default value is `en`.
	AcceptLanguage pulumix.Output[*string] `pulumi:"acceptLanguage"`
	// ARN of the provisioned product.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// Set of CloudWatch dashboards that were created when provisioning the product.
	CloudwatchDashboardNames pulumix.ArrayOutput[string] `pulumi:"cloudwatchDashboardNames"`
	// Time when the provisioned product was created.
	CreatedTime pulumix.Output[string] `pulumi:"createdTime"`
	// _Only applies to deleting._ If set to `true`, AWS Service Catalog stops managing the specified provisioned product even if it cannot delete the underlying resources. The default value is `false`.
	IgnoreErrors pulumix.Output[*bool] `pulumi:"ignoreErrors"`
	// Record identifier of the last request performed on this provisioned product of the following types: `ProvisionedProduct`, `UpdateProvisionedProduct`, `ExecuteProvisionedProductPlan`, `TerminateProvisionedProduct`.
	LastProvisioningRecordId pulumix.Output[string] `pulumi:"lastProvisioningRecordId"`
	// Record identifier of the last request performed on this provisioned product.
	LastRecordId pulumix.Output[string] `pulumi:"lastRecordId"`
	// Record identifier of the last successful request performed on this provisioned product of the following types: `ProvisionedProduct`, `UpdateProvisionedProduct`, `ExecuteProvisionedProductPlan`, `TerminateProvisionedProduct`.
	LastSuccessfulProvisioningRecordId pulumix.Output[string] `pulumi:"lastSuccessfulProvisioningRecordId"`
	// ARN of the launch role associated with the provisioned product.
	LaunchRoleArn pulumix.Output[string] `pulumi:"launchRoleArn"`
	// User-friendly name of the provisioned product.
	//
	// The following arguments are optional:
	Name pulumix.Output[string] `pulumi:"name"`
	// Passed to CloudFormation. The SNS topic ARNs to which to publish stack-related events.
	NotificationArns pulumix.ArrayOutput[string] `pulumi:"notificationArns"`
	// The set of outputs for the product created.
	Outputs pulumix.GArrayOutput[ProvisionedProductOutputType, ProvisionedProductOutputTypeOutput] `pulumi:"outputs"`
	// Path identifier of the product. This value is optional if the product has a default path, and required if the product has more than one path. To list the paths for a product, use `servicecatalog.getLaunchPaths`. When required, you must provide `pathId` or `pathName`, but not both.
	PathId pulumix.Output[string] `pulumi:"pathId"`
	// Name of the path. You must provide `pathId` or `pathName`, but not both.
	PathName pulumix.Output[*string] `pulumi:"pathName"`
	// Product identifier. For example, `prod-abcdzk7xy33qa`. You must provide `productId` or `productName`, but not both.
	ProductId pulumix.Output[string] `pulumi:"productId"`
	// Name of the product. You must provide `productId` or `productName`, but not both.
	ProductName pulumix.Output[*string] `pulumi:"productName"`
	// Identifier of the provisioning artifact. For example, `pa-4abcdjnxjj6ne`. You must provide the `provisioningArtifactId` or `provisioningArtifactName`, but not both.
	ProvisioningArtifactId pulumix.Output[string] `pulumi:"provisioningArtifactId"`
	// Name of the provisioning artifact. You must provide the `provisioningArtifactId` or `provisioningArtifactName`, but not both.
	ProvisioningArtifactName pulumix.Output[*string] `pulumi:"provisioningArtifactName"`
	// Configuration block with parameters specified by the administrator that are required for provisioning the product. See details below.
	ProvisioningParameters pulumix.GArrayOutput[ProvisionedProductProvisioningParameter, ProvisionedProductProvisioningParameterOutput] `pulumi:"provisioningParameters"`
	// _Only applies to deleting._ Whether to delete the Service Catalog provisioned product but leave the CloudFormation stack, stack set, or the underlying resources of the deleted provisioned product. The default value is `false`.
	RetainPhysicalResources pulumix.Output[*bool] `pulumi:"retainPhysicalResources"`
	// Configuration block with information about the provisioning preferences for a stack set. See details below.
	StackSetProvisioningPreferences pulumix.GPtrOutput[ProvisionedProductStackSetProvisioningPreferences, ProvisionedProductStackSetProvisioningPreferencesOutput] `pulumi:"stackSetProvisioningPreferences"`
	// Current status of the provisioned product. See meanings below.
	Status pulumix.Output[string] `pulumi:"status"`
	// Current status message of the provisioned product.
	StatusMessage pulumix.Output[string] `pulumi:"statusMessage"`
	// Tags to apply to the provisioned product. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// Type of provisioned product. Valid values are `CFN_STACK` and `CFN_STACKSET`.
	Type pulumix.Output[string] `pulumi:"type"`
}

// NewProvisionedProduct registers a new resource with the given unique name, arguments, and options.
func NewProvisionedProduct(ctx *pulumi.Context,
	name string, args *ProvisionedProductArgs, opts ...pulumi.ResourceOption) (*ProvisionedProduct, error) {
	if args == nil {
		args = &ProvisionedProductArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ProvisionedProduct
	err := ctx.RegisterResource("aws:servicecatalog/provisionedProduct:ProvisionedProduct", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProvisionedProduct gets an existing ProvisionedProduct resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProvisionedProduct(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProvisionedProductState, opts ...pulumi.ResourceOption) (*ProvisionedProduct, error) {
	var resource ProvisionedProduct
	err := ctx.ReadResource("aws:servicecatalog/provisionedProduct:ProvisionedProduct", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ProvisionedProduct resources.
type provisionedProductState struct {
	// Language code. Valid values: `en` (English), `jp` (Japanese), `zh` (Chinese). Default value is `en`.
	AcceptLanguage *string `pulumi:"acceptLanguage"`
	// ARN of the provisioned product.
	Arn *string `pulumi:"arn"`
	// Set of CloudWatch dashboards that were created when provisioning the product.
	CloudwatchDashboardNames []string `pulumi:"cloudwatchDashboardNames"`
	// Time when the provisioned product was created.
	CreatedTime *string `pulumi:"createdTime"`
	// _Only applies to deleting._ If set to `true`, AWS Service Catalog stops managing the specified provisioned product even if it cannot delete the underlying resources. The default value is `false`.
	IgnoreErrors *bool `pulumi:"ignoreErrors"`
	// Record identifier of the last request performed on this provisioned product of the following types: `ProvisionedProduct`, `UpdateProvisionedProduct`, `ExecuteProvisionedProductPlan`, `TerminateProvisionedProduct`.
	LastProvisioningRecordId *string `pulumi:"lastProvisioningRecordId"`
	// Record identifier of the last request performed on this provisioned product.
	LastRecordId *string `pulumi:"lastRecordId"`
	// Record identifier of the last successful request performed on this provisioned product of the following types: `ProvisionedProduct`, `UpdateProvisionedProduct`, `ExecuteProvisionedProductPlan`, `TerminateProvisionedProduct`.
	LastSuccessfulProvisioningRecordId *string `pulumi:"lastSuccessfulProvisioningRecordId"`
	// ARN of the launch role associated with the provisioned product.
	LaunchRoleArn *string `pulumi:"launchRoleArn"`
	// User-friendly name of the provisioned product.
	//
	// The following arguments are optional:
	Name *string `pulumi:"name"`
	// Passed to CloudFormation. The SNS topic ARNs to which to publish stack-related events.
	NotificationArns []string `pulumi:"notificationArns"`
	// The set of outputs for the product created.
	Outputs []ProvisionedProductOutputType `pulumi:"outputs"`
	// Path identifier of the product. This value is optional if the product has a default path, and required if the product has more than one path. To list the paths for a product, use `servicecatalog.getLaunchPaths`. When required, you must provide `pathId` or `pathName`, but not both.
	PathId *string `pulumi:"pathId"`
	// Name of the path. You must provide `pathId` or `pathName`, but not both.
	PathName *string `pulumi:"pathName"`
	// Product identifier. For example, `prod-abcdzk7xy33qa`. You must provide `productId` or `productName`, but not both.
	ProductId *string `pulumi:"productId"`
	// Name of the product. You must provide `productId` or `productName`, but not both.
	ProductName *string `pulumi:"productName"`
	// Identifier of the provisioning artifact. For example, `pa-4abcdjnxjj6ne`. You must provide the `provisioningArtifactId` or `provisioningArtifactName`, but not both.
	ProvisioningArtifactId *string `pulumi:"provisioningArtifactId"`
	// Name of the provisioning artifact. You must provide the `provisioningArtifactId` or `provisioningArtifactName`, but not both.
	ProvisioningArtifactName *string `pulumi:"provisioningArtifactName"`
	// Configuration block with parameters specified by the administrator that are required for provisioning the product. See details below.
	ProvisioningParameters []ProvisionedProductProvisioningParameter `pulumi:"provisioningParameters"`
	// _Only applies to deleting._ Whether to delete the Service Catalog provisioned product but leave the CloudFormation stack, stack set, or the underlying resources of the deleted provisioned product. The default value is `false`.
	RetainPhysicalResources *bool `pulumi:"retainPhysicalResources"`
	// Configuration block with information about the provisioning preferences for a stack set. See details below.
	StackSetProvisioningPreferences *ProvisionedProductStackSetProvisioningPreferences `pulumi:"stackSetProvisioningPreferences"`
	// Current status of the provisioned product. See meanings below.
	Status *string `pulumi:"status"`
	// Current status message of the provisioned product.
	StatusMessage *string `pulumi:"statusMessage"`
	// Tags to apply to the provisioned product. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// Type of provisioned product. Valid values are `CFN_STACK` and `CFN_STACKSET`.
	Type *string `pulumi:"type"`
}

type ProvisionedProductState struct {
	// Language code. Valid values: `en` (English), `jp` (Japanese), `zh` (Chinese). Default value is `en`.
	AcceptLanguage pulumix.Input[*string]
	// ARN of the provisioned product.
	Arn pulumix.Input[*string]
	// Set of CloudWatch dashboards that were created when provisioning the product.
	CloudwatchDashboardNames pulumix.Input[[]string]
	// Time when the provisioned product was created.
	CreatedTime pulumix.Input[*string]
	// _Only applies to deleting._ If set to `true`, AWS Service Catalog stops managing the specified provisioned product even if it cannot delete the underlying resources. The default value is `false`.
	IgnoreErrors pulumix.Input[*bool]
	// Record identifier of the last request performed on this provisioned product of the following types: `ProvisionedProduct`, `UpdateProvisionedProduct`, `ExecuteProvisionedProductPlan`, `TerminateProvisionedProduct`.
	LastProvisioningRecordId pulumix.Input[*string]
	// Record identifier of the last request performed on this provisioned product.
	LastRecordId pulumix.Input[*string]
	// Record identifier of the last successful request performed on this provisioned product of the following types: `ProvisionedProduct`, `UpdateProvisionedProduct`, `ExecuteProvisionedProductPlan`, `TerminateProvisionedProduct`.
	LastSuccessfulProvisioningRecordId pulumix.Input[*string]
	// ARN of the launch role associated with the provisioned product.
	LaunchRoleArn pulumix.Input[*string]
	// User-friendly name of the provisioned product.
	//
	// The following arguments are optional:
	Name pulumix.Input[*string]
	// Passed to CloudFormation. The SNS topic ARNs to which to publish stack-related events.
	NotificationArns pulumix.Input[[]string]
	// The set of outputs for the product created.
	Outputs pulumix.Input[[]*ProvisionedProductOutputTypeArgs]
	// Path identifier of the product. This value is optional if the product has a default path, and required if the product has more than one path. To list the paths for a product, use `servicecatalog.getLaunchPaths`. When required, you must provide `pathId` or `pathName`, but not both.
	PathId pulumix.Input[*string]
	// Name of the path. You must provide `pathId` or `pathName`, but not both.
	PathName pulumix.Input[*string]
	// Product identifier. For example, `prod-abcdzk7xy33qa`. You must provide `productId` or `productName`, but not both.
	ProductId pulumix.Input[*string]
	// Name of the product. You must provide `productId` or `productName`, but not both.
	ProductName pulumix.Input[*string]
	// Identifier of the provisioning artifact. For example, `pa-4abcdjnxjj6ne`. You must provide the `provisioningArtifactId` or `provisioningArtifactName`, but not both.
	ProvisioningArtifactId pulumix.Input[*string]
	// Name of the provisioning artifact. You must provide the `provisioningArtifactId` or `provisioningArtifactName`, but not both.
	ProvisioningArtifactName pulumix.Input[*string]
	// Configuration block with parameters specified by the administrator that are required for provisioning the product. See details below.
	ProvisioningParameters pulumix.Input[[]*ProvisionedProductProvisioningParameterArgs]
	// _Only applies to deleting._ Whether to delete the Service Catalog provisioned product but leave the CloudFormation stack, stack set, or the underlying resources of the deleted provisioned product. The default value is `false`.
	RetainPhysicalResources pulumix.Input[*bool]
	// Configuration block with information about the provisioning preferences for a stack set. See details below.
	StackSetProvisioningPreferences pulumix.Input[*ProvisionedProductStackSetProvisioningPreferencesArgs]
	// Current status of the provisioned product. See meanings below.
	Status pulumix.Input[*string]
	// Current status message of the provisioned product.
	StatusMessage pulumix.Input[*string]
	// Tags to apply to the provisioned product. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// Type of provisioned product. Valid values are `CFN_STACK` and `CFN_STACKSET`.
	Type pulumix.Input[*string]
}

func (ProvisionedProductState) ElementType() reflect.Type {
	return reflect.TypeOf((*provisionedProductState)(nil)).Elem()
}

type provisionedProductArgs struct {
	// Language code. Valid values: `en` (English), `jp` (Japanese), `zh` (Chinese). Default value is `en`.
	AcceptLanguage *string `pulumi:"acceptLanguage"`
	// _Only applies to deleting._ If set to `true`, AWS Service Catalog stops managing the specified provisioned product even if it cannot delete the underlying resources. The default value is `false`.
	IgnoreErrors *bool `pulumi:"ignoreErrors"`
	// User-friendly name of the provisioned product.
	//
	// The following arguments are optional:
	Name *string `pulumi:"name"`
	// Passed to CloudFormation. The SNS topic ARNs to which to publish stack-related events.
	NotificationArns []string `pulumi:"notificationArns"`
	// Path identifier of the product. This value is optional if the product has a default path, and required if the product has more than one path. To list the paths for a product, use `servicecatalog.getLaunchPaths`. When required, you must provide `pathId` or `pathName`, but not both.
	PathId *string `pulumi:"pathId"`
	// Name of the path. You must provide `pathId` or `pathName`, but not both.
	PathName *string `pulumi:"pathName"`
	// Product identifier. For example, `prod-abcdzk7xy33qa`. You must provide `productId` or `productName`, but not both.
	ProductId *string `pulumi:"productId"`
	// Name of the product. You must provide `productId` or `productName`, but not both.
	ProductName *string `pulumi:"productName"`
	// Identifier of the provisioning artifact. For example, `pa-4abcdjnxjj6ne`. You must provide the `provisioningArtifactId` or `provisioningArtifactName`, but not both.
	ProvisioningArtifactId *string `pulumi:"provisioningArtifactId"`
	// Name of the provisioning artifact. You must provide the `provisioningArtifactId` or `provisioningArtifactName`, but not both.
	ProvisioningArtifactName *string `pulumi:"provisioningArtifactName"`
	// Configuration block with parameters specified by the administrator that are required for provisioning the product. See details below.
	ProvisioningParameters []ProvisionedProductProvisioningParameter `pulumi:"provisioningParameters"`
	// _Only applies to deleting._ Whether to delete the Service Catalog provisioned product but leave the CloudFormation stack, stack set, or the underlying resources of the deleted provisioned product. The default value is `false`.
	RetainPhysicalResources *bool `pulumi:"retainPhysicalResources"`
	// Configuration block with information about the provisioning preferences for a stack set. See details below.
	StackSetProvisioningPreferences *ProvisionedProductStackSetProvisioningPreferences `pulumi:"stackSetProvisioningPreferences"`
	// Tags to apply to the provisioned product. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a ProvisionedProduct resource.
type ProvisionedProductArgs struct {
	// Language code. Valid values: `en` (English), `jp` (Japanese), `zh` (Chinese). Default value is `en`.
	AcceptLanguage pulumix.Input[*string]
	// _Only applies to deleting._ If set to `true`, AWS Service Catalog stops managing the specified provisioned product even if it cannot delete the underlying resources. The default value is `false`.
	IgnoreErrors pulumix.Input[*bool]
	// User-friendly name of the provisioned product.
	//
	// The following arguments are optional:
	Name pulumix.Input[*string]
	// Passed to CloudFormation. The SNS topic ARNs to which to publish stack-related events.
	NotificationArns pulumix.Input[[]string]
	// Path identifier of the product. This value is optional if the product has a default path, and required if the product has more than one path. To list the paths for a product, use `servicecatalog.getLaunchPaths`. When required, you must provide `pathId` or `pathName`, but not both.
	PathId pulumix.Input[*string]
	// Name of the path. You must provide `pathId` or `pathName`, but not both.
	PathName pulumix.Input[*string]
	// Product identifier. For example, `prod-abcdzk7xy33qa`. You must provide `productId` or `productName`, but not both.
	ProductId pulumix.Input[*string]
	// Name of the product. You must provide `productId` or `productName`, but not both.
	ProductName pulumix.Input[*string]
	// Identifier of the provisioning artifact. For example, `pa-4abcdjnxjj6ne`. You must provide the `provisioningArtifactId` or `provisioningArtifactName`, but not both.
	ProvisioningArtifactId pulumix.Input[*string]
	// Name of the provisioning artifact. You must provide the `provisioningArtifactId` or `provisioningArtifactName`, but not both.
	ProvisioningArtifactName pulumix.Input[*string]
	// Configuration block with parameters specified by the administrator that are required for provisioning the product. See details below.
	ProvisioningParameters pulumix.Input[[]*ProvisionedProductProvisioningParameterArgs]
	// _Only applies to deleting._ Whether to delete the Service Catalog provisioned product but leave the CloudFormation stack, stack set, or the underlying resources of the deleted provisioned product. The default value is `false`.
	RetainPhysicalResources pulumix.Input[*bool]
	// Configuration block with information about the provisioning preferences for a stack set. See details below.
	StackSetProvisioningPreferences pulumix.Input[*ProvisionedProductStackSetProvisioningPreferencesArgs]
	// Tags to apply to the provisioned product. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (ProvisionedProductArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*provisionedProductArgs)(nil)).Elem()
}

type ProvisionedProductOutput struct{ *pulumi.OutputState }

func (ProvisionedProductOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProvisionedProduct)(nil)).Elem()
}

func (o ProvisionedProductOutput) ToProvisionedProductOutput() ProvisionedProductOutput {
	return o
}

func (o ProvisionedProductOutput) ToProvisionedProductOutputWithContext(ctx context.Context) ProvisionedProductOutput {
	return o
}

func (o ProvisionedProductOutput) ToOutput(ctx context.Context) pulumix.Output[ProvisionedProduct] {
	return pulumix.Output[ProvisionedProduct]{
		OutputState: o.OutputState,
	}
}

// Language code. Valid values: `en` (English), `jp` (Japanese), `zh` (Chinese). Default value is `en`.
func (o ProvisionedProductOutput) AcceptLanguage() pulumix.Output[*string] {
	value := pulumix.Apply[ProvisionedProduct](o, func(v ProvisionedProduct) pulumix.Output[*string] { return v.AcceptLanguage })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// ARN of the provisioned product.
func (o ProvisionedProductOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[ProvisionedProduct](o, func(v ProvisionedProduct) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Set of CloudWatch dashboards that were created when provisioning the product.
func (o ProvisionedProductOutput) CloudwatchDashboardNames() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[ProvisionedProduct](o, func(v ProvisionedProduct) pulumix.ArrayOutput[string] { return v.CloudwatchDashboardNames })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// Time when the provisioned product was created.
func (o ProvisionedProductOutput) CreatedTime() pulumix.Output[string] {
	value := pulumix.Apply[ProvisionedProduct](o, func(v ProvisionedProduct) pulumix.Output[string] { return v.CreatedTime })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// _Only applies to deleting._ If set to `true`, AWS Service Catalog stops managing the specified provisioned product even if it cannot delete the underlying resources. The default value is `false`.
func (o ProvisionedProductOutput) IgnoreErrors() pulumix.Output[*bool] {
	value := pulumix.Apply[ProvisionedProduct](o, func(v ProvisionedProduct) pulumix.Output[*bool] { return v.IgnoreErrors })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// Record identifier of the last request performed on this provisioned product of the following types: `ProvisionedProduct`, `UpdateProvisionedProduct`, `ExecuteProvisionedProductPlan`, `TerminateProvisionedProduct`.
func (o ProvisionedProductOutput) LastProvisioningRecordId() pulumix.Output[string] {
	value := pulumix.Apply[ProvisionedProduct](o, func(v ProvisionedProduct) pulumix.Output[string] { return v.LastProvisioningRecordId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Record identifier of the last request performed on this provisioned product.
func (o ProvisionedProductOutput) LastRecordId() pulumix.Output[string] {
	value := pulumix.Apply[ProvisionedProduct](o, func(v ProvisionedProduct) pulumix.Output[string] { return v.LastRecordId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Record identifier of the last successful request performed on this provisioned product of the following types: `ProvisionedProduct`, `UpdateProvisionedProduct`, `ExecuteProvisionedProductPlan`, `TerminateProvisionedProduct`.
func (o ProvisionedProductOutput) LastSuccessfulProvisioningRecordId() pulumix.Output[string] {
	value := pulumix.Apply[ProvisionedProduct](o, func(v ProvisionedProduct) pulumix.Output[string] { return v.LastSuccessfulProvisioningRecordId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// ARN of the launch role associated with the provisioned product.
func (o ProvisionedProductOutput) LaunchRoleArn() pulumix.Output[string] {
	value := pulumix.Apply[ProvisionedProduct](o, func(v ProvisionedProduct) pulumix.Output[string] { return v.LaunchRoleArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// User-friendly name of the provisioned product.
//
// The following arguments are optional:
func (o ProvisionedProductOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[ProvisionedProduct](o, func(v ProvisionedProduct) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Passed to CloudFormation. The SNS topic ARNs to which to publish stack-related events.
func (o ProvisionedProductOutput) NotificationArns() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[ProvisionedProduct](o, func(v ProvisionedProduct) pulumix.ArrayOutput[string] { return v.NotificationArns })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// The set of outputs for the product created.
func (o ProvisionedProductOutput) Outputs() pulumix.GArrayOutput[ProvisionedProductOutputType, ProvisionedProductOutputTypeOutput] {
	value := pulumix.Apply[ProvisionedProduct](o, func(v ProvisionedProduct) pulumix.GArrayOutput[ProvisionedProductOutputType, ProvisionedProductOutputTypeOutput] {
		return v.Outputs
	})
	unwrapped := pulumix.Flatten[[]ProvisionedProductOutputType, pulumix.GArrayOutput[ProvisionedProductOutputType, ProvisionedProductOutputTypeOutput]](value)
	return pulumix.GArrayOutput[ProvisionedProductOutputType, ProvisionedProductOutputTypeOutput]{OutputState: unwrapped.OutputState}
}

// Path identifier of the product. This value is optional if the product has a default path, and required if the product has more than one path. To list the paths for a product, use `servicecatalog.getLaunchPaths`. When required, you must provide `pathId` or `pathName`, but not both.
func (o ProvisionedProductOutput) PathId() pulumix.Output[string] {
	value := pulumix.Apply[ProvisionedProduct](o, func(v ProvisionedProduct) pulumix.Output[string] { return v.PathId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Name of the path. You must provide `pathId` or `pathName`, but not both.
func (o ProvisionedProductOutput) PathName() pulumix.Output[*string] {
	value := pulumix.Apply[ProvisionedProduct](o, func(v ProvisionedProduct) pulumix.Output[*string] { return v.PathName })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Product identifier. For example, `prod-abcdzk7xy33qa`. You must provide `productId` or `productName`, but not both.
func (o ProvisionedProductOutput) ProductId() pulumix.Output[string] {
	value := pulumix.Apply[ProvisionedProduct](o, func(v ProvisionedProduct) pulumix.Output[string] { return v.ProductId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Name of the product. You must provide `productId` or `productName`, but not both.
func (o ProvisionedProductOutput) ProductName() pulumix.Output[*string] {
	value := pulumix.Apply[ProvisionedProduct](o, func(v ProvisionedProduct) pulumix.Output[*string] { return v.ProductName })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Identifier of the provisioning artifact. For example, `pa-4abcdjnxjj6ne`. You must provide the `provisioningArtifactId` or `provisioningArtifactName`, but not both.
func (o ProvisionedProductOutput) ProvisioningArtifactId() pulumix.Output[string] {
	value := pulumix.Apply[ProvisionedProduct](o, func(v ProvisionedProduct) pulumix.Output[string] { return v.ProvisioningArtifactId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Name of the provisioning artifact. You must provide the `provisioningArtifactId` or `provisioningArtifactName`, but not both.
func (o ProvisionedProductOutput) ProvisioningArtifactName() pulumix.Output[*string] {
	value := pulumix.Apply[ProvisionedProduct](o, func(v ProvisionedProduct) pulumix.Output[*string] { return v.ProvisioningArtifactName })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Configuration block with parameters specified by the administrator that are required for provisioning the product. See details below.
func (o ProvisionedProductOutput) ProvisioningParameters() pulumix.GArrayOutput[ProvisionedProductProvisioningParameter, ProvisionedProductProvisioningParameterOutput] {
	value := pulumix.Apply[ProvisionedProduct](o, func(v ProvisionedProduct) pulumix.GArrayOutput[ProvisionedProductProvisioningParameter, ProvisionedProductProvisioningParameterOutput] {
		return v.ProvisioningParameters
	})
	unwrapped := pulumix.Flatten[[]ProvisionedProductProvisioningParameter, pulumix.GArrayOutput[ProvisionedProductProvisioningParameter, ProvisionedProductProvisioningParameterOutput]](value)
	return pulumix.GArrayOutput[ProvisionedProductProvisioningParameter, ProvisionedProductProvisioningParameterOutput]{OutputState: unwrapped.OutputState}
}

// _Only applies to deleting._ Whether to delete the Service Catalog provisioned product but leave the CloudFormation stack, stack set, or the underlying resources of the deleted provisioned product. The default value is `false`.
func (o ProvisionedProductOutput) RetainPhysicalResources() pulumix.Output[*bool] {
	value := pulumix.Apply[ProvisionedProduct](o, func(v ProvisionedProduct) pulumix.Output[*bool] { return v.RetainPhysicalResources })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// Configuration block with information about the provisioning preferences for a stack set. See details below.
func (o ProvisionedProductOutput) StackSetProvisioningPreferences() pulumix.GPtrOutput[ProvisionedProductStackSetProvisioningPreferences, ProvisionedProductStackSetProvisioningPreferencesOutput] {
	value := pulumix.Apply[ProvisionedProduct](o, func(v ProvisionedProduct) pulumix.GPtrOutput[ProvisionedProductStackSetProvisioningPreferences, ProvisionedProductStackSetProvisioningPreferencesOutput] {
		return v.StackSetProvisioningPreferences
	})
	unwrapped := pulumix.Flatten[*ProvisionedProductStackSetProvisioningPreferences, pulumix.GPtrOutput[ProvisionedProductStackSetProvisioningPreferences, ProvisionedProductStackSetProvisioningPreferencesOutput]](value)
	return pulumix.GPtrOutput[ProvisionedProductStackSetProvisioningPreferences, ProvisionedProductStackSetProvisioningPreferencesOutput]{OutputState: unwrapped.OutputState}
}

// Current status of the provisioned product. See meanings below.
func (o ProvisionedProductOutput) Status() pulumix.Output[string] {
	value := pulumix.Apply[ProvisionedProduct](o, func(v ProvisionedProduct) pulumix.Output[string] { return v.Status })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Current status message of the provisioned product.
func (o ProvisionedProductOutput) StatusMessage() pulumix.Output[string] {
	value := pulumix.Apply[ProvisionedProduct](o, func(v ProvisionedProduct) pulumix.Output[string] { return v.StatusMessage })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Tags to apply to the provisioned product. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o ProvisionedProductOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[ProvisionedProduct](o, func(v ProvisionedProduct) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o ProvisionedProductOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[ProvisionedProduct](o, func(v ProvisionedProduct) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Type of provisioned product. Valid values are `CFN_STACK` and `CFN_STACKSET`.
func (o ProvisionedProductOutput) Type() pulumix.Output[string] {
	value := pulumix.Apply[ProvisionedProduct](o, func(v ProvisionedProduct) pulumix.Output[string] { return v.Type })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(ProvisionedProductOutput{})
}
