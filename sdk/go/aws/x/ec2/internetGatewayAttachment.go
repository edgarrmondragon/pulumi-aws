// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a resource to create a VPC Internet Gateway Attachment.
type InternetGatewayAttachment struct {
	pulumi.CustomResourceState

	// The ID of the internet gateway.
	InternetGatewayId pulumix.Output[string] `pulumi:"internetGatewayId"`
	// The ID of the VPC.
	VpcId pulumix.Output[string] `pulumi:"vpcId"`
}

// NewInternetGatewayAttachment registers a new resource with the given unique name, arguments, and options.
func NewInternetGatewayAttachment(ctx *pulumi.Context,
	name string, args *InternetGatewayAttachmentArgs, opts ...pulumi.ResourceOption) (*InternetGatewayAttachment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InternetGatewayId == nil {
		return nil, errors.New("invalid value for required argument 'InternetGatewayId'")
	}
	if args.VpcId == nil {
		return nil, errors.New("invalid value for required argument 'VpcId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource InternetGatewayAttachment
	err := ctx.RegisterResource("aws:ec2/internetGatewayAttachment:InternetGatewayAttachment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInternetGatewayAttachment gets an existing InternetGatewayAttachment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInternetGatewayAttachment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InternetGatewayAttachmentState, opts ...pulumi.ResourceOption) (*InternetGatewayAttachment, error) {
	var resource InternetGatewayAttachment
	err := ctx.ReadResource("aws:ec2/internetGatewayAttachment:InternetGatewayAttachment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering InternetGatewayAttachment resources.
type internetGatewayAttachmentState struct {
	// The ID of the internet gateway.
	InternetGatewayId *string `pulumi:"internetGatewayId"`
	// The ID of the VPC.
	VpcId *string `pulumi:"vpcId"`
}

type InternetGatewayAttachmentState struct {
	// The ID of the internet gateway.
	InternetGatewayId pulumix.Input[*string]
	// The ID of the VPC.
	VpcId pulumix.Input[*string]
}

func (InternetGatewayAttachmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*internetGatewayAttachmentState)(nil)).Elem()
}

type internetGatewayAttachmentArgs struct {
	// The ID of the internet gateway.
	InternetGatewayId string `pulumi:"internetGatewayId"`
	// The ID of the VPC.
	VpcId string `pulumi:"vpcId"`
}

// The set of arguments for constructing a InternetGatewayAttachment resource.
type InternetGatewayAttachmentArgs struct {
	// The ID of the internet gateway.
	InternetGatewayId pulumix.Input[string]
	// The ID of the VPC.
	VpcId pulumix.Input[string]
}

func (InternetGatewayAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*internetGatewayAttachmentArgs)(nil)).Elem()
}

type InternetGatewayAttachmentOutput struct{ *pulumi.OutputState }

func (InternetGatewayAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InternetGatewayAttachment)(nil)).Elem()
}

func (o InternetGatewayAttachmentOutput) ToInternetGatewayAttachmentOutput() InternetGatewayAttachmentOutput {
	return o
}

func (o InternetGatewayAttachmentOutput) ToInternetGatewayAttachmentOutputWithContext(ctx context.Context) InternetGatewayAttachmentOutput {
	return o
}

func (o InternetGatewayAttachmentOutput) ToOutput(ctx context.Context) pulumix.Output[InternetGatewayAttachment] {
	return pulumix.Output[InternetGatewayAttachment]{
		OutputState: o.OutputState,
	}
}

// The ID of the internet gateway.
func (o InternetGatewayAttachmentOutput) InternetGatewayId() pulumix.Output[string] {
	value := pulumix.Apply[InternetGatewayAttachment](o, func(v InternetGatewayAttachment) pulumix.Output[string] { return v.InternetGatewayId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The ID of the VPC.
func (o InternetGatewayAttachmentOutput) VpcId() pulumix.Output[string] {
	value := pulumix.Apply[InternetGatewayAttachment](o, func(v InternetGatewayAttachment) pulumix.Output[string] { return v.VpcId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(InternetGatewayAttachmentOutput{})
}
