// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package codecommit

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type TriggerTrigger struct {
	// The branches that will be included in the trigger configuration. If no branches are specified, the trigger will apply to all branches.
	Branches []string `pulumi:"branches"`
	// Any custom data associated with the trigger that will be included in the information sent to the target of the trigger.
	CustomData *string `pulumi:"customData"`
	// The ARN of the resource that is the target for a trigger. For example, the ARN of a topic in Amazon Simple Notification Service (SNS).
	DestinationArn string `pulumi:"destinationArn"`
	// The repository events that will cause the trigger to run actions in another service, such as sending a notification through Amazon Simple Notification Service (SNS). If no events are specified, the trigger will run for all repository events. Event types include: `all`, `updateReference`, `createReference`, `deleteReference`.
	Events []string `pulumi:"events"`
	// The name of the trigger.
	Name string `pulumi:"name"`
}

type TriggerTriggerArgs struct {
	// The branches that will be included in the trigger configuration. If no branches are specified, the trigger will apply to all branches.
	Branches pulumix.Input[[]string] `pulumi:"branches"`
	// Any custom data associated with the trigger that will be included in the information sent to the target of the trigger.
	CustomData pulumix.Input[*string] `pulumi:"customData"`
	// The ARN of the resource that is the target for a trigger. For example, the ARN of a topic in Amazon Simple Notification Service (SNS).
	DestinationArn pulumix.Input[string] `pulumi:"destinationArn"`
	// The repository events that will cause the trigger to run actions in another service, such as sending a notification through Amazon Simple Notification Service (SNS). If no events are specified, the trigger will run for all repository events. Event types include: `all`, `updateReference`, `createReference`, `deleteReference`.
	Events pulumix.Input[[]string] `pulumi:"events"`
	// The name of the trigger.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (TriggerTriggerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerTrigger)(nil)).Elem()
}

func (i TriggerTriggerArgs) ToTriggerTriggerOutput() TriggerTriggerOutput {
	return i.ToTriggerTriggerOutputWithContext(context.Background())
}

func (i TriggerTriggerArgs) ToTriggerTriggerOutputWithContext(ctx context.Context) TriggerTriggerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerTriggerOutput)
}

func (i *TriggerTriggerArgs) ToOutput(ctx context.Context) pulumix.Output[*TriggerTriggerArgs] {
	return pulumix.Val(i)
}

type TriggerTriggerOutput struct{ *pulumi.OutputState }

func (TriggerTriggerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerTrigger)(nil)).Elem()
}

func (o TriggerTriggerOutput) ToTriggerTriggerOutput() TriggerTriggerOutput {
	return o
}

func (o TriggerTriggerOutput) ToTriggerTriggerOutputWithContext(ctx context.Context) TriggerTriggerOutput {
	return o
}

func (o TriggerTriggerOutput) ToOutput(ctx context.Context) pulumix.Output[TriggerTrigger] {
	return pulumix.Output[TriggerTrigger]{
		OutputState: o.OutputState,
	}
}

// The branches that will be included in the trigger configuration. If no branches are specified, the trigger will apply to all branches.
func (o TriggerTriggerOutput) Branches() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[TriggerTrigger](o, func(v TriggerTrigger) []string { return v.Branches })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// Any custom data associated with the trigger that will be included in the information sent to the target of the trigger.
func (o TriggerTriggerOutput) CustomData() pulumix.Output[*string] {
	return pulumix.Apply[TriggerTrigger](o, func(v TriggerTrigger) *string { return v.CustomData })
}

// The ARN of the resource that is the target for a trigger. For example, the ARN of a topic in Amazon Simple Notification Service (SNS).
func (o TriggerTriggerOutput) DestinationArn() pulumix.Output[string] {
	return pulumix.Apply[TriggerTrigger](o, func(v TriggerTrigger) string { return v.DestinationArn })
}

// The repository events that will cause the trigger to run actions in another service, such as sending a notification through Amazon Simple Notification Service (SNS). If no events are specified, the trigger will run for all repository events. Event types include: `all`, `updateReference`, `createReference`, `deleteReference`.
func (o TriggerTriggerOutput) Events() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[TriggerTrigger](o, func(v TriggerTrigger) []string { return v.Events })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// The name of the trigger.
func (o TriggerTriggerOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[TriggerTrigger](o, func(v TriggerTrigger) string { return v.Name })
}

func init() {
	pulumi.RegisterOutputType(TriggerTriggerOutput{})
}
