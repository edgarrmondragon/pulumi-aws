// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package emrserverless

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type ApplicationAutoStartConfiguration struct {
	// Enables the application to automatically start on job submission. Defaults to `true`.
	Enabled *bool `pulumi:"enabled"`
}

type ApplicationAutoStartConfigurationArgs struct {
	// Enables the application to automatically start on job submission. Defaults to `true`.
	Enabled pulumix.Input[*bool] `pulumi:"enabled"`
}

func (ApplicationAutoStartConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationAutoStartConfiguration)(nil)).Elem()
}

func (i ApplicationAutoStartConfigurationArgs) ToApplicationAutoStartConfigurationOutput() ApplicationAutoStartConfigurationOutput {
	return i.ToApplicationAutoStartConfigurationOutputWithContext(context.Background())
}

func (i ApplicationAutoStartConfigurationArgs) ToApplicationAutoStartConfigurationOutputWithContext(ctx context.Context) ApplicationAutoStartConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationAutoStartConfigurationOutput)
}

func (i *ApplicationAutoStartConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*ApplicationAutoStartConfigurationArgs] {
	return pulumix.Val(i)
}

type ApplicationAutoStartConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationAutoStartConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationAutoStartConfiguration)(nil)).Elem()
}

func (o ApplicationAutoStartConfigurationOutput) ToApplicationAutoStartConfigurationOutput() ApplicationAutoStartConfigurationOutput {
	return o
}

func (o ApplicationAutoStartConfigurationOutput) ToApplicationAutoStartConfigurationOutputWithContext(ctx context.Context) ApplicationAutoStartConfigurationOutput {
	return o
}

func (o ApplicationAutoStartConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[ApplicationAutoStartConfiguration] {
	return pulumix.Output[ApplicationAutoStartConfiguration]{
		OutputState: o.OutputState,
	}
}

// Enables the application to automatically start on job submission. Defaults to `true`.
func (o ApplicationAutoStartConfigurationOutput) Enabled() pulumix.Output[*bool] {
	return pulumix.Apply[ApplicationAutoStartConfiguration](o, func(v ApplicationAutoStartConfiguration) *bool { return v.Enabled })
}

type ApplicationAutoStopConfiguration struct {
	// Enables the application to automatically stop after a certain amount of time being idle. Defaults to `true`.
	Enabled *bool `pulumi:"enabled"`
	// The amount of idle time in minutes after which your application will automatically stop. Defaults to `15` minutes.
	IdleTimeoutMinutes *int `pulumi:"idleTimeoutMinutes"`
}

type ApplicationAutoStopConfigurationArgs struct {
	// Enables the application to automatically stop after a certain amount of time being idle. Defaults to `true`.
	Enabled pulumix.Input[*bool] `pulumi:"enabled"`
	// The amount of idle time in minutes after which your application will automatically stop. Defaults to `15` minutes.
	IdleTimeoutMinutes pulumix.Input[*int] `pulumi:"idleTimeoutMinutes"`
}

func (ApplicationAutoStopConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationAutoStopConfiguration)(nil)).Elem()
}

func (i ApplicationAutoStopConfigurationArgs) ToApplicationAutoStopConfigurationOutput() ApplicationAutoStopConfigurationOutput {
	return i.ToApplicationAutoStopConfigurationOutputWithContext(context.Background())
}

func (i ApplicationAutoStopConfigurationArgs) ToApplicationAutoStopConfigurationOutputWithContext(ctx context.Context) ApplicationAutoStopConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationAutoStopConfigurationOutput)
}

func (i *ApplicationAutoStopConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*ApplicationAutoStopConfigurationArgs] {
	return pulumix.Val(i)
}

type ApplicationAutoStopConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationAutoStopConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationAutoStopConfiguration)(nil)).Elem()
}

func (o ApplicationAutoStopConfigurationOutput) ToApplicationAutoStopConfigurationOutput() ApplicationAutoStopConfigurationOutput {
	return o
}

func (o ApplicationAutoStopConfigurationOutput) ToApplicationAutoStopConfigurationOutputWithContext(ctx context.Context) ApplicationAutoStopConfigurationOutput {
	return o
}

func (o ApplicationAutoStopConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[ApplicationAutoStopConfiguration] {
	return pulumix.Output[ApplicationAutoStopConfiguration]{
		OutputState: o.OutputState,
	}
}

// Enables the application to automatically stop after a certain amount of time being idle. Defaults to `true`.
func (o ApplicationAutoStopConfigurationOutput) Enabled() pulumix.Output[*bool] {
	return pulumix.Apply[ApplicationAutoStopConfiguration](o, func(v ApplicationAutoStopConfiguration) *bool { return v.Enabled })
}

// The amount of idle time in minutes after which your application will automatically stop. Defaults to `15` minutes.
func (o ApplicationAutoStopConfigurationOutput) IdleTimeoutMinutes() pulumix.Output[*int] {
	return pulumix.Apply[ApplicationAutoStopConfiguration](o, func(v ApplicationAutoStopConfiguration) *int { return v.IdleTimeoutMinutes })
}

type ApplicationImageConfiguration struct {
	// The image URI.
	ImageUri string `pulumi:"imageUri"`
}

type ApplicationImageConfigurationArgs struct {
	// The image URI.
	ImageUri pulumix.Input[string] `pulumi:"imageUri"`
}

func (ApplicationImageConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationImageConfiguration)(nil)).Elem()
}

func (i ApplicationImageConfigurationArgs) ToApplicationImageConfigurationOutput() ApplicationImageConfigurationOutput {
	return i.ToApplicationImageConfigurationOutputWithContext(context.Background())
}

func (i ApplicationImageConfigurationArgs) ToApplicationImageConfigurationOutputWithContext(ctx context.Context) ApplicationImageConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationImageConfigurationOutput)
}

func (i *ApplicationImageConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*ApplicationImageConfigurationArgs] {
	return pulumix.Val(i)
}

type ApplicationImageConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationImageConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationImageConfiguration)(nil)).Elem()
}

func (o ApplicationImageConfigurationOutput) ToApplicationImageConfigurationOutput() ApplicationImageConfigurationOutput {
	return o
}

func (o ApplicationImageConfigurationOutput) ToApplicationImageConfigurationOutputWithContext(ctx context.Context) ApplicationImageConfigurationOutput {
	return o
}

func (o ApplicationImageConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[ApplicationImageConfiguration] {
	return pulumix.Output[ApplicationImageConfiguration]{
		OutputState: o.OutputState,
	}
}

// The image URI.
func (o ApplicationImageConfigurationOutput) ImageUri() pulumix.Output[string] {
	return pulumix.Apply[ApplicationImageConfiguration](o, func(v ApplicationImageConfiguration) string { return v.ImageUri })
}

type ApplicationInitialCapacity struct {
	// The initial capacity configuration per worker.
	InitialCapacityConfig *ApplicationInitialCapacityInitialCapacityConfig `pulumi:"initialCapacityConfig"`
	// The worker type for an analytics framework. For Spark applications, the key can either be set to `Driver` or `Executor`. For Hive applications, it can be set to `HiveDriver` or `TezTask`.
	InitialCapacityType string `pulumi:"initialCapacityType"`
}

type ApplicationInitialCapacityArgs struct {
	// The initial capacity configuration per worker.
	InitialCapacityConfig pulumix.Input[*ApplicationInitialCapacityInitialCapacityConfigArgs] `pulumi:"initialCapacityConfig"`
	// The worker type for an analytics framework. For Spark applications, the key can either be set to `Driver` or `Executor`. For Hive applications, it can be set to `HiveDriver` or `TezTask`.
	InitialCapacityType pulumix.Input[string] `pulumi:"initialCapacityType"`
}

func (ApplicationInitialCapacityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationInitialCapacity)(nil)).Elem()
}

func (i ApplicationInitialCapacityArgs) ToApplicationInitialCapacityOutput() ApplicationInitialCapacityOutput {
	return i.ToApplicationInitialCapacityOutputWithContext(context.Background())
}

func (i ApplicationInitialCapacityArgs) ToApplicationInitialCapacityOutputWithContext(ctx context.Context) ApplicationInitialCapacityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationInitialCapacityOutput)
}

func (i *ApplicationInitialCapacityArgs) ToOutput(ctx context.Context) pulumix.Output[*ApplicationInitialCapacityArgs] {
	return pulumix.Val(i)
}

type ApplicationInitialCapacityOutput struct{ *pulumi.OutputState }

func (ApplicationInitialCapacityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationInitialCapacity)(nil)).Elem()
}

func (o ApplicationInitialCapacityOutput) ToApplicationInitialCapacityOutput() ApplicationInitialCapacityOutput {
	return o
}

func (o ApplicationInitialCapacityOutput) ToApplicationInitialCapacityOutputWithContext(ctx context.Context) ApplicationInitialCapacityOutput {
	return o
}

func (o ApplicationInitialCapacityOutput) ToOutput(ctx context.Context) pulumix.Output[ApplicationInitialCapacity] {
	return pulumix.Output[ApplicationInitialCapacity]{
		OutputState: o.OutputState,
	}
}

// The initial capacity configuration per worker.
func (o ApplicationInitialCapacityOutput) InitialCapacityConfig() pulumix.GPtrOutput[ApplicationInitialCapacityInitialCapacityConfig, ApplicationInitialCapacityInitialCapacityConfigOutput] {
	value := pulumix.Apply[ApplicationInitialCapacity](o, func(v ApplicationInitialCapacity) *ApplicationInitialCapacityInitialCapacityConfig {
		return v.InitialCapacityConfig
	})
	return pulumix.GPtrOutput[ApplicationInitialCapacityInitialCapacityConfig, ApplicationInitialCapacityInitialCapacityConfigOutput]{OutputState: value.OutputState}
}

// The worker type for an analytics framework. For Spark applications, the key can either be set to `Driver` or `Executor`. For Hive applications, it can be set to `HiveDriver` or `TezTask`.
func (o ApplicationInitialCapacityOutput) InitialCapacityType() pulumix.Output[string] {
	return pulumix.Apply[ApplicationInitialCapacity](o, func(v ApplicationInitialCapacity) string { return v.InitialCapacityType })
}

type ApplicationInitialCapacityInitialCapacityConfig struct {
	// The resource configuration of the initial capacity configuration.
	WorkerConfiguration *ApplicationInitialCapacityInitialCapacityConfigWorkerConfiguration `pulumi:"workerConfiguration"`
	// The number of workers in the initial capacity configuration.
	WorkerCount int `pulumi:"workerCount"`
}

type ApplicationInitialCapacityInitialCapacityConfigArgs struct {
	// The resource configuration of the initial capacity configuration.
	WorkerConfiguration pulumix.Input[*ApplicationInitialCapacityInitialCapacityConfigWorkerConfigurationArgs] `pulumi:"workerConfiguration"`
	// The number of workers in the initial capacity configuration.
	WorkerCount pulumix.Input[int] `pulumi:"workerCount"`
}

func (ApplicationInitialCapacityInitialCapacityConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationInitialCapacityInitialCapacityConfig)(nil)).Elem()
}

func (i ApplicationInitialCapacityInitialCapacityConfigArgs) ToApplicationInitialCapacityInitialCapacityConfigOutput() ApplicationInitialCapacityInitialCapacityConfigOutput {
	return i.ToApplicationInitialCapacityInitialCapacityConfigOutputWithContext(context.Background())
}

func (i ApplicationInitialCapacityInitialCapacityConfigArgs) ToApplicationInitialCapacityInitialCapacityConfigOutputWithContext(ctx context.Context) ApplicationInitialCapacityInitialCapacityConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationInitialCapacityInitialCapacityConfigOutput)
}

func (i *ApplicationInitialCapacityInitialCapacityConfigArgs) ToOutput(ctx context.Context) pulumix.Output[*ApplicationInitialCapacityInitialCapacityConfigArgs] {
	return pulumix.Val(i)
}

type ApplicationInitialCapacityInitialCapacityConfigOutput struct{ *pulumi.OutputState }

func (ApplicationInitialCapacityInitialCapacityConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationInitialCapacityInitialCapacityConfig)(nil)).Elem()
}

func (o ApplicationInitialCapacityInitialCapacityConfigOutput) ToApplicationInitialCapacityInitialCapacityConfigOutput() ApplicationInitialCapacityInitialCapacityConfigOutput {
	return o
}

func (o ApplicationInitialCapacityInitialCapacityConfigOutput) ToApplicationInitialCapacityInitialCapacityConfigOutputWithContext(ctx context.Context) ApplicationInitialCapacityInitialCapacityConfigOutput {
	return o
}

func (o ApplicationInitialCapacityInitialCapacityConfigOutput) ToOutput(ctx context.Context) pulumix.Output[ApplicationInitialCapacityInitialCapacityConfig] {
	return pulumix.Output[ApplicationInitialCapacityInitialCapacityConfig]{
		OutputState: o.OutputState,
	}
}

// The resource configuration of the initial capacity configuration.
func (o ApplicationInitialCapacityInitialCapacityConfigOutput) WorkerConfiguration() pulumix.GPtrOutput[ApplicationInitialCapacityInitialCapacityConfigWorkerConfiguration, ApplicationInitialCapacityInitialCapacityConfigWorkerConfigurationOutput] {
	value := pulumix.Apply[ApplicationInitialCapacityInitialCapacityConfig](o, func(v ApplicationInitialCapacityInitialCapacityConfig) *ApplicationInitialCapacityInitialCapacityConfigWorkerConfiguration {
		return v.WorkerConfiguration
	})
	return pulumix.GPtrOutput[ApplicationInitialCapacityInitialCapacityConfigWorkerConfiguration, ApplicationInitialCapacityInitialCapacityConfigWorkerConfigurationOutput]{OutputState: value.OutputState}
}

// The number of workers in the initial capacity configuration.
func (o ApplicationInitialCapacityInitialCapacityConfigOutput) WorkerCount() pulumix.Output[int] {
	return pulumix.Apply[ApplicationInitialCapacityInitialCapacityConfig](o, func(v ApplicationInitialCapacityInitialCapacityConfig) int { return v.WorkerCount })
}

type ApplicationInitialCapacityInitialCapacityConfigWorkerConfiguration struct {
	// The CPU requirements for every worker instance of the worker type.
	Cpu string `pulumi:"cpu"`
	// The disk requirements for every worker instance of the worker type.
	Disk *string `pulumi:"disk"`
	// The memory requirements for every worker instance of the worker type.
	Memory string `pulumi:"memory"`
}

type ApplicationInitialCapacityInitialCapacityConfigWorkerConfigurationArgs struct {
	// The CPU requirements for every worker instance of the worker type.
	Cpu pulumix.Input[string] `pulumi:"cpu"`
	// The disk requirements for every worker instance of the worker type.
	Disk pulumix.Input[*string] `pulumi:"disk"`
	// The memory requirements for every worker instance of the worker type.
	Memory pulumix.Input[string] `pulumi:"memory"`
}

func (ApplicationInitialCapacityInitialCapacityConfigWorkerConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationInitialCapacityInitialCapacityConfigWorkerConfiguration)(nil)).Elem()
}

func (i ApplicationInitialCapacityInitialCapacityConfigWorkerConfigurationArgs) ToApplicationInitialCapacityInitialCapacityConfigWorkerConfigurationOutput() ApplicationInitialCapacityInitialCapacityConfigWorkerConfigurationOutput {
	return i.ToApplicationInitialCapacityInitialCapacityConfigWorkerConfigurationOutputWithContext(context.Background())
}

func (i ApplicationInitialCapacityInitialCapacityConfigWorkerConfigurationArgs) ToApplicationInitialCapacityInitialCapacityConfigWorkerConfigurationOutputWithContext(ctx context.Context) ApplicationInitialCapacityInitialCapacityConfigWorkerConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationInitialCapacityInitialCapacityConfigWorkerConfigurationOutput)
}

func (i *ApplicationInitialCapacityInitialCapacityConfigWorkerConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*ApplicationInitialCapacityInitialCapacityConfigWorkerConfigurationArgs] {
	return pulumix.Val(i)
}

type ApplicationInitialCapacityInitialCapacityConfigWorkerConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationInitialCapacityInitialCapacityConfigWorkerConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationInitialCapacityInitialCapacityConfigWorkerConfiguration)(nil)).Elem()
}

func (o ApplicationInitialCapacityInitialCapacityConfigWorkerConfigurationOutput) ToApplicationInitialCapacityInitialCapacityConfigWorkerConfigurationOutput() ApplicationInitialCapacityInitialCapacityConfigWorkerConfigurationOutput {
	return o
}

func (o ApplicationInitialCapacityInitialCapacityConfigWorkerConfigurationOutput) ToApplicationInitialCapacityInitialCapacityConfigWorkerConfigurationOutputWithContext(ctx context.Context) ApplicationInitialCapacityInitialCapacityConfigWorkerConfigurationOutput {
	return o
}

func (o ApplicationInitialCapacityInitialCapacityConfigWorkerConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[ApplicationInitialCapacityInitialCapacityConfigWorkerConfiguration] {
	return pulumix.Output[ApplicationInitialCapacityInitialCapacityConfigWorkerConfiguration]{
		OutputState: o.OutputState,
	}
}

// The CPU requirements for every worker instance of the worker type.
func (o ApplicationInitialCapacityInitialCapacityConfigWorkerConfigurationOutput) Cpu() pulumix.Output[string] {
	return pulumix.Apply[ApplicationInitialCapacityInitialCapacityConfigWorkerConfiguration](o, func(v ApplicationInitialCapacityInitialCapacityConfigWorkerConfiguration) string { return v.Cpu })
}

// The disk requirements for every worker instance of the worker type.
func (o ApplicationInitialCapacityInitialCapacityConfigWorkerConfigurationOutput) Disk() pulumix.Output[*string] {
	return pulumix.Apply[ApplicationInitialCapacityInitialCapacityConfigWorkerConfiguration](o, func(v ApplicationInitialCapacityInitialCapacityConfigWorkerConfiguration) *string { return v.Disk })
}

// The memory requirements for every worker instance of the worker type.
func (o ApplicationInitialCapacityInitialCapacityConfigWorkerConfigurationOutput) Memory() pulumix.Output[string] {
	return pulumix.Apply[ApplicationInitialCapacityInitialCapacityConfigWorkerConfiguration](o, func(v ApplicationInitialCapacityInitialCapacityConfigWorkerConfiguration) string { return v.Memory })
}

type ApplicationMaximumCapacity struct {
	// The maximum allowed CPU for an application.
	Cpu string `pulumi:"cpu"`
	// The maximum allowed disk for an application.
	Disk *string `pulumi:"disk"`
	// The maximum allowed resources for an application.
	Memory string `pulumi:"memory"`
}

type ApplicationMaximumCapacityArgs struct {
	// The maximum allowed CPU for an application.
	Cpu pulumix.Input[string] `pulumi:"cpu"`
	// The maximum allowed disk for an application.
	Disk pulumix.Input[*string] `pulumi:"disk"`
	// The maximum allowed resources for an application.
	Memory pulumix.Input[string] `pulumi:"memory"`
}

func (ApplicationMaximumCapacityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationMaximumCapacity)(nil)).Elem()
}

func (i ApplicationMaximumCapacityArgs) ToApplicationMaximumCapacityOutput() ApplicationMaximumCapacityOutput {
	return i.ToApplicationMaximumCapacityOutputWithContext(context.Background())
}

func (i ApplicationMaximumCapacityArgs) ToApplicationMaximumCapacityOutputWithContext(ctx context.Context) ApplicationMaximumCapacityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationMaximumCapacityOutput)
}

func (i *ApplicationMaximumCapacityArgs) ToOutput(ctx context.Context) pulumix.Output[*ApplicationMaximumCapacityArgs] {
	return pulumix.Val(i)
}

type ApplicationMaximumCapacityOutput struct{ *pulumi.OutputState }

func (ApplicationMaximumCapacityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationMaximumCapacity)(nil)).Elem()
}

func (o ApplicationMaximumCapacityOutput) ToApplicationMaximumCapacityOutput() ApplicationMaximumCapacityOutput {
	return o
}

func (o ApplicationMaximumCapacityOutput) ToApplicationMaximumCapacityOutputWithContext(ctx context.Context) ApplicationMaximumCapacityOutput {
	return o
}

func (o ApplicationMaximumCapacityOutput) ToOutput(ctx context.Context) pulumix.Output[ApplicationMaximumCapacity] {
	return pulumix.Output[ApplicationMaximumCapacity]{
		OutputState: o.OutputState,
	}
}

// The maximum allowed CPU for an application.
func (o ApplicationMaximumCapacityOutput) Cpu() pulumix.Output[string] {
	return pulumix.Apply[ApplicationMaximumCapacity](o, func(v ApplicationMaximumCapacity) string { return v.Cpu })
}

// The maximum allowed disk for an application.
func (o ApplicationMaximumCapacityOutput) Disk() pulumix.Output[*string] {
	return pulumix.Apply[ApplicationMaximumCapacity](o, func(v ApplicationMaximumCapacity) *string { return v.Disk })
}

// The maximum allowed resources for an application.
func (o ApplicationMaximumCapacityOutput) Memory() pulumix.Output[string] {
	return pulumix.Apply[ApplicationMaximumCapacity](o, func(v ApplicationMaximumCapacity) string { return v.Memory })
}

type ApplicationNetworkConfiguration struct {
	// The array of security group Ids for customer VPC connectivity.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// The array of subnet Ids for customer VPC connectivity.
	SubnetIds []string `pulumi:"subnetIds"`
}

type ApplicationNetworkConfigurationArgs struct {
	// The array of security group Ids for customer VPC connectivity.
	SecurityGroupIds pulumix.Input[[]string] `pulumi:"securityGroupIds"`
	// The array of subnet Ids for customer VPC connectivity.
	SubnetIds pulumix.Input[[]string] `pulumi:"subnetIds"`
}

func (ApplicationNetworkConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationNetworkConfiguration)(nil)).Elem()
}

func (i ApplicationNetworkConfigurationArgs) ToApplicationNetworkConfigurationOutput() ApplicationNetworkConfigurationOutput {
	return i.ToApplicationNetworkConfigurationOutputWithContext(context.Background())
}

func (i ApplicationNetworkConfigurationArgs) ToApplicationNetworkConfigurationOutputWithContext(ctx context.Context) ApplicationNetworkConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationNetworkConfigurationOutput)
}

func (i *ApplicationNetworkConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*ApplicationNetworkConfigurationArgs] {
	return pulumix.Val(i)
}

type ApplicationNetworkConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationNetworkConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationNetworkConfiguration)(nil)).Elem()
}

func (o ApplicationNetworkConfigurationOutput) ToApplicationNetworkConfigurationOutput() ApplicationNetworkConfigurationOutput {
	return o
}

func (o ApplicationNetworkConfigurationOutput) ToApplicationNetworkConfigurationOutputWithContext(ctx context.Context) ApplicationNetworkConfigurationOutput {
	return o
}

func (o ApplicationNetworkConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[ApplicationNetworkConfiguration] {
	return pulumix.Output[ApplicationNetworkConfiguration]{
		OutputState: o.OutputState,
	}
}

// The array of security group Ids for customer VPC connectivity.
func (o ApplicationNetworkConfigurationOutput) SecurityGroupIds() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[ApplicationNetworkConfiguration](o, func(v ApplicationNetworkConfiguration) []string { return v.SecurityGroupIds })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// The array of subnet Ids for customer VPC connectivity.
func (o ApplicationNetworkConfigurationOutput) SubnetIds() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[ApplicationNetworkConfiguration](o, func(v ApplicationNetworkConfiguration) []string { return v.SubnetIds })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func init() {
	pulumi.RegisterOutputType(ApplicationAutoStartConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationAutoStopConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationImageConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationInitialCapacityOutput{})
	pulumi.RegisterOutputType(ApplicationInitialCapacityInitialCapacityConfigOutput{})
	pulumi.RegisterOutputType(ApplicationInitialCapacityInitialCapacityConfigWorkerConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationMaximumCapacityOutput{})
	pulumi.RegisterOutputType(ApplicationNetworkConfigurationOutput{})
}
