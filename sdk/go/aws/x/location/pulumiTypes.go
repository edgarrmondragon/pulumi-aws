// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package location

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type MapConfiguration struct {
	// Specifies the map style selected from an available data provider. Valid values can be found in the [Location Service CreateMap API Reference](https://docs.aws.amazon.com/location/latest/APIReference/API_CreateMap.html).
	Style string `pulumi:"style"`
}

type MapConfigurationArgs struct {
	// Specifies the map style selected from an available data provider. Valid values can be found in the [Location Service CreateMap API Reference](https://docs.aws.amazon.com/location/latest/APIReference/API_CreateMap.html).
	Style pulumix.Input[string] `pulumi:"style"`
}

func (MapConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MapConfiguration)(nil)).Elem()
}

func (i MapConfigurationArgs) ToMapConfigurationOutput() MapConfigurationOutput {
	return i.ToMapConfigurationOutputWithContext(context.Background())
}

func (i MapConfigurationArgs) ToMapConfigurationOutputWithContext(ctx context.Context) MapConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MapConfigurationOutput)
}

func (i *MapConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*MapConfigurationArgs] {
	return pulumix.Val(i)
}

type MapConfigurationOutput struct{ *pulumi.OutputState }

func (MapConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MapConfiguration)(nil)).Elem()
}

func (o MapConfigurationOutput) ToMapConfigurationOutput() MapConfigurationOutput {
	return o
}

func (o MapConfigurationOutput) ToMapConfigurationOutputWithContext(ctx context.Context) MapConfigurationOutput {
	return o
}

func (o MapConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[MapConfiguration] {
	return pulumix.Output[MapConfiguration]{
		OutputState: o.OutputState,
	}
}

// Specifies the map style selected from an available data provider. Valid values can be found in the [Location Service CreateMap API Reference](https://docs.aws.amazon.com/location/latest/APIReference/API_CreateMap.html).
func (o MapConfigurationOutput) Style() pulumix.Output[string] {
	return pulumix.Apply[MapConfiguration](o, func(v MapConfiguration) string { return v.Style })
}

type PlaceIndexDataSourceConfiguration struct {
	// Specifies how the results of an operation will be stored by the caller. Valid values: `SingleUse`, `Storage`. Default: `SingleUse`.
	IntendedUse *string `pulumi:"intendedUse"`
}

type PlaceIndexDataSourceConfigurationArgs struct {
	// Specifies how the results of an operation will be stored by the caller. Valid values: `SingleUse`, `Storage`. Default: `SingleUse`.
	IntendedUse pulumix.Input[*string] `pulumi:"intendedUse"`
}

func (PlaceIndexDataSourceConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PlaceIndexDataSourceConfiguration)(nil)).Elem()
}

func (i PlaceIndexDataSourceConfigurationArgs) ToPlaceIndexDataSourceConfigurationOutput() PlaceIndexDataSourceConfigurationOutput {
	return i.ToPlaceIndexDataSourceConfigurationOutputWithContext(context.Background())
}

func (i PlaceIndexDataSourceConfigurationArgs) ToPlaceIndexDataSourceConfigurationOutputWithContext(ctx context.Context) PlaceIndexDataSourceConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlaceIndexDataSourceConfigurationOutput)
}

func (i *PlaceIndexDataSourceConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*PlaceIndexDataSourceConfigurationArgs] {
	return pulumix.Val(i)
}

type PlaceIndexDataSourceConfigurationOutput struct{ *pulumi.OutputState }

func (PlaceIndexDataSourceConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PlaceIndexDataSourceConfiguration)(nil)).Elem()
}

func (o PlaceIndexDataSourceConfigurationOutput) ToPlaceIndexDataSourceConfigurationOutput() PlaceIndexDataSourceConfigurationOutput {
	return o
}

func (o PlaceIndexDataSourceConfigurationOutput) ToPlaceIndexDataSourceConfigurationOutputWithContext(ctx context.Context) PlaceIndexDataSourceConfigurationOutput {
	return o
}

func (o PlaceIndexDataSourceConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[PlaceIndexDataSourceConfiguration] {
	return pulumix.Output[PlaceIndexDataSourceConfiguration]{
		OutputState: o.OutputState,
	}
}

// Specifies how the results of an operation will be stored by the caller. Valid values: `SingleUse`, `Storage`. Default: `SingleUse`.
func (o PlaceIndexDataSourceConfigurationOutput) IntendedUse() pulumix.Output[*string] {
	return pulumix.Apply[PlaceIndexDataSourceConfiguration](o, func(v PlaceIndexDataSourceConfiguration) *string { return v.IntendedUse })
}

type GetMapConfiguration struct {
	// The map style selected from an available data provider.
	Style string `pulumi:"style"`
}

type GetMapConfigurationArgs struct {
	// The map style selected from an available data provider.
	Style pulumix.Input[string] `pulumi:"style"`
}

func (GetMapConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMapConfiguration)(nil)).Elem()
}

func (i GetMapConfigurationArgs) ToGetMapConfigurationOutput() GetMapConfigurationOutput {
	return i.ToGetMapConfigurationOutputWithContext(context.Background())
}

func (i GetMapConfigurationArgs) ToGetMapConfigurationOutputWithContext(ctx context.Context) GetMapConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMapConfigurationOutput)
}

func (i *GetMapConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*GetMapConfigurationArgs] {
	return pulumix.Val(i)
}

type GetMapConfigurationOutput struct{ *pulumi.OutputState }

func (GetMapConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMapConfiguration)(nil)).Elem()
}

func (o GetMapConfigurationOutput) ToGetMapConfigurationOutput() GetMapConfigurationOutput {
	return o
}

func (o GetMapConfigurationOutput) ToGetMapConfigurationOutputWithContext(ctx context.Context) GetMapConfigurationOutput {
	return o
}

func (o GetMapConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[GetMapConfiguration] {
	return pulumix.Output[GetMapConfiguration]{
		OutputState: o.OutputState,
	}
}

// The map style selected from an available data provider.
func (o GetMapConfigurationOutput) Style() pulumix.Output[string] {
	return pulumix.Apply[GetMapConfiguration](o, func(v GetMapConfiguration) string { return v.Style })
}

type GetPlaceIndexDataSourceConfiguration struct {
	IntendedUse string `pulumi:"intendedUse"`
}

type GetPlaceIndexDataSourceConfigurationArgs struct {
	IntendedUse pulumix.Input[string] `pulumi:"intendedUse"`
}

func (GetPlaceIndexDataSourceConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPlaceIndexDataSourceConfiguration)(nil)).Elem()
}

func (i GetPlaceIndexDataSourceConfigurationArgs) ToGetPlaceIndexDataSourceConfigurationOutput() GetPlaceIndexDataSourceConfigurationOutput {
	return i.ToGetPlaceIndexDataSourceConfigurationOutputWithContext(context.Background())
}

func (i GetPlaceIndexDataSourceConfigurationArgs) ToGetPlaceIndexDataSourceConfigurationOutputWithContext(ctx context.Context) GetPlaceIndexDataSourceConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPlaceIndexDataSourceConfigurationOutput)
}

func (i *GetPlaceIndexDataSourceConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*GetPlaceIndexDataSourceConfigurationArgs] {
	return pulumix.Val(i)
}

type GetPlaceIndexDataSourceConfigurationOutput struct{ *pulumi.OutputState }

func (GetPlaceIndexDataSourceConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPlaceIndexDataSourceConfiguration)(nil)).Elem()
}

func (o GetPlaceIndexDataSourceConfigurationOutput) ToGetPlaceIndexDataSourceConfigurationOutput() GetPlaceIndexDataSourceConfigurationOutput {
	return o
}

func (o GetPlaceIndexDataSourceConfigurationOutput) ToGetPlaceIndexDataSourceConfigurationOutputWithContext(ctx context.Context) GetPlaceIndexDataSourceConfigurationOutput {
	return o
}

func (o GetPlaceIndexDataSourceConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[GetPlaceIndexDataSourceConfiguration] {
	return pulumix.Output[GetPlaceIndexDataSourceConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o GetPlaceIndexDataSourceConfigurationOutput) IntendedUse() pulumix.Output[string] {
	return pulumix.Apply[GetPlaceIndexDataSourceConfiguration](o, func(v GetPlaceIndexDataSourceConfiguration) string { return v.IntendedUse })
}

func init() {
	pulumi.RegisterOutputType(MapConfigurationOutput{})
	pulumi.RegisterOutputType(PlaceIndexDataSourceConfigurationOutput{})
	pulumi.RegisterOutputType(GetMapConfigurationOutput{})
	pulumi.RegisterOutputType(GetPlaceIndexDataSourceConfigurationOutput{})
}
