// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2transitgateway

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Get information on an EC2 Transit Gateway.
func LookupTransitGateway(ctx *pulumi.Context, args *LookupTransitGatewayArgs, opts ...pulumi.InvokeOption) (*LookupTransitGatewayResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupTransitGatewayResult
	err := ctx.Invoke("aws:ec2transitgateway/getTransitGateway:getTransitGateway", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTransitGateway.
type LookupTransitGatewayArgs struct {
	// One or more configuration blocks containing name-values filters. Detailed below.
	Filters []GetTransitGatewayFilter `pulumi:"filters"`
	// Identifier of the EC2 Transit Gateway.
	Id *string `pulumi:"id"`
	// Key-value tags for the EC2 Transit Gateway
	Tags map[string]string `pulumi:"tags"`
}

// A collection of values returned by getTransitGateway.
type LookupTransitGatewayResult struct {
	// Private Autonomous System Number (ASN) for the Amazon side of a BGP session
	AmazonSideAsn int `pulumi:"amazonSideAsn"`
	// EC2 Transit Gateway ARN
	Arn string `pulumi:"arn"`
	// Identifier of the default association route table
	AssociationDefaultRouteTableId string `pulumi:"associationDefaultRouteTableId"`
	// Whether resource attachment requests are automatically accepted
	AutoAcceptSharedAttachments string `pulumi:"autoAcceptSharedAttachments"`
	// Whether resource attachments are automatically associated with the default association route table
	DefaultRouteTableAssociation string `pulumi:"defaultRouteTableAssociation"`
	// Whether resource attachments automatically propagate routes to the default propagation route table
	DefaultRouteTablePropagation string `pulumi:"defaultRouteTablePropagation"`
	// Description of the EC2 Transit Gateway
	Description string `pulumi:"description"`
	// Whether DNS support is enabled
	DnsSupport string                    `pulumi:"dnsSupport"`
	Filters    []GetTransitGatewayFilter `pulumi:"filters"`
	// EC2 Transit Gateway identifier
	Id string `pulumi:"id"`
	// Whether Multicast support is enabled
	MulticastSupport string `pulumi:"multicastSupport"`
	// Identifier of the AWS account that owns the EC2 Transit Gateway
	OwnerId string `pulumi:"ownerId"`
	// Identifier of the default propagation route table
	PropagationDefaultRouteTableId string `pulumi:"propagationDefaultRouteTableId"`
	// Key-value tags for the EC2 Transit Gateway
	Tags map[string]string `pulumi:"tags"`
	// The list of associated CIDR blocks
	TransitGatewayCidrBlocks []string `pulumi:"transitGatewayCidrBlocks"`
	// Whether VPN Equal Cost Multipath Protocol support is enabled
	VpnEcmpSupport string `pulumi:"vpnEcmpSupport"`
}

func LookupTransitGatewayOutput(ctx *pulumi.Context, args LookupTransitGatewayOutputArgs, opts ...pulumi.InvokeOption) LookupTransitGatewayResultOutput {
	outputResult := pulumix.ApplyErr[*LookupTransitGatewayArgs](args.ToOutput(), func(plainArgs *LookupTransitGatewayArgs) (*LookupTransitGatewayResult, error) {
		return LookupTransitGateway(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[LookupTransitGatewayResultOutput, *LookupTransitGatewayResult](outputResult)
}

// A collection of arguments for invoking getTransitGateway.
type LookupTransitGatewayOutputArgs struct {
	// One or more configuration blocks containing name-values filters. Detailed below.
	Filters pulumix.Input[[]*GetTransitGatewayFilterArgs] `pulumi:"filters"`
	// Identifier of the EC2 Transit Gateway.
	Id pulumix.Input[*string] `pulumi:"id"`
	// Key-value tags for the EC2 Transit Gateway
	Tags pulumix.Input[map[string]string] `pulumi:"tags"`
}

func (args LookupTransitGatewayOutputArgs) ToOutput() pulumix.Output[*LookupTransitGatewayArgs] {
	allArgs := pulumix.All(
		args.Filters.ToOutput(context.Background()).AsAny(),
		args.Id.ToOutput(context.Background()).AsAny(),
		args.Tags.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *LookupTransitGatewayArgs {
		return &LookupTransitGatewayArgs{
			Filters: resolvedArgs[0].([]GetTransitGatewayFilter),
			Id:      resolvedArgs[1].(*string),
			Tags:    resolvedArgs[2].(map[string]string),
		}
	})
}

type LookupTransitGatewayResultOutput struct{ *pulumi.OutputState }

func (LookupTransitGatewayResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTransitGatewayResult)(nil)).Elem()
}

func (o LookupTransitGatewayResultOutput) ToOutput(context.Context) pulumix.Output[*LookupTransitGatewayResult] {
	return pulumix.Output[*LookupTransitGatewayResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupTransitGatewayResultOutput) AmazonSideAsn() pulumix.Output[int] {
	return pulumix.Apply[*LookupTransitGatewayResult](o, func(v *LookupTransitGatewayResult) int { return v.AmazonSideAsn })
}

func (o LookupTransitGatewayResultOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[*LookupTransitGatewayResult](o, func(v *LookupTransitGatewayResult) string { return v.Arn })
}

func (o LookupTransitGatewayResultOutput) AssociationDefaultRouteTableId() pulumix.Output[string] {
	return pulumix.Apply[*LookupTransitGatewayResult](o, func(v *LookupTransitGatewayResult) string { return v.AssociationDefaultRouteTableId })
}

func (o LookupTransitGatewayResultOutput) AutoAcceptSharedAttachments() pulumix.Output[string] {
	return pulumix.Apply[*LookupTransitGatewayResult](o, func(v *LookupTransitGatewayResult) string { return v.AutoAcceptSharedAttachments })
}

func (o LookupTransitGatewayResultOutput) DefaultRouteTableAssociation() pulumix.Output[string] {
	return pulumix.Apply[*LookupTransitGatewayResult](o, func(v *LookupTransitGatewayResult) string { return v.DefaultRouteTableAssociation })
}

func (o LookupTransitGatewayResultOutput) DefaultRouteTablePropagation() pulumix.Output[string] {
	return pulumix.Apply[*LookupTransitGatewayResult](o, func(v *LookupTransitGatewayResult) string { return v.DefaultRouteTablePropagation })
}

func (o LookupTransitGatewayResultOutput) Description() pulumix.Output[string] {
	return pulumix.Apply[*LookupTransitGatewayResult](o, func(v *LookupTransitGatewayResult) string { return v.Description })
}

func (o LookupTransitGatewayResultOutput) DnsSupport() pulumix.Output[string] {
	return pulumix.Apply[*LookupTransitGatewayResult](o, func(v *LookupTransitGatewayResult) string { return v.DnsSupport })
}

func (o LookupTransitGatewayResultOutput) Filters() pulumix.GArrayOutput[GetTransitGatewayFilter, GetTransitGatewayFilterOutput] {
	value := pulumix.Apply[*LookupTransitGatewayResult](o, func(v *LookupTransitGatewayResult) []GetTransitGatewayFilter { return v.Filters })
	return pulumix.GArrayOutput[GetTransitGatewayFilter, GetTransitGatewayFilterOutput]{
		OutputState: value.OutputState,
	}
}

func (o LookupTransitGatewayResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*LookupTransitGatewayResult](o, func(v *LookupTransitGatewayResult) string { return v.Id })
}

func (o LookupTransitGatewayResultOutput) MulticastSupport() pulumix.Output[string] {
	return pulumix.Apply[*LookupTransitGatewayResult](o, func(v *LookupTransitGatewayResult) string { return v.MulticastSupport })
}

func (o LookupTransitGatewayResultOutput) OwnerId() pulumix.Output[string] {
	return pulumix.Apply[*LookupTransitGatewayResult](o, func(v *LookupTransitGatewayResult) string { return v.OwnerId })
}

func (o LookupTransitGatewayResultOutput) PropagationDefaultRouteTableId() pulumix.Output[string] {
	return pulumix.Apply[*LookupTransitGatewayResult](o, func(v *LookupTransitGatewayResult) string { return v.PropagationDefaultRouteTableId })
}

func (o LookupTransitGatewayResultOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[*LookupTransitGatewayResult](o, func(v *LookupTransitGatewayResult) map[string]string { return v.Tags })
	return pulumix.MapOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o LookupTransitGatewayResultOutput) TransitGatewayCidrBlocks() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[*LookupTransitGatewayResult](o, func(v *LookupTransitGatewayResult) []string { return v.TransitGatewayCidrBlocks })
	return pulumix.ArrayOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o LookupTransitGatewayResultOutput) VpnEcmpSupport() pulumix.Output[string] {
	return pulumix.Apply[*LookupTransitGatewayResult](o, func(v *LookupTransitGatewayResult) string { return v.VpnEcmpSupport })
}
