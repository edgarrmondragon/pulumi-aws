// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package auditmanager

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Resource for managing AWS Audit Manager Organization Admin Account Registration.
type OrganizationAdminAccountRegistration struct {
	pulumi.CustomResourceState

	// Identifier for the organization administrator account.
	AdminAccountId pulumix.Output[string] `pulumi:"adminAccountId"`
	// Identifier for the organization.
	OrganizationId pulumix.Output[string] `pulumi:"organizationId"`
}

// NewOrganizationAdminAccountRegistration registers a new resource with the given unique name, arguments, and options.
func NewOrganizationAdminAccountRegistration(ctx *pulumi.Context,
	name string, args *OrganizationAdminAccountRegistrationArgs, opts ...pulumi.ResourceOption) (*OrganizationAdminAccountRegistration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AdminAccountId == nil {
		return nil, errors.New("invalid value for required argument 'AdminAccountId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource OrganizationAdminAccountRegistration
	err := ctx.RegisterResource("aws:auditmanager/organizationAdminAccountRegistration:OrganizationAdminAccountRegistration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOrganizationAdminAccountRegistration gets an existing OrganizationAdminAccountRegistration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOrganizationAdminAccountRegistration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OrganizationAdminAccountRegistrationState, opts ...pulumi.ResourceOption) (*OrganizationAdminAccountRegistration, error) {
	var resource OrganizationAdminAccountRegistration
	err := ctx.ReadResource("aws:auditmanager/organizationAdminAccountRegistration:OrganizationAdminAccountRegistration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OrganizationAdminAccountRegistration resources.
type organizationAdminAccountRegistrationState struct {
	// Identifier for the organization administrator account.
	AdminAccountId *string `pulumi:"adminAccountId"`
	// Identifier for the organization.
	OrganizationId *string `pulumi:"organizationId"`
}

type OrganizationAdminAccountRegistrationState struct {
	// Identifier for the organization administrator account.
	AdminAccountId pulumix.Input[*string]
	// Identifier for the organization.
	OrganizationId pulumix.Input[*string]
}

func (OrganizationAdminAccountRegistrationState) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationAdminAccountRegistrationState)(nil)).Elem()
}

type organizationAdminAccountRegistrationArgs struct {
	// Identifier for the organization administrator account.
	AdminAccountId string `pulumi:"adminAccountId"`
}

// The set of arguments for constructing a OrganizationAdminAccountRegistration resource.
type OrganizationAdminAccountRegistrationArgs struct {
	// Identifier for the organization administrator account.
	AdminAccountId pulumix.Input[string]
}

func (OrganizationAdminAccountRegistrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationAdminAccountRegistrationArgs)(nil)).Elem()
}

type OrganizationAdminAccountRegistrationOutput struct{ *pulumi.OutputState }

func (OrganizationAdminAccountRegistrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationAdminAccountRegistration)(nil)).Elem()
}

func (o OrganizationAdminAccountRegistrationOutput) ToOrganizationAdminAccountRegistrationOutput() OrganizationAdminAccountRegistrationOutput {
	return o
}

func (o OrganizationAdminAccountRegistrationOutput) ToOrganizationAdminAccountRegistrationOutputWithContext(ctx context.Context) OrganizationAdminAccountRegistrationOutput {
	return o
}

func (o OrganizationAdminAccountRegistrationOutput) ToOutput(ctx context.Context) pulumix.Output[OrganizationAdminAccountRegistration] {
	return pulumix.Output[OrganizationAdminAccountRegistration]{
		OutputState: o.OutputState,
	}
}

// Identifier for the organization administrator account.
func (o OrganizationAdminAccountRegistrationOutput) AdminAccountId() pulumix.Output[string] {
	value := pulumix.Apply[OrganizationAdminAccountRegistration](o, func(v OrganizationAdminAccountRegistration) pulumix.Output[string] { return v.AdminAccountId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Identifier for the organization.
func (o OrganizationAdminAccountRegistrationOutput) OrganizationId() pulumix.Output[string] {
	value := pulumix.Apply[OrganizationAdminAccountRegistration](o, func(v OrganizationAdminAccountRegistration) pulumix.Output[string] { return v.OrganizationId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(OrganizationAdminAccountRegistrationOutput{})
}
