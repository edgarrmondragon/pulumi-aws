// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package s3control

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a resource to manage an S3 Multi-Region Access Point associated with specified buckets.
type MultiRegionAccessPoint struct {
	pulumi.CustomResourceState

	// The AWS account ID for the owner of the buckets for which you want to create a Multi-Region Access Point. Defaults to automatically determined account ID of the AWS provider.
	AccountId pulumix.Output[string] `pulumi:"accountId"`
	// The alias for the Multi-Region Access Point.
	Alias pulumix.Output[string] `pulumi:"alias"`
	// Amazon Resource Name (ARN) of the Multi-Region Access Point.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// A configuration block containing details about the Multi-Region Access Point. See Details Configuration Block below for more details
	Details pulumix.GPtrOutput[MultiRegionAccessPointDetails, MultiRegionAccessPointDetailsOutput] `pulumi:"details"`
	// The DNS domain name of the S3 Multi-Region Access Point in the format _`alias`_.accesspoint.s3-global.amazonaws.com. For more information, see the documentation on [Multi-Region Access Point Requests](https://docs.aws.amazon.com/AmazonS3/latest/userguide/MultiRegionAccessPointRequests.html).
	DomainName pulumix.Output[string] `pulumi:"domainName"`
	// The current status of the Multi-Region Access Point. One of: `READY`, `INCONSISTENT_ACROSS_REGIONS`, `CREATING`, `PARTIALLY_CREATED`, `PARTIALLY_DELETED`, `DELETING`.
	Status pulumix.Output[string] `pulumi:"status"`
}

// NewMultiRegionAccessPoint registers a new resource with the given unique name, arguments, and options.
func NewMultiRegionAccessPoint(ctx *pulumi.Context,
	name string, args *MultiRegionAccessPointArgs, opts ...pulumi.ResourceOption) (*MultiRegionAccessPoint, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Details == nil {
		return nil, errors.New("invalid value for required argument 'Details'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource MultiRegionAccessPoint
	err := ctx.RegisterResource("aws:s3control/multiRegionAccessPoint:MultiRegionAccessPoint", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMultiRegionAccessPoint gets an existing MultiRegionAccessPoint resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMultiRegionAccessPoint(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MultiRegionAccessPointState, opts ...pulumi.ResourceOption) (*MultiRegionAccessPoint, error) {
	var resource MultiRegionAccessPoint
	err := ctx.ReadResource("aws:s3control/multiRegionAccessPoint:MultiRegionAccessPoint", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MultiRegionAccessPoint resources.
type multiRegionAccessPointState struct {
	// The AWS account ID for the owner of the buckets for which you want to create a Multi-Region Access Point. Defaults to automatically determined account ID of the AWS provider.
	AccountId *string `pulumi:"accountId"`
	// The alias for the Multi-Region Access Point.
	Alias *string `pulumi:"alias"`
	// Amazon Resource Name (ARN) of the Multi-Region Access Point.
	Arn *string `pulumi:"arn"`
	// A configuration block containing details about the Multi-Region Access Point. See Details Configuration Block below for more details
	Details *MultiRegionAccessPointDetails `pulumi:"details"`
	// The DNS domain name of the S3 Multi-Region Access Point in the format _`alias`_.accesspoint.s3-global.amazonaws.com. For more information, see the documentation on [Multi-Region Access Point Requests](https://docs.aws.amazon.com/AmazonS3/latest/userguide/MultiRegionAccessPointRequests.html).
	DomainName *string `pulumi:"domainName"`
	// The current status of the Multi-Region Access Point. One of: `READY`, `INCONSISTENT_ACROSS_REGIONS`, `CREATING`, `PARTIALLY_CREATED`, `PARTIALLY_DELETED`, `DELETING`.
	Status *string `pulumi:"status"`
}

type MultiRegionAccessPointState struct {
	// The AWS account ID for the owner of the buckets for which you want to create a Multi-Region Access Point. Defaults to automatically determined account ID of the AWS provider.
	AccountId pulumix.Input[*string]
	// The alias for the Multi-Region Access Point.
	Alias pulumix.Input[*string]
	// Amazon Resource Name (ARN) of the Multi-Region Access Point.
	Arn pulumix.Input[*string]
	// A configuration block containing details about the Multi-Region Access Point. See Details Configuration Block below for more details
	Details pulumix.Input[*MultiRegionAccessPointDetailsArgs]
	// The DNS domain name of the S3 Multi-Region Access Point in the format _`alias`_.accesspoint.s3-global.amazonaws.com. For more information, see the documentation on [Multi-Region Access Point Requests](https://docs.aws.amazon.com/AmazonS3/latest/userguide/MultiRegionAccessPointRequests.html).
	DomainName pulumix.Input[*string]
	// The current status of the Multi-Region Access Point. One of: `READY`, `INCONSISTENT_ACROSS_REGIONS`, `CREATING`, `PARTIALLY_CREATED`, `PARTIALLY_DELETED`, `DELETING`.
	Status pulumix.Input[*string]
}

func (MultiRegionAccessPointState) ElementType() reflect.Type {
	return reflect.TypeOf((*multiRegionAccessPointState)(nil)).Elem()
}

type multiRegionAccessPointArgs struct {
	// The AWS account ID for the owner of the buckets for which you want to create a Multi-Region Access Point. Defaults to automatically determined account ID of the AWS provider.
	AccountId *string `pulumi:"accountId"`
	// A configuration block containing details about the Multi-Region Access Point. See Details Configuration Block below for more details
	Details MultiRegionAccessPointDetails `pulumi:"details"`
}

// The set of arguments for constructing a MultiRegionAccessPoint resource.
type MultiRegionAccessPointArgs struct {
	// The AWS account ID for the owner of the buckets for which you want to create a Multi-Region Access Point. Defaults to automatically determined account ID of the AWS provider.
	AccountId pulumix.Input[*string]
	// A configuration block containing details about the Multi-Region Access Point. See Details Configuration Block below for more details
	Details pulumix.Input[*MultiRegionAccessPointDetailsArgs]
}

func (MultiRegionAccessPointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*multiRegionAccessPointArgs)(nil)).Elem()
}

type MultiRegionAccessPointOutput struct{ *pulumi.OutputState }

func (MultiRegionAccessPointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MultiRegionAccessPoint)(nil)).Elem()
}

func (o MultiRegionAccessPointOutput) ToMultiRegionAccessPointOutput() MultiRegionAccessPointOutput {
	return o
}

func (o MultiRegionAccessPointOutput) ToMultiRegionAccessPointOutputWithContext(ctx context.Context) MultiRegionAccessPointOutput {
	return o
}

func (o MultiRegionAccessPointOutput) ToOutput(ctx context.Context) pulumix.Output[MultiRegionAccessPoint] {
	return pulumix.Output[MultiRegionAccessPoint]{
		OutputState: o.OutputState,
	}
}

// The AWS account ID for the owner of the buckets for which you want to create a Multi-Region Access Point. Defaults to automatically determined account ID of the AWS provider.
func (o MultiRegionAccessPointOutput) AccountId() pulumix.Output[string] {
	value := pulumix.Apply[MultiRegionAccessPoint](o, func(v MultiRegionAccessPoint) pulumix.Output[string] { return v.AccountId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The alias for the Multi-Region Access Point.
func (o MultiRegionAccessPointOutput) Alias() pulumix.Output[string] {
	value := pulumix.Apply[MultiRegionAccessPoint](o, func(v MultiRegionAccessPoint) pulumix.Output[string] { return v.Alias })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Amazon Resource Name (ARN) of the Multi-Region Access Point.
func (o MultiRegionAccessPointOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[MultiRegionAccessPoint](o, func(v MultiRegionAccessPoint) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A configuration block containing details about the Multi-Region Access Point. See Details Configuration Block below for more details
func (o MultiRegionAccessPointOutput) Details() pulumix.GPtrOutput[MultiRegionAccessPointDetails, MultiRegionAccessPointDetailsOutput] {
	value := pulumix.Apply[MultiRegionAccessPoint](o, func(v MultiRegionAccessPoint) pulumix.GPtrOutput[MultiRegionAccessPointDetails, MultiRegionAccessPointDetailsOutput] {
		return v.Details
	})
	unwrapped := pulumix.Flatten[*MultiRegionAccessPointDetails, pulumix.GPtrOutput[MultiRegionAccessPointDetails, MultiRegionAccessPointDetailsOutput]](value)
	return pulumix.GPtrOutput[MultiRegionAccessPointDetails, MultiRegionAccessPointDetailsOutput]{OutputState: unwrapped.OutputState}
}

// The DNS domain name of the S3 Multi-Region Access Point in the format _`alias`_.accesspoint.s3-global.amazonaws.com. For more information, see the documentation on [Multi-Region Access Point Requests](https://docs.aws.amazon.com/AmazonS3/latest/userguide/MultiRegionAccessPointRequests.html).
func (o MultiRegionAccessPointOutput) DomainName() pulumix.Output[string] {
	value := pulumix.Apply[MultiRegionAccessPoint](o, func(v MultiRegionAccessPoint) pulumix.Output[string] { return v.DomainName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The current status of the Multi-Region Access Point. One of: `READY`, `INCONSISTENT_ACROSS_REGIONS`, `CREATING`, `PARTIALLY_CREATED`, `PARTIALLY_DELETED`, `DELETING`.
func (o MultiRegionAccessPointOutput) Status() pulumix.Output[string] {
	value := pulumix.Apply[MultiRegionAccessPoint](o, func(v MultiRegionAccessPoint) pulumix.Output[string] { return v.Status })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(MultiRegionAccessPointOutput{})
}
