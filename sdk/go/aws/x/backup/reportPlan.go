// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package backup

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an AWS Backup Report Plan resource.
type ReportPlan struct {
	pulumi.CustomResourceState

	// The ARN of the backup report plan.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The date and time that a report plan is created, in Unix format and Coordinated Universal Time (UTC).
	CreationTime pulumix.Output[string] `pulumi:"creationTime"`
	// The deployment status of a report plan. The statuses are: `CREATE_IN_PROGRESS` | `UPDATE_IN_PROGRESS` | `DELETE_IN_PROGRESS` | `COMPLETED`.
	DeploymentStatus pulumix.Output[string] `pulumi:"deploymentStatus"`
	// The description of the report plan with a maximum of 1,024 characters
	Description pulumix.Output[*string] `pulumi:"description"`
	// The unique name of the report plan. The name must be between 1 and 256 characters, starting with a letter, and consisting of letters, numbers, and underscores.
	Name pulumix.Output[string] `pulumi:"name"`
	// An object that contains information about where and how to deliver your reports, specifically your Amazon S3 bucket name, S3 key prefix, and the formats of your reports. Detailed below.
	ReportDeliveryChannel pulumix.GPtrOutput[ReportPlanReportDeliveryChannel, ReportPlanReportDeliveryChannelOutput] `pulumi:"reportDeliveryChannel"`
	// An object that identifies the report template for the report. Reports are built using a report template. Detailed below.
	ReportSetting pulumix.GPtrOutput[ReportPlanReportSetting, ReportPlanReportSettingOutput] `pulumi:"reportSetting"`
	// Metadata that you can assign to help organize the report plans you create. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
}

// NewReportPlan registers a new resource with the given unique name, arguments, and options.
func NewReportPlan(ctx *pulumi.Context,
	name string, args *ReportPlanArgs, opts ...pulumi.ResourceOption) (*ReportPlan, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ReportDeliveryChannel == nil {
		return nil, errors.New("invalid value for required argument 'ReportDeliveryChannel'")
	}
	if args.ReportSetting == nil {
		return nil, errors.New("invalid value for required argument 'ReportSetting'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ReportPlan
	err := ctx.RegisterResource("aws:backup/reportPlan:ReportPlan", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetReportPlan gets an existing ReportPlan resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetReportPlan(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ReportPlanState, opts ...pulumi.ResourceOption) (*ReportPlan, error) {
	var resource ReportPlan
	err := ctx.ReadResource("aws:backup/reportPlan:ReportPlan", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ReportPlan resources.
type reportPlanState struct {
	// The ARN of the backup report plan.
	Arn *string `pulumi:"arn"`
	// The date and time that a report plan is created, in Unix format and Coordinated Universal Time (UTC).
	CreationTime *string `pulumi:"creationTime"`
	// The deployment status of a report plan. The statuses are: `CREATE_IN_PROGRESS` | `UPDATE_IN_PROGRESS` | `DELETE_IN_PROGRESS` | `COMPLETED`.
	DeploymentStatus *string `pulumi:"deploymentStatus"`
	// The description of the report plan with a maximum of 1,024 characters
	Description *string `pulumi:"description"`
	// The unique name of the report plan. The name must be between 1 and 256 characters, starting with a letter, and consisting of letters, numbers, and underscores.
	Name *string `pulumi:"name"`
	// An object that contains information about where and how to deliver your reports, specifically your Amazon S3 bucket name, S3 key prefix, and the formats of your reports. Detailed below.
	ReportDeliveryChannel *ReportPlanReportDeliveryChannel `pulumi:"reportDeliveryChannel"`
	// An object that identifies the report template for the report. Reports are built using a report template. Detailed below.
	ReportSetting *ReportPlanReportSetting `pulumi:"reportSetting"`
	// Metadata that you can assign to help organize the report plans you create. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type ReportPlanState struct {
	// The ARN of the backup report plan.
	Arn pulumix.Input[*string]
	// The date and time that a report plan is created, in Unix format and Coordinated Universal Time (UTC).
	CreationTime pulumix.Input[*string]
	// The deployment status of a report plan. The statuses are: `CREATE_IN_PROGRESS` | `UPDATE_IN_PROGRESS` | `DELETE_IN_PROGRESS` | `COMPLETED`.
	DeploymentStatus pulumix.Input[*string]
	// The description of the report plan with a maximum of 1,024 characters
	Description pulumix.Input[*string]
	// The unique name of the report plan. The name must be between 1 and 256 characters, starting with a letter, and consisting of letters, numbers, and underscores.
	Name pulumix.Input[*string]
	// An object that contains information about where and how to deliver your reports, specifically your Amazon S3 bucket name, S3 key prefix, and the formats of your reports. Detailed below.
	ReportDeliveryChannel pulumix.Input[*ReportPlanReportDeliveryChannelArgs]
	// An object that identifies the report template for the report. Reports are built using a report template. Detailed below.
	ReportSetting pulumix.Input[*ReportPlanReportSettingArgs]
	// Metadata that you can assign to help organize the report plans you create. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
}

func (ReportPlanState) ElementType() reflect.Type {
	return reflect.TypeOf((*reportPlanState)(nil)).Elem()
}

type reportPlanArgs struct {
	// The description of the report plan with a maximum of 1,024 characters
	Description *string `pulumi:"description"`
	// The unique name of the report plan. The name must be between 1 and 256 characters, starting with a letter, and consisting of letters, numbers, and underscores.
	Name *string `pulumi:"name"`
	// An object that contains information about where and how to deliver your reports, specifically your Amazon S3 bucket name, S3 key prefix, and the formats of your reports. Detailed below.
	ReportDeliveryChannel ReportPlanReportDeliveryChannel `pulumi:"reportDeliveryChannel"`
	// An object that identifies the report template for the report. Reports are built using a report template. Detailed below.
	ReportSetting ReportPlanReportSetting `pulumi:"reportSetting"`
	// Metadata that you can assign to help organize the report plans you create. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a ReportPlan resource.
type ReportPlanArgs struct {
	// The description of the report plan with a maximum of 1,024 characters
	Description pulumix.Input[*string]
	// The unique name of the report plan. The name must be between 1 and 256 characters, starting with a letter, and consisting of letters, numbers, and underscores.
	Name pulumix.Input[*string]
	// An object that contains information about where and how to deliver your reports, specifically your Amazon S3 bucket name, S3 key prefix, and the formats of your reports. Detailed below.
	ReportDeliveryChannel pulumix.Input[*ReportPlanReportDeliveryChannelArgs]
	// An object that identifies the report template for the report. Reports are built using a report template. Detailed below.
	ReportSetting pulumix.Input[*ReportPlanReportSettingArgs]
	// Metadata that you can assign to help organize the report plans you create. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (ReportPlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*reportPlanArgs)(nil)).Elem()
}

type ReportPlanOutput struct{ *pulumi.OutputState }

func (ReportPlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportPlan)(nil)).Elem()
}

func (o ReportPlanOutput) ToReportPlanOutput() ReportPlanOutput {
	return o
}

func (o ReportPlanOutput) ToReportPlanOutputWithContext(ctx context.Context) ReportPlanOutput {
	return o
}

func (o ReportPlanOutput) ToOutput(ctx context.Context) pulumix.Output[ReportPlan] {
	return pulumix.Output[ReportPlan]{
		OutputState: o.OutputState,
	}
}

// The ARN of the backup report plan.
func (o ReportPlanOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[ReportPlan](o, func(v ReportPlan) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The date and time that a report plan is created, in Unix format and Coordinated Universal Time (UTC).
func (o ReportPlanOutput) CreationTime() pulumix.Output[string] {
	value := pulumix.Apply[ReportPlan](o, func(v ReportPlan) pulumix.Output[string] { return v.CreationTime })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The deployment status of a report plan. The statuses are: `CREATE_IN_PROGRESS` | `UPDATE_IN_PROGRESS` | `DELETE_IN_PROGRESS` | `COMPLETED`.
func (o ReportPlanOutput) DeploymentStatus() pulumix.Output[string] {
	value := pulumix.Apply[ReportPlan](o, func(v ReportPlan) pulumix.Output[string] { return v.DeploymentStatus })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The description of the report plan with a maximum of 1,024 characters
func (o ReportPlanOutput) Description() pulumix.Output[*string] {
	value := pulumix.Apply[ReportPlan](o, func(v ReportPlan) pulumix.Output[*string] { return v.Description })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The unique name of the report plan. The name must be between 1 and 256 characters, starting with a letter, and consisting of letters, numbers, and underscores.
func (o ReportPlanOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[ReportPlan](o, func(v ReportPlan) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// An object that contains information about where and how to deliver your reports, specifically your Amazon S3 bucket name, S3 key prefix, and the formats of your reports. Detailed below.
func (o ReportPlanOutput) ReportDeliveryChannel() pulumix.GPtrOutput[ReportPlanReportDeliveryChannel, ReportPlanReportDeliveryChannelOutput] {
	value := pulumix.Apply[ReportPlan](o, func(v ReportPlan) pulumix.GPtrOutput[ReportPlanReportDeliveryChannel, ReportPlanReportDeliveryChannelOutput] {
		return v.ReportDeliveryChannel
	})
	unwrapped := pulumix.Flatten[*ReportPlanReportDeliveryChannel, pulumix.GPtrOutput[ReportPlanReportDeliveryChannel, ReportPlanReportDeliveryChannelOutput]](value)
	return pulumix.GPtrOutput[ReportPlanReportDeliveryChannel, ReportPlanReportDeliveryChannelOutput]{OutputState: unwrapped.OutputState}
}

// An object that identifies the report template for the report. Reports are built using a report template. Detailed below.
func (o ReportPlanOutput) ReportSetting() pulumix.GPtrOutput[ReportPlanReportSetting, ReportPlanReportSettingOutput] {
	value := pulumix.Apply[ReportPlan](o, func(v ReportPlan) pulumix.GPtrOutput[ReportPlanReportSetting, ReportPlanReportSettingOutput] {
		return v.ReportSetting
	})
	unwrapped := pulumix.Flatten[*ReportPlanReportSetting, pulumix.GPtrOutput[ReportPlanReportSetting, ReportPlanReportSettingOutput]](value)
	return pulumix.GPtrOutput[ReportPlanReportSetting, ReportPlanReportSettingOutput]{OutputState: unwrapped.OutputState}
}

// Metadata that you can assign to help organize the report plans you create. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o ReportPlanOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[ReportPlan](o, func(v ReportPlan) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o ReportPlanOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[ReportPlan](o, func(v ReportPlan) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(ReportPlanOutput{})
}
