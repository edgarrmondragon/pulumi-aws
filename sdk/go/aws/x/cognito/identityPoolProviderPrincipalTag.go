// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cognito

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an AWS Cognito Identity Principal Mapping.
type IdentityPoolProviderPrincipalTag struct {
	pulumi.CustomResourceState

	// An identity pool ID.
	IdentityPoolId pulumix.Output[string] `pulumi:"identityPoolId"`
	// The name of the identity provider.
	IdentityProviderName pulumix.Output[string] `pulumi:"identityProviderName"`
	// String to string map of variables.
	PrincipalTags pulumix.MapOutput[string] `pulumi:"principalTags"`
	// use default (username and clientID) attribute mappings.
	UseDefaults pulumix.Output[*bool] `pulumi:"useDefaults"`
}

// NewIdentityPoolProviderPrincipalTag registers a new resource with the given unique name, arguments, and options.
func NewIdentityPoolProviderPrincipalTag(ctx *pulumi.Context,
	name string, args *IdentityPoolProviderPrincipalTagArgs, opts ...pulumi.ResourceOption) (*IdentityPoolProviderPrincipalTag, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.IdentityPoolId == nil {
		return nil, errors.New("invalid value for required argument 'IdentityPoolId'")
	}
	if args.IdentityProviderName == nil {
		return nil, errors.New("invalid value for required argument 'IdentityProviderName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource IdentityPoolProviderPrincipalTag
	err := ctx.RegisterResource("aws:cognito/identityPoolProviderPrincipalTag:IdentityPoolProviderPrincipalTag", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIdentityPoolProviderPrincipalTag gets an existing IdentityPoolProviderPrincipalTag resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIdentityPoolProviderPrincipalTag(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IdentityPoolProviderPrincipalTagState, opts ...pulumi.ResourceOption) (*IdentityPoolProviderPrincipalTag, error) {
	var resource IdentityPoolProviderPrincipalTag
	err := ctx.ReadResource("aws:cognito/identityPoolProviderPrincipalTag:IdentityPoolProviderPrincipalTag", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IdentityPoolProviderPrincipalTag resources.
type identityPoolProviderPrincipalTagState struct {
	// An identity pool ID.
	IdentityPoolId *string `pulumi:"identityPoolId"`
	// The name of the identity provider.
	IdentityProviderName *string `pulumi:"identityProviderName"`
	// String to string map of variables.
	PrincipalTags map[string]string `pulumi:"principalTags"`
	// use default (username and clientID) attribute mappings.
	UseDefaults *bool `pulumi:"useDefaults"`
}

type IdentityPoolProviderPrincipalTagState struct {
	// An identity pool ID.
	IdentityPoolId pulumix.Input[*string]
	// The name of the identity provider.
	IdentityProviderName pulumix.Input[*string]
	// String to string map of variables.
	PrincipalTags pulumix.Input[map[string]string]
	// use default (username and clientID) attribute mappings.
	UseDefaults pulumix.Input[*bool]
}

func (IdentityPoolProviderPrincipalTagState) ElementType() reflect.Type {
	return reflect.TypeOf((*identityPoolProviderPrincipalTagState)(nil)).Elem()
}

type identityPoolProviderPrincipalTagArgs struct {
	// An identity pool ID.
	IdentityPoolId string `pulumi:"identityPoolId"`
	// The name of the identity provider.
	IdentityProviderName string `pulumi:"identityProviderName"`
	// String to string map of variables.
	PrincipalTags map[string]string `pulumi:"principalTags"`
	// use default (username and clientID) attribute mappings.
	UseDefaults *bool `pulumi:"useDefaults"`
}

// The set of arguments for constructing a IdentityPoolProviderPrincipalTag resource.
type IdentityPoolProviderPrincipalTagArgs struct {
	// An identity pool ID.
	IdentityPoolId pulumix.Input[string]
	// The name of the identity provider.
	IdentityProviderName pulumix.Input[string]
	// String to string map of variables.
	PrincipalTags pulumix.Input[map[string]string]
	// use default (username and clientID) attribute mappings.
	UseDefaults pulumix.Input[*bool]
}

func (IdentityPoolProviderPrincipalTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*identityPoolProviderPrincipalTagArgs)(nil)).Elem()
}

type IdentityPoolProviderPrincipalTagOutput struct{ *pulumi.OutputState }

func (IdentityPoolProviderPrincipalTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityPoolProviderPrincipalTag)(nil)).Elem()
}

func (o IdentityPoolProviderPrincipalTagOutput) ToIdentityPoolProviderPrincipalTagOutput() IdentityPoolProviderPrincipalTagOutput {
	return o
}

func (o IdentityPoolProviderPrincipalTagOutput) ToIdentityPoolProviderPrincipalTagOutputWithContext(ctx context.Context) IdentityPoolProviderPrincipalTagOutput {
	return o
}

func (o IdentityPoolProviderPrincipalTagOutput) ToOutput(ctx context.Context) pulumix.Output[IdentityPoolProviderPrincipalTag] {
	return pulumix.Output[IdentityPoolProviderPrincipalTag]{
		OutputState: o.OutputState,
	}
}

// An identity pool ID.
func (o IdentityPoolProviderPrincipalTagOutput) IdentityPoolId() pulumix.Output[string] {
	value := pulumix.Apply[IdentityPoolProviderPrincipalTag](o, func(v IdentityPoolProviderPrincipalTag) pulumix.Output[string] { return v.IdentityPoolId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The name of the identity provider.
func (o IdentityPoolProviderPrincipalTagOutput) IdentityProviderName() pulumix.Output[string] {
	value := pulumix.Apply[IdentityPoolProviderPrincipalTag](o, func(v IdentityPoolProviderPrincipalTag) pulumix.Output[string] { return v.IdentityProviderName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// String to string map of variables.
func (o IdentityPoolProviderPrincipalTagOutput) PrincipalTags() pulumix.MapOutput[string] {
	value := pulumix.Apply[IdentityPoolProviderPrincipalTag](o, func(v IdentityPoolProviderPrincipalTag) pulumix.MapOutput[string] { return v.PrincipalTags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// use default (username and clientID) attribute mappings.
func (o IdentityPoolProviderPrincipalTagOutput) UseDefaults() pulumix.Output[*bool] {
	value := pulumix.Apply[IdentityPoolProviderPrincipalTag](o, func(v IdentityPoolProviderPrincipalTag) pulumix.Output[*bool] { return v.UseDefaults })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

func init() {
	pulumi.RegisterOutputType(IdentityPoolProviderPrincipalTagOutput{})
}
