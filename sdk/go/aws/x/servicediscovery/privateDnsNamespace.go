// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package servicediscovery

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a Service Discovery Private DNS Namespace resource.
type PrivateDnsNamespace struct {
	pulumi.CustomResourceState

	// The ARN that Amazon Route 53 assigns to the namespace when you create it.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The description that you specify for the namespace when you create it.
	Description pulumix.Output[*string] `pulumi:"description"`
	// The ID for the hosted zone that Amazon Route 53 creates when you create a namespace.
	HostedZone pulumix.Output[string] `pulumi:"hostedZone"`
	// The name of the namespace.
	Name pulumix.Output[string] `pulumi:"name"`
	// A map of tags to assign to the namespace. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// The ID of VPC that you want to associate the namespace with.
	Vpc pulumix.Output[string] `pulumi:"vpc"`
}

// NewPrivateDnsNamespace registers a new resource with the given unique name, arguments, and options.
func NewPrivateDnsNamespace(ctx *pulumi.Context,
	name string, args *PrivateDnsNamespaceArgs, opts ...pulumi.ResourceOption) (*PrivateDnsNamespace, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Vpc == nil {
		return nil, errors.New("invalid value for required argument 'Vpc'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PrivateDnsNamespace
	err := ctx.RegisterResource("aws:servicediscovery/privateDnsNamespace:PrivateDnsNamespace", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPrivateDnsNamespace gets an existing PrivateDnsNamespace resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPrivateDnsNamespace(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PrivateDnsNamespaceState, opts ...pulumi.ResourceOption) (*PrivateDnsNamespace, error) {
	var resource PrivateDnsNamespace
	err := ctx.ReadResource("aws:servicediscovery/privateDnsNamespace:PrivateDnsNamespace", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PrivateDnsNamespace resources.
type privateDnsNamespaceState struct {
	// The ARN that Amazon Route 53 assigns to the namespace when you create it.
	Arn *string `pulumi:"arn"`
	// The description that you specify for the namespace when you create it.
	Description *string `pulumi:"description"`
	// The ID for the hosted zone that Amazon Route 53 creates when you create a namespace.
	HostedZone *string `pulumi:"hostedZone"`
	// The name of the namespace.
	Name *string `pulumi:"name"`
	// A map of tags to assign to the namespace. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// The ID of VPC that you want to associate the namespace with.
	Vpc *string `pulumi:"vpc"`
}

type PrivateDnsNamespaceState struct {
	// The ARN that Amazon Route 53 assigns to the namespace when you create it.
	Arn pulumix.Input[*string]
	// The description that you specify for the namespace when you create it.
	Description pulumix.Input[*string]
	// The ID for the hosted zone that Amazon Route 53 creates when you create a namespace.
	HostedZone pulumix.Input[*string]
	// The name of the namespace.
	Name pulumix.Input[*string]
	// A map of tags to assign to the namespace. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// The ID of VPC that you want to associate the namespace with.
	Vpc pulumix.Input[*string]
}

func (PrivateDnsNamespaceState) ElementType() reflect.Type {
	return reflect.TypeOf((*privateDnsNamespaceState)(nil)).Elem()
}

type privateDnsNamespaceArgs struct {
	// The description that you specify for the namespace when you create it.
	Description *string `pulumi:"description"`
	// The name of the namespace.
	Name *string `pulumi:"name"`
	// A map of tags to assign to the namespace. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// The ID of VPC that you want to associate the namespace with.
	Vpc string `pulumi:"vpc"`
}

// The set of arguments for constructing a PrivateDnsNamespace resource.
type PrivateDnsNamespaceArgs struct {
	// The description that you specify for the namespace when you create it.
	Description pulumix.Input[*string]
	// The name of the namespace.
	Name pulumix.Input[*string]
	// A map of tags to assign to the namespace. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// The ID of VPC that you want to associate the namespace with.
	Vpc pulumix.Input[string]
}

func (PrivateDnsNamespaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*privateDnsNamespaceArgs)(nil)).Elem()
}

type PrivateDnsNamespaceOutput struct{ *pulumi.OutputState }

func (PrivateDnsNamespaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateDnsNamespace)(nil)).Elem()
}

func (o PrivateDnsNamespaceOutput) ToPrivateDnsNamespaceOutput() PrivateDnsNamespaceOutput {
	return o
}

func (o PrivateDnsNamespaceOutput) ToPrivateDnsNamespaceOutputWithContext(ctx context.Context) PrivateDnsNamespaceOutput {
	return o
}

func (o PrivateDnsNamespaceOutput) ToOutput(ctx context.Context) pulumix.Output[PrivateDnsNamespace] {
	return pulumix.Output[PrivateDnsNamespace]{
		OutputState: o.OutputState,
	}
}

// The ARN that Amazon Route 53 assigns to the namespace when you create it.
func (o PrivateDnsNamespaceOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[PrivateDnsNamespace](o, func(v PrivateDnsNamespace) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The description that you specify for the namespace when you create it.
func (o PrivateDnsNamespaceOutput) Description() pulumix.Output[*string] {
	value := pulumix.Apply[PrivateDnsNamespace](o, func(v PrivateDnsNamespace) pulumix.Output[*string] { return v.Description })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The ID for the hosted zone that Amazon Route 53 creates when you create a namespace.
func (o PrivateDnsNamespaceOutput) HostedZone() pulumix.Output[string] {
	value := pulumix.Apply[PrivateDnsNamespace](o, func(v PrivateDnsNamespace) pulumix.Output[string] { return v.HostedZone })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The name of the namespace.
func (o PrivateDnsNamespaceOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[PrivateDnsNamespace](o, func(v PrivateDnsNamespace) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A map of tags to assign to the namespace. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o PrivateDnsNamespaceOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[PrivateDnsNamespace](o, func(v PrivateDnsNamespace) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o PrivateDnsNamespaceOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[PrivateDnsNamespace](o, func(v PrivateDnsNamespace) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// The ID of VPC that you want to associate the namespace with.
func (o PrivateDnsNamespaceOutput) Vpc() pulumix.Output[string] {
	value := pulumix.Apply[PrivateDnsNamespace](o, func(v PrivateDnsNamespace) pulumix.Output[string] { return v.Vpc })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(PrivateDnsNamespaceOutput{})
}
