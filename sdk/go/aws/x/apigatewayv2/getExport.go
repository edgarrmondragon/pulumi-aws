// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apigatewayv2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Exports a definition of an API in a particular output format and specification.
func GetExport(ctx *pulumi.Context, args *GetExportArgs, opts ...pulumi.InvokeOption) (*GetExportResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetExportResult
	err := ctx.Invoke("aws:apigatewayv2/getExport:getExport", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getExport.
type GetExportArgs struct {
	// API identifier.
	ApiId string `pulumi:"apiId"`
	// Version of the API Gateway export algorithm. API Gateway uses the latest version by default. Currently, the only supported version is `1.0`.
	ExportVersion *string `pulumi:"exportVersion"`
	// Whether to include API Gateway extensions in the exported API definition. API Gateway extensions are included by default.
	IncludeExtensions *bool `pulumi:"includeExtensions"`
	// Output type of the exported definition file. Valid values are `JSON` and `YAML`.
	OutputType string `pulumi:"outputType"`
	// Version of the API specification to use. `OAS30`, for OpenAPI 3.0, is the only supported value.
	Specification string `pulumi:"specification"`
	// Name of the API stage to export. If you don't specify this property, a representation of the latest API configuration is exported.
	StageName *string `pulumi:"stageName"`
}

// A collection of values returned by getExport.
type GetExportResult struct {
	ApiId string `pulumi:"apiId"`
	// ID of the API.
	Body          string  `pulumi:"body"`
	ExportVersion *string `pulumi:"exportVersion"`
	// The provider-assigned unique ID for this managed resource.
	Id                string  `pulumi:"id"`
	IncludeExtensions *bool   `pulumi:"includeExtensions"`
	OutputType        string  `pulumi:"outputType"`
	Specification     string  `pulumi:"specification"`
	StageName         *string `pulumi:"stageName"`
}

func GetExportOutput(ctx *pulumi.Context, args GetExportOutputArgs, opts ...pulumi.InvokeOption) GetExportResultOutput {
	outputResult := pulumix.ApplyErr[*GetExportArgs](args.ToOutput(), func(plainArgs *GetExportArgs) (*GetExportResult, error) {
		return GetExport(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[GetExportResultOutput, *GetExportResult](outputResult)
}

// A collection of arguments for invoking getExport.
type GetExportOutputArgs struct {
	// API identifier.
	ApiId pulumix.Input[string] `pulumi:"apiId"`
	// Version of the API Gateway export algorithm. API Gateway uses the latest version by default. Currently, the only supported version is `1.0`.
	ExportVersion pulumix.Input[*string] `pulumi:"exportVersion"`
	// Whether to include API Gateway extensions in the exported API definition. API Gateway extensions are included by default.
	IncludeExtensions pulumix.Input[*bool] `pulumi:"includeExtensions"`
	// Output type of the exported definition file. Valid values are `JSON` and `YAML`.
	OutputType pulumix.Input[string] `pulumi:"outputType"`
	// Version of the API specification to use. `OAS30`, for OpenAPI 3.0, is the only supported value.
	Specification pulumix.Input[string] `pulumi:"specification"`
	// Name of the API stage to export. If you don't specify this property, a representation of the latest API configuration is exported.
	StageName pulumix.Input[*string] `pulumi:"stageName"`
}

func (args GetExportOutputArgs) ToOutput() pulumix.Output[*GetExportArgs] {
	allArgs := pulumix.All(
		args.ApiId.ToOutput(context.Background()).AsAny(),
		args.ExportVersion.ToOutput(context.Background()).AsAny(),
		args.IncludeExtensions.ToOutput(context.Background()).AsAny(),
		args.OutputType.ToOutput(context.Background()).AsAny(),
		args.Specification.ToOutput(context.Background()).AsAny(),
		args.StageName.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *GetExportArgs {
		return &GetExportArgs{
			ApiId:             resolvedArgs[0].(string),
			ExportVersion:     resolvedArgs[1].(*string),
			IncludeExtensions: resolvedArgs[2].(*bool),
			OutputType:        resolvedArgs[3].(string),
			Specification:     resolvedArgs[4].(string),
			StageName:         resolvedArgs[5].(*string),
		}
	})
}

type GetExportResultOutput struct{ *pulumi.OutputState }

func (GetExportResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetExportResult)(nil)).Elem()
}

func (o GetExportResultOutput) ToOutput(context.Context) pulumix.Output[*GetExportResult] {
	return pulumix.Output[*GetExportResult]{
		OutputState: o.OutputState,
	}
}

func (o GetExportResultOutput) ApiId() pulumix.Output[string] {
	return pulumix.Apply[*GetExportResult](o, func(v *GetExportResult) string { return v.ApiId })
}

func (o GetExportResultOutput) Body() pulumix.Output[string] {
	return pulumix.Apply[*GetExportResult](o, func(v *GetExportResult) string { return v.Body })
}

func (o GetExportResultOutput) ExportVersion() pulumix.Output[*string] {
	return pulumix.Apply[*GetExportResult](o, func(v *GetExportResult) *string { return v.ExportVersion })
}

func (o GetExportResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*GetExportResult](o, func(v *GetExportResult) string { return v.Id })
}

func (o GetExportResultOutput) IncludeExtensions() pulumix.Output[*bool] {
	return pulumix.Apply[*GetExportResult](o, func(v *GetExportResult) *bool { return v.IncludeExtensions })
}

func (o GetExportResultOutput) OutputType() pulumix.Output[string] {
	return pulumix.Apply[*GetExportResult](o, func(v *GetExportResult) string { return v.OutputType })
}

func (o GetExportResultOutput) Specification() pulumix.Output[string] {
	return pulumix.Apply[*GetExportResult](o, func(v *GetExportResult) string { return v.Specification })
}

func (o GetExportResultOutput) StageName() pulumix.Output[*string] {
	return pulumix.Apply[*GetExportResult](o, func(v *GetExportResult) *string { return v.StageName })
}
