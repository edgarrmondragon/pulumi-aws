// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manages a [RDS Aurora Cluster](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Aurora.html). To manage cluster instances that inherit configuration from the cluster (when not running the cluster in `serverless` engine mode), see the `rds.ClusterInstance` resource. To manage non-Aurora databases (e.g., MySQL, PostgreSQL, SQL Server, etc.), see the `rds.Instance` resource.
//
// For information on the difference between the available Aurora MySQL engines
// see [Comparison between Aurora MySQL 1 and Aurora MySQL 2](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/AuroraMySQL.Updates.20180206.html)
// in the Amazon RDS User Guide.
//
// Changes to an RDS Cluster can occur when you manually change a
// parameter, such as `port`, and are reflected in the next maintenance
// window. Because of this, this provider may report a difference in its planning
// phase because a modification has not yet taken place. You can use the
// `applyImmediately` flag to instruct the service to apply the change immediately
// (see documentation below).
//
// > **Note:** using `applyImmediately` can result in a
// brief downtime as the server reboots. See the AWS Docs on [RDS Maintenance](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_UpgradeDBInstance.Maintenance.html)
// for more information.
type Cluster struct {
	pulumi.CustomResourceState

	// (Required for Multi-AZ DB cluster) The amount of storage in gibibytes (GiB) to allocate to each DB instance in the Multi-AZ DB cluster.
	AllocatedStorage pulumix.Output[int] `pulumi:"allocatedStorage"`
	// Enable to allow major engine version upgrades when changing engine versions. Defaults to `false`.
	AllowMajorVersionUpgrade pulumix.Output[*bool] `pulumi:"allowMajorVersionUpgrade"`
	// Specifies whether any cluster modifications are applied immediately, or during the next maintenance window. Default is `false`. See [Amazon RDS Documentation for more information.](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.DBInstance.Modifying.html)
	ApplyImmediately pulumix.Output[bool] `pulumi:"applyImmediately"`
	// Amazon Resource Name (ARN) of cluster
	Arn pulumix.Output[string] `pulumi:"arn"`
	// List of EC2 Availability Zones for the DB cluster storage where DB cluster instances can be created. RDS automatically assigns 3 AZs if less than 3 AZs are configured, which will show as a difference requiring resource recreation next apply. We recommend specifying 3 AZs or using the `lifecycle` configuration block `ignoreChanges` argument if necessary. A maximum of 3 AZs can be configured.
	AvailabilityZones pulumix.ArrayOutput[string] `pulumi:"availabilityZones"`
	// Target backtrack window, in seconds. Only available for `aurora` and `aurora-mysql` engines currently. To disable backtracking, set this value to `0`. Defaults to `0`. Must be between `0` and `259200` (72 hours)
	BacktrackWindow pulumix.Output[*int] `pulumi:"backtrackWindow"`
	// Days to retain backups for. Default `1`
	BackupRetentionPeriod pulumix.Output[*int] `pulumi:"backupRetentionPeriod"`
	// The cluster identifier. If omitted, this provider will assign a random, unique identifier.
	ClusterIdentifier pulumix.Output[string] `pulumi:"clusterIdentifier"`
	// Creates a unique cluster identifier beginning with the specified prefix. Conflicts with `clusterIdentifier`.
	ClusterIdentifierPrefix pulumix.Output[string] `pulumi:"clusterIdentifierPrefix"`
	// List of RDS Instances that are a part of this cluster
	ClusterMembers pulumix.ArrayOutput[string] `pulumi:"clusterMembers"`
	// RDS Cluster Resource ID
	ClusterResourceId pulumix.Output[string] `pulumi:"clusterResourceId"`
	// Copy all Cluster `tags` to snapshots. Default is `false`.
	CopyTagsToSnapshot pulumix.Output[*bool] `pulumi:"copyTagsToSnapshot"`
	// Name for an automatically created database on cluster creation. There are different naming restrictions per database engine: [RDS Naming Constraints](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.Constraints)
	DatabaseName pulumix.Output[string] `pulumi:"databaseName"`
	// (Required for Multi-AZ DB cluster) The compute and memory capacity of each DB instance in the Multi-AZ DB cluster, for example db.m6g.xlarge. Not all DB instance classes are available in all AWS Regions, or for all database engines. For the full list of DB instance classes and availability for your engine, see [DB instance class](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html) in the Amazon RDS User Guide.
	DbClusterInstanceClass pulumix.Output[*string] `pulumi:"dbClusterInstanceClass"`
	// A cluster parameter group to associate with the cluster.
	DbClusterParameterGroupName pulumix.Output[string] `pulumi:"dbClusterParameterGroupName"`
	// Instance parameter group to associate with all instances of the DB cluster. The `dbInstanceParameterGroupName` parameter is only valid in combination with the `allowMajorVersionUpgrade` parameter.
	DbInstanceParameterGroupName pulumix.Output[*string] `pulumi:"dbInstanceParameterGroupName"`
	// DB subnet group to associate with this DB instance. **NOTE:** This must match the `dbSubnetGroupName` specified on every `rds.ClusterInstance` in the cluster.
	DbSubnetGroupName pulumix.Output[string] `pulumi:"dbSubnetGroupName"`
	// For use with RDS Custom.
	DbSystemId pulumix.Output[string] `pulumi:"dbSystemId"`
	// If the DB instance should have deletion protection enabled. The database can't be deleted when this value is set to `true`. The default is `false`.
	DeletionProtection pulumix.Output[*bool] `pulumi:"deletionProtection"`
	// Whether cluster should forward writes to an associated global cluster. Applied to secondary clusters to enable them to forward writes to an `rds.GlobalCluster`'s primary cluster. See the [Aurora Userguide documentation](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-global-database-write-forwarding.html) for more information.
	EnableGlobalWriteForwarding pulumix.Output[*bool] `pulumi:"enableGlobalWriteForwarding"`
	// Enable HTTP endpoint (data API). Only valid when `engineMode` is set to `serverless`.
	EnableHttpEndpoint pulumix.Output[*bool] `pulumi:"enableHttpEndpoint"`
	// Set of log types to export to cloudwatch. If omitted, no logs will be exported. The following log types are supported: `audit`, `error`, `general`, `slowquery`, `postgresql` (PostgreSQL).
	EnabledCloudwatchLogsExports pulumix.ArrayOutput[string] `pulumi:"enabledCloudwatchLogsExports"`
	// DNS address of the RDS instance
	Endpoint pulumix.Output[string] `pulumi:"endpoint"`
	// Name of the database engine to be used for this DB cluster. Valid Values: `aurora-mysql`, `aurora-postgresql`, `mysql`, `postgres`. (Note that `mysql` and `postgres` are Multi-AZ RDS clusters).
	Engine pulumix.Output[string] `pulumi:"engine"`
	// Database engine mode. Valid values: `global` (only valid for Aurora MySQL 1.21 and earlier), `multimaster`, `parallelquery`, `provisioned`, `serverless`. Defaults to: `provisioned`. See the [RDS User Guide](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/aurora-serverless.html) for limitations when using `serverless`.
	EngineMode pulumix.Output[*string] `pulumi:"engineMode"`
	// Database engine version. Updating this argument results in an outage. See the [Aurora MySQL](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraMySQL.Updates.html) and [Aurora Postgres](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraPostgreSQL.Updates.html) documentation for your configured engine to determine this value, or by running `aws rds describe-db-engine-versions`. For example with Aurora MySQL 2, a potential value for this argument is `5.7.mysql_aurora.2.03.2`. The value can contain a partial version where supported by the API. The actual engine version used is returned in the attribute `engineVersionActual`, , see Attribute Reference below.
	EngineVersion pulumix.Output[string] `pulumi:"engineVersion"`
	// Running version of the database.
	EngineVersionActual pulumix.Output[string] `pulumi:"engineVersionActual"`
	// Name of your final DB snapshot when this DB cluster is deleted. If omitted, no final snapshot will be made.
	FinalSnapshotIdentifier pulumix.Output[*string] `pulumi:"finalSnapshotIdentifier"`
	// Global cluster identifier specified on `rds.GlobalCluster`.
	GlobalClusterIdentifier pulumix.Output[*string] `pulumi:"globalClusterIdentifier"`
	// Route53 Hosted Zone ID of the endpoint
	HostedZoneId pulumix.Output[string] `pulumi:"hostedZoneId"`
	// Specifies whether or not mappings of AWS Identity and Access Management (IAM) accounts to database accounts is enabled. Please see [AWS Documentation](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.IAMDBAuth.html) for availability and limitations.
	IamDatabaseAuthenticationEnabled pulumix.Output[*bool] `pulumi:"iamDatabaseAuthenticationEnabled"`
	// List of ARNs for the IAM roles to associate to the RDS Cluster.
	IamRoles pulumix.ArrayOutput[string] `pulumi:"iamRoles"`
	// Amount of Provisioned IOPS (input/output operations per second) to be initially allocated for each DB instance in the Multi-AZ DB cluster. For information about valid Iops values, see [Amazon RDS Provisioned IOPS storage to improve performance](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Storage.html#USER_PIOPS) in the Amazon RDS User Guide. (This setting is required to create a Multi-AZ DB cluster). Must be a multiple between .5 and 50 of the storage amount for the DB cluster.
	Iops pulumix.Output[*int] `pulumi:"iops"`
	// ARN for the KMS encryption key. When specifying `kmsKeyId`, `storageEncrypted` needs to be set to true.
	KmsKeyId pulumix.Output[string] `pulumi:"kmsKeyId"`
	// Set to true to allow RDS to manage the master user password in Secrets Manager. Cannot be set if `masterPassword` is provided.
	ManageMasterUserPassword pulumix.Output[*bool] `pulumi:"manageMasterUserPassword"`
	// Password for the master DB user. Note that this may show up in logs, and it will be stored in the state file. Please refer to the [RDS Naming Constraints](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.Constraints). Cannot be set if `manageMasterUserPassword` is set to `true`.
	MasterPassword pulumix.Output[*string] `pulumi:"masterPassword"`
	// Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key. To use a KMS key in a different Amazon Web Services account, specify the key ARN or alias ARN. If not specified, the default KMS key for your Amazon Web Services account is used.
	MasterUserSecretKmsKeyId pulumix.Output[string] `pulumi:"masterUserSecretKmsKeyId"`
	// Block that specifies the master user secret. Only available when `manageMasterUserPassword` is set to true. Documented below.
	MasterUserSecrets pulumix.GArrayOutput[ClusterMasterUserSecret, ClusterMasterUserSecretOutput] `pulumi:"masterUserSecrets"`
	// Username for the master DB user. Please refer to the [RDS Naming Constraints](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.Constraints). This argument does not support in-place updates and cannot be changed during a restore from snapshot.
	MasterUsername pulumix.Output[string] `pulumi:"masterUsername"`
	// Network type of the cluster. Valid values: `IPV4`, `DUAL`.
	NetworkType pulumix.Output[string] `pulumi:"networkType"`
	// Port on which the DB accepts connections
	Port pulumix.Output[int] `pulumi:"port"`
	// Daily time range during which automated backups are created if automated backups are enabled using the BackupRetentionPeriod parameter.Time in UTC. Default: A 30-minute window selected at random from an 8-hour block of time per regionE.g., 04:00-09:00
	PreferredBackupWindow pulumix.Output[string] `pulumi:"preferredBackupWindow"`
	// Weekly time range during which system maintenance can occur, in (UTC) e.g., wed:04:00-wed:04:30
	PreferredMaintenanceWindow pulumix.Output[string] `pulumi:"preferredMaintenanceWindow"`
	// Read-only endpoint for the Aurora cluster, automatically
	// load-balanced across replicas
	ReaderEndpoint pulumix.Output[string] `pulumi:"readerEndpoint"`
	// ARN of a source DB cluster or DB instance if this DB cluster is to be created as a Read Replica. If DB Cluster is part of a Global Cluster, use the `lifecycle` configuration block `ignoreChanges` argument to prevent this provider from showing differences for this argument instead of configuring this value.
	ReplicationSourceIdentifier pulumix.Output[*string] `pulumi:"replicationSourceIdentifier"`
	// Nested attribute for [point in time restore](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_PIT.html). More details below.
	RestoreToPointInTime pulumix.GPtrOutput[ClusterRestoreToPointInTime, ClusterRestoreToPointInTimeOutput] `pulumi:"restoreToPointInTime"`
	S3Import             pulumix.GPtrOutput[ClusterS3Import, ClusterS3ImportOutput]                         `pulumi:"s3Import"`
	// Nested attribute with scaling properties. Only valid when `engineMode` is set to `serverless`. More details below.
	ScalingConfiguration pulumix.GPtrOutput[ClusterScalingConfiguration, ClusterScalingConfigurationOutput] `pulumi:"scalingConfiguration"`
	// Nested attribute with scaling properties for ServerlessV2. Only valid when `engineMode` is set to `provisioned`. More details below.
	Serverlessv2ScalingConfiguration pulumix.GPtrOutput[ClusterServerlessv2ScalingConfiguration, ClusterServerlessv2ScalingConfigurationOutput] `pulumi:"serverlessv2ScalingConfiguration"`
	// Determines whether a final DB snapshot is created before the DB cluster is deleted. If true is specified, no DB snapshot is created. If false is specified, a DB snapshot is created before the DB cluster is deleted, using the value from `finalSnapshotIdentifier`. Default is `false`.
	SkipFinalSnapshot pulumix.Output[*bool] `pulumi:"skipFinalSnapshot"`
	// Specifies whether or not to create this cluster from a snapshot. You can use either the name or ARN when specifying a DB cluster snapshot, or the ARN when specifying a DB snapshot. Conflicts with `globalClusterIdentifier`. Clusters cannot be restored from snapshot **and** joined to an existing global cluster in a single operation. See the [AWS documentation](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-global-database-getting-started.html#aurora-global-database.use-snapshot) or the Global Cluster Restored From Snapshot example for instructions on building a global cluster starting with a snapshot.
	SnapshotIdentifier pulumix.Output[*string] `pulumi:"snapshotIdentifier"`
	// The source region for an encrypted replica DB cluster.
	SourceRegion pulumix.Output[*string] `pulumi:"sourceRegion"`
	// Specifies whether the DB cluster is encrypted. The default is `false` for `provisioned` `engineMode` and `true` for `serverless` `engineMode`. When restoring an unencrypted `snapshotIdentifier`, the `kmsKeyId` argument must be provided to encrypt the restored cluster. The provider will only perform drift detection if a configuration value is provided.
	StorageEncrypted pulumix.Output[bool] `pulumi:"storageEncrypted"`
	// (Required for Multi-AZ DB clusters) (Forces new for Multi-AZ DB clusters) Specifies the storage type to be associated with the DB cluster. For Aurora DB clusters, `storageType` modifications can be done in-place. For Multi-AZ DB Clusters, the `iops` argument must also be set. Valid values are: `""`, `aurora-iopt1` (Aurora DB Clusters); `io1` (Multi-AZ DB Clusters). Default: `""` (Aurora DB Clusters); `io1` (Multi-AZ DB Clusters).
	StorageType pulumix.Output[string] `pulumi:"storageType"`
	// A map of tags to assign to the DB cluster. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// List of VPC security groups to associate with the Cluster
	VpcSecurityGroupIds pulumix.ArrayOutput[string] `pulumi:"vpcSecurityGroupIds"`
}

// NewCluster registers a new resource with the given unique name, arguments, and options.
func NewCluster(ctx *pulumi.Context,
	name string, args *ClusterArgs, opts ...pulumi.ResourceOption) (*Cluster, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Engine == nil {
		return nil, errors.New("invalid value for required argument 'Engine'")
	}
	if args.MasterPassword != nil {
		untypedSecretValue := pulumi.ToSecret(args.MasterPassword.ToOutput(ctx.Context()).Untyped())
		args.MasterPassword = pulumix.MustConvertTyped[*string](untypedSecretValue)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"masterPassword",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Cluster
	err := ctx.RegisterResource("aws:rds/cluster:Cluster", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCluster gets an existing Cluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCluster(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ClusterState, opts ...pulumi.ResourceOption) (*Cluster, error) {
	var resource Cluster
	err := ctx.ReadResource("aws:rds/cluster:Cluster", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Cluster resources.
type clusterState struct {
	// (Required for Multi-AZ DB cluster) The amount of storage in gibibytes (GiB) to allocate to each DB instance in the Multi-AZ DB cluster.
	AllocatedStorage *int `pulumi:"allocatedStorage"`
	// Enable to allow major engine version upgrades when changing engine versions. Defaults to `false`.
	AllowMajorVersionUpgrade *bool `pulumi:"allowMajorVersionUpgrade"`
	// Specifies whether any cluster modifications are applied immediately, or during the next maintenance window. Default is `false`. See [Amazon RDS Documentation for more information.](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.DBInstance.Modifying.html)
	ApplyImmediately *bool `pulumi:"applyImmediately"`
	// Amazon Resource Name (ARN) of cluster
	Arn *string `pulumi:"arn"`
	// List of EC2 Availability Zones for the DB cluster storage where DB cluster instances can be created. RDS automatically assigns 3 AZs if less than 3 AZs are configured, which will show as a difference requiring resource recreation next apply. We recommend specifying 3 AZs or using the `lifecycle` configuration block `ignoreChanges` argument if necessary. A maximum of 3 AZs can be configured.
	AvailabilityZones []string `pulumi:"availabilityZones"`
	// Target backtrack window, in seconds. Only available for `aurora` and `aurora-mysql` engines currently. To disable backtracking, set this value to `0`. Defaults to `0`. Must be between `0` and `259200` (72 hours)
	BacktrackWindow *int `pulumi:"backtrackWindow"`
	// Days to retain backups for. Default `1`
	BackupRetentionPeriod *int `pulumi:"backupRetentionPeriod"`
	// The cluster identifier. If omitted, this provider will assign a random, unique identifier.
	ClusterIdentifier *string `pulumi:"clusterIdentifier"`
	// Creates a unique cluster identifier beginning with the specified prefix. Conflicts with `clusterIdentifier`.
	ClusterIdentifierPrefix *string `pulumi:"clusterIdentifierPrefix"`
	// List of RDS Instances that are a part of this cluster
	ClusterMembers []string `pulumi:"clusterMembers"`
	// RDS Cluster Resource ID
	ClusterResourceId *string `pulumi:"clusterResourceId"`
	// Copy all Cluster `tags` to snapshots. Default is `false`.
	CopyTagsToSnapshot *bool `pulumi:"copyTagsToSnapshot"`
	// Name for an automatically created database on cluster creation. There are different naming restrictions per database engine: [RDS Naming Constraints](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.Constraints)
	DatabaseName *string `pulumi:"databaseName"`
	// (Required for Multi-AZ DB cluster) The compute and memory capacity of each DB instance in the Multi-AZ DB cluster, for example db.m6g.xlarge. Not all DB instance classes are available in all AWS Regions, or for all database engines. For the full list of DB instance classes and availability for your engine, see [DB instance class](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html) in the Amazon RDS User Guide.
	DbClusterInstanceClass *string `pulumi:"dbClusterInstanceClass"`
	// A cluster parameter group to associate with the cluster.
	DbClusterParameterGroupName *string `pulumi:"dbClusterParameterGroupName"`
	// Instance parameter group to associate with all instances of the DB cluster. The `dbInstanceParameterGroupName` parameter is only valid in combination with the `allowMajorVersionUpgrade` parameter.
	DbInstanceParameterGroupName *string `pulumi:"dbInstanceParameterGroupName"`
	// DB subnet group to associate with this DB instance. **NOTE:** This must match the `dbSubnetGroupName` specified on every `rds.ClusterInstance` in the cluster.
	DbSubnetGroupName *string `pulumi:"dbSubnetGroupName"`
	// For use with RDS Custom.
	DbSystemId *string `pulumi:"dbSystemId"`
	// If the DB instance should have deletion protection enabled. The database can't be deleted when this value is set to `true`. The default is `false`.
	DeletionProtection *bool `pulumi:"deletionProtection"`
	// Whether cluster should forward writes to an associated global cluster. Applied to secondary clusters to enable them to forward writes to an `rds.GlobalCluster`'s primary cluster. See the [Aurora Userguide documentation](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-global-database-write-forwarding.html) for more information.
	EnableGlobalWriteForwarding *bool `pulumi:"enableGlobalWriteForwarding"`
	// Enable HTTP endpoint (data API). Only valid when `engineMode` is set to `serverless`.
	EnableHttpEndpoint *bool `pulumi:"enableHttpEndpoint"`
	// Set of log types to export to cloudwatch. If omitted, no logs will be exported. The following log types are supported: `audit`, `error`, `general`, `slowquery`, `postgresql` (PostgreSQL).
	EnabledCloudwatchLogsExports []string `pulumi:"enabledCloudwatchLogsExports"`
	// DNS address of the RDS instance
	Endpoint *string `pulumi:"endpoint"`
	// Name of the database engine to be used for this DB cluster. Valid Values: `aurora-mysql`, `aurora-postgresql`, `mysql`, `postgres`. (Note that `mysql` and `postgres` are Multi-AZ RDS clusters).
	Engine *string `pulumi:"engine"`
	// Database engine mode. Valid values: `global` (only valid for Aurora MySQL 1.21 and earlier), `multimaster`, `parallelquery`, `provisioned`, `serverless`. Defaults to: `provisioned`. See the [RDS User Guide](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/aurora-serverless.html) for limitations when using `serverless`.
	EngineMode *string `pulumi:"engineMode"`
	// Database engine version. Updating this argument results in an outage. See the [Aurora MySQL](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraMySQL.Updates.html) and [Aurora Postgres](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraPostgreSQL.Updates.html) documentation for your configured engine to determine this value, or by running `aws rds describe-db-engine-versions`. For example with Aurora MySQL 2, a potential value for this argument is `5.7.mysql_aurora.2.03.2`. The value can contain a partial version where supported by the API. The actual engine version used is returned in the attribute `engineVersionActual`, , see Attribute Reference below.
	EngineVersion *string `pulumi:"engineVersion"`
	// Running version of the database.
	EngineVersionActual *string `pulumi:"engineVersionActual"`
	// Name of your final DB snapshot when this DB cluster is deleted. If omitted, no final snapshot will be made.
	FinalSnapshotIdentifier *string `pulumi:"finalSnapshotIdentifier"`
	// Global cluster identifier specified on `rds.GlobalCluster`.
	GlobalClusterIdentifier *string `pulumi:"globalClusterIdentifier"`
	// Route53 Hosted Zone ID of the endpoint
	HostedZoneId *string `pulumi:"hostedZoneId"`
	// Specifies whether or not mappings of AWS Identity and Access Management (IAM) accounts to database accounts is enabled. Please see [AWS Documentation](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.IAMDBAuth.html) for availability and limitations.
	IamDatabaseAuthenticationEnabled *bool `pulumi:"iamDatabaseAuthenticationEnabled"`
	// List of ARNs for the IAM roles to associate to the RDS Cluster.
	IamRoles []string `pulumi:"iamRoles"`
	// Amount of Provisioned IOPS (input/output operations per second) to be initially allocated for each DB instance in the Multi-AZ DB cluster. For information about valid Iops values, see [Amazon RDS Provisioned IOPS storage to improve performance](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Storage.html#USER_PIOPS) in the Amazon RDS User Guide. (This setting is required to create a Multi-AZ DB cluster). Must be a multiple between .5 and 50 of the storage amount for the DB cluster.
	Iops *int `pulumi:"iops"`
	// ARN for the KMS encryption key. When specifying `kmsKeyId`, `storageEncrypted` needs to be set to true.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// Set to true to allow RDS to manage the master user password in Secrets Manager. Cannot be set if `masterPassword` is provided.
	ManageMasterUserPassword *bool `pulumi:"manageMasterUserPassword"`
	// Password for the master DB user. Note that this may show up in logs, and it will be stored in the state file. Please refer to the [RDS Naming Constraints](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.Constraints). Cannot be set if `manageMasterUserPassword` is set to `true`.
	MasterPassword *string `pulumi:"masterPassword"`
	// Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key. To use a KMS key in a different Amazon Web Services account, specify the key ARN or alias ARN. If not specified, the default KMS key for your Amazon Web Services account is used.
	MasterUserSecretKmsKeyId *string `pulumi:"masterUserSecretKmsKeyId"`
	// Block that specifies the master user secret. Only available when `manageMasterUserPassword` is set to true. Documented below.
	MasterUserSecrets []ClusterMasterUserSecret `pulumi:"masterUserSecrets"`
	// Username for the master DB user. Please refer to the [RDS Naming Constraints](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.Constraints). This argument does not support in-place updates and cannot be changed during a restore from snapshot.
	MasterUsername *string `pulumi:"masterUsername"`
	// Network type of the cluster. Valid values: `IPV4`, `DUAL`.
	NetworkType *string `pulumi:"networkType"`
	// Port on which the DB accepts connections
	Port *int `pulumi:"port"`
	// Daily time range during which automated backups are created if automated backups are enabled using the BackupRetentionPeriod parameter.Time in UTC. Default: A 30-minute window selected at random from an 8-hour block of time per regionE.g., 04:00-09:00
	PreferredBackupWindow *string `pulumi:"preferredBackupWindow"`
	// Weekly time range during which system maintenance can occur, in (UTC) e.g., wed:04:00-wed:04:30
	PreferredMaintenanceWindow *string `pulumi:"preferredMaintenanceWindow"`
	// Read-only endpoint for the Aurora cluster, automatically
	// load-balanced across replicas
	ReaderEndpoint *string `pulumi:"readerEndpoint"`
	// ARN of a source DB cluster or DB instance if this DB cluster is to be created as a Read Replica. If DB Cluster is part of a Global Cluster, use the `lifecycle` configuration block `ignoreChanges` argument to prevent this provider from showing differences for this argument instead of configuring this value.
	ReplicationSourceIdentifier *string `pulumi:"replicationSourceIdentifier"`
	// Nested attribute for [point in time restore](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_PIT.html). More details below.
	RestoreToPointInTime *ClusterRestoreToPointInTime `pulumi:"restoreToPointInTime"`
	S3Import             *ClusterS3Import             `pulumi:"s3Import"`
	// Nested attribute with scaling properties. Only valid when `engineMode` is set to `serverless`. More details below.
	ScalingConfiguration *ClusterScalingConfiguration `pulumi:"scalingConfiguration"`
	// Nested attribute with scaling properties for ServerlessV2. Only valid when `engineMode` is set to `provisioned`. More details below.
	Serverlessv2ScalingConfiguration *ClusterServerlessv2ScalingConfiguration `pulumi:"serverlessv2ScalingConfiguration"`
	// Determines whether a final DB snapshot is created before the DB cluster is deleted. If true is specified, no DB snapshot is created. If false is specified, a DB snapshot is created before the DB cluster is deleted, using the value from `finalSnapshotIdentifier`. Default is `false`.
	SkipFinalSnapshot *bool `pulumi:"skipFinalSnapshot"`
	// Specifies whether or not to create this cluster from a snapshot. You can use either the name or ARN when specifying a DB cluster snapshot, or the ARN when specifying a DB snapshot. Conflicts with `globalClusterIdentifier`. Clusters cannot be restored from snapshot **and** joined to an existing global cluster in a single operation. See the [AWS documentation](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-global-database-getting-started.html#aurora-global-database.use-snapshot) or the Global Cluster Restored From Snapshot example for instructions on building a global cluster starting with a snapshot.
	SnapshotIdentifier *string `pulumi:"snapshotIdentifier"`
	// The source region for an encrypted replica DB cluster.
	SourceRegion *string `pulumi:"sourceRegion"`
	// Specifies whether the DB cluster is encrypted. The default is `false` for `provisioned` `engineMode` and `true` for `serverless` `engineMode`. When restoring an unencrypted `snapshotIdentifier`, the `kmsKeyId` argument must be provided to encrypt the restored cluster. The provider will only perform drift detection if a configuration value is provided.
	StorageEncrypted *bool `pulumi:"storageEncrypted"`
	// (Required for Multi-AZ DB clusters) (Forces new for Multi-AZ DB clusters) Specifies the storage type to be associated with the DB cluster. For Aurora DB clusters, `storageType` modifications can be done in-place. For Multi-AZ DB Clusters, the `iops` argument must also be set. Valid values are: `""`, `aurora-iopt1` (Aurora DB Clusters); `io1` (Multi-AZ DB Clusters). Default: `""` (Aurora DB Clusters); `io1` (Multi-AZ DB Clusters).
	StorageType *string `pulumi:"storageType"`
	// A map of tags to assign to the DB cluster. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// List of VPC security groups to associate with the Cluster
	VpcSecurityGroupIds []string `pulumi:"vpcSecurityGroupIds"`
}

type ClusterState struct {
	// (Required for Multi-AZ DB cluster) The amount of storage in gibibytes (GiB) to allocate to each DB instance in the Multi-AZ DB cluster.
	AllocatedStorage pulumix.Input[*int]
	// Enable to allow major engine version upgrades when changing engine versions. Defaults to `false`.
	AllowMajorVersionUpgrade pulumix.Input[*bool]
	// Specifies whether any cluster modifications are applied immediately, or during the next maintenance window. Default is `false`. See [Amazon RDS Documentation for more information.](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.DBInstance.Modifying.html)
	ApplyImmediately pulumix.Input[*bool]
	// Amazon Resource Name (ARN) of cluster
	Arn pulumix.Input[*string]
	// List of EC2 Availability Zones for the DB cluster storage where DB cluster instances can be created. RDS automatically assigns 3 AZs if less than 3 AZs are configured, which will show as a difference requiring resource recreation next apply. We recommend specifying 3 AZs or using the `lifecycle` configuration block `ignoreChanges` argument if necessary. A maximum of 3 AZs can be configured.
	AvailabilityZones pulumix.Input[[]string]
	// Target backtrack window, in seconds. Only available for `aurora` and `aurora-mysql` engines currently. To disable backtracking, set this value to `0`. Defaults to `0`. Must be between `0` and `259200` (72 hours)
	BacktrackWindow pulumix.Input[*int]
	// Days to retain backups for. Default `1`
	BackupRetentionPeriod pulumix.Input[*int]
	// The cluster identifier. If omitted, this provider will assign a random, unique identifier.
	ClusterIdentifier pulumix.Input[*string]
	// Creates a unique cluster identifier beginning with the specified prefix. Conflicts with `clusterIdentifier`.
	ClusterIdentifierPrefix pulumix.Input[*string]
	// List of RDS Instances that are a part of this cluster
	ClusterMembers pulumix.Input[[]string]
	// RDS Cluster Resource ID
	ClusterResourceId pulumix.Input[*string]
	// Copy all Cluster `tags` to snapshots. Default is `false`.
	CopyTagsToSnapshot pulumix.Input[*bool]
	// Name for an automatically created database on cluster creation. There are different naming restrictions per database engine: [RDS Naming Constraints](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.Constraints)
	DatabaseName pulumix.Input[*string]
	// (Required for Multi-AZ DB cluster) The compute and memory capacity of each DB instance in the Multi-AZ DB cluster, for example db.m6g.xlarge. Not all DB instance classes are available in all AWS Regions, or for all database engines. For the full list of DB instance classes and availability for your engine, see [DB instance class](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html) in the Amazon RDS User Guide.
	DbClusterInstanceClass pulumix.Input[*string]
	// A cluster parameter group to associate with the cluster.
	DbClusterParameterGroupName pulumix.Input[*string]
	// Instance parameter group to associate with all instances of the DB cluster. The `dbInstanceParameterGroupName` parameter is only valid in combination with the `allowMajorVersionUpgrade` parameter.
	DbInstanceParameterGroupName pulumix.Input[*string]
	// DB subnet group to associate with this DB instance. **NOTE:** This must match the `dbSubnetGroupName` specified on every `rds.ClusterInstance` in the cluster.
	DbSubnetGroupName pulumix.Input[*string]
	// For use with RDS Custom.
	DbSystemId pulumix.Input[*string]
	// If the DB instance should have deletion protection enabled. The database can't be deleted when this value is set to `true`. The default is `false`.
	DeletionProtection pulumix.Input[*bool]
	// Whether cluster should forward writes to an associated global cluster. Applied to secondary clusters to enable them to forward writes to an `rds.GlobalCluster`'s primary cluster. See the [Aurora Userguide documentation](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-global-database-write-forwarding.html) for more information.
	EnableGlobalWriteForwarding pulumix.Input[*bool]
	// Enable HTTP endpoint (data API). Only valid when `engineMode` is set to `serverless`.
	EnableHttpEndpoint pulumix.Input[*bool]
	// Set of log types to export to cloudwatch. If omitted, no logs will be exported. The following log types are supported: `audit`, `error`, `general`, `slowquery`, `postgresql` (PostgreSQL).
	EnabledCloudwatchLogsExports pulumix.Input[[]string]
	// DNS address of the RDS instance
	Endpoint pulumix.Input[*string]
	// Name of the database engine to be used for this DB cluster. Valid Values: `aurora-mysql`, `aurora-postgresql`, `mysql`, `postgres`. (Note that `mysql` and `postgres` are Multi-AZ RDS clusters).
	Engine pulumix.Input[*string]
	// Database engine mode. Valid values: `global` (only valid for Aurora MySQL 1.21 and earlier), `multimaster`, `parallelquery`, `provisioned`, `serverless`. Defaults to: `provisioned`. See the [RDS User Guide](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/aurora-serverless.html) for limitations when using `serverless`.
	EngineMode pulumix.Input[*string]
	// Database engine version. Updating this argument results in an outage. See the [Aurora MySQL](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraMySQL.Updates.html) and [Aurora Postgres](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraPostgreSQL.Updates.html) documentation for your configured engine to determine this value, or by running `aws rds describe-db-engine-versions`. For example with Aurora MySQL 2, a potential value for this argument is `5.7.mysql_aurora.2.03.2`. The value can contain a partial version where supported by the API. The actual engine version used is returned in the attribute `engineVersionActual`, , see Attribute Reference below.
	EngineVersion pulumix.Input[*string]
	// Running version of the database.
	EngineVersionActual pulumix.Input[*string]
	// Name of your final DB snapshot when this DB cluster is deleted. If omitted, no final snapshot will be made.
	FinalSnapshotIdentifier pulumix.Input[*string]
	// Global cluster identifier specified on `rds.GlobalCluster`.
	GlobalClusterIdentifier pulumix.Input[*string]
	// Route53 Hosted Zone ID of the endpoint
	HostedZoneId pulumix.Input[*string]
	// Specifies whether or not mappings of AWS Identity and Access Management (IAM) accounts to database accounts is enabled. Please see [AWS Documentation](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.IAMDBAuth.html) for availability and limitations.
	IamDatabaseAuthenticationEnabled pulumix.Input[*bool]
	// List of ARNs for the IAM roles to associate to the RDS Cluster.
	IamRoles pulumix.Input[[]string]
	// Amount of Provisioned IOPS (input/output operations per second) to be initially allocated for each DB instance in the Multi-AZ DB cluster. For information about valid Iops values, see [Amazon RDS Provisioned IOPS storage to improve performance](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Storage.html#USER_PIOPS) in the Amazon RDS User Guide. (This setting is required to create a Multi-AZ DB cluster). Must be a multiple between .5 and 50 of the storage amount for the DB cluster.
	Iops pulumix.Input[*int]
	// ARN for the KMS encryption key. When specifying `kmsKeyId`, `storageEncrypted` needs to be set to true.
	KmsKeyId pulumix.Input[*string]
	// Set to true to allow RDS to manage the master user password in Secrets Manager. Cannot be set if `masterPassword` is provided.
	ManageMasterUserPassword pulumix.Input[*bool]
	// Password for the master DB user. Note that this may show up in logs, and it will be stored in the state file. Please refer to the [RDS Naming Constraints](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.Constraints). Cannot be set if `manageMasterUserPassword` is set to `true`.
	MasterPassword pulumix.Input[*string]
	// Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key. To use a KMS key in a different Amazon Web Services account, specify the key ARN or alias ARN. If not specified, the default KMS key for your Amazon Web Services account is used.
	MasterUserSecretKmsKeyId pulumix.Input[*string]
	// Block that specifies the master user secret. Only available when `manageMasterUserPassword` is set to true. Documented below.
	MasterUserSecrets pulumix.Input[[]*ClusterMasterUserSecretArgs]
	// Username for the master DB user. Please refer to the [RDS Naming Constraints](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.Constraints). This argument does not support in-place updates and cannot be changed during a restore from snapshot.
	MasterUsername pulumix.Input[*string]
	// Network type of the cluster. Valid values: `IPV4`, `DUAL`.
	NetworkType pulumix.Input[*string]
	// Port on which the DB accepts connections
	Port pulumix.Input[*int]
	// Daily time range during which automated backups are created if automated backups are enabled using the BackupRetentionPeriod parameter.Time in UTC. Default: A 30-minute window selected at random from an 8-hour block of time per regionE.g., 04:00-09:00
	PreferredBackupWindow pulumix.Input[*string]
	// Weekly time range during which system maintenance can occur, in (UTC) e.g., wed:04:00-wed:04:30
	PreferredMaintenanceWindow pulumix.Input[*string]
	// Read-only endpoint for the Aurora cluster, automatically
	// load-balanced across replicas
	ReaderEndpoint pulumix.Input[*string]
	// ARN of a source DB cluster or DB instance if this DB cluster is to be created as a Read Replica. If DB Cluster is part of a Global Cluster, use the `lifecycle` configuration block `ignoreChanges` argument to prevent this provider from showing differences for this argument instead of configuring this value.
	ReplicationSourceIdentifier pulumix.Input[*string]
	// Nested attribute for [point in time restore](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_PIT.html). More details below.
	RestoreToPointInTime pulumix.Input[*ClusterRestoreToPointInTimeArgs]
	S3Import             pulumix.Input[*ClusterS3ImportArgs]
	// Nested attribute with scaling properties. Only valid when `engineMode` is set to `serverless`. More details below.
	ScalingConfiguration pulumix.Input[*ClusterScalingConfigurationArgs]
	// Nested attribute with scaling properties for ServerlessV2. Only valid when `engineMode` is set to `provisioned`. More details below.
	Serverlessv2ScalingConfiguration pulumix.Input[*ClusterServerlessv2ScalingConfigurationArgs]
	// Determines whether a final DB snapshot is created before the DB cluster is deleted. If true is specified, no DB snapshot is created. If false is specified, a DB snapshot is created before the DB cluster is deleted, using the value from `finalSnapshotIdentifier`. Default is `false`.
	SkipFinalSnapshot pulumix.Input[*bool]
	// Specifies whether or not to create this cluster from a snapshot. You can use either the name or ARN when specifying a DB cluster snapshot, or the ARN when specifying a DB snapshot. Conflicts with `globalClusterIdentifier`. Clusters cannot be restored from snapshot **and** joined to an existing global cluster in a single operation. See the [AWS documentation](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-global-database-getting-started.html#aurora-global-database.use-snapshot) or the Global Cluster Restored From Snapshot example for instructions on building a global cluster starting with a snapshot.
	SnapshotIdentifier pulumix.Input[*string]
	// The source region for an encrypted replica DB cluster.
	SourceRegion pulumix.Input[*string]
	// Specifies whether the DB cluster is encrypted. The default is `false` for `provisioned` `engineMode` and `true` for `serverless` `engineMode`. When restoring an unencrypted `snapshotIdentifier`, the `kmsKeyId` argument must be provided to encrypt the restored cluster. The provider will only perform drift detection if a configuration value is provided.
	StorageEncrypted pulumix.Input[*bool]
	// (Required for Multi-AZ DB clusters) (Forces new for Multi-AZ DB clusters) Specifies the storage type to be associated with the DB cluster. For Aurora DB clusters, `storageType` modifications can be done in-place. For Multi-AZ DB Clusters, the `iops` argument must also be set. Valid values are: `""`, `aurora-iopt1` (Aurora DB Clusters); `io1` (Multi-AZ DB Clusters). Default: `""` (Aurora DB Clusters); `io1` (Multi-AZ DB Clusters).
	StorageType pulumix.Input[*string]
	// A map of tags to assign to the DB cluster. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// List of VPC security groups to associate with the Cluster
	VpcSecurityGroupIds pulumix.Input[[]string]
}

func (ClusterState) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterState)(nil)).Elem()
}

type clusterArgs struct {
	// (Required for Multi-AZ DB cluster) The amount of storage in gibibytes (GiB) to allocate to each DB instance in the Multi-AZ DB cluster.
	AllocatedStorage *int `pulumi:"allocatedStorage"`
	// Enable to allow major engine version upgrades when changing engine versions. Defaults to `false`.
	AllowMajorVersionUpgrade *bool `pulumi:"allowMajorVersionUpgrade"`
	// Specifies whether any cluster modifications are applied immediately, or during the next maintenance window. Default is `false`. See [Amazon RDS Documentation for more information.](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.DBInstance.Modifying.html)
	ApplyImmediately *bool `pulumi:"applyImmediately"`
	// List of EC2 Availability Zones for the DB cluster storage where DB cluster instances can be created. RDS automatically assigns 3 AZs if less than 3 AZs are configured, which will show as a difference requiring resource recreation next apply. We recommend specifying 3 AZs or using the `lifecycle` configuration block `ignoreChanges` argument if necessary. A maximum of 3 AZs can be configured.
	AvailabilityZones []string `pulumi:"availabilityZones"`
	// Target backtrack window, in seconds. Only available for `aurora` and `aurora-mysql` engines currently. To disable backtracking, set this value to `0`. Defaults to `0`. Must be between `0` and `259200` (72 hours)
	BacktrackWindow *int `pulumi:"backtrackWindow"`
	// Days to retain backups for. Default `1`
	BackupRetentionPeriod *int `pulumi:"backupRetentionPeriod"`
	// The cluster identifier. If omitted, this provider will assign a random, unique identifier.
	ClusterIdentifier *string `pulumi:"clusterIdentifier"`
	// Creates a unique cluster identifier beginning with the specified prefix. Conflicts with `clusterIdentifier`.
	ClusterIdentifierPrefix *string `pulumi:"clusterIdentifierPrefix"`
	// List of RDS Instances that are a part of this cluster
	ClusterMembers []string `pulumi:"clusterMembers"`
	// Copy all Cluster `tags` to snapshots. Default is `false`.
	CopyTagsToSnapshot *bool `pulumi:"copyTagsToSnapshot"`
	// Name for an automatically created database on cluster creation. There are different naming restrictions per database engine: [RDS Naming Constraints](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.Constraints)
	DatabaseName *string `pulumi:"databaseName"`
	// (Required for Multi-AZ DB cluster) The compute and memory capacity of each DB instance in the Multi-AZ DB cluster, for example db.m6g.xlarge. Not all DB instance classes are available in all AWS Regions, or for all database engines. For the full list of DB instance classes and availability for your engine, see [DB instance class](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html) in the Amazon RDS User Guide.
	DbClusterInstanceClass *string `pulumi:"dbClusterInstanceClass"`
	// A cluster parameter group to associate with the cluster.
	DbClusterParameterGroupName *string `pulumi:"dbClusterParameterGroupName"`
	// Instance parameter group to associate with all instances of the DB cluster. The `dbInstanceParameterGroupName` parameter is only valid in combination with the `allowMajorVersionUpgrade` parameter.
	DbInstanceParameterGroupName *string `pulumi:"dbInstanceParameterGroupName"`
	// DB subnet group to associate with this DB instance. **NOTE:** This must match the `dbSubnetGroupName` specified on every `rds.ClusterInstance` in the cluster.
	DbSubnetGroupName *string `pulumi:"dbSubnetGroupName"`
	// For use with RDS Custom.
	DbSystemId *string `pulumi:"dbSystemId"`
	// If the DB instance should have deletion protection enabled. The database can't be deleted when this value is set to `true`. The default is `false`.
	DeletionProtection *bool `pulumi:"deletionProtection"`
	// Whether cluster should forward writes to an associated global cluster. Applied to secondary clusters to enable them to forward writes to an `rds.GlobalCluster`'s primary cluster. See the [Aurora Userguide documentation](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-global-database-write-forwarding.html) for more information.
	EnableGlobalWriteForwarding *bool `pulumi:"enableGlobalWriteForwarding"`
	// Enable HTTP endpoint (data API). Only valid when `engineMode` is set to `serverless`.
	EnableHttpEndpoint *bool `pulumi:"enableHttpEndpoint"`
	// Set of log types to export to cloudwatch. If omitted, no logs will be exported. The following log types are supported: `audit`, `error`, `general`, `slowquery`, `postgresql` (PostgreSQL).
	EnabledCloudwatchLogsExports []string `pulumi:"enabledCloudwatchLogsExports"`
	// Name of the database engine to be used for this DB cluster. Valid Values: `aurora-mysql`, `aurora-postgresql`, `mysql`, `postgres`. (Note that `mysql` and `postgres` are Multi-AZ RDS clusters).
	Engine string `pulumi:"engine"`
	// Database engine mode. Valid values: `global` (only valid for Aurora MySQL 1.21 and earlier), `multimaster`, `parallelquery`, `provisioned`, `serverless`. Defaults to: `provisioned`. See the [RDS User Guide](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/aurora-serverless.html) for limitations when using `serverless`.
	EngineMode *string `pulumi:"engineMode"`
	// Database engine version. Updating this argument results in an outage. See the [Aurora MySQL](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraMySQL.Updates.html) and [Aurora Postgres](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraPostgreSQL.Updates.html) documentation for your configured engine to determine this value, or by running `aws rds describe-db-engine-versions`. For example with Aurora MySQL 2, a potential value for this argument is `5.7.mysql_aurora.2.03.2`. The value can contain a partial version where supported by the API. The actual engine version used is returned in the attribute `engineVersionActual`, , see Attribute Reference below.
	EngineVersion *string `pulumi:"engineVersion"`
	// Name of your final DB snapshot when this DB cluster is deleted. If omitted, no final snapshot will be made.
	FinalSnapshotIdentifier *string `pulumi:"finalSnapshotIdentifier"`
	// Global cluster identifier specified on `rds.GlobalCluster`.
	GlobalClusterIdentifier *string `pulumi:"globalClusterIdentifier"`
	// Specifies whether or not mappings of AWS Identity and Access Management (IAM) accounts to database accounts is enabled. Please see [AWS Documentation](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.IAMDBAuth.html) for availability and limitations.
	IamDatabaseAuthenticationEnabled *bool `pulumi:"iamDatabaseAuthenticationEnabled"`
	// List of ARNs for the IAM roles to associate to the RDS Cluster.
	IamRoles []string `pulumi:"iamRoles"`
	// Amount of Provisioned IOPS (input/output operations per second) to be initially allocated for each DB instance in the Multi-AZ DB cluster. For information about valid Iops values, see [Amazon RDS Provisioned IOPS storage to improve performance](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Storage.html#USER_PIOPS) in the Amazon RDS User Guide. (This setting is required to create a Multi-AZ DB cluster). Must be a multiple between .5 and 50 of the storage amount for the DB cluster.
	Iops *int `pulumi:"iops"`
	// ARN for the KMS encryption key. When specifying `kmsKeyId`, `storageEncrypted` needs to be set to true.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// Set to true to allow RDS to manage the master user password in Secrets Manager. Cannot be set if `masterPassword` is provided.
	ManageMasterUserPassword *bool `pulumi:"manageMasterUserPassword"`
	// Password for the master DB user. Note that this may show up in logs, and it will be stored in the state file. Please refer to the [RDS Naming Constraints](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.Constraints). Cannot be set if `manageMasterUserPassword` is set to `true`.
	MasterPassword *string `pulumi:"masterPassword"`
	// Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key. To use a KMS key in a different Amazon Web Services account, specify the key ARN or alias ARN. If not specified, the default KMS key for your Amazon Web Services account is used.
	MasterUserSecretKmsKeyId *string `pulumi:"masterUserSecretKmsKeyId"`
	// Username for the master DB user. Please refer to the [RDS Naming Constraints](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.Constraints). This argument does not support in-place updates and cannot be changed during a restore from snapshot.
	MasterUsername *string `pulumi:"masterUsername"`
	// Network type of the cluster. Valid values: `IPV4`, `DUAL`.
	NetworkType *string `pulumi:"networkType"`
	// Port on which the DB accepts connections
	Port *int `pulumi:"port"`
	// Daily time range during which automated backups are created if automated backups are enabled using the BackupRetentionPeriod parameter.Time in UTC. Default: A 30-minute window selected at random from an 8-hour block of time per regionE.g., 04:00-09:00
	PreferredBackupWindow *string `pulumi:"preferredBackupWindow"`
	// Weekly time range during which system maintenance can occur, in (UTC) e.g., wed:04:00-wed:04:30
	PreferredMaintenanceWindow *string `pulumi:"preferredMaintenanceWindow"`
	// ARN of a source DB cluster or DB instance if this DB cluster is to be created as a Read Replica. If DB Cluster is part of a Global Cluster, use the `lifecycle` configuration block `ignoreChanges` argument to prevent this provider from showing differences for this argument instead of configuring this value.
	ReplicationSourceIdentifier *string `pulumi:"replicationSourceIdentifier"`
	// Nested attribute for [point in time restore](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_PIT.html). More details below.
	RestoreToPointInTime *ClusterRestoreToPointInTime `pulumi:"restoreToPointInTime"`
	S3Import             *ClusterS3Import             `pulumi:"s3Import"`
	// Nested attribute with scaling properties. Only valid when `engineMode` is set to `serverless`. More details below.
	ScalingConfiguration *ClusterScalingConfiguration `pulumi:"scalingConfiguration"`
	// Nested attribute with scaling properties for ServerlessV2. Only valid when `engineMode` is set to `provisioned`. More details below.
	Serverlessv2ScalingConfiguration *ClusterServerlessv2ScalingConfiguration `pulumi:"serverlessv2ScalingConfiguration"`
	// Determines whether a final DB snapshot is created before the DB cluster is deleted. If true is specified, no DB snapshot is created. If false is specified, a DB snapshot is created before the DB cluster is deleted, using the value from `finalSnapshotIdentifier`. Default is `false`.
	SkipFinalSnapshot *bool `pulumi:"skipFinalSnapshot"`
	// Specifies whether or not to create this cluster from a snapshot. You can use either the name or ARN when specifying a DB cluster snapshot, or the ARN when specifying a DB snapshot. Conflicts with `globalClusterIdentifier`. Clusters cannot be restored from snapshot **and** joined to an existing global cluster in a single operation. See the [AWS documentation](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-global-database-getting-started.html#aurora-global-database.use-snapshot) or the Global Cluster Restored From Snapshot example for instructions on building a global cluster starting with a snapshot.
	SnapshotIdentifier *string `pulumi:"snapshotIdentifier"`
	// The source region for an encrypted replica DB cluster.
	SourceRegion *string `pulumi:"sourceRegion"`
	// Specifies whether the DB cluster is encrypted. The default is `false` for `provisioned` `engineMode` and `true` for `serverless` `engineMode`. When restoring an unencrypted `snapshotIdentifier`, the `kmsKeyId` argument must be provided to encrypt the restored cluster. The provider will only perform drift detection if a configuration value is provided.
	StorageEncrypted *bool `pulumi:"storageEncrypted"`
	// (Required for Multi-AZ DB clusters) (Forces new for Multi-AZ DB clusters) Specifies the storage type to be associated with the DB cluster. For Aurora DB clusters, `storageType` modifications can be done in-place. For Multi-AZ DB Clusters, the `iops` argument must also be set. Valid values are: `""`, `aurora-iopt1` (Aurora DB Clusters); `io1` (Multi-AZ DB Clusters). Default: `""` (Aurora DB Clusters); `io1` (Multi-AZ DB Clusters).
	StorageType *string `pulumi:"storageType"`
	// A map of tags to assign to the DB cluster. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// List of VPC security groups to associate with the Cluster
	VpcSecurityGroupIds []string `pulumi:"vpcSecurityGroupIds"`
}

// The set of arguments for constructing a Cluster resource.
type ClusterArgs struct {
	// (Required for Multi-AZ DB cluster) The amount of storage in gibibytes (GiB) to allocate to each DB instance in the Multi-AZ DB cluster.
	AllocatedStorage pulumix.Input[*int]
	// Enable to allow major engine version upgrades when changing engine versions. Defaults to `false`.
	AllowMajorVersionUpgrade pulumix.Input[*bool]
	// Specifies whether any cluster modifications are applied immediately, or during the next maintenance window. Default is `false`. See [Amazon RDS Documentation for more information.](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.DBInstance.Modifying.html)
	ApplyImmediately pulumix.Input[*bool]
	// List of EC2 Availability Zones for the DB cluster storage where DB cluster instances can be created. RDS automatically assigns 3 AZs if less than 3 AZs are configured, which will show as a difference requiring resource recreation next apply. We recommend specifying 3 AZs or using the `lifecycle` configuration block `ignoreChanges` argument if necessary. A maximum of 3 AZs can be configured.
	AvailabilityZones pulumix.Input[[]string]
	// Target backtrack window, in seconds. Only available for `aurora` and `aurora-mysql` engines currently. To disable backtracking, set this value to `0`. Defaults to `0`. Must be between `0` and `259200` (72 hours)
	BacktrackWindow pulumix.Input[*int]
	// Days to retain backups for. Default `1`
	BackupRetentionPeriod pulumix.Input[*int]
	// The cluster identifier. If omitted, this provider will assign a random, unique identifier.
	ClusterIdentifier pulumix.Input[*string]
	// Creates a unique cluster identifier beginning with the specified prefix. Conflicts with `clusterIdentifier`.
	ClusterIdentifierPrefix pulumix.Input[*string]
	// List of RDS Instances that are a part of this cluster
	ClusterMembers pulumix.Input[[]string]
	// Copy all Cluster `tags` to snapshots. Default is `false`.
	CopyTagsToSnapshot pulumix.Input[*bool]
	// Name for an automatically created database on cluster creation. There are different naming restrictions per database engine: [RDS Naming Constraints](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.Constraints)
	DatabaseName pulumix.Input[*string]
	// (Required for Multi-AZ DB cluster) The compute and memory capacity of each DB instance in the Multi-AZ DB cluster, for example db.m6g.xlarge. Not all DB instance classes are available in all AWS Regions, or for all database engines. For the full list of DB instance classes and availability for your engine, see [DB instance class](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html) in the Amazon RDS User Guide.
	DbClusterInstanceClass pulumix.Input[*string]
	// A cluster parameter group to associate with the cluster.
	DbClusterParameterGroupName pulumix.Input[*string]
	// Instance parameter group to associate with all instances of the DB cluster. The `dbInstanceParameterGroupName` parameter is only valid in combination with the `allowMajorVersionUpgrade` parameter.
	DbInstanceParameterGroupName pulumix.Input[*string]
	// DB subnet group to associate with this DB instance. **NOTE:** This must match the `dbSubnetGroupName` specified on every `rds.ClusterInstance` in the cluster.
	DbSubnetGroupName pulumix.Input[*string]
	// For use with RDS Custom.
	DbSystemId pulumix.Input[*string]
	// If the DB instance should have deletion protection enabled. The database can't be deleted when this value is set to `true`. The default is `false`.
	DeletionProtection pulumix.Input[*bool]
	// Whether cluster should forward writes to an associated global cluster. Applied to secondary clusters to enable them to forward writes to an `rds.GlobalCluster`'s primary cluster. See the [Aurora Userguide documentation](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-global-database-write-forwarding.html) for more information.
	EnableGlobalWriteForwarding pulumix.Input[*bool]
	// Enable HTTP endpoint (data API). Only valid when `engineMode` is set to `serverless`.
	EnableHttpEndpoint pulumix.Input[*bool]
	// Set of log types to export to cloudwatch. If omitted, no logs will be exported. The following log types are supported: `audit`, `error`, `general`, `slowquery`, `postgresql` (PostgreSQL).
	EnabledCloudwatchLogsExports pulumix.Input[[]string]
	// Name of the database engine to be used for this DB cluster. Valid Values: `aurora-mysql`, `aurora-postgresql`, `mysql`, `postgres`. (Note that `mysql` and `postgres` are Multi-AZ RDS clusters).
	Engine pulumix.Input[string]
	// Database engine mode. Valid values: `global` (only valid for Aurora MySQL 1.21 and earlier), `multimaster`, `parallelquery`, `provisioned`, `serverless`. Defaults to: `provisioned`. See the [RDS User Guide](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/aurora-serverless.html) for limitations when using `serverless`.
	EngineMode pulumix.Input[*string]
	// Database engine version. Updating this argument results in an outage. See the [Aurora MySQL](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraMySQL.Updates.html) and [Aurora Postgres](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraPostgreSQL.Updates.html) documentation for your configured engine to determine this value, or by running `aws rds describe-db-engine-versions`. For example with Aurora MySQL 2, a potential value for this argument is `5.7.mysql_aurora.2.03.2`. The value can contain a partial version where supported by the API. The actual engine version used is returned in the attribute `engineVersionActual`, , see Attribute Reference below.
	EngineVersion pulumix.Input[*string]
	// Name of your final DB snapshot when this DB cluster is deleted. If omitted, no final snapshot will be made.
	FinalSnapshotIdentifier pulumix.Input[*string]
	// Global cluster identifier specified on `rds.GlobalCluster`.
	GlobalClusterIdentifier pulumix.Input[*string]
	// Specifies whether or not mappings of AWS Identity and Access Management (IAM) accounts to database accounts is enabled. Please see [AWS Documentation](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.IAMDBAuth.html) for availability and limitations.
	IamDatabaseAuthenticationEnabled pulumix.Input[*bool]
	// List of ARNs for the IAM roles to associate to the RDS Cluster.
	IamRoles pulumix.Input[[]string]
	// Amount of Provisioned IOPS (input/output operations per second) to be initially allocated for each DB instance in the Multi-AZ DB cluster. For information about valid Iops values, see [Amazon RDS Provisioned IOPS storage to improve performance](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Storage.html#USER_PIOPS) in the Amazon RDS User Guide. (This setting is required to create a Multi-AZ DB cluster). Must be a multiple between .5 and 50 of the storage amount for the DB cluster.
	Iops pulumix.Input[*int]
	// ARN for the KMS encryption key. When specifying `kmsKeyId`, `storageEncrypted` needs to be set to true.
	KmsKeyId pulumix.Input[*string]
	// Set to true to allow RDS to manage the master user password in Secrets Manager. Cannot be set if `masterPassword` is provided.
	ManageMasterUserPassword pulumix.Input[*bool]
	// Password for the master DB user. Note that this may show up in logs, and it will be stored in the state file. Please refer to the [RDS Naming Constraints](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.Constraints). Cannot be set if `manageMasterUserPassword` is set to `true`.
	MasterPassword pulumix.Input[*string]
	// Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key. To use a KMS key in a different Amazon Web Services account, specify the key ARN or alias ARN. If not specified, the default KMS key for your Amazon Web Services account is used.
	MasterUserSecretKmsKeyId pulumix.Input[*string]
	// Username for the master DB user. Please refer to the [RDS Naming Constraints](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.Constraints). This argument does not support in-place updates and cannot be changed during a restore from snapshot.
	MasterUsername pulumix.Input[*string]
	// Network type of the cluster. Valid values: `IPV4`, `DUAL`.
	NetworkType pulumix.Input[*string]
	// Port on which the DB accepts connections
	Port pulumix.Input[*int]
	// Daily time range during which automated backups are created if automated backups are enabled using the BackupRetentionPeriod parameter.Time in UTC. Default: A 30-minute window selected at random from an 8-hour block of time per regionE.g., 04:00-09:00
	PreferredBackupWindow pulumix.Input[*string]
	// Weekly time range during which system maintenance can occur, in (UTC) e.g., wed:04:00-wed:04:30
	PreferredMaintenanceWindow pulumix.Input[*string]
	// ARN of a source DB cluster or DB instance if this DB cluster is to be created as a Read Replica. If DB Cluster is part of a Global Cluster, use the `lifecycle` configuration block `ignoreChanges` argument to prevent this provider from showing differences for this argument instead of configuring this value.
	ReplicationSourceIdentifier pulumix.Input[*string]
	// Nested attribute for [point in time restore](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_PIT.html). More details below.
	RestoreToPointInTime pulumix.Input[*ClusterRestoreToPointInTimeArgs]
	S3Import             pulumix.Input[*ClusterS3ImportArgs]
	// Nested attribute with scaling properties. Only valid when `engineMode` is set to `serverless`. More details below.
	ScalingConfiguration pulumix.Input[*ClusterScalingConfigurationArgs]
	// Nested attribute with scaling properties for ServerlessV2. Only valid when `engineMode` is set to `provisioned`. More details below.
	Serverlessv2ScalingConfiguration pulumix.Input[*ClusterServerlessv2ScalingConfigurationArgs]
	// Determines whether a final DB snapshot is created before the DB cluster is deleted. If true is specified, no DB snapshot is created. If false is specified, a DB snapshot is created before the DB cluster is deleted, using the value from `finalSnapshotIdentifier`. Default is `false`.
	SkipFinalSnapshot pulumix.Input[*bool]
	// Specifies whether or not to create this cluster from a snapshot. You can use either the name or ARN when specifying a DB cluster snapshot, or the ARN when specifying a DB snapshot. Conflicts with `globalClusterIdentifier`. Clusters cannot be restored from snapshot **and** joined to an existing global cluster in a single operation. See the [AWS documentation](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-global-database-getting-started.html#aurora-global-database.use-snapshot) or the Global Cluster Restored From Snapshot example for instructions on building a global cluster starting with a snapshot.
	SnapshotIdentifier pulumix.Input[*string]
	// The source region for an encrypted replica DB cluster.
	SourceRegion pulumix.Input[*string]
	// Specifies whether the DB cluster is encrypted. The default is `false` for `provisioned` `engineMode` and `true` for `serverless` `engineMode`. When restoring an unencrypted `snapshotIdentifier`, the `kmsKeyId` argument must be provided to encrypt the restored cluster. The provider will only perform drift detection if a configuration value is provided.
	StorageEncrypted pulumix.Input[*bool]
	// (Required for Multi-AZ DB clusters) (Forces new for Multi-AZ DB clusters) Specifies the storage type to be associated with the DB cluster. For Aurora DB clusters, `storageType` modifications can be done in-place. For Multi-AZ DB Clusters, the `iops` argument must also be set. Valid values are: `""`, `aurora-iopt1` (Aurora DB Clusters); `io1` (Multi-AZ DB Clusters). Default: `""` (Aurora DB Clusters); `io1` (Multi-AZ DB Clusters).
	StorageType pulumix.Input[*string]
	// A map of tags to assign to the DB cluster. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// List of VPC security groups to associate with the Cluster
	VpcSecurityGroupIds pulumix.Input[[]string]
}

func (ClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterArgs)(nil)).Elem()
}

type ClusterOutput struct{ *pulumi.OutputState }

func (ClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Cluster)(nil)).Elem()
}

func (o ClusterOutput) ToClusterOutput() ClusterOutput {
	return o
}

func (o ClusterOutput) ToClusterOutputWithContext(ctx context.Context) ClusterOutput {
	return o
}

func (o ClusterOutput) ToOutput(ctx context.Context) pulumix.Output[Cluster] {
	return pulumix.Output[Cluster]{
		OutputState: o.OutputState,
	}
}

// (Required for Multi-AZ DB cluster) The amount of storage in gibibytes (GiB) to allocate to each DB instance in the Multi-AZ DB cluster.
func (o ClusterOutput) AllocatedStorage() pulumix.Output[int] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.Output[int] { return v.AllocatedStorage })
	return pulumix.Flatten[int, pulumix.Output[int]](value)
}

// Enable to allow major engine version upgrades when changing engine versions. Defaults to `false`.
func (o ClusterOutput) AllowMajorVersionUpgrade() pulumix.Output[*bool] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.Output[*bool] { return v.AllowMajorVersionUpgrade })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// Specifies whether any cluster modifications are applied immediately, or during the next maintenance window. Default is `false`. See [Amazon RDS Documentation for more information.](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.DBInstance.Modifying.html)
func (o ClusterOutput) ApplyImmediately() pulumix.Output[bool] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.Output[bool] { return v.ApplyImmediately })
	return pulumix.Flatten[bool, pulumix.Output[bool]](value)
}

// Amazon Resource Name (ARN) of cluster
func (o ClusterOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// List of EC2 Availability Zones for the DB cluster storage where DB cluster instances can be created. RDS automatically assigns 3 AZs if less than 3 AZs are configured, which will show as a difference requiring resource recreation next apply. We recommend specifying 3 AZs or using the `lifecycle` configuration block `ignoreChanges` argument if necessary. A maximum of 3 AZs can be configured.
func (o ClusterOutput) AvailabilityZones() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.ArrayOutput[string] { return v.AvailabilityZones })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// Target backtrack window, in seconds. Only available for `aurora` and `aurora-mysql` engines currently. To disable backtracking, set this value to `0`. Defaults to `0`. Must be between `0` and `259200` (72 hours)
func (o ClusterOutput) BacktrackWindow() pulumix.Output[*int] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.Output[*int] { return v.BacktrackWindow })
	return pulumix.Flatten[*int, pulumix.Output[*int]](value)
}

// Days to retain backups for. Default `1`
func (o ClusterOutput) BackupRetentionPeriod() pulumix.Output[*int] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.Output[*int] { return v.BackupRetentionPeriod })
	return pulumix.Flatten[*int, pulumix.Output[*int]](value)
}

// The cluster identifier. If omitted, this provider will assign a random, unique identifier.
func (o ClusterOutput) ClusterIdentifier() pulumix.Output[string] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.Output[string] { return v.ClusterIdentifier })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Creates a unique cluster identifier beginning with the specified prefix. Conflicts with `clusterIdentifier`.
func (o ClusterOutput) ClusterIdentifierPrefix() pulumix.Output[string] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.Output[string] { return v.ClusterIdentifierPrefix })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// List of RDS Instances that are a part of this cluster
func (o ClusterOutput) ClusterMembers() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.ArrayOutput[string] { return v.ClusterMembers })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// RDS Cluster Resource ID
func (o ClusterOutput) ClusterResourceId() pulumix.Output[string] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.Output[string] { return v.ClusterResourceId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Copy all Cluster `tags` to snapshots. Default is `false`.
func (o ClusterOutput) CopyTagsToSnapshot() pulumix.Output[*bool] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.Output[*bool] { return v.CopyTagsToSnapshot })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// Name for an automatically created database on cluster creation. There are different naming restrictions per database engine: [RDS Naming Constraints](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.Constraints)
func (o ClusterOutput) DatabaseName() pulumix.Output[string] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.Output[string] { return v.DatabaseName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// (Required for Multi-AZ DB cluster) The compute and memory capacity of each DB instance in the Multi-AZ DB cluster, for example db.m6g.xlarge. Not all DB instance classes are available in all AWS Regions, or for all database engines. For the full list of DB instance classes and availability for your engine, see [DB instance class](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html) in the Amazon RDS User Guide.
func (o ClusterOutput) DbClusterInstanceClass() pulumix.Output[*string] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.Output[*string] { return v.DbClusterInstanceClass })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// A cluster parameter group to associate with the cluster.
func (o ClusterOutput) DbClusterParameterGroupName() pulumix.Output[string] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.Output[string] { return v.DbClusterParameterGroupName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Instance parameter group to associate with all instances of the DB cluster. The `dbInstanceParameterGroupName` parameter is only valid in combination with the `allowMajorVersionUpgrade` parameter.
func (o ClusterOutput) DbInstanceParameterGroupName() pulumix.Output[*string] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.Output[*string] { return v.DbInstanceParameterGroupName })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// DB subnet group to associate with this DB instance. **NOTE:** This must match the `dbSubnetGroupName` specified on every `rds.ClusterInstance` in the cluster.
func (o ClusterOutput) DbSubnetGroupName() pulumix.Output[string] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.Output[string] { return v.DbSubnetGroupName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// For use with RDS Custom.
func (o ClusterOutput) DbSystemId() pulumix.Output[string] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.Output[string] { return v.DbSystemId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// If the DB instance should have deletion protection enabled. The database can't be deleted when this value is set to `true`. The default is `false`.
func (o ClusterOutput) DeletionProtection() pulumix.Output[*bool] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.Output[*bool] { return v.DeletionProtection })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// Whether cluster should forward writes to an associated global cluster. Applied to secondary clusters to enable them to forward writes to an `rds.GlobalCluster`'s primary cluster. See the [Aurora Userguide documentation](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-global-database-write-forwarding.html) for more information.
func (o ClusterOutput) EnableGlobalWriteForwarding() pulumix.Output[*bool] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.Output[*bool] { return v.EnableGlobalWriteForwarding })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// Enable HTTP endpoint (data API). Only valid when `engineMode` is set to `serverless`.
func (o ClusterOutput) EnableHttpEndpoint() pulumix.Output[*bool] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.Output[*bool] { return v.EnableHttpEndpoint })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// Set of log types to export to cloudwatch. If omitted, no logs will be exported. The following log types are supported: `audit`, `error`, `general`, `slowquery`, `postgresql` (PostgreSQL).
func (o ClusterOutput) EnabledCloudwatchLogsExports() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.ArrayOutput[string] { return v.EnabledCloudwatchLogsExports })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// DNS address of the RDS instance
func (o ClusterOutput) Endpoint() pulumix.Output[string] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.Output[string] { return v.Endpoint })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Name of the database engine to be used for this DB cluster. Valid Values: `aurora-mysql`, `aurora-postgresql`, `mysql`, `postgres`. (Note that `mysql` and `postgres` are Multi-AZ RDS clusters).
func (o ClusterOutput) Engine() pulumix.Output[string] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.Output[string] { return v.Engine })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Database engine mode. Valid values: `global` (only valid for Aurora MySQL 1.21 and earlier), `multimaster`, `parallelquery`, `provisioned`, `serverless`. Defaults to: `provisioned`. See the [RDS User Guide](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/aurora-serverless.html) for limitations when using `serverless`.
func (o ClusterOutput) EngineMode() pulumix.Output[*string] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.Output[*string] { return v.EngineMode })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Database engine version. Updating this argument results in an outage. See the [Aurora MySQL](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraMySQL.Updates.html) and [Aurora Postgres](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraPostgreSQL.Updates.html) documentation for your configured engine to determine this value, or by running `aws rds describe-db-engine-versions`. For example with Aurora MySQL 2, a potential value for this argument is `5.7.mysql_aurora.2.03.2`. The value can contain a partial version where supported by the API. The actual engine version used is returned in the attribute `engineVersionActual`, , see Attribute Reference below.
func (o ClusterOutput) EngineVersion() pulumix.Output[string] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.Output[string] { return v.EngineVersion })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Running version of the database.
func (o ClusterOutput) EngineVersionActual() pulumix.Output[string] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.Output[string] { return v.EngineVersionActual })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Name of your final DB snapshot when this DB cluster is deleted. If omitted, no final snapshot will be made.
func (o ClusterOutput) FinalSnapshotIdentifier() pulumix.Output[*string] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.Output[*string] { return v.FinalSnapshotIdentifier })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Global cluster identifier specified on `rds.GlobalCluster`.
func (o ClusterOutput) GlobalClusterIdentifier() pulumix.Output[*string] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.Output[*string] { return v.GlobalClusterIdentifier })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Route53 Hosted Zone ID of the endpoint
func (o ClusterOutput) HostedZoneId() pulumix.Output[string] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.Output[string] { return v.HostedZoneId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Specifies whether or not mappings of AWS Identity and Access Management (IAM) accounts to database accounts is enabled. Please see [AWS Documentation](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.IAMDBAuth.html) for availability and limitations.
func (o ClusterOutput) IamDatabaseAuthenticationEnabled() pulumix.Output[*bool] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.Output[*bool] { return v.IamDatabaseAuthenticationEnabled })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// List of ARNs for the IAM roles to associate to the RDS Cluster.
func (o ClusterOutput) IamRoles() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.ArrayOutput[string] { return v.IamRoles })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// Amount of Provisioned IOPS (input/output operations per second) to be initially allocated for each DB instance in the Multi-AZ DB cluster. For information about valid Iops values, see [Amazon RDS Provisioned IOPS storage to improve performance](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Storage.html#USER_PIOPS) in the Amazon RDS User Guide. (This setting is required to create a Multi-AZ DB cluster). Must be a multiple between .5 and 50 of the storage amount for the DB cluster.
func (o ClusterOutput) Iops() pulumix.Output[*int] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.Output[*int] { return v.Iops })
	return pulumix.Flatten[*int, pulumix.Output[*int]](value)
}

// ARN for the KMS encryption key. When specifying `kmsKeyId`, `storageEncrypted` needs to be set to true.
func (o ClusterOutput) KmsKeyId() pulumix.Output[string] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.Output[string] { return v.KmsKeyId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Set to true to allow RDS to manage the master user password in Secrets Manager. Cannot be set if `masterPassword` is provided.
func (o ClusterOutput) ManageMasterUserPassword() pulumix.Output[*bool] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.Output[*bool] { return v.ManageMasterUserPassword })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// Password for the master DB user. Note that this may show up in logs, and it will be stored in the state file. Please refer to the [RDS Naming Constraints](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.Constraints). Cannot be set if `manageMasterUserPassword` is set to `true`.
func (o ClusterOutput) MasterPassword() pulumix.Output[*string] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.Output[*string] { return v.MasterPassword })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key. To use a KMS key in a different Amazon Web Services account, specify the key ARN or alias ARN. If not specified, the default KMS key for your Amazon Web Services account is used.
func (o ClusterOutput) MasterUserSecretKmsKeyId() pulumix.Output[string] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.Output[string] { return v.MasterUserSecretKmsKeyId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Block that specifies the master user secret. Only available when `manageMasterUserPassword` is set to true. Documented below.
func (o ClusterOutput) MasterUserSecrets() pulumix.GArrayOutput[ClusterMasterUserSecret, ClusterMasterUserSecretOutput] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.GArrayOutput[ClusterMasterUserSecret, ClusterMasterUserSecretOutput] {
		return v.MasterUserSecrets
	})
	unwrapped := pulumix.Flatten[[]ClusterMasterUserSecret, pulumix.GArrayOutput[ClusterMasterUserSecret, ClusterMasterUserSecretOutput]](value)
	return pulumix.GArrayOutput[ClusterMasterUserSecret, ClusterMasterUserSecretOutput]{OutputState: unwrapped.OutputState}
}

// Username for the master DB user. Please refer to the [RDS Naming Constraints](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.Constraints). This argument does not support in-place updates and cannot be changed during a restore from snapshot.
func (o ClusterOutput) MasterUsername() pulumix.Output[string] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.Output[string] { return v.MasterUsername })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Network type of the cluster. Valid values: `IPV4`, `DUAL`.
func (o ClusterOutput) NetworkType() pulumix.Output[string] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.Output[string] { return v.NetworkType })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Port on which the DB accepts connections
func (o ClusterOutput) Port() pulumix.Output[int] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.Output[int] { return v.Port })
	return pulumix.Flatten[int, pulumix.Output[int]](value)
}

// Daily time range during which automated backups are created if automated backups are enabled using the BackupRetentionPeriod parameter.Time in UTC. Default: A 30-minute window selected at random from an 8-hour block of time per regionE.g., 04:00-09:00
func (o ClusterOutput) PreferredBackupWindow() pulumix.Output[string] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.Output[string] { return v.PreferredBackupWindow })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Weekly time range during which system maintenance can occur, in (UTC) e.g., wed:04:00-wed:04:30
func (o ClusterOutput) PreferredMaintenanceWindow() pulumix.Output[string] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.Output[string] { return v.PreferredMaintenanceWindow })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Read-only endpoint for the Aurora cluster, automatically
// load-balanced across replicas
func (o ClusterOutput) ReaderEndpoint() pulumix.Output[string] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.Output[string] { return v.ReaderEndpoint })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// ARN of a source DB cluster or DB instance if this DB cluster is to be created as a Read Replica. If DB Cluster is part of a Global Cluster, use the `lifecycle` configuration block `ignoreChanges` argument to prevent this provider from showing differences for this argument instead of configuring this value.
func (o ClusterOutput) ReplicationSourceIdentifier() pulumix.Output[*string] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.Output[*string] { return v.ReplicationSourceIdentifier })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Nested attribute for [point in time restore](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_PIT.html). More details below.
func (o ClusterOutput) RestoreToPointInTime() pulumix.GPtrOutput[ClusterRestoreToPointInTime, ClusterRestoreToPointInTimeOutput] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.GPtrOutput[ClusterRestoreToPointInTime, ClusterRestoreToPointInTimeOutput] {
		return v.RestoreToPointInTime
	})
	unwrapped := pulumix.Flatten[*ClusterRestoreToPointInTime, pulumix.GPtrOutput[ClusterRestoreToPointInTime, ClusterRestoreToPointInTimeOutput]](value)
	return pulumix.GPtrOutput[ClusterRestoreToPointInTime, ClusterRestoreToPointInTimeOutput]{OutputState: unwrapped.OutputState}
}

func (o ClusterOutput) S3Import() pulumix.GPtrOutput[ClusterS3Import, ClusterS3ImportOutput] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.GPtrOutput[ClusterS3Import, ClusterS3ImportOutput] { return v.S3Import })
	unwrapped := pulumix.Flatten[*ClusterS3Import, pulumix.GPtrOutput[ClusterS3Import, ClusterS3ImportOutput]](value)
	return pulumix.GPtrOutput[ClusterS3Import, ClusterS3ImportOutput]{OutputState: unwrapped.OutputState}
}

// Nested attribute with scaling properties. Only valid when `engineMode` is set to `serverless`. More details below.
func (o ClusterOutput) ScalingConfiguration() pulumix.GPtrOutput[ClusterScalingConfiguration, ClusterScalingConfigurationOutput] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.GPtrOutput[ClusterScalingConfiguration, ClusterScalingConfigurationOutput] {
		return v.ScalingConfiguration
	})
	unwrapped := pulumix.Flatten[*ClusterScalingConfiguration, pulumix.GPtrOutput[ClusterScalingConfiguration, ClusterScalingConfigurationOutput]](value)
	return pulumix.GPtrOutput[ClusterScalingConfiguration, ClusterScalingConfigurationOutput]{OutputState: unwrapped.OutputState}
}

// Nested attribute with scaling properties for ServerlessV2. Only valid when `engineMode` is set to `provisioned`. More details below.
func (o ClusterOutput) Serverlessv2ScalingConfiguration() pulumix.GPtrOutput[ClusterServerlessv2ScalingConfiguration, ClusterServerlessv2ScalingConfigurationOutput] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.GPtrOutput[ClusterServerlessv2ScalingConfiguration, ClusterServerlessv2ScalingConfigurationOutput] {
		return v.Serverlessv2ScalingConfiguration
	})
	unwrapped := pulumix.Flatten[*ClusterServerlessv2ScalingConfiguration, pulumix.GPtrOutput[ClusterServerlessv2ScalingConfiguration, ClusterServerlessv2ScalingConfigurationOutput]](value)
	return pulumix.GPtrOutput[ClusterServerlessv2ScalingConfiguration, ClusterServerlessv2ScalingConfigurationOutput]{OutputState: unwrapped.OutputState}
}

// Determines whether a final DB snapshot is created before the DB cluster is deleted. If true is specified, no DB snapshot is created. If false is specified, a DB snapshot is created before the DB cluster is deleted, using the value from `finalSnapshotIdentifier`. Default is `false`.
func (o ClusterOutput) SkipFinalSnapshot() pulumix.Output[*bool] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.Output[*bool] { return v.SkipFinalSnapshot })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// Specifies whether or not to create this cluster from a snapshot. You can use either the name or ARN when specifying a DB cluster snapshot, or the ARN when specifying a DB snapshot. Conflicts with `globalClusterIdentifier`. Clusters cannot be restored from snapshot **and** joined to an existing global cluster in a single operation. See the [AWS documentation](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-global-database-getting-started.html#aurora-global-database.use-snapshot) or the Global Cluster Restored From Snapshot example for instructions on building a global cluster starting with a snapshot.
func (o ClusterOutput) SnapshotIdentifier() pulumix.Output[*string] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.Output[*string] { return v.SnapshotIdentifier })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The source region for an encrypted replica DB cluster.
func (o ClusterOutput) SourceRegion() pulumix.Output[*string] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.Output[*string] { return v.SourceRegion })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Specifies whether the DB cluster is encrypted. The default is `false` for `provisioned` `engineMode` and `true` for `serverless` `engineMode`. When restoring an unencrypted `snapshotIdentifier`, the `kmsKeyId` argument must be provided to encrypt the restored cluster. The provider will only perform drift detection if a configuration value is provided.
func (o ClusterOutput) StorageEncrypted() pulumix.Output[bool] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.Output[bool] { return v.StorageEncrypted })
	return pulumix.Flatten[bool, pulumix.Output[bool]](value)
}

// (Required for Multi-AZ DB clusters) (Forces new for Multi-AZ DB clusters) Specifies the storage type to be associated with the DB cluster. For Aurora DB clusters, `storageType` modifications can be done in-place. For Multi-AZ DB Clusters, the `iops` argument must also be set. Valid values are: `""`, `aurora-iopt1` (Aurora DB Clusters); `io1` (Multi-AZ DB Clusters). Default: `""` (Aurora DB Clusters); `io1` (Multi-AZ DB Clusters).
func (o ClusterOutput) StorageType() pulumix.Output[string] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.Output[string] { return v.StorageType })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A map of tags to assign to the DB cluster. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o ClusterOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o ClusterOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// List of VPC security groups to associate with the Cluster
func (o ClusterOutput) VpcSecurityGroupIds() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.ArrayOutput[string] { return v.VpcSecurityGroupIds })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(ClusterOutput{})
}
