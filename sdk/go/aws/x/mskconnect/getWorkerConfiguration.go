// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mskconnect

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Get information on an Amazon MSK Connect Worker Configuration.
func LookupWorkerConfiguration(ctx *pulumi.Context, args *LookupWorkerConfigurationArgs, opts ...pulumi.InvokeOption) (*LookupWorkerConfigurationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupWorkerConfigurationResult
	err := ctx.Invoke("aws:mskconnect/getWorkerConfiguration:getWorkerConfiguration", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getWorkerConfiguration.
type LookupWorkerConfigurationArgs struct {
	// Name of the worker configuration.
	Name string `pulumi:"name"`
}

// A collection of values returned by getWorkerConfiguration.
type LookupWorkerConfigurationResult struct {
	// the ARN of the worker configuration.
	Arn string `pulumi:"arn"`
	// a summary description of the worker configuration.
	Description string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// an ID of the latest successfully created revision of the worker configuration.
	LatestRevision int    `pulumi:"latestRevision"`
	Name           string `pulumi:"name"`
	// contents of connect-distributed.properties file.
	PropertiesFileContent string `pulumi:"propertiesFileContent"`
}

func LookupWorkerConfigurationOutput(ctx *pulumi.Context, args LookupWorkerConfigurationOutputArgs, opts ...pulumi.InvokeOption) LookupWorkerConfigurationResultOutput {
	outputResult := pulumix.ApplyErr[*LookupWorkerConfigurationArgs](args.ToOutput(), func(plainArgs *LookupWorkerConfigurationArgs) (*LookupWorkerConfigurationResult, error) {
		return LookupWorkerConfiguration(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[LookupWorkerConfigurationResultOutput, *LookupWorkerConfigurationResult](outputResult)
}

// A collection of arguments for invoking getWorkerConfiguration.
type LookupWorkerConfigurationOutputArgs struct {
	// Name of the worker configuration.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (args LookupWorkerConfigurationOutputArgs) ToOutput() pulumix.Output[*LookupWorkerConfigurationArgs] {
	allArgs := pulumix.All(
		args.Name.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *LookupWorkerConfigurationArgs {
		return &LookupWorkerConfigurationArgs{
			Name: resolvedArgs[0].(string),
		}
	})
}

type LookupWorkerConfigurationResultOutput struct{ *pulumi.OutputState }

func (LookupWorkerConfigurationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkerConfigurationResult)(nil)).Elem()
}

func (o LookupWorkerConfigurationResultOutput) ToOutput(context.Context) pulumix.Output[*LookupWorkerConfigurationResult] {
	return pulumix.Output[*LookupWorkerConfigurationResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupWorkerConfigurationResultOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[*LookupWorkerConfigurationResult](o, func(v *LookupWorkerConfigurationResult) string { return v.Arn })
}

func (o LookupWorkerConfigurationResultOutput) Description() pulumix.Output[string] {
	return pulumix.Apply[*LookupWorkerConfigurationResult](o, func(v *LookupWorkerConfigurationResult) string { return v.Description })
}

func (o LookupWorkerConfigurationResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*LookupWorkerConfigurationResult](o, func(v *LookupWorkerConfigurationResult) string { return v.Id })
}

func (o LookupWorkerConfigurationResultOutput) LatestRevision() pulumix.Output[int] {
	return pulumix.Apply[*LookupWorkerConfigurationResult](o, func(v *LookupWorkerConfigurationResult) int { return v.LatestRevision })
}

func (o LookupWorkerConfigurationResultOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[*LookupWorkerConfigurationResult](o, func(v *LookupWorkerConfigurationResult) string { return v.Name })
}

func (o LookupWorkerConfigurationResultOutput) PropertiesFileContent() pulumix.Output[string] {
	return pulumix.Apply[*LookupWorkerConfigurationResult](o, func(v *LookupWorkerConfigurationResult) string { return v.PropertiesFileContent })
}
