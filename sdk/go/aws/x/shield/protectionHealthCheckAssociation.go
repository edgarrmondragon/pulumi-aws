// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package shield

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Creates an association between a Route53 Health Check and a Shield Advanced protected resource.
// This association uses the health of your applications to improve responsiveness and accuracy in attack detection and mitigation.
//
// Blog post: [AWS Shield Advanced now supports Health Based Detection](https://aws.amazon.com/about-aws/whats-new/2020/02/aws-shield-advanced-now-supports-health-based-detection/)
type ProtectionHealthCheckAssociation struct {
	pulumi.CustomResourceState

	// The ARN (Amazon Resource Name) of the Route53 Health Check resource which will be associated to the protected resource.
	HealthCheckArn pulumix.Output[string] `pulumi:"healthCheckArn"`
	// The ID of the protected resource.
	ShieldProtectionId pulumix.Output[string] `pulumi:"shieldProtectionId"`
}

// NewProtectionHealthCheckAssociation registers a new resource with the given unique name, arguments, and options.
func NewProtectionHealthCheckAssociation(ctx *pulumi.Context,
	name string, args *ProtectionHealthCheckAssociationArgs, opts ...pulumi.ResourceOption) (*ProtectionHealthCheckAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.HealthCheckArn == nil {
		return nil, errors.New("invalid value for required argument 'HealthCheckArn'")
	}
	if args.ShieldProtectionId == nil {
		return nil, errors.New("invalid value for required argument 'ShieldProtectionId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ProtectionHealthCheckAssociation
	err := ctx.RegisterResource("aws:shield/protectionHealthCheckAssociation:ProtectionHealthCheckAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProtectionHealthCheckAssociation gets an existing ProtectionHealthCheckAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProtectionHealthCheckAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProtectionHealthCheckAssociationState, opts ...pulumi.ResourceOption) (*ProtectionHealthCheckAssociation, error) {
	var resource ProtectionHealthCheckAssociation
	err := ctx.ReadResource("aws:shield/protectionHealthCheckAssociation:ProtectionHealthCheckAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ProtectionHealthCheckAssociation resources.
type protectionHealthCheckAssociationState struct {
	// The ARN (Amazon Resource Name) of the Route53 Health Check resource which will be associated to the protected resource.
	HealthCheckArn *string `pulumi:"healthCheckArn"`
	// The ID of the protected resource.
	ShieldProtectionId *string `pulumi:"shieldProtectionId"`
}

type ProtectionHealthCheckAssociationState struct {
	// The ARN (Amazon Resource Name) of the Route53 Health Check resource which will be associated to the protected resource.
	HealthCheckArn pulumix.Input[*string]
	// The ID of the protected resource.
	ShieldProtectionId pulumix.Input[*string]
}

func (ProtectionHealthCheckAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*protectionHealthCheckAssociationState)(nil)).Elem()
}

type protectionHealthCheckAssociationArgs struct {
	// The ARN (Amazon Resource Name) of the Route53 Health Check resource which will be associated to the protected resource.
	HealthCheckArn string `pulumi:"healthCheckArn"`
	// The ID of the protected resource.
	ShieldProtectionId string `pulumi:"shieldProtectionId"`
}

// The set of arguments for constructing a ProtectionHealthCheckAssociation resource.
type ProtectionHealthCheckAssociationArgs struct {
	// The ARN (Amazon Resource Name) of the Route53 Health Check resource which will be associated to the protected resource.
	HealthCheckArn pulumix.Input[string]
	// The ID of the protected resource.
	ShieldProtectionId pulumix.Input[string]
}

func (ProtectionHealthCheckAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*protectionHealthCheckAssociationArgs)(nil)).Elem()
}

type ProtectionHealthCheckAssociationOutput struct{ *pulumi.OutputState }

func (ProtectionHealthCheckAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtectionHealthCheckAssociation)(nil)).Elem()
}

func (o ProtectionHealthCheckAssociationOutput) ToProtectionHealthCheckAssociationOutput() ProtectionHealthCheckAssociationOutput {
	return o
}

func (o ProtectionHealthCheckAssociationOutput) ToProtectionHealthCheckAssociationOutputWithContext(ctx context.Context) ProtectionHealthCheckAssociationOutput {
	return o
}

func (o ProtectionHealthCheckAssociationOutput) ToOutput(ctx context.Context) pulumix.Output[ProtectionHealthCheckAssociation] {
	return pulumix.Output[ProtectionHealthCheckAssociation]{
		OutputState: o.OutputState,
	}
}

// The ARN (Amazon Resource Name) of the Route53 Health Check resource which will be associated to the protected resource.
func (o ProtectionHealthCheckAssociationOutput) HealthCheckArn() pulumix.Output[string] {
	value := pulumix.Apply[ProtectionHealthCheckAssociation](o, func(v ProtectionHealthCheckAssociation) pulumix.Output[string] { return v.HealthCheckArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The ID of the protected resource.
func (o ProtectionHealthCheckAssociationOutput) ShieldProtectionId() pulumix.Output[string] {
	value := pulumix.Apply[ProtectionHealthCheckAssociation](o, func(v ProtectionHealthCheckAssociation) pulumix.Output[string] { return v.ShieldProtectionId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(ProtectionHealthCheckAssociationOutput{})
}
