// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package controltower

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Allows the application of pre-defined controls to organizational units. For more information on usage, please see the
// [AWS Control Tower User Guide](https://docs.aws.amazon.com/controltower/latest/userguide/enable-guardrails.html).
type ControlTowerControl struct {
	pulumi.CustomResourceState

	// The ARN of the control. Only Strongly recommended and Elective controls are permitted, with the exception of the Region deny guardrail.
	ControlIdentifier pulumix.Output[string] `pulumi:"controlIdentifier"`
	// The ARN of the organizational unit.
	TargetIdentifier pulumix.Output[string] `pulumi:"targetIdentifier"`
}

// NewControlTowerControl registers a new resource with the given unique name, arguments, and options.
func NewControlTowerControl(ctx *pulumi.Context,
	name string, args *ControlTowerControlArgs, opts ...pulumi.ResourceOption) (*ControlTowerControl, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ControlIdentifier == nil {
		return nil, errors.New("invalid value for required argument 'ControlIdentifier'")
	}
	if args.TargetIdentifier == nil {
		return nil, errors.New("invalid value for required argument 'TargetIdentifier'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ControlTowerControl
	err := ctx.RegisterResource("aws:controltower/controlTowerControl:ControlTowerControl", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetControlTowerControl gets an existing ControlTowerControl resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetControlTowerControl(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ControlTowerControlState, opts ...pulumi.ResourceOption) (*ControlTowerControl, error) {
	var resource ControlTowerControl
	err := ctx.ReadResource("aws:controltower/controlTowerControl:ControlTowerControl", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ControlTowerControl resources.
type controlTowerControlState struct {
	// The ARN of the control. Only Strongly recommended and Elective controls are permitted, with the exception of the Region deny guardrail.
	ControlIdentifier *string `pulumi:"controlIdentifier"`
	// The ARN of the organizational unit.
	TargetIdentifier *string `pulumi:"targetIdentifier"`
}

type ControlTowerControlState struct {
	// The ARN of the control. Only Strongly recommended and Elective controls are permitted, with the exception of the Region deny guardrail.
	ControlIdentifier pulumix.Input[*string]
	// The ARN of the organizational unit.
	TargetIdentifier pulumix.Input[*string]
}

func (ControlTowerControlState) ElementType() reflect.Type {
	return reflect.TypeOf((*controlTowerControlState)(nil)).Elem()
}

type controlTowerControlArgs struct {
	// The ARN of the control. Only Strongly recommended and Elective controls are permitted, with the exception of the Region deny guardrail.
	ControlIdentifier string `pulumi:"controlIdentifier"`
	// The ARN of the organizational unit.
	TargetIdentifier string `pulumi:"targetIdentifier"`
}

// The set of arguments for constructing a ControlTowerControl resource.
type ControlTowerControlArgs struct {
	// The ARN of the control. Only Strongly recommended and Elective controls are permitted, with the exception of the Region deny guardrail.
	ControlIdentifier pulumix.Input[string]
	// The ARN of the organizational unit.
	TargetIdentifier pulumix.Input[string]
}

func (ControlTowerControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*controlTowerControlArgs)(nil)).Elem()
}

type ControlTowerControlOutput struct{ *pulumi.OutputState }

func (ControlTowerControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ControlTowerControl)(nil)).Elem()
}

func (o ControlTowerControlOutput) ToControlTowerControlOutput() ControlTowerControlOutput {
	return o
}

func (o ControlTowerControlOutput) ToControlTowerControlOutputWithContext(ctx context.Context) ControlTowerControlOutput {
	return o
}

func (o ControlTowerControlOutput) ToOutput(ctx context.Context) pulumix.Output[ControlTowerControl] {
	return pulumix.Output[ControlTowerControl]{
		OutputState: o.OutputState,
	}
}

// The ARN of the control. Only Strongly recommended and Elective controls are permitted, with the exception of the Region deny guardrail.
func (o ControlTowerControlOutput) ControlIdentifier() pulumix.Output[string] {
	value := pulumix.Apply[ControlTowerControl](o, func(v ControlTowerControl) pulumix.Output[string] { return v.ControlIdentifier })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The ARN of the organizational unit.
func (o ControlTowerControlOutput) TargetIdentifier() pulumix.Output[string] {
	value := pulumix.Apply[ControlTowerControl](o, func(v ControlTowerControl) pulumix.Output[string] { return v.TargetIdentifier })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(ControlTowerControlOutput{})
}
