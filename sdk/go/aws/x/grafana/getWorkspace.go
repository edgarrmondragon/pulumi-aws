// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package grafana

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an Amazon Managed Grafana workspace data source.
func LookupWorkspace(ctx *pulumi.Context, args *LookupWorkspaceArgs, opts ...pulumi.InvokeOption) (*LookupWorkspaceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupWorkspaceResult
	err := ctx.Invoke("aws:grafana/getWorkspace:getWorkspace", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getWorkspace.
type LookupWorkspaceArgs struct {
	// Tags assigned to the resource
	Tags map[string]string `pulumi:"tags"`
	// Grafana workspace ID.
	WorkspaceId string `pulumi:"workspaceId"`
}

// A collection of values returned by getWorkspace.
type LookupWorkspaceResult struct {
	// (Required) Type of account access for the workspace. Valid values are `CURRENT_ACCOUNT` and `ORGANIZATION`. If `ORGANIZATION` is specified, then `organizationalUnits` must also be present.
	AccountAccessType string `pulumi:"accountAccessType"`
	// ARN of the Grafana workspace.
	Arn string `pulumi:"arn"`
	// (Required) Authentication providers for the workspace. Valid values are `AWS_SSO`, `SAML`, or both.
	AuthenticationProviders []string `pulumi:"authenticationProviders"`
	// Creation date of the Grafana workspace.
	CreatedDate string `pulumi:"createdDate"`
	// Data sources for the workspace.
	DataSources []string `pulumi:"dataSources"`
	// Workspace description.
	Description string `pulumi:"description"`
	// Endpoint of the Grafana workspace.
	Endpoint string `pulumi:"endpoint"`
	// Version of Grafana running on the workspace.
	GrafanaVersion string `pulumi:"grafanaVersion"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Last updated date of the Grafana workspace.
	LastUpdatedDate string `pulumi:"lastUpdatedDate"`
	// Grafana workspace name.
	Name string `pulumi:"name"`
	// The notification destinations.
	NotificationDestinations []string `pulumi:"notificationDestinations"`
	// The role name that the workspace uses to access resources through Amazon Organizations.
	OrganizationRoleName string `pulumi:"organizationRoleName"`
	// The Amazon Organizations organizational units that the workspace is authorized to use data sources from.
	OrganizationalUnits []string `pulumi:"organizationalUnits"`
	// Permission type of the workspace.
	PermissionType string `pulumi:"permissionType"`
	// IAM role ARN that the workspace assumes.
	RoleArn                 string `pulumi:"roleArn"`
	SamlConfigurationStatus string `pulumi:"samlConfigurationStatus"`
	// AWS CloudFormation stack set name that provisions IAM roles to be used by the workspace.
	StackSetName string `pulumi:"stackSetName"`
	// Status of the Grafana workspace.
	Status string `pulumi:"status"`
	// Tags assigned to the resource
	Tags        map[string]string `pulumi:"tags"`
	WorkspaceId string            `pulumi:"workspaceId"`
}

func LookupWorkspaceOutput(ctx *pulumi.Context, args LookupWorkspaceOutputArgs, opts ...pulumi.InvokeOption) LookupWorkspaceResultOutput {
	outputResult := pulumix.ApplyErr[*LookupWorkspaceArgs](args.ToOutput(), func(plainArgs *LookupWorkspaceArgs) (*LookupWorkspaceResult, error) {
		return LookupWorkspace(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[LookupWorkspaceResultOutput, *LookupWorkspaceResult](outputResult)
}

// A collection of arguments for invoking getWorkspace.
type LookupWorkspaceOutputArgs struct {
	// Tags assigned to the resource
	Tags pulumix.Input[map[string]string] `pulumi:"tags"`
	// Grafana workspace ID.
	WorkspaceId pulumix.Input[string] `pulumi:"workspaceId"`
}

func (args LookupWorkspaceOutputArgs) ToOutput() pulumix.Output[*LookupWorkspaceArgs] {
	allArgs := pulumix.All(
		args.Tags.ToOutput(context.Background()).AsAny(),
		args.WorkspaceId.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *LookupWorkspaceArgs {
		return &LookupWorkspaceArgs{
			Tags:        resolvedArgs[0].(map[string]string),
			WorkspaceId: resolvedArgs[1].(string),
		}
	})
}

type LookupWorkspaceResultOutput struct{ *pulumi.OutputState }

func (LookupWorkspaceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkspaceResult)(nil)).Elem()
}

func (o LookupWorkspaceResultOutput) ToOutput(context.Context) pulumix.Output[*LookupWorkspaceResult] {
	return pulumix.Output[*LookupWorkspaceResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupWorkspaceResultOutput) AccountAccessType() pulumix.Output[string] {
	return pulumix.Apply[*LookupWorkspaceResult](o, func(v *LookupWorkspaceResult) string { return v.AccountAccessType })
}

func (o LookupWorkspaceResultOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[*LookupWorkspaceResult](o, func(v *LookupWorkspaceResult) string { return v.Arn })
}

func (o LookupWorkspaceResultOutput) AuthenticationProviders() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[*LookupWorkspaceResult](o, func(v *LookupWorkspaceResult) []string { return v.AuthenticationProviders })
	return pulumix.ArrayOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o LookupWorkspaceResultOutput) CreatedDate() pulumix.Output[string] {
	return pulumix.Apply[*LookupWorkspaceResult](o, func(v *LookupWorkspaceResult) string { return v.CreatedDate })
}

func (o LookupWorkspaceResultOutput) DataSources() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[*LookupWorkspaceResult](o, func(v *LookupWorkspaceResult) []string { return v.DataSources })
	return pulumix.ArrayOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o LookupWorkspaceResultOutput) Description() pulumix.Output[string] {
	return pulumix.Apply[*LookupWorkspaceResult](o, func(v *LookupWorkspaceResult) string { return v.Description })
}

func (o LookupWorkspaceResultOutput) Endpoint() pulumix.Output[string] {
	return pulumix.Apply[*LookupWorkspaceResult](o, func(v *LookupWorkspaceResult) string { return v.Endpoint })
}

func (o LookupWorkspaceResultOutput) GrafanaVersion() pulumix.Output[string] {
	return pulumix.Apply[*LookupWorkspaceResult](o, func(v *LookupWorkspaceResult) string { return v.GrafanaVersion })
}

func (o LookupWorkspaceResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*LookupWorkspaceResult](o, func(v *LookupWorkspaceResult) string { return v.Id })
}

func (o LookupWorkspaceResultOutput) LastUpdatedDate() pulumix.Output[string] {
	return pulumix.Apply[*LookupWorkspaceResult](o, func(v *LookupWorkspaceResult) string { return v.LastUpdatedDate })
}

func (o LookupWorkspaceResultOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[*LookupWorkspaceResult](o, func(v *LookupWorkspaceResult) string { return v.Name })
}

func (o LookupWorkspaceResultOutput) NotificationDestinations() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[*LookupWorkspaceResult](o, func(v *LookupWorkspaceResult) []string { return v.NotificationDestinations })
	return pulumix.ArrayOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o LookupWorkspaceResultOutput) OrganizationRoleName() pulumix.Output[string] {
	return pulumix.Apply[*LookupWorkspaceResult](o, func(v *LookupWorkspaceResult) string { return v.OrganizationRoleName })
}

func (o LookupWorkspaceResultOutput) OrganizationalUnits() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[*LookupWorkspaceResult](o, func(v *LookupWorkspaceResult) []string { return v.OrganizationalUnits })
	return pulumix.ArrayOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o LookupWorkspaceResultOutput) PermissionType() pulumix.Output[string] {
	return pulumix.Apply[*LookupWorkspaceResult](o, func(v *LookupWorkspaceResult) string { return v.PermissionType })
}

func (o LookupWorkspaceResultOutput) RoleArn() pulumix.Output[string] {
	return pulumix.Apply[*LookupWorkspaceResult](o, func(v *LookupWorkspaceResult) string { return v.RoleArn })
}

func (o LookupWorkspaceResultOutput) SamlConfigurationStatus() pulumix.Output[string] {
	return pulumix.Apply[*LookupWorkspaceResult](o, func(v *LookupWorkspaceResult) string { return v.SamlConfigurationStatus })
}

func (o LookupWorkspaceResultOutput) StackSetName() pulumix.Output[string] {
	return pulumix.Apply[*LookupWorkspaceResult](o, func(v *LookupWorkspaceResult) string { return v.StackSetName })
}

func (o LookupWorkspaceResultOutput) Status() pulumix.Output[string] {
	return pulumix.Apply[*LookupWorkspaceResult](o, func(v *LookupWorkspaceResult) string { return v.Status })
}

func (o LookupWorkspaceResultOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[*LookupWorkspaceResult](o, func(v *LookupWorkspaceResult) map[string]string { return v.Tags })
	return pulumix.MapOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o LookupWorkspaceResultOutput) WorkspaceId() pulumix.Output[string] {
	return pulumix.Apply[*LookupWorkspaceResult](o, func(v *LookupWorkspaceResult) string { return v.WorkspaceId })
}
