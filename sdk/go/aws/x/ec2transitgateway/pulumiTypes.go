// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2transitgateway

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type InstanceConnectEndpointTimeouts struct {
	Create *string `pulumi:"create"`
	Delete *string `pulumi:"delete"`
}

type InstanceConnectEndpointTimeoutsArgs struct {
	Create pulumix.Input[*string] `pulumi:"create"`
	Delete pulumix.Input[*string] `pulumi:"delete"`
}

func (InstanceConnectEndpointTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceConnectEndpointTimeouts)(nil)).Elem()
}

func (i InstanceConnectEndpointTimeoutsArgs) ToInstanceConnectEndpointTimeoutsOutput() InstanceConnectEndpointTimeoutsOutput {
	return i.ToInstanceConnectEndpointTimeoutsOutputWithContext(context.Background())
}

func (i InstanceConnectEndpointTimeoutsArgs) ToInstanceConnectEndpointTimeoutsOutputWithContext(ctx context.Context) InstanceConnectEndpointTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConnectEndpointTimeoutsOutput)
}

func (i *InstanceConnectEndpointTimeoutsArgs) ToOutput(ctx context.Context) pulumix.Output[*InstanceConnectEndpointTimeoutsArgs] {
	return pulumix.Val(i)
}

type InstanceConnectEndpointTimeoutsOutput struct{ *pulumi.OutputState }

func (InstanceConnectEndpointTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceConnectEndpointTimeouts)(nil)).Elem()
}

func (o InstanceConnectEndpointTimeoutsOutput) ToInstanceConnectEndpointTimeoutsOutput() InstanceConnectEndpointTimeoutsOutput {
	return o
}

func (o InstanceConnectEndpointTimeoutsOutput) ToInstanceConnectEndpointTimeoutsOutputWithContext(ctx context.Context) InstanceConnectEndpointTimeoutsOutput {
	return o
}

func (o InstanceConnectEndpointTimeoutsOutput) ToOutput(ctx context.Context) pulumix.Output[InstanceConnectEndpointTimeouts] {
	return pulumix.Output[InstanceConnectEndpointTimeouts]{
		OutputState: o.OutputState,
	}
}

func (o InstanceConnectEndpointTimeoutsOutput) Create() pulumix.Output[*string] {
	return pulumix.Apply[InstanceConnectEndpointTimeouts](o, func(v InstanceConnectEndpointTimeouts) *string { return v.Create })
}

func (o InstanceConnectEndpointTimeoutsOutput) Delete() pulumix.Output[*string] {
	return pulumix.Apply[InstanceConnectEndpointTimeouts](o, func(v InstanceConnectEndpointTimeouts) *string { return v.Delete })
}

type GetAttachmentFilter struct {
	// Name of the field to filter by, as defined by the [underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayAttachments.html).
	Name string `pulumi:"name"`
	// List of one or more values for the filter.
	Values []string `pulumi:"values"`
}

type GetAttachmentFilterArgs struct {
	// Name of the field to filter by, as defined by the [underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayAttachments.html).
	Name pulumix.Input[string] `pulumi:"name"`
	// List of one or more values for the filter.
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetAttachmentFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAttachmentFilter)(nil)).Elem()
}

func (i GetAttachmentFilterArgs) ToGetAttachmentFilterOutput() GetAttachmentFilterOutput {
	return i.ToGetAttachmentFilterOutputWithContext(context.Background())
}

func (i GetAttachmentFilterArgs) ToGetAttachmentFilterOutputWithContext(ctx context.Context) GetAttachmentFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAttachmentFilterOutput)
}

func (i *GetAttachmentFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetAttachmentFilterArgs] {
	return pulumix.Val(i)
}

type GetAttachmentFilterOutput struct{ *pulumi.OutputState }

func (GetAttachmentFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAttachmentFilter)(nil)).Elem()
}

func (o GetAttachmentFilterOutput) ToGetAttachmentFilterOutput() GetAttachmentFilterOutput {
	return o
}

func (o GetAttachmentFilterOutput) ToGetAttachmentFilterOutputWithContext(ctx context.Context) GetAttachmentFilterOutput {
	return o
}

func (o GetAttachmentFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetAttachmentFilter] {
	return pulumix.Output[GetAttachmentFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the field to filter by, as defined by the [underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayAttachments.html).
func (o GetAttachmentFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetAttachmentFilter](o, func(v GetAttachmentFilter) string { return v.Name })
}

// List of one or more values for the filter.
func (o GetAttachmentFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetAttachmentFilter](o, func(v GetAttachmentFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetAttachmentsFilter struct {
	// Name of the filter check available value on [official documentation](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayAttachments.html)
	Name string `pulumi:"name"`
	// List of one or more values for the filter.
	Values []string `pulumi:"values"`
}

type GetAttachmentsFilterArgs struct {
	// Name of the filter check available value on [official documentation](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayAttachments.html)
	Name pulumix.Input[string] `pulumi:"name"`
	// List of one or more values for the filter.
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetAttachmentsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAttachmentsFilter)(nil)).Elem()
}

func (i GetAttachmentsFilterArgs) ToGetAttachmentsFilterOutput() GetAttachmentsFilterOutput {
	return i.ToGetAttachmentsFilterOutputWithContext(context.Background())
}

func (i GetAttachmentsFilterArgs) ToGetAttachmentsFilterOutputWithContext(ctx context.Context) GetAttachmentsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAttachmentsFilterOutput)
}

func (i *GetAttachmentsFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetAttachmentsFilterArgs] {
	return pulumix.Val(i)
}

type GetAttachmentsFilterOutput struct{ *pulumi.OutputState }

func (GetAttachmentsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAttachmentsFilter)(nil)).Elem()
}

func (o GetAttachmentsFilterOutput) ToGetAttachmentsFilterOutput() GetAttachmentsFilterOutput {
	return o
}

func (o GetAttachmentsFilterOutput) ToGetAttachmentsFilterOutputWithContext(ctx context.Context) GetAttachmentsFilterOutput {
	return o
}

func (o GetAttachmentsFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetAttachmentsFilter] {
	return pulumix.Output[GetAttachmentsFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the filter check available value on [official documentation](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayAttachments.html)
func (o GetAttachmentsFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetAttachmentsFilter](o, func(v GetAttachmentsFilter) string { return v.Name })
}

// List of one or more values for the filter.
func (o GetAttachmentsFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetAttachmentsFilter](o, func(v GetAttachmentsFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetConnectFilter struct {
	// Name of the filter.
	Name string `pulumi:"name"`
	// List of one or more values for the filter.
	Values []string `pulumi:"values"`
}

type GetConnectFilterArgs struct {
	// Name of the filter.
	Name pulumix.Input[string] `pulumi:"name"`
	// List of one or more values for the filter.
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetConnectFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectFilter)(nil)).Elem()
}

func (i GetConnectFilterArgs) ToGetConnectFilterOutput() GetConnectFilterOutput {
	return i.ToGetConnectFilterOutputWithContext(context.Background())
}

func (i GetConnectFilterArgs) ToGetConnectFilterOutputWithContext(ctx context.Context) GetConnectFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectFilterOutput)
}

func (i *GetConnectFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetConnectFilterArgs] {
	return pulumix.Val(i)
}

type GetConnectFilterOutput struct{ *pulumi.OutputState }

func (GetConnectFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectFilter)(nil)).Elem()
}

func (o GetConnectFilterOutput) ToGetConnectFilterOutput() GetConnectFilterOutput {
	return o
}

func (o GetConnectFilterOutput) ToGetConnectFilterOutputWithContext(ctx context.Context) GetConnectFilterOutput {
	return o
}

func (o GetConnectFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetConnectFilter] {
	return pulumix.Output[GetConnectFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the filter.
func (o GetConnectFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetConnectFilter](o, func(v GetConnectFilter) string { return v.Name })
}

// List of one or more values for the filter.
func (o GetConnectFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetConnectFilter](o, func(v GetConnectFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetConnectPeerFilter struct {
	// Name of the filter.
	Name string `pulumi:"name"`
	// List of one or more values for the filter.
	Values []string `pulumi:"values"`
}

type GetConnectPeerFilterArgs struct {
	// Name of the filter.
	Name pulumix.Input[string] `pulumi:"name"`
	// List of one or more values for the filter.
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetConnectPeerFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectPeerFilter)(nil)).Elem()
}

func (i GetConnectPeerFilterArgs) ToGetConnectPeerFilterOutput() GetConnectPeerFilterOutput {
	return i.ToGetConnectPeerFilterOutputWithContext(context.Background())
}

func (i GetConnectPeerFilterArgs) ToGetConnectPeerFilterOutputWithContext(ctx context.Context) GetConnectPeerFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectPeerFilterOutput)
}

func (i *GetConnectPeerFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetConnectPeerFilterArgs] {
	return pulumix.Val(i)
}

type GetConnectPeerFilterOutput struct{ *pulumi.OutputState }

func (GetConnectPeerFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectPeerFilter)(nil)).Elem()
}

func (o GetConnectPeerFilterOutput) ToGetConnectPeerFilterOutput() GetConnectPeerFilterOutput {
	return o
}

func (o GetConnectPeerFilterOutput) ToGetConnectPeerFilterOutputWithContext(ctx context.Context) GetConnectPeerFilterOutput {
	return o
}

func (o GetConnectPeerFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetConnectPeerFilter] {
	return pulumix.Output[GetConnectPeerFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the filter.
func (o GetConnectPeerFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetConnectPeerFilter](o, func(v GetConnectPeerFilter) string { return v.Name })
}

// List of one or more values for the filter.
func (o GetConnectPeerFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetConnectPeerFilter](o, func(v GetConnectPeerFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetDirectConnectGatewayAttachmentFilter struct {
	// Name of the filter field. Valid values can be found in the [EC2 DescribeTransitGatewayAttachments API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayAttachments.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
	Values []string `pulumi:"values"`
}

type GetDirectConnectGatewayAttachmentFilterArgs struct {
	// Name of the filter field. Valid values can be found in the [EC2 DescribeTransitGatewayAttachments API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayAttachments.html).
	Name pulumix.Input[string] `pulumi:"name"`
	// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetDirectConnectGatewayAttachmentFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDirectConnectGatewayAttachmentFilter)(nil)).Elem()
}

func (i GetDirectConnectGatewayAttachmentFilterArgs) ToGetDirectConnectGatewayAttachmentFilterOutput() GetDirectConnectGatewayAttachmentFilterOutput {
	return i.ToGetDirectConnectGatewayAttachmentFilterOutputWithContext(context.Background())
}

func (i GetDirectConnectGatewayAttachmentFilterArgs) ToGetDirectConnectGatewayAttachmentFilterOutputWithContext(ctx context.Context) GetDirectConnectGatewayAttachmentFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDirectConnectGatewayAttachmentFilterOutput)
}

func (i *GetDirectConnectGatewayAttachmentFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetDirectConnectGatewayAttachmentFilterArgs] {
	return pulumix.Val(i)
}

type GetDirectConnectGatewayAttachmentFilterOutput struct{ *pulumi.OutputState }

func (GetDirectConnectGatewayAttachmentFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDirectConnectGatewayAttachmentFilter)(nil)).Elem()
}

func (o GetDirectConnectGatewayAttachmentFilterOutput) ToGetDirectConnectGatewayAttachmentFilterOutput() GetDirectConnectGatewayAttachmentFilterOutput {
	return o
}

func (o GetDirectConnectGatewayAttachmentFilterOutput) ToGetDirectConnectGatewayAttachmentFilterOutputWithContext(ctx context.Context) GetDirectConnectGatewayAttachmentFilterOutput {
	return o
}

func (o GetDirectConnectGatewayAttachmentFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetDirectConnectGatewayAttachmentFilter] {
	return pulumix.Output[GetDirectConnectGatewayAttachmentFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the filter field. Valid values can be found in the [EC2 DescribeTransitGatewayAttachments API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayAttachments.html).
func (o GetDirectConnectGatewayAttachmentFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetDirectConnectGatewayAttachmentFilter](o, func(v GetDirectConnectGatewayAttachmentFilter) string { return v.Name })
}

// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
func (o GetDirectConnectGatewayAttachmentFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetDirectConnectGatewayAttachmentFilter](o, func(v GetDirectConnectGatewayAttachmentFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetMulticastDomainAssociationType struct {
	// The ID of the subnet associated with the transit gateway multicast domain.
	SubnetId string `pulumi:"subnetId"`
	// The ID of the transit gateway attachment.
	TransitGatewayAttachmentId string `pulumi:"transitGatewayAttachmentId"`
}

type GetMulticastDomainAssociationTypeArgs struct {
	// The ID of the subnet associated with the transit gateway multicast domain.
	SubnetId pulumix.Input[string] `pulumi:"subnetId"`
	// The ID of the transit gateway attachment.
	TransitGatewayAttachmentId pulumix.Input[string] `pulumi:"transitGatewayAttachmentId"`
}

func (GetMulticastDomainAssociationTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMulticastDomainAssociationType)(nil)).Elem()
}

func (i GetMulticastDomainAssociationTypeArgs) ToGetMulticastDomainAssociationTypeOutput() GetMulticastDomainAssociationTypeOutput {
	return i.ToGetMulticastDomainAssociationTypeOutputWithContext(context.Background())
}

func (i GetMulticastDomainAssociationTypeArgs) ToGetMulticastDomainAssociationTypeOutputWithContext(ctx context.Context) GetMulticastDomainAssociationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMulticastDomainAssociationTypeOutput)
}

func (i *GetMulticastDomainAssociationTypeArgs) ToOutput(ctx context.Context) pulumix.Output[*GetMulticastDomainAssociationTypeArgs] {
	return pulumix.Val(i)
}

type GetMulticastDomainAssociationTypeOutput struct{ *pulumi.OutputState }

func (GetMulticastDomainAssociationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMulticastDomainAssociationType)(nil)).Elem()
}

func (o GetMulticastDomainAssociationTypeOutput) ToGetMulticastDomainAssociationTypeOutput() GetMulticastDomainAssociationTypeOutput {
	return o
}

func (o GetMulticastDomainAssociationTypeOutput) ToGetMulticastDomainAssociationTypeOutputWithContext(ctx context.Context) GetMulticastDomainAssociationTypeOutput {
	return o
}

func (o GetMulticastDomainAssociationTypeOutput) ToOutput(ctx context.Context) pulumix.Output[GetMulticastDomainAssociationType] {
	return pulumix.Output[GetMulticastDomainAssociationType]{
		OutputState: o.OutputState,
	}
}

// The ID of the subnet associated with the transit gateway multicast domain.
func (o GetMulticastDomainAssociationTypeOutput) SubnetId() pulumix.Output[string] {
	return pulumix.Apply[GetMulticastDomainAssociationType](o, func(v GetMulticastDomainAssociationType) string { return v.SubnetId })
}

// The ID of the transit gateway attachment.
func (o GetMulticastDomainAssociationTypeOutput) TransitGatewayAttachmentId() pulumix.Output[string] {
	return pulumix.Apply[GetMulticastDomainAssociationType](o, func(v GetMulticastDomainAssociationType) string { return v.TransitGatewayAttachmentId })
}

type GetMulticastDomainFilter struct {
	// Name of the field to filter by, as defined by [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayMulticastDomains.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field. A multicast domain will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

type GetMulticastDomainFilterArgs struct {
	// Name of the field to filter by, as defined by [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayMulticastDomains.html).
	Name pulumix.Input[string] `pulumi:"name"`
	// Set of values that are accepted for the given field. A multicast domain will be selected if any one of the given values matches.
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetMulticastDomainFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMulticastDomainFilter)(nil)).Elem()
}

func (i GetMulticastDomainFilterArgs) ToGetMulticastDomainFilterOutput() GetMulticastDomainFilterOutput {
	return i.ToGetMulticastDomainFilterOutputWithContext(context.Background())
}

func (i GetMulticastDomainFilterArgs) ToGetMulticastDomainFilterOutputWithContext(ctx context.Context) GetMulticastDomainFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMulticastDomainFilterOutput)
}

func (i *GetMulticastDomainFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetMulticastDomainFilterArgs] {
	return pulumix.Val(i)
}

type GetMulticastDomainFilterOutput struct{ *pulumi.OutputState }

func (GetMulticastDomainFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMulticastDomainFilter)(nil)).Elem()
}

func (o GetMulticastDomainFilterOutput) ToGetMulticastDomainFilterOutput() GetMulticastDomainFilterOutput {
	return o
}

func (o GetMulticastDomainFilterOutput) ToGetMulticastDomainFilterOutputWithContext(ctx context.Context) GetMulticastDomainFilterOutput {
	return o
}

func (o GetMulticastDomainFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetMulticastDomainFilter] {
	return pulumix.Output[GetMulticastDomainFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the field to filter by, as defined by [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayMulticastDomains.html).
func (o GetMulticastDomainFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetMulticastDomainFilter](o, func(v GetMulticastDomainFilter) string { return v.Name })
}

// Set of values that are accepted for the given field. A multicast domain will be selected if any one of the given values matches.
func (o GetMulticastDomainFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetMulticastDomainFilter](o, func(v GetMulticastDomainFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetMulticastDomainMember struct {
	// The IP address assigned to the transit gateway multicast group.
	GroupIpAddress string `pulumi:"groupIpAddress"`
	// The group members' network interface ID.
	NetworkInterfaceId string `pulumi:"networkInterfaceId"`
}

type GetMulticastDomainMemberArgs struct {
	// The IP address assigned to the transit gateway multicast group.
	GroupIpAddress pulumix.Input[string] `pulumi:"groupIpAddress"`
	// The group members' network interface ID.
	NetworkInterfaceId pulumix.Input[string] `pulumi:"networkInterfaceId"`
}

func (GetMulticastDomainMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMulticastDomainMember)(nil)).Elem()
}

func (i GetMulticastDomainMemberArgs) ToGetMulticastDomainMemberOutput() GetMulticastDomainMemberOutput {
	return i.ToGetMulticastDomainMemberOutputWithContext(context.Background())
}

func (i GetMulticastDomainMemberArgs) ToGetMulticastDomainMemberOutputWithContext(ctx context.Context) GetMulticastDomainMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMulticastDomainMemberOutput)
}

func (i *GetMulticastDomainMemberArgs) ToOutput(ctx context.Context) pulumix.Output[*GetMulticastDomainMemberArgs] {
	return pulumix.Val(i)
}

type GetMulticastDomainMemberOutput struct{ *pulumi.OutputState }

func (GetMulticastDomainMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMulticastDomainMember)(nil)).Elem()
}

func (o GetMulticastDomainMemberOutput) ToGetMulticastDomainMemberOutput() GetMulticastDomainMemberOutput {
	return o
}

func (o GetMulticastDomainMemberOutput) ToGetMulticastDomainMemberOutputWithContext(ctx context.Context) GetMulticastDomainMemberOutput {
	return o
}

func (o GetMulticastDomainMemberOutput) ToOutput(ctx context.Context) pulumix.Output[GetMulticastDomainMember] {
	return pulumix.Output[GetMulticastDomainMember]{
		OutputState: o.OutputState,
	}
}

// The IP address assigned to the transit gateway multicast group.
func (o GetMulticastDomainMemberOutput) GroupIpAddress() pulumix.Output[string] {
	return pulumix.Apply[GetMulticastDomainMember](o, func(v GetMulticastDomainMember) string { return v.GroupIpAddress })
}

// The group members' network interface ID.
func (o GetMulticastDomainMemberOutput) NetworkInterfaceId() pulumix.Output[string] {
	return pulumix.Apply[GetMulticastDomainMember](o, func(v GetMulticastDomainMember) string { return v.NetworkInterfaceId })
}

type GetMulticastDomainSource struct {
	// The IP address assigned to the transit gateway multicast group.
	GroupIpAddress string `pulumi:"groupIpAddress"`
	// The group members' network interface ID.
	NetworkInterfaceId string `pulumi:"networkInterfaceId"`
}

type GetMulticastDomainSourceArgs struct {
	// The IP address assigned to the transit gateway multicast group.
	GroupIpAddress pulumix.Input[string] `pulumi:"groupIpAddress"`
	// The group members' network interface ID.
	NetworkInterfaceId pulumix.Input[string] `pulumi:"networkInterfaceId"`
}

func (GetMulticastDomainSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMulticastDomainSource)(nil)).Elem()
}

func (i GetMulticastDomainSourceArgs) ToGetMulticastDomainSourceOutput() GetMulticastDomainSourceOutput {
	return i.ToGetMulticastDomainSourceOutputWithContext(context.Background())
}

func (i GetMulticastDomainSourceArgs) ToGetMulticastDomainSourceOutputWithContext(ctx context.Context) GetMulticastDomainSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMulticastDomainSourceOutput)
}

func (i *GetMulticastDomainSourceArgs) ToOutput(ctx context.Context) pulumix.Output[*GetMulticastDomainSourceArgs] {
	return pulumix.Val(i)
}

type GetMulticastDomainSourceOutput struct{ *pulumi.OutputState }

func (GetMulticastDomainSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMulticastDomainSource)(nil)).Elem()
}

func (o GetMulticastDomainSourceOutput) ToGetMulticastDomainSourceOutput() GetMulticastDomainSourceOutput {
	return o
}

func (o GetMulticastDomainSourceOutput) ToGetMulticastDomainSourceOutputWithContext(ctx context.Context) GetMulticastDomainSourceOutput {
	return o
}

func (o GetMulticastDomainSourceOutput) ToOutput(ctx context.Context) pulumix.Output[GetMulticastDomainSource] {
	return pulumix.Output[GetMulticastDomainSource]{
		OutputState: o.OutputState,
	}
}

// The IP address assigned to the transit gateway multicast group.
func (o GetMulticastDomainSourceOutput) GroupIpAddress() pulumix.Output[string] {
	return pulumix.Apply[GetMulticastDomainSource](o, func(v GetMulticastDomainSource) string { return v.GroupIpAddress })
}

// The group members' network interface ID.
func (o GetMulticastDomainSourceOutput) NetworkInterfaceId() pulumix.Output[string] {
	return pulumix.Apply[GetMulticastDomainSource](o, func(v GetMulticastDomainSource) string { return v.NetworkInterfaceId })
}

type GetPeeringAttachmentFilter struct {
	// Name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayPeeringAttachments.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// An EC2 Transit Gateway Peering Attachment be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

type GetPeeringAttachmentFilterArgs struct {
	// Name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayPeeringAttachments.html).
	Name pulumix.Input[string] `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// An EC2 Transit Gateway Peering Attachment be selected if any one of the given values matches.
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetPeeringAttachmentFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPeeringAttachmentFilter)(nil)).Elem()
}

func (i GetPeeringAttachmentFilterArgs) ToGetPeeringAttachmentFilterOutput() GetPeeringAttachmentFilterOutput {
	return i.ToGetPeeringAttachmentFilterOutputWithContext(context.Background())
}

func (i GetPeeringAttachmentFilterArgs) ToGetPeeringAttachmentFilterOutputWithContext(ctx context.Context) GetPeeringAttachmentFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPeeringAttachmentFilterOutput)
}

func (i *GetPeeringAttachmentFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetPeeringAttachmentFilterArgs] {
	return pulumix.Val(i)
}

type GetPeeringAttachmentFilterOutput struct{ *pulumi.OutputState }

func (GetPeeringAttachmentFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPeeringAttachmentFilter)(nil)).Elem()
}

func (o GetPeeringAttachmentFilterOutput) ToGetPeeringAttachmentFilterOutput() GetPeeringAttachmentFilterOutput {
	return o
}

func (o GetPeeringAttachmentFilterOutput) ToGetPeeringAttachmentFilterOutputWithContext(ctx context.Context) GetPeeringAttachmentFilterOutput {
	return o
}

func (o GetPeeringAttachmentFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetPeeringAttachmentFilter] {
	return pulumix.Output[GetPeeringAttachmentFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the field to filter by, as defined by
// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayPeeringAttachments.html).
func (o GetPeeringAttachmentFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetPeeringAttachmentFilter](o, func(v GetPeeringAttachmentFilter) string { return v.Name })
}

// Set of values that are accepted for the given field.
// An EC2 Transit Gateway Peering Attachment be selected if any one of the given values matches.
func (o GetPeeringAttachmentFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetPeeringAttachmentFilter](o, func(v GetPeeringAttachmentFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetRouteTableAssociationsFilter struct {
	// Name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetTransitGatewayRouteTableAssociations.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A Transit Gateway Route Table will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

type GetRouteTableAssociationsFilterArgs struct {
	// Name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetTransitGatewayRouteTableAssociations.html).
	Name pulumix.Input[string] `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A Transit Gateway Route Table will be selected if any one of the given values matches.
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetRouteTableAssociationsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTableAssociationsFilter)(nil)).Elem()
}

func (i GetRouteTableAssociationsFilterArgs) ToGetRouteTableAssociationsFilterOutput() GetRouteTableAssociationsFilterOutput {
	return i.ToGetRouteTableAssociationsFilterOutputWithContext(context.Background())
}

func (i GetRouteTableAssociationsFilterArgs) ToGetRouteTableAssociationsFilterOutputWithContext(ctx context.Context) GetRouteTableAssociationsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTableAssociationsFilterOutput)
}

func (i *GetRouteTableAssociationsFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetRouteTableAssociationsFilterArgs] {
	return pulumix.Val(i)
}

type GetRouteTableAssociationsFilterOutput struct{ *pulumi.OutputState }

func (GetRouteTableAssociationsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTableAssociationsFilter)(nil)).Elem()
}

func (o GetRouteTableAssociationsFilterOutput) ToGetRouteTableAssociationsFilterOutput() GetRouteTableAssociationsFilterOutput {
	return o
}

func (o GetRouteTableAssociationsFilterOutput) ToGetRouteTableAssociationsFilterOutputWithContext(ctx context.Context) GetRouteTableAssociationsFilterOutput {
	return o
}

func (o GetRouteTableAssociationsFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetRouteTableAssociationsFilter] {
	return pulumix.Output[GetRouteTableAssociationsFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the field to filter by, as defined by
// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetTransitGatewayRouteTableAssociations.html).
func (o GetRouteTableAssociationsFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetRouteTableAssociationsFilter](o, func(v GetRouteTableAssociationsFilter) string { return v.Name })
}

// Set of values that are accepted for the given field.
// A Transit Gateway Route Table will be selected if any one of the given values matches.
func (o GetRouteTableAssociationsFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetRouteTableAssociationsFilter](o, func(v GetRouteTableAssociationsFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetRouteTableFilter struct {
	// Name of the filter.
	Name string `pulumi:"name"`
	// List of one or more values for the filter.
	Values []string `pulumi:"values"`
}

type GetRouteTableFilterArgs struct {
	// Name of the filter.
	Name pulumix.Input[string] `pulumi:"name"`
	// List of one or more values for the filter.
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetRouteTableFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTableFilter)(nil)).Elem()
}

func (i GetRouteTableFilterArgs) ToGetRouteTableFilterOutput() GetRouteTableFilterOutput {
	return i.ToGetRouteTableFilterOutputWithContext(context.Background())
}

func (i GetRouteTableFilterArgs) ToGetRouteTableFilterOutputWithContext(ctx context.Context) GetRouteTableFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTableFilterOutput)
}

func (i *GetRouteTableFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetRouteTableFilterArgs] {
	return pulumix.Val(i)
}

type GetRouteTableFilterOutput struct{ *pulumi.OutputState }

func (GetRouteTableFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTableFilter)(nil)).Elem()
}

func (o GetRouteTableFilterOutput) ToGetRouteTableFilterOutput() GetRouteTableFilterOutput {
	return o
}

func (o GetRouteTableFilterOutput) ToGetRouteTableFilterOutputWithContext(ctx context.Context) GetRouteTableFilterOutput {
	return o
}

func (o GetRouteTableFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetRouteTableFilter] {
	return pulumix.Output[GetRouteTableFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the filter.
func (o GetRouteTableFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetRouteTableFilter](o, func(v GetRouteTableFilter) string { return v.Name })
}

// List of one or more values for the filter.
func (o GetRouteTableFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetRouteTableFilter](o, func(v GetRouteTableFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetRouteTablePropagationsFilter struct {
	// Name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetTransitGatewayRouteTablePropagations.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A Transit Gateway Route Table will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

type GetRouteTablePropagationsFilterArgs struct {
	// Name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetTransitGatewayRouteTablePropagations.html).
	Name pulumix.Input[string] `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A Transit Gateway Route Table will be selected if any one of the given values matches.
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetRouteTablePropagationsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTablePropagationsFilter)(nil)).Elem()
}

func (i GetRouteTablePropagationsFilterArgs) ToGetRouteTablePropagationsFilterOutput() GetRouteTablePropagationsFilterOutput {
	return i.ToGetRouteTablePropagationsFilterOutputWithContext(context.Background())
}

func (i GetRouteTablePropagationsFilterArgs) ToGetRouteTablePropagationsFilterOutputWithContext(ctx context.Context) GetRouteTablePropagationsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTablePropagationsFilterOutput)
}

func (i *GetRouteTablePropagationsFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetRouteTablePropagationsFilterArgs] {
	return pulumix.Val(i)
}

type GetRouteTablePropagationsFilterOutput struct{ *pulumi.OutputState }

func (GetRouteTablePropagationsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTablePropagationsFilter)(nil)).Elem()
}

func (o GetRouteTablePropagationsFilterOutput) ToGetRouteTablePropagationsFilterOutput() GetRouteTablePropagationsFilterOutput {
	return o
}

func (o GetRouteTablePropagationsFilterOutput) ToGetRouteTablePropagationsFilterOutputWithContext(ctx context.Context) GetRouteTablePropagationsFilterOutput {
	return o
}

func (o GetRouteTablePropagationsFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetRouteTablePropagationsFilter] {
	return pulumix.Output[GetRouteTablePropagationsFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the field to filter by, as defined by
// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetTransitGatewayRouteTablePropagations.html).
func (o GetRouteTablePropagationsFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetRouteTablePropagationsFilter](o, func(v GetRouteTablePropagationsFilter) string { return v.Name })
}

// Set of values that are accepted for the given field.
// A Transit Gateway Route Table will be selected if any one of the given values matches.
func (o GetRouteTablePropagationsFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetRouteTablePropagationsFilter](o, func(v GetRouteTablePropagationsFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetRouteTableRoutesFilter struct {
	// Name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_SearchTransitGatewayRoutes.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	Values []string `pulumi:"values"`
}

type GetRouteTableRoutesFilterArgs struct {
	// Name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_SearchTransitGatewayRoutes.html).
	Name pulumix.Input[string] `pulumi:"name"`
	// Set of values that are accepted for the given field.
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetRouteTableRoutesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTableRoutesFilter)(nil)).Elem()
}

func (i GetRouteTableRoutesFilterArgs) ToGetRouteTableRoutesFilterOutput() GetRouteTableRoutesFilterOutput {
	return i.ToGetRouteTableRoutesFilterOutputWithContext(context.Background())
}

func (i GetRouteTableRoutesFilterArgs) ToGetRouteTableRoutesFilterOutputWithContext(ctx context.Context) GetRouteTableRoutesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTableRoutesFilterOutput)
}

func (i *GetRouteTableRoutesFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetRouteTableRoutesFilterArgs] {
	return pulumix.Val(i)
}

type GetRouteTableRoutesFilterOutput struct{ *pulumi.OutputState }

func (GetRouteTableRoutesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTableRoutesFilter)(nil)).Elem()
}

func (o GetRouteTableRoutesFilterOutput) ToGetRouteTableRoutesFilterOutput() GetRouteTableRoutesFilterOutput {
	return o
}

func (o GetRouteTableRoutesFilterOutput) ToGetRouteTableRoutesFilterOutputWithContext(ctx context.Context) GetRouteTableRoutesFilterOutput {
	return o
}

func (o GetRouteTableRoutesFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetRouteTableRoutesFilter] {
	return pulumix.Output[GetRouteTableRoutesFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the field to filter by, as defined by
// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_SearchTransitGatewayRoutes.html).
func (o GetRouteTableRoutesFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetRouteTableRoutesFilter](o, func(v GetRouteTableRoutesFilter) string { return v.Name })
}

// Set of values that are accepted for the given field.
func (o GetRouteTableRoutesFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetRouteTableRoutesFilter](o, func(v GetRouteTableRoutesFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetRouteTableRoutesRoute struct {
	// The CIDR used for route destination matches.
	DestinationCidrBlock string `pulumi:"destinationCidrBlock"`
	// The ID of the prefix list used for destination matches.
	PrefixListId string `pulumi:"prefixListId"`
	// The current state of the route, can be `active`, `deleted`, `pending`, `blackhole`, `deleting`.
	State string `pulumi:"state"`
	// The id of the transit gateway route table announcement, most of the time it is an empty string.
	TransitGatewayRouteTableAnnouncementId string `pulumi:"transitGatewayRouteTableAnnouncementId"`
	// The type of the route, can be `propagated` or `static`.
	Type string `pulumi:"type"`
}

type GetRouteTableRoutesRouteArgs struct {
	// The CIDR used for route destination matches.
	DestinationCidrBlock pulumix.Input[string] `pulumi:"destinationCidrBlock"`
	// The ID of the prefix list used for destination matches.
	PrefixListId pulumix.Input[string] `pulumi:"prefixListId"`
	// The current state of the route, can be `active`, `deleted`, `pending`, `blackhole`, `deleting`.
	State pulumix.Input[string] `pulumi:"state"`
	// The id of the transit gateway route table announcement, most of the time it is an empty string.
	TransitGatewayRouteTableAnnouncementId pulumix.Input[string] `pulumi:"transitGatewayRouteTableAnnouncementId"`
	// The type of the route, can be `propagated` or `static`.
	Type pulumix.Input[string] `pulumi:"type"`
}

func (GetRouteTableRoutesRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTableRoutesRoute)(nil)).Elem()
}

func (i GetRouteTableRoutesRouteArgs) ToGetRouteTableRoutesRouteOutput() GetRouteTableRoutesRouteOutput {
	return i.ToGetRouteTableRoutesRouteOutputWithContext(context.Background())
}

func (i GetRouteTableRoutesRouteArgs) ToGetRouteTableRoutesRouteOutputWithContext(ctx context.Context) GetRouteTableRoutesRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTableRoutesRouteOutput)
}

func (i *GetRouteTableRoutesRouteArgs) ToOutput(ctx context.Context) pulumix.Output[*GetRouteTableRoutesRouteArgs] {
	return pulumix.Val(i)
}

type GetRouteTableRoutesRouteOutput struct{ *pulumi.OutputState }

func (GetRouteTableRoutesRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTableRoutesRoute)(nil)).Elem()
}

func (o GetRouteTableRoutesRouteOutput) ToGetRouteTableRoutesRouteOutput() GetRouteTableRoutesRouteOutput {
	return o
}

func (o GetRouteTableRoutesRouteOutput) ToGetRouteTableRoutesRouteOutputWithContext(ctx context.Context) GetRouteTableRoutesRouteOutput {
	return o
}

func (o GetRouteTableRoutesRouteOutput) ToOutput(ctx context.Context) pulumix.Output[GetRouteTableRoutesRoute] {
	return pulumix.Output[GetRouteTableRoutesRoute]{
		OutputState: o.OutputState,
	}
}

// The CIDR used for route destination matches.
func (o GetRouteTableRoutesRouteOutput) DestinationCidrBlock() pulumix.Output[string] {
	return pulumix.Apply[GetRouteTableRoutesRoute](o, func(v GetRouteTableRoutesRoute) string { return v.DestinationCidrBlock })
}

// The ID of the prefix list used for destination matches.
func (o GetRouteTableRoutesRouteOutput) PrefixListId() pulumix.Output[string] {
	return pulumix.Apply[GetRouteTableRoutesRoute](o, func(v GetRouteTableRoutesRoute) string { return v.PrefixListId })
}

// The current state of the route, can be `active`, `deleted`, `pending`, `blackhole`, `deleting`.
func (o GetRouteTableRoutesRouteOutput) State() pulumix.Output[string] {
	return pulumix.Apply[GetRouteTableRoutesRoute](o, func(v GetRouteTableRoutesRoute) string { return v.State })
}

// The id of the transit gateway route table announcement, most of the time it is an empty string.
func (o GetRouteTableRoutesRouteOutput) TransitGatewayRouteTableAnnouncementId() pulumix.Output[string] {
	return pulumix.Apply[GetRouteTableRoutesRoute](o, func(v GetRouteTableRoutesRoute) string { return v.TransitGatewayRouteTableAnnouncementId })
}

// The type of the route, can be `propagated` or `static`.
func (o GetRouteTableRoutesRouteOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[GetRouteTableRoutesRoute](o, func(v GetRouteTableRoutesRoute) string { return v.Type })
}

type GetTransitGatewayFilter struct {
	// Name of the field to filter by, as defined by the [underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGateways.html).
	Name string `pulumi:"name"`
	// List of one or more values for the filter.
	Values []string `pulumi:"values"`
}

type GetTransitGatewayFilterArgs struct {
	// Name of the field to filter by, as defined by the [underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGateways.html).
	Name pulumix.Input[string] `pulumi:"name"`
	// List of one or more values for the filter.
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetTransitGatewayFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitGatewayFilter)(nil)).Elem()
}

func (i GetTransitGatewayFilterArgs) ToGetTransitGatewayFilterOutput() GetTransitGatewayFilterOutput {
	return i.ToGetTransitGatewayFilterOutputWithContext(context.Background())
}

func (i GetTransitGatewayFilterArgs) ToGetTransitGatewayFilterOutputWithContext(ctx context.Context) GetTransitGatewayFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTransitGatewayFilterOutput)
}

func (i *GetTransitGatewayFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetTransitGatewayFilterArgs] {
	return pulumix.Val(i)
}

type GetTransitGatewayFilterOutput struct{ *pulumi.OutputState }

func (GetTransitGatewayFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitGatewayFilter)(nil)).Elem()
}

func (o GetTransitGatewayFilterOutput) ToGetTransitGatewayFilterOutput() GetTransitGatewayFilterOutput {
	return o
}

func (o GetTransitGatewayFilterOutput) ToGetTransitGatewayFilterOutputWithContext(ctx context.Context) GetTransitGatewayFilterOutput {
	return o
}

func (o GetTransitGatewayFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetTransitGatewayFilter] {
	return pulumix.Output[GetTransitGatewayFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the field to filter by, as defined by the [underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGateways.html).
func (o GetTransitGatewayFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetTransitGatewayFilter](o, func(v GetTransitGatewayFilter) string { return v.Name })
}

// List of one or more values for the filter.
func (o GetTransitGatewayFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetTransitGatewayFilter](o, func(v GetTransitGatewayFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetVpcAttachmentFilter struct {
	// Name of the filter.
	Name string `pulumi:"name"`
	// List of one or more values for the filter.
	Values []string `pulumi:"values"`
}

type GetVpcAttachmentFilterArgs struct {
	// Name of the filter.
	Name pulumix.Input[string] `pulumi:"name"`
	// List of one or more values for the filter.
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetVpcAttachmentFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcAttachmentFilter)(nil)).Elem()
}

func (i GetVpcAttachmentFilterArgs) ToGetVpcAttachmentFilterOutput() GetVpcAttachmentFilterOutput {
	return i.ToGetVpcAttachmentFilterOutputWithContext(context.Background())
}

func (i GetVpcAttachmentFilterArgs) ToGetVpcAttachmentFilterOutputWithContext(ctx context.Context) GetVpcAttachmentFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcAttachmentFilterOutput)
}

func (i *GetVpcAttachmentFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetVpcAttachmentFilterArgs] {
	return pulumix.Val(i)
}

type GetVpcAttachmentFilterOutput struct{ *pulumi.OutputState }

func (GetVpcAttachmentFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcAttachmentFilter)(nil)).Elem()
}

func (o GetVpcAttachmentFilterOutput) ToGetVpcAttachmentFilterOutput() GetVpcAttachmentFilterOutput {
	return o
}

func (o GetVpcAttachmentFilterOutput) ToGetVpcAttachmentFilterOutputWithContext(ctx context.Context) GetVpcAttachmentFilterOutput {
	return o
}

func (o GetVpcAttachmentFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetVpcAttachmentFilter] {
	return pulumix.Output[GetVpcAttachmentFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the filter.
func (o GetVpcAttachmentFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetVpcAttachmentFilter](o, func(v GetVpcAttachmentFilter) string { return v.Name })
}

// List of one or more values for the filter.
func (o GetVpcAttachmentFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetVpcAttachmentFilter](o, func(v GetVpcAttachmentFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetVpcAttachmentsFilter struct {
	// Name of the filter check available value on [official documentation](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayVpcAttachments.html)
	Name string `pulumi:"name"`
	// List of one or more values for the filter.
	Values []string `pulumi:"values"`
}

type GetVpcAttachmentsFilterArgs struct {
	// Name of the filter check available value on [official documentation](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayVpcAttachments.html)
	Name pulumix.Input[string] `pulumi:"name"`
	// List of one or more values for the filter.
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetVpcAttachmentsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcAttachmentsFilter)(nil)).Elem()
}

func (i GetVpcAttachmentsFilterArgs) ToGetVpcAttachmentsFilterOutput() GetVpcAttachmentsFilterOutput {
	return i.ToGetVpcAttachmentsFilterOutputWithContext(context.Background())
}

func (i GetVpcAttachmentsFilterArgs) ToGetVpcAttachmentsFilterOutputWithContext(ctx context.Context) GetVpcAttachmentsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcAttachmentsFilterOutput)
}

func (i *GetVpcAttachmentsFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetVpcAttachmentsFilterArgs] {
	return pulumix.Val(i)
}

type GetVpcAttachmentsFilterOutput struct{ *pulumi.OutputState }

func (GetVpcAttachmentsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcAttachmentsFilter)(nil)).Elem()
}

func (o GetVpcAttachmentsFilterOutput) ToGetVpcAttachmentsFilterOutput() GetVpcAttachmentsFilterOutput {
	return o
}

func (o GetVpcAttachmentsFilterOutput) ToGetVpcAttachmentsFilterOutputWithContext(ctx context.Context) GetVpcAttachmentsFilterOutput {
	return o
}

func (o GetVpcAttachmentsFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetVpcAttachmentsFilter] {
	return pulumix.Output[GetVpcAttachmentsFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the filter check available value on [official documentation](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayVpcAttachments.html)
func (o GetVpcAttachmentsFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetVpcAttachmentsFilter](o, func(v GetVpcAttachmentsFilter) string { return v.Name })
}

// List of one or more values for the filter.
func (o GetVpcAttachmentsFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetVpcAttachmentsFilter](o, func(v GetVpcAttachmentsFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GetVpnAttachmentFilter struct {
	// Name of the filter field. Valid values can be found in the [EC2 DescribeTransitGatewayAttachments API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayAttachments.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
	Values []string `pulumi:"values"`
}

type GetVpnAttachmentFilterArgs struct {
	// Name of the filter field. Valid values can be found in the [EC2 DescribeTransitGatewayAttachments API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayAttachments.html).
	Name pulumix.Input[string] `pulumi:"name"`
	// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GetVpnAttachmentFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnAttachmentFilter)(nil)).Elem()
}

func (i GetVpnAttachmentFilterArgs) ToGetVpnAttachmentFilterOutput() GetVpnAttachmentFilterOutput {
	return i.ToGetVpnAttachmentFilterOutputWithContext(context.Background())
}

func (i GetVpnAttachmentFilterArgs) ToGetVpnAttachmentFilterOutputWithContext(ctx context.Context) GetVpnAttachmentFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpnAttachmentFilterOutput)
}

func (i *GetVpnAttachmentFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*GetVpnAttachmentFilterArgs] {
	return pulumix.Val(i)
}

type GetVpnAttachmentFilterOutput struct{ *pulumi.OutputState }

func (GetVpnAttachmentFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnAttachmentFilter)(nil)).Elem()
}

func (o GetVpnAttachmentFilterOutput) ToGetVpnAttachmentFilterOutput() GetVpnAttachmentFilterOutput {
	return o
}

func (o GetVpnAttachmentFilterOutput) ToGetVpnAttachmentFilterOutputWithContext(ctx context.Context) GetVpnAttachmentFilterOutput {
	return o
}

func (o GetVpnAttachmentFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetVpnAttachmentFilter] {
	return pulumix.Output[GetVpnAttachmentFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the filter field. Valid values can be found in the [EC2 DescribeTransitGatewayAttachments API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayAttachments.html).
func (o GetVpnAttachmentFilterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GetVpnAttachmentFilter](o, func(v GetVpnAttachmentFilter) string { return v.Name })
}

// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
func (o GetVpnAttachmentFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetVpnAttachmentFilter](o, func(v GetVpnAttachmentFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func init() {
	pulumi.RegisterOutputType(InstanceConnectEndpointTimeoutsOutput{})
	pulumi.RegisterOutputType(GetAttachmentFilterOutput{})
	pulumi.RegisterOutputType(GetAttachmentsFilterOutput{})
	pulumi.RegisterOutputType(GetConnectFilterOutput{})
	pulumi.RegisterOutputType(GetConnectPeerFilterOutput{})
	pulumi.RegisterOutputType(GetDirectConnectGatewayAttachmentFilterOutput{})
	pulumi.RegisterOutputType(GetMulticastDomainAssociationTypeOutput{})
	pulumi.RegisterOutputType(GetMulticastDomainFilterOutput{})
	pulumi.RegisterOutputType(GetMulticastDomainMemberOutput{})
	pulumi.RegisterOutputType(GetMulticastDomainSourceOutput{})
	pulumi.RegisterOutputType(GetPeeringAttachmentFilterOutput{})
	pulumi.RegisterOutputType(GetRouteTableAssociationsFilterOutput{})
	pulumi.RegisterOutputType(GetRouteTableFilterOutput{})
	pulumi.RegisterOutputType(GetRouteTablePropagationsFilterOutput{})
	pulumi.RegisterOutputType(GetRouteTableRoutesFilterOutput{})
	pulumi.RegisterOutputType(GetRouteTableRoutesRouteOutput{})
	pulumi.RegisterOutputType(GetTransitGatewayFilterOutput{})
	pulumi.RegisterOutputType(GetVpcAttachmentFilterOutput{})
	pulumi.RegisterOutputType(GetVpcAttachmentsFilterOutput{})
	pulumi.RegisterOutputType(GetVpnAttachmentFilterOutput{})
}
