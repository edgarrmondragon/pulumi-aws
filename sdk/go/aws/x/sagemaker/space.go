// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sagemaker

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a SageMaker Space resource.
type Space struct {
	pulumi.CustomResourceState

	// The space's Amazon Resource Name (ARN).
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The ID of the associated Domain.
	DomainId pulumix.Output[string] `pulumi:"domainId"`
	// The ID of the space's profile in the Amazon Elastic File System volume.
	HomeEfsFileSystemUid pulumix.Output[string] `pulumi:"homeEfsFileSystemUid"`
	// The name of the space.
	SpaceName pulumix.Output[string] `pulumi:"spaceName"`
	// A collection of space settings. See Space Settings below.
	SpaceSettings pulumix.GPtrOutput[SpaceSpaceSettings, SpaceSpaceSettingsOutput] `pulumi:"spaceSettings"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
}

// NewSpace registers a new resource with the given unique name, arguments, and options.
func NewSpace(ctx *pulumi.Context,
	name string, args *SpaceArgs, opts ...pulumi.ResourceOption) (*Space, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DomainId == nil {
		return nil, errors.New("invalid value for required argument 'DomainId'")
	}
	if args.SpaceName == nil {
		return nil, errors.New("invalid value for required argument 'SpaceName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Space
	err := ctx.RegisterResource("aws:sagemaker/space:Space", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSpace gets an existing Space resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSpace(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SpaceState, opts ...pulumi.ResourceOption) (*Space, error) {
	var resource Space
	err := ctx.ReadResource("aws:sagemaker/space:Space", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Space resources.
type spaceState struct {
	// The space's Amazon Resource Name (ARN).
	Arn *string `pulumi:"arn"`
	// The ID of the associated Domain.
	DomainId *string `pulumi:"domainId"`
	// The ID of the space's profile in the Amazon Elastic File System volume.
	HomeEfsFileSystemUid *string `pulumi:"homeEfsFileSystemUid"`
	// The name of the space.
	SpaceName *string `pulumi:"spaceName"`
	// A collection of space settings. See Space Settings below.
	SpaceSettings *SpaceSpaceSettings `pulumi:"spaceSettings"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type SpaceState struct {
	// The space's Amazon Resource Name (ARN).
	Arn pulumix.Input[*string]
	// The ID of the associated Domain.
	DomainId pulumix.Input[*string]
	// The ID of the space's profile in the Amazon Elastic File System volume.
	HomeEfsFileSystemUid pulumix.Input[*string]
	// The name of the space.
	SpaceName pulumix.Input[*string]
	// A collection of space settings. See Space Settings below.
	SpaceSettings pulumix.Input[*SpaceSpaceSettingsArgs]
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
}

func (SpaceState) ElementType() reflect.Type {
	return reflect.TypeOf((*spaceState)(nil)).Elem()
}

type spaceArgs struct {
	// The ID of the associated Domain.
	DomainId string `pulumi:"domainId"`
	// The name of the space.
	SpaceName string `pulumi:"spaceName"`
	// A collection of space settings. See Space Settings below.
	SpaceSettings *SpaceSpaceSettings `pulumi:"spaceSettings"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Space resource.
type SpaceArgs struct {
	// The ID of the associated Domain.
	DomainId pulumix.Input[string]
	// The name of the space.
	SpaceName pulumix.Input[string]
	// A collection of space settings. See Space Settings below.
	SpaceSettings pulumix.Input[*SpaceSpaceSettingsArgs]
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (SpaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*spaceArgs)(nil)).Elem()
}

type SpaceOutput struct{ *pulumi.OutputState }

func (SpaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Space)(nil)).Elem()
}

func (o SpaceOutput) ToSpaceOutput() SpaceOutput {
	return o
}

func (o SpaceOutput) ToSpaceOutputWithContext(ctx context.Context) SpaceOutput {
	return o
}

func (o SpaceOutput) ToOutput(ctx context.Context) pulumix.Output[Space] {
	return pulumix.Output[Space]{
		OutputState: o.OutputState,
	}
}

// The space's Amazon Resource Name (ARN).
func (o SpaceOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Space](o, func(v Space) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The ID of the associated Domain.
func (o SpaceOutput) DomainId() pulumix.Output[string] {
	value := pulumix.Apply[Space](o, func(v Space) pulumix.Output[string] { return v.DomainId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The ID of the space's profile in the Amazon Elastic File System volume.
func (o SpaceOutput) HomeEfsFileSystemUid() pulumix.Output[string] {
	value := pulumix.Apply[Space](o, func(v Space) pulumix.Output[string] { return v.HomeEfsFileSystemUid })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The name of the space.
func (o SpaceOutput) SpaceName() pulumix.Output[string] {
	value := pulumix.Apply[Space](o, func(v Space) pulumix.Output[string] { return v.SpaceName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A collection of space settings. See Space Settings below.
func (o SpaceOutput) SpaceSettings() pulumix.GPtrOutput[SpaceSpaceSettings, SpaceSpaceSettingsOutput] {
	value := pulumix.Apply[Space](o, func(v Space) pulumix.GPtrOutput[SpaceSpaceSettings, SpaceSpaceSettingsOutput] { return v.SpaceSettings })
	unwrapped := pulumix.Flatten[*SpaceSpaceSettings, pulumix.GPtrOutput[SpaceSpaceSettings, SpaceSpaceSettingsOutput]](value)
	return pulumix.GPtrOutput[SpaceSpaceSettings, SpaceSpaceSettingsOutput]{OutputState: unwrapped.OutputState}
}

// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o SpaceOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Space](o, func(v Space) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o SpaceOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[Space](o, func(v Space) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(SpaceOutput{})
}
