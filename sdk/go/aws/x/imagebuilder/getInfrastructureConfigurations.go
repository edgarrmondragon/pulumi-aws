// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package imagebuilder

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Use this data source to get the ARNs and names of Image Builder Infrastructure Configurations matching the specified criteria.
func GetInfrastructureConfigurations(ctx *pulumi.Context, args *GetInfrastructureConfigurationsArgs, opts ...pulumi.InvokeOption) (*GetInfrastructureConfigurationsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetInfrastructureConfigurationsResult
	err := ctx.Invoke("aws:imagebuilder/getInfrastructureConfigurations:getInfrastructureConfigurations", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getInfrastructureConfigurations.
type GetInfrastructureConfigurationsArgs struct {
	// Configuration block(s) for filtering. Detailed below.
	Filters []GetInfrastructureConfigurationsFilter `pulumi:"filters"`
}

// A collection of values returned by getInfrastructureConfigurations.
type GetInfrastructureConfigurationsResult struct {
	// Set of ARNs of the matched Image Builder Infrastructure Configurations.
	Arns    []string                                `pulumi:"arns"`
	Filters []GetInfrastructureConfigurationsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Set of names of the matched Image Builder Infrastructure Configurations.
	Names []string `pulumi:"names"`
}

func GetInfrastructureConfigurationsOutput(ctx *pulumi.Context, args GetInfrastructureConfigurationsOutputArgs, opts ...pulumi.InvokeOption) GetInfrastructureConfigurationsResultOutput {
	outputResult := pulumix.ApplyErr[*GetInfrastructureConfigurationsArgs](args.ToOutput(), func(plainArgs *GetInfrastructureConfigurationsArgs) (*GetInfrastructureConfigurationsResult, error) {
		return GetInfrastructureConfigurations(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[GetInfrastructureConfigurationsResultOutput, *GetInfrastructureConfigurationsResult](outputResult)
}

// A collection of arguments for invoking getInfrastructureConfigurations.
type GetInfrastructureConfigurationsOutputArgs struct {
	// Configuration block(s) for filtering. Detailed below.
	Filters pulumix.Input[[]*GetInfrastructureConfigurationsFilterArgs] `pulumi:"filters"`
}

func (args GetInfrastructureConfigurationsOutputArgs) ToOutput() pulumix.Output[*GetInfrastructureConfigurationsArgs] {
	allArgs := pulumix.All(
		args.Filters.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *GetInfrastructureConfigurationsArgs {
		return &GetInfrastructureConfigurationsArgs{
			Filters: resolvedArgs[0].([]GetInfrastructureConfigurationsFilter),
		}
	})
}

type GetInfrastructureConfigurationsResultOutput struct{ *pulumi.OutputState }

func (GetInfrastructureConfigurationsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInfrastructureConfigurationsResult)(nil)).Elem()
}

func (o GetInfrastructureConfigurationsResultOutput) ToOutput(context.Context) pulumix.Output[*GetInfrastructureConfigurationsResult] {
	return pulumix.Output[*GetInfrastructureConfigurationsResult]{
		OutputState: o.OutputState,
	}
}

func (o GetInfrastructureConfigurationsResultOutput) Arns() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[*GetInfrastructureConfigurationsResult](o, func(v *GetInfrastructureConfigurationsResult) []string { return v.Arns })
	return pulumix.ArrayOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o GetInfrastructureConfigurationsResultOutput) Filters() pulumix.GArrayOutput[GetInfrastructureConfigurationsFilter, GetInfrastructureConfigurationsFilterOutput] {
	value := pulumix.Apply[*GetInfrastructureConfigurationsResult](o, func(v *GetInfrastructureConfigurationsResult) []GetInfrastructureConfigurationsFilter {
		return v.Filters
	})
	return pulumix.GArrayOutput[GetInfrastructureConfigurationsFilter, GetInfrastructureConfigurationsFilterOutput]{
		OutputState: value.OutputState,
	}
}

func (o GetInfrastructureConfigurationsResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*GetInfrastructureConfigurationsResult](o, func(v *GetInfrastructureConfigurationsResult) string { return v.Id })
}

func (o GetInfrastructureConfigurationsResultOutput) Names() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[*GetInfrastructureConfigurationsResult](o, func(v *GetInfrastructureConfigurationsResult) []string { return v.Names })
	return pulumix.ArrayOutput[string]{
		OutputState: value.OutputState,
	}
}
