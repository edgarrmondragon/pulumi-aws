// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package s3

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// > **NOTE on `maxKeys`:** Retrieving very large numbers of keys can adversely affect the provider's performance.
//
// The objects data source returns keys (i.e., file names) and other metadata about objects in an S3 bucket.
func GetObjects(ctx *pulumi.Context, args *GetObjectsArgs, opts ...pulumi.InvokeOption) (*GetObjectsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetObjectsResult
	err := ctx.Invoke("aws:s3/getObjects:getObjects", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getObjects.
type GetObjectsArgs struct {
	// Lists object keys in this S3 bucket. Alternatively, an [S3 access point](https://docs.aws.amazon.com/AmazonS3/latest/dev/using-access-points.html) ARN can be specified
	Bucket string `pulumi:"bucket"`
	// Character used to group keys (Default: none)
	Delimiter *string `pulumi:"delimiter"`
	// Encodes keys using this method (Default: none; besides none, only "url" can be used)
	EncodingType *string `pulumi:"encodingType"`
	// Boolean specifying whether to populate the owner list (Default: false)
	FetchOwner *bool `pulumi:"fetchOwner"`
	// Maximum object keys to return (Default: 1000)
	MaxKeys *int `pulumi:"maxKeys"`
	// Limits results to object keys with this prefix (Default: none)
	Prefix *string `pulumi:"prefix"`
	// Returns key names lexicographically after a specific object key in your bucket (Default: none; S3 lists object keys in UTF-8 character encoding in lexicographical order)
	StartAfter *string `pulumi:"startAfter"`
}

// A collection of values returned by getObjects.
type GetObjectsResult struct {
	Bucket string `pulumi:"bucket"`
	// List of any keys between `prefix` and the next occurrence of `delimiter` (i.e., similar to subdirectories of the `prefix` "directory"); the list is only returned when you specify `delimiter`
	CommonPrefixes []string `pulumi:"commonPrefixes"`
	Delimiter      *string  `pulumi:"delimiter"`
	EncodingType   *string  `pulumi:"encodingType"`
	FetchOwner     *bool    `pulumi:"fetchOwner"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// List of strings representing object keys
	Keys    []string `pulumi:"keys"`
	MaxKeys *int     `pulumi:"maxKeys"`
	// List of strings representing object owner IDs (see `fetchOwner` above)
	Owners     []string `pulumi:"owners"`
	Prefix     *string  `pulumi:"prefix"`
	StartAfter *string  `pulumi:"startAfter"`
}

func GetObjectsOutput(ctx *pulumi.Context, args GetObjectsOutputArgs, opts ...pulumi.InvokeOption) GetObjectsResultOutput {
	outputResult := pulumix.ApplyErr[*GetObjectsArgs](args.ToOutput(), func(plainArgs *GetObjectsArgs) (*GetObjectsResult, error) {
		return GetObjects(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[GetObjectsResultOutput, *GetObjectsResult](outputResult)
}

// A collection of arguments for invoking getObjects.
type GetObjectsOutputArgs struct {
	// Lists object keys in this S3 bucket. Alternatively, an [S3 access point](https://docs.aws.amazon.com/AmazonS3/latest/dev/using-access-points.html) ARN can be specified
	Bucket pulumix.Input[string] `pulumi:"bucket"`
	// Character used to group keys (Default: none)
	Delimiter pulumix.Input[*string] `pulumi:"delimiter"`
	// Encodes keys using this method (Default: none; besides none, only "url" can be used)
	EncodingType pulumix.Input[*string] `pulumi:"encodingType"`
	// Boolean specifying whether to populate the owner list (Default: false)
	FetchOwner pulumix.Input[*bool] `pulumi:"fetchOwner"`
	// Maximum object keys to return (Default: 1000)
	MaxKeys pulumix.Input[*int] `pulumi:"maxKeys"`
	// Limits results to object keys with this prefix (Default: none)
	Prefix pulumix.Input[*string] `pulumi:"prefix"`
	// Returns key names lexicographically after a specific object key in your bucket (Default: none; S3 lists object keys in UTF-8 character encoding in lexicographical order)
	StartAfter pulumix.Input[*string] `pulumi:"startAfter"`
}

func (args GetObjectsOutputArgs) ToOutput() pulumix.Output[*GetObjectsArgs] {
	allArgs := pulumix.All(
		args.Bucket.ToOutput(context.Background()).AsAny(),
		args.Delimiter.ToOutput(context.Background()).AsAny(),
		args.EncodingType.ToOutput(context.Background()).AsAny(),
		args.FetchOwner.ToOutput(context.Background()).AsAny(),
		args.MaxKeys.ToOutput(context.Background()).AsAny(),
		args.Prefix.ToOutput(context.Background()).AsAny(),
		args.StartAfter.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *GetObjectsArgs {
		return &GetObjectsArgs{
			Bucket:       resolvedArgs[0].(string),
			Delimiter:    resolvedArgs[1].(*string),
			EncodingType: resolvedArgs[2].(*string),
			FetchOwner:   resolvedArgs[3].(*bool),
			MaxKeys:      resolvedArgs[4].(*int),
			Prefix:       resolvedArgs[5].(*string),
			StartAfter:   resolvedArgs[6].(*string),
		}
	})
}

type GetObjectsResultOutput struct{ *pulumi.OutputState }

func (GetObjectsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetObjectsResult)(nil)).Elem()
}

func (o GetObjectsResultOutput) ToOutput(context.Context) pulumix.Output[*GetObjectsResult] {
	return pulumix.Output[*GetObjectsResult]{
		OutputState: o.OutputState,
	}
}

func (o GetObjectsResultOutput) Bucket() pulumix.Output[string] {
	return pulumix.Apply[*GetObjectsResult](o, func(v *GetObjectsResult) string { return v.Bucket })
}

func (o GetObjectsResultOutput) CommonPrefixes() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[*GetObjectsResult](o, func(v *GetObjectsResult) []string { return v.CommonPrefixes })
	return pulumix.ArrayOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o GetObjectsResultOutput) Delimiter() pulumix.Output[*string] {
	return pulumix.Apply[*GetObjectsResult](o, func(v *GetObjectsResult) *string { return v.Delimiter })
}

func (o GetObjectsResultOutput) EncodingType() pulumix.Output[*string] {
	return pulumix.Apply[*GetObjectsResult](o, func(v *GetObjectsResult) *string { return v.EncodingType })
}

func (o GetObjectsResultOutput) FetchOwner() pulumix.Output[*bool] {
	return pulumix.Apply[*GetObjectsResult](o, func(v *GetObjectsResult) *bool { return v.FetchOwner })
}

func (o GetObjectsResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*GetObjectsResult](o, func(v *GetObjectsResult) string { return v.Id })
}

func (o GetObjectsResultOutput) Keys() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[*GetObjectsResult](o, func(v *GetObjectsResult) []string { return v.Keys })
	return pulumix.ArrayOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o GetObjectsResultOutput) MaxKeys() pulumix.Output[*int] {
	return pulumix.Apply[*GetObjectsResult](o, func(v *GetObjectsResult) *int { return v.MaxKeys })
}

func (o GetObjectsResultOutput) Owners() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[*GetObjectsResult](o, func(v *GetObjectsResult) []string { return v.Owners })
	return pulumix.ArrayOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o GetObjectsResultOutput) Prefix() pulumix.Output[*string] {
	return pulumix.Apply[*GetObjectsResult](o, func(v *GetObjectsResult) *string { return v.Prefix })
}

func (o GetObjectsResultOutput) StartAfter() pulumix.Output[*string] {
	return pulumix.Apply[*GetObjectsResult](o, func(v *GetObjectsResult) *string { return v.StartAfter })
}
