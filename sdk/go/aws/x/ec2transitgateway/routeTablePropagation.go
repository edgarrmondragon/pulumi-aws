// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2transitgateway

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manages an EC2 Transit Gateway Route Table propagation.
type RouteTablePropagation struct {
	pulumi.CustomResourceState

	// Identifier of the resource
	ResourceId pulumix.Output[string] `pulumi:"resourceId"`
	// Type of the resource
	ResourceType pulumix.Output[string] `pulumi:"resourceType"`
	// Identifier of EC2 Transit Gateway Attachment.
	TransitGatewayAttachmentId pulumix.Output[string] `pulumi:"transitGatewayAttachmentId"`
	// Identifier of EC2 Transit Gateway Route Table.
	TransitGatewayRouteTableId pulumix.Output[string] `pulumi:"transitGatewayRouteTableId"`
}

// NewRouteTablePropagation registers a new resource with the given unique name, arguments, and options.
func NewRouteTablePropagation(ctx *pulumi.Context,
	name string, args *RouteTablePropagationArgs, opts ...pulumi.ResourceOption) (*RouteTablePropagation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TransitGatewayAttachmentId == nil {
		return nil, errors.New("invalid value for required argument 'TransitGatewayAttachmentId'")
	}
	if args.TransitGatewayRouteTableId == nil {
		return nil, errors.New("invalid value for required argument 'TransitGatewayRouteTableId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RouteTablePropagation
	err := ctx.RegisterResource("aws:ec2transitgateway/routeTablePropagation:RouteTablePropagation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRouteTablePropagation gets an existing RouteTablePropagation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRouteTablePropagation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RouteTablePropagationState, opts ...pulumi.ResourceOption) (*RouteTablePropagation, error) {
	var resource RouteTablePropagation
	err := ctx.ReadResource("aws:ec2transitgateway/routeTablePropagation:RouteTablePropagation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RouteTablePropagation resources.
type routeTablePropagationState struct {
	// Identifier of the resource
	ResourceId *string `pulumi:"resourceId"`
	// Type of the resource
	ResourceType *string `pulumi:"resourceType"`
	// Identifier of EC2 Transit Gateway Attachment.
	TransitGatewayAttachmentId *string `pulumi:"transitGatewayAttachmentId"`
	// Identifier of EC2 Transit Gateway Route Table.
	TransitGatewayRouteTableId *string `pulumi:"transitGatewayRouteTableId"`
}

type RouteTablePropagationState struct {
	// Identifier of the resource
	ResourceId pulumix.Input[*string]
	// Type of the resource
	ResourceType pulumix.Input[*string]
	// Identifier of EC2 Transit Gateway Attachment.
	TransitGatewayAttachmentId pulumix.Input[*string]
	// Identifier of EC2 Transit Gateway Route Table.
	TransitGatewayRouteTableId pulumix.Input[*string]
}

func (RouteTablePropagationState) ElementType() reflect.Type {
	return reflect.TypeOf((*routeTablePropagationState)(nil)).Elem()
}

type routeTablePropagationArgs struct {
	// Identifier of EC2 Transit Gateway Attachment.
	TransitGatewayAttachmentId string `pulumi:"transitGatewayAttachmentId"`
	// Identifier of EC2 Transit Gateway Route Table.
	TransitGatewayRouteTableId string `pulumi:"transitGatewayRouteTableId"`
}

// The set of arguments for constructing a RouteTablePropagation resource.
type RouteTablePropagationArgs struct {
	// Identifier of EC2 Transit Gateway Attachment.
	TransitGatewayAttachmentId pulumix.Input[string]
	// Identifier of EC2 Transit Gateway Route Table.
	TransitGatewayRouteTableId pulumix.Input[string]
}

func (RouteTablePropagationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*routeTablePropagationArgs)(nil)).Elem()
}

type RouteTablePropagationOutput struct{ *pulumi.OutputState }

func (RouteTablePropagationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTablePropagation)(nil)).Elem()
}

func (o RouteTablePropagationOutput) ToRouteTablePropagationOutput() RouteTablePropagationOutput {
	return o
}

func (o RouteTablePropagationOutput) ToRouteTablePropagationOutputWithContext(ctx context.Context) RouteTablePropagationOutput {
	return o
}

func (o RouteTablePropagationOutput) ToOutput(ctx context.Context) pulumix.Output[RouteTablePropagation] {
	return pulumix.Output[RouteTablePropagation]{
		OutputState: o.OutputState,
	}
}

// Identifier of the resource
func (o RouteTablePropagationOutput) ResourceId() pulumix.Output[string] {
	value := pulumix.Apply[RouteTablePropagation](o, func(v RouteTablePropagation) pulumix.Output[string] { return v.ResourceId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Type of the resource
func (o RouteTablePropagationOutput) ResourceType() pulumix.Output[string] {
	value := pulumix.Apply[RouteTablePropagation](o, func(v RouteTablePropagation) pulumix.Output[string] { return v.ResourceType })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Identifier of EC2 Transit Gateway Attachment.
func (o RouteTablePropagationOutput) TransitGatewayAttachmentId() pulumix.Output[string] {
	value := pulumix.Apply[RouteTablePropagation](o, func(v RouteTablePropagation) pulumix.Output[string] { return v.TransitGatewayAttachmentId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Identifier of EC2 Transit Gateway Route Table.
func (o RouteTablePropagationOutput) TransitGatewayRouteTableId() pulumix.Output[string] {
	value := pulumix.Apply[RouteTablePropagation](o, func(v RouteTablePropagation) pulumix.Output[string] { return v.TransitGatewayRouteTableId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(RouteTablePropagationOutput{})
}
