// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apigatewayv2

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manages an Amazon API Gateway Version 2 route.
// More information can be found in the [Amazon API Gateway Developer Guide](https://docs.aws.amazon.com/apigateway/latest/developerguide/welcome.html) for [WebSocket](https://docs.aws.amazon.com/apigateway/latest/developerguide/websocket-api-develop-routes.html) and [HTTP](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-develop-routes.html) APIs.
type Route struct {
	pulumi.CustomResourceState

	// API identifier.
	ApiId pulumix.Output[string] `pulumi:"apiId"`
	// Boolean whether an API key is required for the route. Defaults to `false`. Supported only for WebSocket APIs.
	ApiKeyRequired pulumix.Output[*bool] `pulumi:"apiKeyRequired"`
	// Authorization scopes supported by this route. The scopes are used with a JWT authorizer to authorize the method invocation.
	AuthorizationScopes pulumix.ArrayOutput[string] `pulumi:"authorizationScopes"`
	// Authorization type for the route.
	// For WebSocket APIs, valid values are `NONE` for open access, `AWS_IAM` for using AWS IAM permissions, and `CUSTOM` for using a Lambda authorizer.
	// For HTTP APIs, valid values are `NONE` for open access, `JWT` for using JSON Web Tokens, `AWS_IAM` for using AWS IAM permissions, and `CUSTOM` for using a Lambda authorizer.
	// Defaults to `NONE`.
	AuthorizationType pulumix.Output[*string] `pulumi:"authorizationType"`
	// Identifier of the `apigatewayv2.Authorizer` resource to be associated with this route.
	AuthorizerId pulumix.Output[*string] `pulumi:"authorizerId"`
	// The [model selection expression](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-model-selection-expressions) for the route. Supported only for WebSocket APIs.
	ModelSelectionExpression pulumix.Output[*string] `pulumi:"modelSelectionExpression"`
	// Operation name for the route. Must be between 1 and 64 characters in length.
	OperationName pulumix.Output[*string] `pulumi:"operationName"`
	// Request models for the route. Supported only for WebSocket APIs.
	RequestModels pulumix.MapOutput[string] `pulumi:"requestModels"`
	// Request parameters for the route. Supported only for WebSocket APIs.
	RequestParameters pulumix.GArrayOutput[RouteRequestParameter, RouteRequestParameterOutput] `pulumi:"requestParameters"`
	// Route key for the route. For HTTP APIs, the route key can be either `$default`, or a combination of an HTTP method and resource path, for example, `GET /pets`.
	RouteKey pulumix.Output[string] `pulumi:"routeKey"`
	// The [route response selection expression](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-route-response-selection-expressions) for the route. Supported only for WebSocket APIs.
	RouteResponseSelectionExpression pulumix.Output[*string] `pulumi:"routeResponseSelectionExpression"`
	// Target for the route, of the form `integrations/`*`IntegrationID`*, where *`IntegrationID`* is the identifier of an `apigatewayv2.Integration` resource.
	Target pulumix.Output[*string] `pulumi:"target"`
}

// NewRoute registers a new resource with the given unique name, arguments, and options.
func NewRoute(ctx *pulumi.Context,
	name string, args *RouteArgs, opts ...pulumi.ResourceOption) (*Route, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApiId == nil {
		return nil, errors.New("invalid value for required argument 'ApiId'")
	}
	if args.RouteKey == nil {
		return nil, errors.New("invalid value for required argument 'RouteKey'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Route
	err := ctx.RegisterResource("aws:apigatewayv2/route:Route", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRoute gets an existing Route resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRoute(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RouteState, opts ...pulumi.ResourceOption) (*Route, error) {
	var resource Route
	err := ctx.ReadResource("aws:apigatewayv2/route:Route", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Route resources.
type routeState struct {
	// API identifier.
	ApiId *string `pulumi:"apiId"`
	// Boolean whether an API key is required for the route. Defaults to `false`. Supported only for WebSocket APIs.
	ApiKeyRequired *bool `pulumi:"apiKeyRequired"`
	// Authorization scopes supported by this route. The scopes are used with a JWT authorizer to authorize the method invocation.
	AuthorizationScopes []string `pulumi:"authorizationScopes"`
	// Authorization type for the route.
	// For WebSocket APIs, valid values are `NONE` for open access, `AWS_IAM` for using AWS IAM permissions, and `CUSTOM` for using a Lambda authorizer.
	// For HTTP APIs, valid values are `NONE` for open access, `JWT` for using JSON Web Tokens, `AWS_IAM` for using AWS IAM permissions, and `CUSTOM` for using a Lambda authorizer.
	// Defaults to `NONE`.
	AuthorizationType *string `pulumi:"authorizationType"`
	// Identifier of the `apigatewayv2.Authorizer` resource to be associated with this route.
	AuthorizerId *string `pulumi:"authorizerId"`
	// The [model selection expression](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-model-selection-expressions) for the route. Supported only for WebSocket APIs.
	ModelSelectionExpression *string `pulumi:"modelSelectionExpression"`
	// Operation name for the route. Must be between 1 and 64 characters in length.
	OperationName *string `pulumi:"operationName"`
	// Request models for the route. Supported only for WebSocket APIs.
	RequestModels map[string]string `pulumi:"requestModels"`
	// Request parameters for the route. Supported only for WebSocket APIs.
	RequestParameters []RouteRequestParameter `pulumi:"requestParameters"`
	// Route key for the route. For HTTP APIs, the route key can be either `$default`, or a combination of an HTTP method and resource path, for example, `GET /pets`.
	RouteKey *string `pulumi:"routeKey"`
	// The [route response selection expression](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-route-response-selection-expressions) for the route. Supported only for WebSocket APIs.
	RouteResponseSelectionExpression *string `pulumi:"routeResponseSelectionExpression"`
	// Target for the route, of the form `integrations/`*`IntegrationID`*, where *`IntegrationID`* is the identifier of an `apigatewayv2.Integration` resource.
	Target *string `pulumi:"target"`
}

type RouteState struct {
	// API identifier.
	ApiId pulumix.Input[*string]
	// Boolean whether an API key is required for the route. Defaults to `false`. Supported only for WebSocket APIs.
	ApiKeyRequired pulumix.Input[*bool]
	// Authorization scopes supported by this route. The scopes are used with a JWT authorizer to authorize the method invocation.
	AuthorizationScopes pulumix.Input[[]string]
	// Authorization type for the route.
	// For WebSocket APIs, valid values are `NONE` for open access, `AWS_IAM` for using AWS IAM permissions, and `CUSTOM` for using a Lambda authorizer.
	// For HTTP APIs, valid values are `NONE` for open access, `JWT` for using JSON Web Tokens, `AWS_IAM` for using AWS IAM permissions, and `CUSTOM` for using a Lambda authorizer.
	// Defaults to `NONE`.
	AuthorizationType pulumix.Input[*string]
	// Identifier of the `apigatewayv2.Authorizer` resource to be associated with this route.
	AuthorizerId pulumix.Input[*string]
	// The [model selection expression](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-model-selection-expressions) for the route. Supported only for WebSocket APIs.
	ModelSelectionExpression pulumix.Input[*string]
	// Operation name for the route. Must be between 1 and 64 characters in length.
	OperationName pulumix.Input[*string]
	// Request models for the route. Supported only for WebSocket APIs.
	RequestModels pulumix.Input[map[string]string]
	// Request parameters for the route. Supported only for WebSocket APIs.
	RequestParameters pulumix.Input[[]*RouteRequestParameterArgs]
	// Route key for the route. For HTTP APIs, the route key can be either `$default`, or a combination of an HTTP method and resource path, for example, `GET /pets`.
	RouteKey pulumix.Input[*string]
	// The [route response selection expression](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-route-response-selection-expressions) for the route. Supported only for WebSocket APIs.
	RouteResponseSelectionExpression pulumix.Input[*string]
	// Target for the route, of the form `integrations/`*`IntegrationID`*, where *`IntegrationID`* is the identifier of an `apigatewayv2.Integration` resource.
	Target pulumix.Input[*string]
}

func (RouteState) ElementType() reflect.Type {
	return reflect.TypeOf((*routeState)(nil)).Elem()
}

type routeArgs struct {
	// API identifier.
	ApiId string `pulumi:"apiId"`
	// Boolean whether an API key is required for the route. Defaults to `false`. Supported only for WebSocket APIs.
	ApiKeyRequired *bool `pulumi:"apiKeyRequired"`
	// Authorization scopes supported by this route. The scopes are used with a JWT authorizer to authorize the method invocation.
	AuthorizationScopes []string `pulumi:"authorizationScopes"`
	// Authorization type for the route.
	// For WebSocket APIs, valid values are `NONE` for open access, `AWS_IAM` for using AWS IAM permissions, and `CUSTOM` for using a Lambda authorizer.
	// For HTTP APIs, valid values are `NONE` for open access, `JWT` for using JSON Web Tokens, `AWS_IAM` for using AWS IAM permissions, and `CUSTOM` for using a Lambda authorizer.
	// Defaults to `NONE`.
	AuthorizationType *string `pulumi:"authorizationType"`
	// Identifier of the `apigatewayv2.Authorizer` resource to be associated with this route.
	AuthorizerId *string `pulumi:"authorizerId"`
	// The [model selection expression](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-model-selection-expressions) for the route. Supported only for WebSocket APIs.
	ModelSelectionExpression *string `pulumi:"modelSelectionExpression"`
	// Operation name for the route. Must be between 1 and 64 characters in length.
	OperationName *string `pulumi:"operationName"`
	// Request models for the route. Supported only for WebSocket APIs.
	RequestModels map[string]string `pulumi:"requestModels"`
	// Request parameters for the route. Supported only for WebSocket APIs.
	RequestParameters []RouteRequestParameter `pulumi:"requestParameters"`
	// Route key for the route. For HTTP APIs, the route key can be either `$default`, or a combination of an HTTP method and resource path, for example, `GET /pets`.
	RouteKey string `pulumi:"routeKey"`
	// The [route response selection expression](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-route-response-selection-expressions) for the route. Supported only for WebSocket APIs.
	RouteResponseSelectionExpression *string `pulumi:"routeResponseSelectionExpression"`
	// Target for the route, of the form `integrations/`*`IntegrationID`*, where *`IntegrationID`* is the identifier of an `apigatewayv2.Integration` resource.
	Target *string `pulumi:"target"`
}

// The set of arguments for constructing a Route resource.
type RouteArgs struct {
	// API identifier.
	ApiId pulumix.Input[string]
	// Boolean whether an API key is required for the route. Defaults to `false`. Supported only for WebSocket APIs.
	ApiKeyRequired pulumix.Input[*bool]
	// Authorization scopes supported by this route. The scopes are used with a JWT authorizer to authorize the method invocation.
	AuthorizationScopes pulumix.Input[[]string]
	// Authorization type for the route.
	// For WebSocket APIs, valid values are `NONE` for open access, `AWS_IAM` for using AWS IAM permissions, and `CUSTOM` for using a Lambda authorizer.
	// For HTTP APIs, valid values are `NONE` for open access, `JWT` for using JSON Web Tokens, `AWS_IAM` for using AWS IAM permissions, and `CUSTOM` for using a Lambda authorizer.
	// Defaults to `NONE`.
	AuthorizationType pulumix.Input[*string]
	// Identifier of the `apigatewayv2.Authorizer` resource to be associated with this route.
	AuthorizerId pulumix.Input[*string]
	// The [model selection expression](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-model-selection-expressions) for the route. Supported only for WebSocket APIs.
	ModelSelectionExpression pulumix.Input[*string]
	// Operation name for the route. Must be between 1 and 64 characters in length.
	OperationName pulumix.Input[*string]
	// Request models for the route. Supported only for WebSocket APIs.
	RequestModels pulumix.Input[map[string]string]
	// Request parameters for the route. Supported only for WebSocket APIs.
	RequestParameters pulumix.Input[[]*RouteRequestParameterArgs]
	// Route key for the route. For HTTP APIs, the route key can be either `$default`, or a combination of an HTTP method and resource path, for example, `GET /pets`.
	RouteKey pulumix.Input[string]
	// The [route response selection expression](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-route-response-selection-expressions) for the route. Supported only for WebSocket APIs.
	RouteResponseSelectionExpression pulumix.Input[*string]
	// Target for the route, of the form `integrations/`*`IntegrationID`*, where *`IntegrationID`* is the identifier of an `apigatewayv2.Integration` resource.
	Target pulumix.Input[*string]
}

func (RouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*routeArgs)(nil)).Elem()
}

type RouteOutput struct{ *pulumi.OutputState }

func (RouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Route)(nil)).Elem()
}

func (o RouteOutput) ToRouteOutput() RouteOutput {
	return o
}

func (o RouteOutput) ToRouteOutputWithContext(ctx context.Context) RouteOutput {
	return o
}

func (o RouteOutput) ToOutput(ctx context.Context) pulumix.Output[Route] {
	return pulumix.Output[Route]{
		OutputState: o.OutputState,
	}
}

// API identifier.
func (o RouteOutput) ApiId() pulumix.Output[string] {
	value := pulumix.Apply[Route](o, func(v Route) pulumix.Output[string] { return v.ApiId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Boolean whether an API key is required for the route. Defaults to `false`. Supported only for WebSocket APIs.
func (o RouteOutput) ApiKeyRequired() pulumix.Output[*bool] {
	value := pulumix.Apply[Route](o, func(v Route) pulumix.Output[*bool] { return v.ApiKeyRequired })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// Authorization scopes supported by this route. The scopes are used with a JWT authorizer to authorize the method invocation.
func (o RouteOutput) AuthorizationScopes() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[Route](o, func(v Route) pulumix.ArrayOutput[string] { return v.AuthorizationScopes })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// Authorization type for the route.
// For WebSocket APIs, valid values are `NONE` for open access, `AWS_IAM` for using AWS IAM permissions, and `CUSTOM` for using a Lambda authorizer.
// For HTTP APIs, valid values are `NONE` for open access, `JWT` for using JSON Web Tokens, `AWS_IAM` for using AWS IAM permissions, and `CUSTOM` for using a Lambda authorizer.
// Defaults to `NONE`.
func (o RouteOutput) AuthorizationType() pulumix.Output[*string] {
	value := pulumix.Apply[Route](o, func(v Route) pulumix.Output[*string] { return v.AuthorizationType })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Identifier of the `apigatewayv2.Authorizer` resource to be associated with this route.
func (o RouteOutput) AuthorizerId() pulumix.Output[*string] {
	value := pulumix.Apply[Route](o, func(v Route) pulumix.Output[*string] { return v.AuthorizerId })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The [model selection expression](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-model-selection-expressions) for the route. Supported only for WebSocket APIs.
func (o RouteOutput) ModelSelectionExpression() pulumix.Output[*string] {
	value := pulumix.Apply[Route](o, func(v Route) pulumix.Output[*string] { return v.ModelSelectionExpression })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Operation name for the route. Must be between 1 and 64 characters in length.
func (o RouteOutput) OperationName() pulumix.Output[*string] {
	value := pulumix.Apply[Route](o, func(v Route) pulumix.Output[*string] { return v.OperationName })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Request models for the route. Supported only for WebSocket APIs.
func (o RouteOutput) RequestModels() pulumix.MapOutput[string] {
	value := pulumix.Apply[Route](o, func(v Route) pulumix.MapOutput[string] { return v.RequestModels })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Request parameters for the route. Supported only for WebSocket APIs.
func (o RouteOutput) RequestParameters() pulumix.GArrayOutput[RouteRequestParameter, RouteRequestParameterOutput] {
	value := pulumix.Apply[Route](o, func(v Route) pulumix.GArrayOutput[RouteRequestParameter, RouteRequestParameterOutput] {
		return v.RequestParameters
	})
	unwrapped := pulumix.Flatten[[]RouteRequestParameter, pulumix.GArrayOutput[RouteRequestParameter, RouteRequestParameterOutput]](value)
	return pulumix.GArrayOutput[RouteRequestParameter, RouteRequestParameterOutput]{OutputState: unwrapped.OutputState}
}

// Route key for the route. For HTTP APIs, the route key can be either `$default`, or a combination of an HTTP method and resource path, for example, `GET /pets`.
func (o RouteOutput) RouteKey() pulumix.Output[string] {
	value := pulumix.Apply[Route](o, func(v Route) pulumix.Output[string] { return v.RouteKey })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The [route response selection expression](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-route-response-selection-expressions) for the route. Supported only for WebSocket APIs.
func (o RouteOutput) RouteResponseSelectionExpression() pulumix.Output[*string] {
	value := pulumix.Apply[Route](o, func(v Route) pulumix.Output[*string] { return v.RouteResponseSelectionExpression })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Target for the route, of the form `integrations/`*`IntegrationID`*, where *`IntegrationID`* is the identifier of an `apigatewayv2.Integration` resource.
func (o RouteOutput) Target() pulumix.Output[*string] {
	value := pulumix.Apply[Route](o, func(v Route) pulumix.Output[*string] { return v.Target })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

func init() {
	pulumi.RegisterOutputType(RouteOutput{})
}
