// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datapipeline

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides details about a specific DataPipeline Pipeline Definition.
func LookupPipelineDefinition(ctx *pulumi.Context, args *LookupPipelineDefinitionArgs, opts ...pulumi.InvokeOption) (*LookupPipelineDefinitionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupPipelineDefinitionResult
	err := ctx.Invoke("aws:datapipeline/getPipelineDefinition:getPipelineDefinition", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPipelineDefinition.
type LookupPipelineDefinitionArgs struct {
	// Parameter values used in the pipeline definition. See below
	ParameterValues []GetPipelineDefinitionParameterValue `pulumi:"parameterValues"`
	// ID of the pipeline.
	PipelineId string `pulumi:"pipelineId"`
}

// A collection of values returned by getPipelineDefinition.
type LookupPipelineDefinitionResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Parameter objects used in the pipeline definition. See below
	ParameterObjects []GetPipelineDefinitionParameterObject `pulumi:"parameterObjects"`
	// Parameter values used in the pipeline definition. See below
	ParameterValues []GetPipelineDefinitionParameterValue `pulumi:"parameterValues"`
	PipelineId      string                                `pulumi:"pipelineId"`
	// Objects defined in the pipeline. See below
	PipelineObjects []GetPipelineDefinitionPipelineObject `pulumi:"pipelineObjects"`
}

func LookupPipelineDefinitionOutput(ctx *pulumi.Context, args LookupPipelineDefinitionOutputArgs, opts ...pulumi.InvokeOption) LookupPipelineDefinitionResultOutput {
	outputResult := pulumix.ApplyErr[*LookupPipelineDefinitionArgs](args.ToOutput(), func(plainArgs *LookupPipelineDefinitionArgs) (*LookupPipelineDefinitionResult, error) {
		return LookupPipelineDefinition(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[LookupPipelineDefinitionResultOutput, *LookupPipelineDefinitionResult](outputResult)
}

// A collection of arguments for invoking getPipelineDefinition.
type LookupPipelineDefinitionOutputArgs struct {
	// Parameter values used in the pipeline definition. See below
	ParameterValues pulumix.Input[[]*GetPipelineDefinitionParameterValueArgs] `pulumi:"parameterValues"`
	// ID of the pipeline.
	PipelineId pulumix.Input[string] `pulumi:"pipelineId"`
}

func (args LookupPipelineDefinitionOutputArgs) ToOutput() pulumix.Output[*LookupPipelineDefinitionArgs] {
	allArgs := pulumix.All(
		args.ParameterValues.ToOutput(context.Background()).AsAny(),
		args.PipelineId.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *LookupPipelineDefinitionArgs {
		return &LookupPipelineDefinitionArgs{
			ParameterValues: resolvedArgs[0].([]GetPipelineDefinitionParameterValue),
			PipelineId:      resolvedArgs[1].(string),
		}
	})
}

type LookupPipelineDefinitionResultOutput struct{ *pulumi.OutputState }

func (LookupPipelineDefinitionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPipelineDefinitionResult)(nil)).Elem()
}

func (o LookupPipelineDefinitionResultOutput) ToOutput(context.Context) pulumix.Output[*LookupPipelineDefinitionResult] {
	return pulumix.Output[*LookupPipelineDefinitionResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupPipelineDefinitionResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*LookupPipelineDefinitionResult](o, func(v *LookupPipelineDefinitionResult) string { return v.Id })
}

func (o LookupPipelineDefinitionResultOutput) ParameterObjects() pulumix.GArrayOutput[GetPipelineDefinitionParameterObject, GetPipelineDefinitionParameterObjectOutput] {
	value := pulumix.Apply[*LookupPipelineDefinitionResult](o, func(v *LookupPipelineDefinitionResult) []GetPipelineDefinitionParameterObject {
		return v.ParameterObjects
	})
	return pulumix.GArrayOutput[GetPipelineDefinitionParameterObject, GetPipelineDefinitionParameterObjectOutput]{
		OutputState: value.OutputState,
	}
}

func (o LookupPipelineDefinitionResultOutput) ParameterValues() pulumix.GArrayOutput[GetPipelineDefinitionParameterValue, GetPipelineDefinitionParameterValueOutput] {
	value := pulumix.Apply[*LookupPipelineDefinitionResult](o, func(v *LookupPipelineDefinitionResult) []GetPipelineDefinitionParameterValue {
		return v.ParameterValues
	})
	return pulumix.GArrayOutput[GetPipelineDefinitionParameterValue, GetPipelineDefinitionParameterValueOutput]{
		OutputState: value.OutputState,
	}
}

func (o LookupPipelineDefinitionResultOutput) PipelineId() pulumix.Output[string] {
	return pulumix.Apply[*LookupPipelineDefinitionResult](o, func(v *LookupPipelineDefinitionResult) string { return v.PipelineId })
}

func (o LookupPipelineDefinitionResultOutput) PipelineObjects() pulumix.GArrayOutput[GetPipelineDefinitionPipelineObject, GetPipelineDefinitionPipelineObjectOutput] {
	value := pulumix.Apply[*LookupPipelineDefinitionResult](o, func(v *LookupPipelineDefinitionResult) []GetPipelineDefinitionPipelineObject {
		return v.PipelineObjects
	})
	return pulumix.GArrayOutput[GetPipelineDefinitionPipelineObject, GetPipelineDefinitionPipelineObjectOutput]{
		OutputState: value.OutputState,
	}
}
