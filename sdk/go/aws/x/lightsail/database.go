// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package lightsail

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a Lightsail Database. Amazon Lightsail is a service to provide easy virtual private servers
// with custom software already setup. See [What is Amazon Lightsail?](https://lightsail.aws.amazon.com/ls/docs/getting-started/article/what-is-amazon-lightsail)
// for more information.
//
// > **Note:** Lightsail is currently only supported in a limited number of AWS Regions, please see ["Regions and Availability Zones"](https://aws.amazon.com/about-aws/global-infrastructure/regional-product-services/) for more details
type Database struct {
	pulumi.CustomResourceState

	// When true , applies changes immediately. When false , applies changes during the preferred maintenance window. Some changes may cause an outage.
	ApplyImmediately pulumix.Output[bool] `pulumi:"applyImmediately"`
	// The ARN of the Lightsail instance (matches `id`).
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The Availability Zone in which to create your new database. Use the us-east-2a case-sensitive format.
	AvailabilityZone pulumix.Output[string] `pulumi:"availabilityZone"`
	// When true, enables automated backup retention for your database. When false, disables automated backup retention for your database. Disabling backup retention deletes all automated database backups. Before disabling this, you may want to create a snapshot of your database.
	BackupRetentionEnabled pulumix.Output[*bool] `pulumi:"backupRetentionEnabled"`
	// The blueprint ID for your new database. A blueprint describes the major engine version of a database. You can get a list of database blueprints IDs by using the AWS CLI command: `aws lightsail get-relational-database-blueprints`
	BlueprintId pulumix.Output[string] `pulumi:"blueprintId"`
	// The bundle ID for your new database. A bundle describes the performance specifications for your database (see list below). You can get a list of database bundle IDs by using the AWS CLI command: `aws lightsail get-relational-database-bundles`.
	BundleId pulumix.Output[string] `pulumi:"bundleId"`
	// The certificate associated with the database.
	CaCertificateIdentifier pulumix.Output[string] `pulumi:"caCertificateIdentifier"`
	// The number of vCPUs for the database.
	CpuCount pulumix.Output[int] `pulumi:"cpuCount"`
	// The timestamp when the instance was created.
	CreatedAt pulumix.Output[string] `pulumi:"createdAt"`
	// The size of the disk for the database.
	DiskSize pulumix.Output[float64] `pulumi:"diskSize"`
	// The database software (for example, MySQL).
	Engine pulumix.Output[string] `pulumi:"engine"`
	// The database engine version (for example, 5.7.23).
	EngineVersion pulumix.Output[string] `pulumi:"engineVersion"`
	// The name of the database snapshot created if skip final snapshot is false, which is the default value for that parameter.
	FinalSnapshotName pulumix.Output[*string] `pulumi:"finalSnapshotName"`
	// The name of the master database created when the Lightsail database resource is created.
	MasterDatabaseName pulumix.Output[string] `pulumi:"masterDatabaseName"`
	// The master endpoint fqdn for the database.
	MasterEndpointAddress pulumix.Output[string] `pulumi:"masterEndpointAddress"`
	// The master endpoint network port for the database.
	MasterEndpointPort pulumix.Output[int] `pulumi:"masterEndpointPort"`
	// The password for the master user of your new database. The password can include any printable ASCII character except "/", """, or "@".
	MasterPassword pulumix.Output[string] `pulumi:"masterPassword"`
	// The master user name for your new database.
	MasterUsername pulumix.Output[string] `pulumi:"masterUsername"`
	// The daily time range during which automated backups are created for your new database if automated backups are enabled. Must be in the hh24:mi-hh24:mi format. Example: `16:00-16:30`. Specified in Coordinated Universal Time (UTC).
	PreferredBackupWindow pulumix.Output[string] `pulumi:"preferredBackupWindow"`
	// The weekly time range during which system maintenance can occur on your new database. Must be in the ddd:hh24:mi-ddd:hh24:mi format. Specified in Coordinated Universal Time (UTC). Example: `Tue:17:00-Tue:17:30`
	PreferredMaintenanceWindow pulumix.Output[string] `pulumi:"preferredMaintenanceWindow"`
	// Specifies the accessibility options for your new database. A value of true specifies a database that is available to resources outside of your Lightsail account. A value of false specifies a database that is available only to your Lightsail resources in the same region as your database.
	PubliclyAccessible pulumix.Output[*bool] `pulumi:"publiclyAccessible"`
	// The amount of RAM in GB for the database.
	RamSize pulumix.Output[float64] `pulumi:"ramSize"`
	// The name to use for your new Lightsail database resource. Names be unique within each AWS Region in your Lightsail account.
	RelationalDatabaseName pulumix.Output[string] `pulumi:"relationalDatabaseName"`
	// Describes the secondary Availability Zone of a high availability database. The secondary database is used for failover support of a high availability database.
	SecondaryAvailabilityZone pulumix.Output[string] `pulumi:"secondaryAvailabilityZone"`
	// Determines whether a final database snapshot is created before your database is deleted. If true is specified, no database snapshot is created. If false is specified, a database snapshot is created before your database is deleted. You must specify the final relational database snapshot name parameter if the skip final snapshot parameter is false.
	SkipFinalSnapshot pulumix.Output[*bool] `pulumi:"skipFinalSnapshot"`
	// The support code for the database. Include this code in your email to support when you have questions about a database in Lightsail. This code enables our support team to look up your Lightsail information more easily.
	SupportCode pulumix.Output[string] `pulumi:"supportCode"`
	// A map of tags to assign to the resource. To create a key-only tag, use an empty string as the value.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
}

// NewDatabase registers a new resource with the given unique name, arguments, and options.
func NewDatabase(ctx *pulumi.Context,
	name string, args *DatabaseArgs, opts ...pulumi.ResourceOption) (*Database, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BlueprintId == nil {
		return nil, errors.New("invalid value for required argument 'BlueprintId'")
	}
	if args.BundleId == nil {
		return nil, errors.New("invalid value for required argument 'BundleId'")
	}
	if args.MasterDatabaseName == nil {
		return nil, errors.New("invalid value for required argument 'MasterDatabaseName'")
	}
	if args.MasterPassword == nil {
		return nil, errors.New("invalid value for required argument 'MasterPassword'")
	}
	if args.MasterUsername == nil {
		return nil, errors.New("invalid value for required argument 'MasterUsername'")
	}
	if args.RelationalDatabaseName == nil {
		return nil, errors.New("invalid value for required argument 'RelationalDatabaseName'")
	}
	if args.MasterPassword != nil {
		untypedSecretValue := pulumi.ToSecret(args.MasterPassword.ToOutput(ctx.Context()).Untyped())
		args.MasterPassword = pulumix.MustConvertTyped[string](untypedSecretValue)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"masterPassword",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Database
	err := ctx.RegisterResource("aws:lightsail/database:Database", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDatabase gets an existing Database resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDatabase(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DatabaseState, opts ...pulumi.ResourceOption) (*Database, error) {
	var resource Database
	err := ctx.ReadResource("aws:lightsail/database:Database", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Database resources.
type databaseState struct {
	// When true , applies changes immediately. When false , applies changes during the preferred maintenance window. Some changes may cause an outage.
	ApplyImmediately *bool `pulumi:"applyImmediately"`
	// The ARN of the Lightsail instance (matches `id`).
	Arn *string `pulumi:"arn"`
	// The Availability Zone in which to create your new database. Use the us-east-2a case-sensitive format.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// When true, enables automated backup retention for your database. When false, disables automated backup retention for your database. Disabling backup retention deletes all automated database backups. Before disabling this, you may want to create a snapshot of your database.
	BackupRetentionEnabled *bool `pulumi:"backupRetentionEnabled"`
	// The blueprint ID for your new database. A blueprint describes the major engine version of a database. You can get a list of database blueprints IDs by using the AWS CLI command: `aws lightsail get-relational-database-blueprints`
	BlueprintId *string `pulumi:"blueprintId"`
	// The bundle ID for your new database. A bundle describes the performance specifications for your database (see list below). You can get a list of database bundle IDs by using the AWS CLI command: `aws lightsail get-relational-database-bundles`.
	BundleId *string `pulumi:"bundleId"`
	// The certificate associated with the database.
	CaCertificateIdentifier *string `pulumi:"caCertificateIdentifier"`
	// The number of vCPUs for the database.
	CpuCount *int `pulumi:"cpuCount"`
	// The timestamp when the instance was created.
	CreatedAt *string `pulumi:"createdAt"`
	// The size of the disk for the database.
	DiskSize *float64 `pulumi:"diskSize"`
	// The database software (for example, MySQL).
	Engine *string `pulumi:"engine"`
	// The database engine version (for example, 5.7.23).
	EngineVersion *string `pulumi:"engineVersion"`
	// The name of the database snapshot created if skip final snapshot is false, which is the default value for that parameter.
	FinalSnapshotName *string `pulumi:"finalSnapshotName"`
	// The name of the master database created when the Lightsail database resource is created.
	MasterDatabaseName *string `pulumi:"masterDatabaseName"`
	// The master endpoint fqdn for the database.
	MasterEndpointAddress *string `pulumi:"masterEndpointAddress"`
	// The master endpoint network port for the database.
	MasterEndpointPort *int `pulumi:"masterEndpointPort"`
	// The password for the master user of your new database. The password can include any printable ASCII character except "/", """, or "@".
	MasterPassword *string `pulumi:"masterPassword"`
	// The master user name for your new database.
	MasterUsername *string `pulumi:"masterUsername"`
	// The daily time range during which automated backups are created for your new database if automated backups are enabled. Must be in the hh24:mi-hh24:mi format. Example: `16:00-16:30`. Specified in Coordinated Universal Time (UTC).
	PreferredBackupWindow *string `pulumi:"preferredBackupWindow"`
	// The weekly time range during which system maintenance can occur on your new database. Must be in the ddd:hh24:mi-ddd:hh24:mi format. Specified in Coordinated Universal Time (UTC). Example: `Tue:17:00-Tue:17:30`
	PreferredMaintenanceWindow *string `pulumi:"preferredMaintenanceWindow"`
	// Specifies the accessibility options for your new database. A value of true specifies a database that is available to resources outside of your Lightsail account. A value of false specifies a database that is available only to your Lightsail resources in the same region as your database.
	PubliclyAccessible *bool `pulumi:"publiclyAccessible"`
	// The amount of RAM in GB for the database.
	RamSize *float64 `pulumi:"ramSize"`
	// The name to use for your new Lightsail database resource. Names be unique within each AWS Region in your Lightsail account.
	RelationalDatabaseName *string `pulumi:"relationalDatabaseName"`
	// Describes the secondary Availability Zone of a high availability database. The secondary database is used for failover support of a high availability database.
	SecondaryAvailabilityZone *string `pulumi:"secondaryAvailabilityZone"`
	// Determines whether a final database snapshot is created before your database is deleted. If true is specified, no database snapshot is created. If false is specified, a database snapshot is created before your database is deleted. You must specify the final relational database snapshot name parameter if the skip final snapshot parameter is false.
	SkipFinalSnapshot *bool `pulumi:"skipFinalSnapshot"`
	// The support code for the database. Include this code in your email to support when you have questions about a database in Lightsail. This code enables our support team to look up your Lightsail information more easily.
	SupportCode *string `pulumi:"supportCode"`
	// A map of tags to assign to the resource. To create a key-only tag, use an empty string as the value.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type DatabaseState struct {
	// When true , applies changes immediately. When false , applies changes during the preferred maintenance window. Some changes may cause an outage.
	ApplyImmediately pulumix.Input[*bool]
	// The ARN of the Lightsail instance (matches `id`).
	Arn pulumix.Input[*string]
	// The Availability Zone in which to create your new database. Use the us-east-2a case-sensitive format.
	AvailabilityZone pulumix.Input[*string]
	// When true, enables automated backup retention for your database. When false, disables automated backup retention for your database. Disabling backup retention deletes all automated database backups. Before disabling this, you may want to create a snapshot of your database.
	BackupRetentionEnabled pulumix.Input[*bool]
	// The blueprint ID for your new database. A blueprint describes the major engine version of a database. You can get a list of database blueprints IDs by using the AWS CLI command: `aws lightsail get-relational-database-blueprints`
	BlueprintId pulumix.Input[*string]
	// The bundle ID for your new database. A bundle describes the performance specifications for your database (see list below). You can get a list of database bundle IDs by using the AWS CLI command: `aws lightsail get-relational-database-bundles`.
	BundleId pulumix.Input[*string]
	// The certificate associated with the database.
	CaCertificateIdentifier pulumix.Input[*string]
	// The number of vCPUs for the database.
	CpuCount pulumix.Input[*int]
	// The timestamp when the instance was created.
	CreatedAt pulumix.Input[*string]
	// The size of the disk for the database.
	DiskSize pulumix.Input[*float64]
	// The database software (for example, MySQL).
	Engine pulumix.Input[*string]
	// The database engine version (for example, 5.7.23).
	EngineVersion pulumix.Input[*string]
	// The name of the database snapshot created if skip final snapshot is false, which is the default value for that parameter.
	FinalSnapshotName pulumix.Input[*string]
	// The name of the master database created when the Lightsail database resource is created.
	MasterDatabaseName pulumix.Input[*string]
	// The master endpoint fqdn for the database.
	MasterEndpointAddress pulumix.Input[*string]
	// The master endpoint network port for the database.
	MasterEndpointPort pulumix.Input[*int]
	// The password for the master user of your new database. The password can include any printable ASCII character except "/", """, or "@".
	MasterPassword pulumix.Input[*string]
	// The master user name for your new database.
	MasterUsername pulumix.Input[*string]
	// The daily time range during which automated backups are created for your new database if automated backups are enabled. Must be in the hh24:mi-hh24:mi format. Example: `16:00-16:30`. Specified in Coordinated Universal Time (UTC).
	PreferredBackupWindow pulumix.Input[*string]
	// The weekly time range during which system maintenance can occur on your new database. Must be in the ddd:hh24:mi-ddd:hh24:mi format. Specified in Coordinated Universal Time (UTC). Example: `Tue:17:00-Tue:17:30`
	PreferredMaintenanceWindow pulumix.Input[*string]
	// Specifies the accessibility options for your new database. A value of true specifies a database that is available to resources outside of your Lightsail account. A value of false specifies a database that is available only to your Lightsail resources in the same region as your database.
	PubliclyAccessible pulumix.Input[*bool]
	// The amount of RAM in GB for the database.
	RamSize pulumix.Input[*float64]
	// The name to use for your new Lightsail database resource. Names be unique within each AWS Region in your Lightsail account.
	RelationalDatabaseName pulumix.Input[*string]
	// Describes the secondary Availability Zone of a high availability database. The secondary database is used for failover support of a high availability database.
	SecondaryAvailabilityZone pulumix.Input[*string]
	// Determines whether a final database snapshot is created before your database is deleted. If true is specified, no database snapshot is created. If false is specified, a database snapshot is created before your database is deleted. You must specify the final relational database snapshot name parameter if the skip final snapshot parameter is false.
	SkipFinalSnapshot pulumix.Input[*bool]
	// The support code for the database. Include this code in your email to support when you have questions about a database in Lightsail. This code enables our support team to look up your Lightsail information more easily.
	SupportCode pulumix.Input[*string]
	// A map of tags to assign to the resource. To create a key-only tag, use an empty string as the value.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
}

func (DatabaseState) ElementType() reflect.Type {
	return reflect.TypeOf((*databaseState)(nil)).Elem()
}

type databaseArgs struct {
	// When true , applies changes immediately. When false , applies changes during the preferred maintenance window. Some changes may cause an outage.
	ApplyImmediately *bool `pulumi:"applyImmediately"`
	// The Availability Zone in which to create your new database. Use the us-east-2a case-sensitive format.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// When true, enables automated backup retention for your database. When false, disables automated backup retention for your database. Disabling backup retention deletes all automated database backups. Before disabling this, you may want to create a snapshot of your database.
	BackupRetentionEnabled *bool `pulumi:"backupRetentionEnabled"`
	// The blueprint ID for your new database. A blueprint describes the major engine version of a database. You can get a list of database blueprints IDs by using the AWS CLI command: `aws lightsail get-relational-database-blueprints`
	BlueprintId string `pulumi:"blueprintId"`
	// The bundle ID for your new database. A bundle describes the performance specifications for your database (see list below). You can get a list of database bundle IDs by using the AWS CLI command: `aws lightsail get-relational-database-bundles`.
	BundleId string `pulumi:"bundleId"`
	// The name of the database snapshot created if skip final snapshot is false, which is the default value for that parameter.
	FinalSnapshotName *string `pulumi:"finalSnapshotName"`
	// The name of the master database created when the Lightsail database resource is created.
	MasterDatabaseName string `pulumi:"masterDatabaseName"`
	// The password for the master user of your new database. The password can include any printable ASCII character except "/", """, or "@".
	MasterPassword string `pulumi:"masterPassword"`
	// The master user name for your new database.
	MasterUsername string `pulumi:"masterUsername"`
	// The daily time range during which automated backups are created for your new database if automated backups are enabled. Must be in the hh24:mi-hh24:mi format. Example: `16:00-16:30`. Specified in Coordinated Universal Time (UTC).
	PreferredBackupWindow *string `pulumi:"preferredBackupWindow"`
	// The weekly time range during which system maintenance can occur on your new database. Must be in the ddd:hh24:mi-ddd:hh24:mi format. Specified in Coordinated Universal Time (UTC). Example: `Tue:17:00-Tue:17:30`
	PreferredMaintenanceWindow *string `pulumi:"preferredMaintenanceWindow"`
	// Specifies the accessibility options for your new database. A value of true specifies a database that is available to resources outside of your Lightsail account. A value of false specifies a database that is available only to your Lightsail resources in the same region as your database.
	PubliclyAccessible *bool `pulumi:"publiclyAccessible"`
	// The name to use for your new Lightsail database resource. Names be unique within each AWS Region in your Lightsail account.
	RelationalDatabaseName string `pulumi:"relationalDatabaseName"`
	// Determines whether a final database snapshot is created before your database is deleted. If true is specified, no database snapshot is created. If false is specified, a database snapshot is created before your database is deleted. You must specify the final relational database snapshot name parameter if the skip final snapshot parameter is false.
	SkipFinalSnapshot *bool `pulumi:"skipFinalSnapshot"`
	// A map of tags to assign to the resource. To create a key-only tag, use an empty string as the value.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Database resource.
type DatabaseArgs struct {
	// When true , applies changes immediately. When false , applies changes during the preferred maintenance window. Some changes may cause an outage.
	ApplyImmediately pulumix.Input[*bool]
	// The Availability Zone in which to create your new database. Use the us-east-2a case-sensitive format.
	AvailabilityZone pulumix.Input[*string]
	// When true, enables automated backup retention for your database. When false, disables automated backup retention for your database. Disabling backup retention deletes all automated database backups. Before disabling this, you may want to create a snapshot of your database.
	BackupRetentionEnabled pulumix.Input[*bool]
	// The blueprint ID for your new database. A blueprint describes the major engine version of a database. You can get a list of database blueprints IDs by using the AWS CLI command: `aws lightsail get-relational-database-blueprints`
	BlueprintId pulumix.Input[string]
	// The bundle ID for your new database. A bundle describes the performance specifications for your database (see list below). You can get a list of database bundle IDs by using the AWS CLI command: `aws lightsail get-relational-database-bundles`.
	BundleId pulumix.Input[string]
	// The name of the database snapshot created if skip final snapshot is false, which is the default value for that parameter.
	FinalSnapshotName pulumix.Input[*string]
	// The name of the master database created when the Lightsail database resource is created.
	MasterDatabaseName pulumix.Input[string]
	// The password for the master user of your new database. The password can include any printable ASCII character except "/", """, or "@".
	MasterPassword pulumix.Input[string]
	// The master user name for your new database.
	MasterUsername pulumix.Input[string]
	// The daily time range during which automated backups are created for your new database if automated backups are enabled. Must be in the hh24:mi-hh24:mi format. Example: `16:00-16:30`. Specified in Coordinated Universal Time (UTC).
	PreferredBackupWindow pulumix.Input[*string]
	// The weekly time range during which system maintenance can occur on your new database. Must be in the ddd:hh24:mi-ddd:hh24:mi format. Specified in Coordinated Universal Time (UTC). Example: `Tue:17:00-Tue:17:30`
	PreferredMaintenanceWindow pulumix.Input[*string]
	// Specifies the accessibility options for your new database. A value of true specifies a database that is available to resources outside of your Lightsail account. A value of false specifies a database that is available only to your Lightsail resources in the same region as your database.
	PubliclyAccessible pulumix.Input[*bool]
	// The name to use for your new Lightsail database resource. Names be unique within each AWS Region in your Lightsail account.
	RelationalDatabaseName pulumix.Input[string]
	// Determines whether a final database snapshot is created before your database is deleted. If true is specified, no database snapshot is created. If false is specified, a database snapshot is created before your database is deleted. You must specify the final relational database snapshot name parameter if the skip final snapshot parameter is false.
	SkipFinalSnapshot pulumix.Input[*bool]
	// A map of tags to assign to the resource. To create a key-only tag, use an empty string as the value.
	Tags pulumix.Input[map[string]string]
}

func (DatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*databaseArgs)(nil)).Elem()
}

type DatabaseOutput struct{ *pulumi.OutputState }

func (DatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Database)(nil)).Elem()
}

func (o DatabaseOutput) ToDatabaseOutput() DatabaseOutput {
	return o
}

func (o DatabaseOutput) ToDatabaseOutputWithContext(ctx context.Context) DatabaseOutput {
	return o
}

func (o DatabaseOutput) ToOutput(ctx context.Context) pulumix.Output[Database] {
	return pulumix.Output[Database]{
		OutputState: o.OutputState,
	}
}

// When true , applies changes immediately. When false , applies changes during the preferred maintenance window. Some changes may cause an outage.
func (o DatabaseOutput) ApplyImmediately() pulumix.Output[bool] {
	value := pulumix.Apply[Database](o, func(v Database) pulumix.Output[bool] { return v.ApplyImmediately })
	return pulumix.Flatten[bool, pulumix.Output[bool]](value)
}

// The ARN of the Lightsail instance (matches `id`).
func (o DatabaseOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Database](o, func(v Database) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The Availability Zone in which to create your new database. Use the us-east-2a case-sensitive format.
func (o DatabaseOutput) AvailabilityZone() pulumix.Output[string] {
	value := pulumix.Apply[Database](o, func(v Database) pulumix.Output[string] { return v.AvailabilityZone })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// When true, enables automated backup retention for your database. When false, disables automated backup retention for your database. Disabling backup retention deletes all automated database backups. Before disabling this, you may want to create a snapshot of your database.
func (o DatabaseOutput) BackupRetentionEnabled() pulumix.Output[*bool] {
	value := pulumix.Apply[Database](o, func(v Database) pulumix.Output[*bool] { return v.BackupRetentionEnabled })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// The blueprint ID for your new database. A blueprint describes the major engine version of a database. You can get a list of database blueprints IDs by using the AWS CLI command: `aws lightsail get-relational-database-blueprints`
func (o DatabaseOutput) BlueprintId() pulumix.Output[string] {
	value := pulumix.Apply[Database](o, func(v Database) pulumix.Output[string] { return v.BlueprintId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The bundle ID for your new database. A bundle describes the performance specifications for your database (see list below). You can get a list of database bundle IDs by using the AWS CLI command: `aws lightsail get-relational-database-bundles`.
func (o DatabaseOutput) BundleId() pulumix.Output[string] {
	value := pulumix.Apply[Database](o, func(v Database) pulumix.Output[string] { return v.BundleId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The certificate associated with the database.
func (o DatabaseOutput) CaCertificateIdentifier() pulumix.Output[string] {
	value := pulumix.Apply[Database](o, func(v Database) pulumix.Output[string] { return v.CaCertificateIdentifier })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The number of vCPUs for the database.
func (o DatabaseOutput) CpuCount() pulumix.Output[int] {
	value := pulumix.Apply[Database](o, func(v Database) pulumix.Output[int] { return v.CpuCount })
	return pulumix.Flatten[int, pulumix.Output[int]](value)
}

// The timestamp when the instance was created.
func (o DatabaseOutput) CreatedAt() pulumix.Output[string] {
	value := pulumix.Apply[Database](o, func(v Database) pulumix.Output[string] { return v.CreatedAt })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The size of the disk for the database.
func (o DatabaseOutput) DiskSize() pulumix.Output[float64] {
	value := pulumix.Apply[Database](o, func(v Database) pulumix.Output[float64] { return v.DiskSize })
	return pulumix.Flatten[float64, pulumix.Output[float64]](value)
}

// The database software (for example, MySQL).
func (o DatabaseOutput) Engine() pulumix.Output[string] {
	value := pulumix.Apply[Database](o, func(v Database) pulumix.Output[string] { return v.Engine })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The database engine version (for example, 5.7.23).
func (o DatabaseOutput) EngineVersion() pulumix.Output[string] {
	value := pulumix.Apply[Database](o, func(v Database) pulumix.Output[string] { return v.EngineVersion })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The name of the database snapshot created if skip final snapshot is false, which is the default value for that parameter.
func (o DatabaseOutput) FinalSnapshotName() pulumix.Output[*string] {
	value := pulumix.Apply[Database](o, func(v Database) pulumix.Output[*string] { return v.FinalSnapshotName })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The name of the master database created when the Lightsail database resource is created.
func (o DatabaseOutput) MasterDatabaseName() pulumix.Output[string] {
	value := pulumix.Apply[Database](o, func(v Database) pulumix.Output[string] { return v.MasterDatabaseName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The master endpoint fqdn for the database.
func (o DatabaseOutput) MasterEndpointAddress() pulumix.Output[string] {
	value := pulumix.Apply[Database](o, func(v Database) pulumix.Output[string] { return v.MasterEndpointAddress })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The master endpoint network port for the database.
func (o DatabaseOutput) MasterEndpointPort() pulumix.Output[int] {
	value := pulumix.Apply[Database](o, func(v Database) pulumix.Output[int] { return v.MasterEndpointPort })
	return pulumix.Flatten[int, pulumix.Output[int]](value)
}

// The password for the master user of your new database. The password can include any printable ASCII character except "/", """, or "@".
func (o DatabaseOutput) MasterPassword() pulumix.Output[string] {
	value := pulumix.Apply[Database](o, func(v Database) pulumix.Output[string] { return v.MasterPassword })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The master user name for your new database.
func (o DatabaseOutput) MasterUsername() pulumix.Output[string] {
	value := pulumix.Apply[Database](o, func(v Database) pulumix.Output[string] { return v.MasterUsername })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The daily time range during which automated backups are created for your new database if automated backups are enabled. Must be in the hh24:mi-hh24:mi format. Example: `16:00-16:30`. Specified in Coordinated Universal Time (UTC).
func (o DatabaseOutput) PreferredBackupWindow() pulumix.Output[string] {
	value := pulumix.Apply[Database](o, func(v Database) pulumix.Output[string] { return v.PreferredBackupWindow })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The weekly time range during which system maintenance can occur on your new database. Must be in the ddd:hh24:mi-ddd:hh24:mi format. Specified in Coordinated Universal Time (UTC). Example: `Tue:17:00-Tue:17:30`
func (o DatabaseOutput) PreferredMaintenanceWindow() pulumix.Output[string] {
	value := pulumix.Apply[Database](o, func(v Database) pulumix.Output[string] { return v.PreferredMaintenanceWindow })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Specifies the accessibility options for your new database. A value of true specifies a database that is available to resources outside of your Lightsail account. A value of false specifies a database that is available only to your Lightsail resources in the same region as your database.
func (o DatabaseOutput) PubliclyAccessible() pulumix.Output[*bool] {
	value := pulumix.Apply[Database](o, func(v Database) pulumix.Output[*bool] { return v.PubliclyAccessible })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// The amount of RAM in GB for the database.
func (o DatabaseOutput) RamSize() pulumix.Output[float64] {
	value := pulumix.Apply[Database](o, func(v Database) pulumix.Output[float64] { return v.RamSize })
	return pulumix.Flatten[float64, pulumix.Output[float64]](value)
}

// The name to use for your new Lightsail database resource. Names be unique within each AWS Region in your Lightsail account.
func (o DatabaseOutput) RelationalDatabaseName() pulumix.Output[string] {
	value := pulumix.Apply[Database](o, func(v Database) pulumix.Output[string] { return v.RelationalDatabaseName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Describes the secondary Availability Zone of a high availability database. The secondary database is used for failover support of a high availability database.
func (o DatabaseOutput) SecondaryAvailabilityZone() pulumix.Output[string] {
	value := pulumix.Apply[Database](o, func(v Database) pulumix.Output[string] { return v.SecondaryAvailabilityZone })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Determines whether a final database snapshot is created before your database is deleted. If true is specified, no database snapshot is created. If false is specified, a database snapshot is created before your database is deleted. You must specify the final relational database snapshot name parameter if the skip final snapshot parameter is false.
func (o DatabaseOutput) SkipFinalSnapshot() pulumix.Output[*bool] {
	value := pulumix.Apply[Database](o, func(v Database) pulumix.Output[*bool] { return v.SkipFinalSnapshot })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// The support code for the database. Include this code in your email to support when you have questions about a database in Lightsail. This code enables our support team to look up your Lightsail information more easily.
func (o DatabaseOutput) SupportCode() pulumix.Output[string] {
	value := pulumix.Apply[Database](o, func(v Database) pulumix.Output[string] { return v.SupportCode })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A map of tags to assign to the resource. To create a key-only tag, use an empty string as the value.
func (o DatabaseOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Database](o, func(v Database) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o DatabaseOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[Database](o, func(v Database) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(DatabaseOutput{})
}
