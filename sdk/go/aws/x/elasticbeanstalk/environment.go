// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package elasticbeanstalk

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an Elastic Beanstalk Environment Resource. Elastic Beanstalk allows
// you to deploy and manage applications in the AWS cloud without worrying about
// the infrastructure that runs those applications.
//
// Environments are often things such as `development`, `integration`, or
// `production`.
type Environment struct {
	pulumi.CustomResourceState

	// List of all option settings configured in this Environment. These
	// are a combination of default settings and their overrides from `setting` in
	// the configuration.
	AllSettings pulumix.GArrayOutput[EnvironmentAllSetting, EnvironmentAllSettingOutput] `pulumi:"allSettings"`
	// Name of the application that contains the version
	// to be deployed
	Application pulumix.Output[string] `pulumi:"application"`
	Arn         pulumix.Output[string] `pulumi:"arn"`
	// The autoscaling groups used by this Environment.
	AutoscalingGroups pulumix.ArrayOutput[string] `pulumi:"autoscalingGroups"`
	// Fully qualified DNS name for this Environment.
	Cname pulumix.Output[string] `pulumi:"cname"`
	// Prefix to use for the fully qualified DNS name of
	// the Environment.
	CnamePrefix pulumix.Output[string] `pulumi:"cnamePrefix"`
	// Short description of the Environment
	Description pulumix.Output[*string] `pulumi:"description"`
	// The URL to the Load Balancer for this Environment
	EndpointUrl pulumix.Output[string] `pulumi:"endpointUrl"`
	// Instances used by this Environment.
	Instances pulumix.ArrayOutput[string] `pulumi:"instances"`
	// Launch configurations in use by this Environment.
	LaunchConfigurations pulumix.ArrayOutput[string] `pulumi:"launchConfigurations"`
	// Elastic load balancers in use by this Environment.
	LoadBalancers pulumix.ArrayOutput[string] `pulumi:"loadBalancers"`
	// A unique name for this Environment. This name is used
	// in the application URL
	Name pulumix.Output[string] `pulumi:"name"`
	// The [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) of the Elastic Beanstalk [Platform](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-environment.html#cfn-beanstalk-environment-platformarn)
	// to use in deployment
	PlatformArn pulumix.Output[string] `pulumi:"platformArn"`
	// The time between polling the AWS API to
	// check if changes have been applied. Use this to adjust the rate of API calls
	// for any `create` or `update` action. Minimum `10s`, maximum `180s`. Omit this to
	// use the default behavior, which is an exponential backoff
	PollInterval pulumix.Output[*string] `pulumi:"pollInterval"`
	// SQS queues in use by this Environment.
	Queues pulumix.ArrayOutput[string] `pulumi:"queues"`
	// Option settings to configure the new Environment. These
	// override specific values that are set as defaults. The format is detailed
	// below in Option Settings
	Settings pulumix.GArrayOutput[EnvironmentSetting, EnvironmentSettingOutput] `pulumi:"settings"`
	// A solution stack to base your environment
	// off of. Example stacks can be found in the [Amazon API documentation](https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/concepts.platforms.html)
	SolutionStackName pulumix.Output[string] `pulumi:"solutionStackName"`
	// A set of tags to apply to the Environment. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// The name of the Elastic Beanstalk Configuration
	// template to use in deployment
	TemplateName pulumix.Output[*string] `pulumi:"templateName"`
	// Elastic Beanstalk Environment tier. Valid values are `Worker`
	// or `WebServer`. If tier is left blank `WebServer` will be used.
	Tier pulumix.Output[*string] `pulumi:"tier"`
	// Autoscaling triggers in use by this Environment.
	Triggers pulumix.ArrayOutput[string] `pulumi:"triggers"`
	// The name of the Elastic Beanstalk Application Version
	// to use in deployment.
	Version pulumix.Output[string] `pulumi:"version"`
	// The maximum
	// [duration](https://golang.org/pkg/time/#ParseDuration) that this provider should
	// wait for an Elastic Beanstalk Environment to be in a ready state before timing
	// out.
	WaitForReadyTimeout pulumix.Output[*string] `pulumi:"waitForReadyTimeout"`
}

// NewEnvironment registers a new resource with the given unique name, arguments, and options.
func NewEnvironment(ctx *pulumi.Context,
	name string, args *EnvironmentArgs, opts ...pulumi.ResourceOption) (*Environment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Application == nil {
		return nil, errors.New("invalid value for required argument 'Application'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Environment
	err := ctx.RegisterResource("aws:elasticbeanstalk/environment:Environment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEnvironment gets an existing Environment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEnvironment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EnvironmentState, opts ...pulumi.ResourceOption) (*Environment, error) {
	var resource Environment
	err := ctx.ReadResource("aws:elasticbeanstalk/environment:Environment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Environment resources.
type environmentState struct {
	// List of all option settings configured in this Environment. These
	// are a combination of default settings and their overrides from `setting` in
	// the configuration.
	AllSettings []EnvironmentAllSetting `pulumi:"allSettings"`
	// Name of the application that contains the version
	// to be deployed
	Application interface{} `pulumi:"application"`
	Arn         *string     `pulumi:"arn"`
	// The autoscaling groups used by this Environment.
	AutoscalingGroups []string `pulumi:"autoscalingGroups"`
	// Fully qualified DNS name for this Environment.
	Cname *string `pulumi:"cname"`
	// Prefix to use for the fully qualified DNS name of
	// the Environment.
	CnamePrefix *string `pulumi:"cnamePrefix"`
	// Short description of the Environment
	Description *string `pulumi:"description"`
	// The URL to the Load Balancer for this Environment
	EndpointUrl *string `pulumi:"endpointUrl"`
	// Instances used by this Environment.
	Instances []string `pulumi:"instances"`
	// Launch configurations in use by this Environment.
	LaunchConfigurations []string `pulumi:"launchConfigurations"`
	// Elastic load balancers in use by this Environment.
	LoadBalancers []string `pulumi:"loadBalancers"`
	// A unique name for this Environment. This name is used
	// in the application URL
	Name *string `pulumi:"name"`
	// The [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) of the Elastic Beanstalk [Platform](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-environment.html#cfn-beanstalk-environment-platformarn)
	// to use in deployment
	PlatformArn *string `pulumi:"platformArn"`
	// The time between polling the AWS API to
	// check if changes have been applied. Use this to adjust the rate of API calls
	// for any `create` or `update` action. Minimum `10s`, maximum `180s`. Omit this to
	// use the default behavior, which is an exponential backoff
	PollInterval *string `pulumi:"pollInterval"`
	// SQS queues in use by this Environment.
	Queues []string `pulumi:"queues"`
	// Option settings to configure the new Environment. These
	// override specific values that are set as defaults. The format is detailed
	// below in Option Settings
	Settings []EnvironmentSetting `pulumi:"settings"`
	// A solution stack to base your environment
	// off of. Example stacks can be found in the [Amazon API documentation](https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/concepts.platforms.html)
	SolutionStackName *string `pulumi:"solutionStackName"`
	// A set of tags to apply to the Environment. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// The name of the Elastic Beanstalk Configuration
	// template to use in deployment
	TemplateName *string `pulumi:"templateName"`
	// Elastic Beanstalk Environment tier. Valid values are `Worker`
	// or `WebServer`. If tier is left blank `WebServer` will be used.
	Tier *string `pulumi:"tier"`
	// Autoscaling triggers in use by this Environment.
	Triggers []string `pulumi:"triggers"`
	// The name of the Elastic Beanstalk Application Version
	// to use in deployment.
	Version *string `pulumi:"version"`
	// The maximum
	// [duration](https://golang.org/pkg/time/#ParseDuration) that this provider should
	// wait for an Elastic Beanstalk Environment to be in a ready state before timing
	// out.
	WaitForReadyTimeout *string `pulumi:"waitForReadyTimeout"`
}

type EnvironmentState struct {
	// List of all option settings configured in this Environment. These
	// are a combination of default settings and their overrides from `setting` in
	// the configuration.
	AllSettings pulumix.Input[[]*EnvironmentAllSettingArgs]
	// Name of the application that contains the version
	// to be deployed
	Application pulumix.Input[*any]
	Arn         pulumix.Input[*string]
	// The autoscaling groups used by this Environment.
	AutoscalingGroups pulumix.Input[[]string]
	// Fully qualified DNS name for this Environment.
	Cname pulumix.Input[*string]
	// Prefix to use for the fully qualified DNS name of
	// the Environment.
	CnamePrefix pulumix.Input[*string]
	// Short description of the Environment
	Description pulumix.Input[*string]
	// The URL to the Load Balancer for this Environment
	EndpointUrl pulumix.Input[*string]
	// Instances used by this Environment.
	Instances pulumix.Input[[]string]
	// Launch configurations in use by this Environment.
	LaunchConfigurations pulumix.Input[[]string]
	// Elastic load balancers in use by this Environment.
	LoadBalancers pulumix.Input[[]string]
	// A unique name for this Environment. This name is used
	// in the application URL
	Name pulumix.Input[*string]
	// The [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) of the Elastic Beanstalk [Platform](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-environment.html#cfn-beanstalk-environment-platformarn)
	// to use in deployment
	PlatformArn pulumix.Input[*string]
	// The time between polling the AWS API to
	// check if changes have been applied. Use this to adjust the rate of API calls
	// for any `create` or `update` action. Minimum `10s`, maximum `180s`. Omit this to
	// use the default behavior, which is an exponential backoff
	PollInterval pulumix.Input[*string]
	// SQS queues in use by this Environment.
	Queues pulumix.Input[[]string]
	// Option settings to configure the new Environment. These
	// override specific values that are set as defaults. The format is detailed
	// below in Option Settings
	Settings pulumix.Input[[]*EnvironmentSettingArgs]
	// A solution stack to base your environment
	// off of. Example stacks can be found in the [Amazon API documentation](https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/concepts.platforms.html)
	SolutionStackName pulumix.Input[*string]
	// A set of tags to apply to the Environment. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// The name of the Elastic Beanstalk Configuration
	// template to use in deployment
	TemplateName pulumix.Input[*string]
	// Elastic Beanstalk Environment tier. Valid values are `Worker`
	// or `WebServer`. If tier is left blank `WebServer` will be used.
	Tier pulumix.Input[*string]
	// Autoscaling triggers in use by this Environment.
	Triggers pulumix.Input[[]string]
	// The name of the Elastic Beanstalk Application Version
	// to use in deployment.
	Version pulumix.Input[*string]
	// The maximum
	// [duration](https://golang.org/pkg/time/#ParseDuration) that this provider should
	// wait for an Elastic Beanstalk Environment to be in a ready state before timing
	// out.
	WaitForReadyTimeout pulumix.Input[*string]
}

func (EnvironmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*environmentState)(nil)).Elem()
}

type environmentArgs struct {
	// Name of the application that contains the version
	// to be deployed
	Application interface{} `pulumi:"application"`
	// Prefix to use for the fully qualified DNS name of
	// the Environment.
	CnamePrefix *string `pulumi:"cnamePrefix"`
	// Short description of the Environment
	Description *string `pulumi:"description"`
	// A unique name for this Environment. This name is used
	// in the application URL
	Name *string `pulumi:"name"`
	// The [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) of the Elastic Beanstalk [Platform](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-environment.html#cfn-beanstalk-environment-platformarn)
	// to use in deployment
	PlatformArn *string `pulumi:"platformArn"`
	// The time between polling the AWS API to
	// check if changes have been applied. Use this to adjust the rate of API calls
	// for any `create` or `update` action. Minimum `10s`, maximum `180s`. Omit this to
	// use the default behavior, which is an exponential backoff
	PollInterval *string `pulumi:"pollInterval"`
	// Option settings to configure the new Environment. These
	// override specific values that are set as defaults. The format is detailed
	// below in Option Settings
	Settings []EnvironmentSetting `pulumi:"settings"`
	// A solution stack to base your environment
	// off of. Example stacks can be found in the [Amazon API documentation](https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/concepts.platforms.html)
	SolutionStackName *string `pulumi:"solutionStackName"`
	// A set of tags to apply to the Environment. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// The name of the Elastic Beanstalk Configuration
	// template to use in deployment
	TemplateName *string `pulumi:"templateName"`
	// Elastic Beanstalk Environment tier. Valid values are `Worker`
	// or `WebServer`. If tier is left blank `WebServer` will be used.
	Tier *string `pulumi:"tier"`
	// The name of the Elastic Beanstalk Application Version
	// to use in deployment.
	Version *string `pulumi:"version"`
	// The maximum
	// [duration](https://golang.org/pkg/time/#ParseDuration) that this provider should
	// wait for an Elastic Beanstalk Environment to be in a ready state before timing
	// out.
	WaitForReadyTimeout *string `pulumi:"waitForReadyTimeout"`
}

// The set of arguments for constructing a Environment resource.
type EnvironmentArgs struct {
	// Name of the application that contains the version
	// to be deployed
	Application pulumix.Input[any]
	// Prefix to use for the fully qualified DNS name of
	// the Environment.
	CnamePrefix pulumix.Input[*string]
	// Short description of the Environment
	Description pulumix.Input[*string]
	// A unique name for this Environment. This name is used
	// in the application URL
	Name pulumix.Input[*string]
	// The [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) of the Elastic Beanstalk [Platform](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-environment.html#cfn-beanstalk-environment-platformarn)
	// to use in deployment
	PlatformArn pulumix.Input[*string]
	// The time between polling the AWS API to
	// check if changes have been applied. Use this to adjust the rate of API calls
	// for any `create` or `update` action. Minimum `10s`, maximum `180s`. Omit this to
	// use the default behavior, which is an exponential backoff
	PollInterval pulumix.Input[*string]
	// Option settings to configure the new Environment. These
	// override specific values that are set as defaults. The format is detailed
	// below in Option Settings
	Settings pulumix.Input[[]*EnvironmentSettingArgs]
	// A solution stack to base your environment
	// off of. Example stacks can be found in the [Amazon API documentation](https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/concepts.platforms.html)
	SolutionStackName pulumix.Input[*string]
	// A set of tags to apply to the Environment. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// The name of the Elastic Beanstalk Configuration
	// template to use in deployment
	TemplateName pulumix.Input[*string]
	// Elastic Beanstalk Environment tier. Valid values are `Worker`
	// or `WebServer`. If tier is left blank `WebServer` will be used.
	Tier pulumix.Input[*string]
	// The name of the Elastic Beanstalk Application Version
	// to use in deployment.
	Version pulumix.Input[*string]
	// The maximum
	// [duration](https://golang.org/pkg/time/#ParseDuration) that this provider should
	// wait for an Elastic Beanstalk Environment to be in a ready state before timing
	// out.
	WaitForReadyTimeout pulumix.Input[*string]
}

func (EnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*environmentArgs)(nil)).Elem()
}

type EnvironmentOutput struct{ *pulumi.OutputState }

func (EnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Environment)(nil)).Elem()
}

func (o EnvironmentOutput) ToEnvironmentOutput() EnvironmentOutput {
	return o
}

func (o EnvironmentOutput) ToEnvironmentOutputWithContext(ctx context.Context) EnvironmentOutput {
	return o
}

func (o EnvironmentOutput) ToOutput(ctx context.Context) pulumix.Output[Environment] {
	return pulumix.Output[Environment]{
		OutputState: o.OutputState,
	}
}

// List of all option settings configured in this Environment. These
// are a combination of default settings and their overrides from `setting` in
// the configuration.
func (o EnvironmentOutput) AllSettings() pulumix.GArrayOutput[EnvironmentAllSetting, EnvironmentAllSettingOutput] {
	value := pulumix.Apply[Environment](o, func(v Environment) pulumix.GArrayOutput[EnvironmentAllSetting, EnvironmentAllSettingOutput] {
		return v.AllSettings
	})
	unwrapped := pulumix.Flatten[[]EnvironmentAllSetting, pulumix.GArrayOutput[EnvironmentAllSetting, EnvironmentAllSettingOutput]](value)
	return pulumix.GArrayOutput[EnvironmentAllSetting, EnvironmentAllSettingOutput]{OutputState: unwrapped.OutputState}
}

// Name of the application that contains the version
// to be deployed
func (o EnvironmentOutput) Application() pulumix.Output[string] {
	value := pulumix.Apply[Environment](o, func(v Environment) pulumix.Output[string] { return v.Application })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func (o EnvironmentOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Environment](o, func(v Environment) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The autoscaling groups used by this Environment.
func (o EnvironmentOutput) AutoscalingGroups() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[Environment](o, func(v Environment) pulumix.ArrayOutput[string] { return v.AutoscalingGroups })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// Fully qualified DNS name for this Environment.
func (o EnvironmentOutput) Cname() pulumix.Output[string] {
	value := pulumix.Apply[Environment](o, func(v Environment) pulumix.Output[string] { return v.Cname })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Prefix to use for the fully qualified DNS name of
// the Environment.
func (o EnvironmentOutput) CnamePrefix() pulumix.Output[string] {
	value := pulumix.Apply[Environment](o, func(v Environment) pulumix.Output[string] { return v.CnamePrefix })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Short description of the Environment
func (o EnvironmentOutput) Description() pulumix.Output[*string] {
	value := pulumix.Apply[Environment](o, func(v Environment) pulumix.Output[*string] { return v.Description })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The URL to the Load Balancer for this Environment
func (o EnvironmentOutput) EndpointUrl() pulumix.Output[string] {
	value := pulumix.Apply[Environment](o, func(v Environment) pulumix.Output[string] { return v.EndpointUrl })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Instances used by this Environment.
func (o EnvironmentOutput) Instances() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[Environment](o, func(v Environment) pulumix.ArrayOutput[string] { return v.Instances })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// Launch configurations in use by this Environment.
func (o EnvironmentOutput) LaunchConfigurations() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[Environment](o, func(v Environment) pulumix.ArrayOutput[string] { return v.LaunchConfigurations })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// Elastic load balancers in use by this Environment.
func (o EnvironmentOutput) LoadBalancers() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[Environment](o, func(v Environment) pulumix.ArrayOutput[string] { return v.LoadBalancers })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// A unique name for this Environment. This name is used
// in the application URL
func (o EnvironmentOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[Environment](o, func(v Environment) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) of the Elastic Beanstalk [Platform](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-environment.html#cfn-beanstalk-environment-platformarn)
// to use in deployment
func (o EnvironmentOutput) PlatformArn() pulumix.Output[string] {
	value := pulumix.Apply[Environment](o, func(v Environment) pulumix.Output[string] { return v.PlatformArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The time between polling the AWS API to
// check if changes have been applied. Use this to adjust the rate of API calls
// for any `create` or `update` action. Minimum `10s`, maximum `180s`. Omit this to
// use the default behavior, which is an exponential backoff
func (o EnvironmentOutput) PollInterval() pulumix.Output[*string] {
	value := pulumix.Apply[Environment](o, func(v Environment) pulumix.Output[*string] { return v.PollInterval })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// SQS queues in use by this Environment.
func (o EnvironmentOutput) Queues() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[Environment](o, func(v Environment) pulumix.ArrayOutput[string] { return v.Queues })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// Option settings to configure the new Environment. These
// override specific values that are set as defaults. The format is detailed
// below in Option Settings
func (o EnvironmentOutput) Settings() pulumix.GArrayOutput[EnvironmentSetting, EnvironmentSettingOutput] {
	value := pulumix.Apply[Environment](o, func(v Environment) pulumix.GArrayOutput[EnvironmentSetting, EnvironmentSettingOutput] {
		return v.Settings
	})
	unwrapped := pulumix.Flatten[[]EnvironmentSetting, pulumix.GArrayOutput[EnvironmentSetting, EnvironmentSettingOutput]](value)
	return pulumix.GArrayOutput[EnvironmentSetting, EnvironmentSettingOutput]{OutputState: unwrapped.OutputState}
}

// A solution stack to base your environment
// off of. Example stacks can be found in the [Amazon API documentation](https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/concepts.platforms.html)
func (o EnvironmentOutput) SolutionStackName() pulumix.Output[string] {
	value := pulumix.Apply[Environment](o, func(v Environment) pulumix.Output[string] { return v.SolutionStackName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A set of tags to apply to the Environment. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o EnvironmentOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Environment](o, func(v Environment) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o EnvironmentOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[Environment](o, func(v Environment) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// The name of the Elastic Beanstalk Configuration
// template to use in deployment
func (o EnvironmentOutput) TemplateName() pulumix.Output[*string] {
	value := pulumix.Apply[Environment](o, func(v Environment) pulumix.Output[*string] { return v.TemplateName })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Elastic Beanstalk Environment tier. Valid values are `Worker`
// or `WebServer`. If tier is left blank `WebServer` will be used.
func (o EnvironmentOutput) Tier() pulumix.Output[*string] {
	value := pulumix.Apply[Environment](o, func(v Environment) pulumix.Output[*string] { return v.Tier })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Autoscaling triggers in use by this Environment.
func (o EnvironmentOutput) Triggers() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[Environment](o, func(v Environment) pulumix.ArrayOutput[string] { return v.Triggers })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// The name of the Elastic Beanstalk Application Version
// to use in deployment.
func (o EnvironmentOutput) Version() pulumix.Output[string] {
	value := pulumix.Apply[Environment](o, func(v Environment) pulumix.Output[string] { return v.Version })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The maximum
// [duration](https://golang.org/pkg/time/#ParseDuration) that this provider should
// wait for an Elastic Beanstalk Environment to be in a ready state before timing
// out.
func (o EnvironmentOutput) WaitForReadyTimeout() pulumix.Output[*string] {
	value := pulumix.Apply[Environment](o, func(v Environment) pulumix.Output[*string] { return v.WaitForReadyTimeout })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

func init() {
	pulumi.RegisterOutputType(EnvironmentOutput{})
}
