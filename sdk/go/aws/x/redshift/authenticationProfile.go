// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package redshift

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Creates a Redshift authentication profile
type AuthenticationProfile struct {
	pulumi.CustomResourceState

	// The content of the authentication profile in JSON format. The maximum length of the JSON string is determined by a quota for your account.
	AuthenticationProfileContent pulumix.Output[string] `pulumi:"authenticationProfileContent"`
	// The name of the authentication profile.
	AuthenticationProfileName pulumix.Output[string] `pulumi:"authenticationProfileName"`
}

// NewAuthenticationProfile registers a new resource with the given unique name, arguments, and options.
func NewAuthenticationProfile(ctx *pulumi.Context,
	name string, args *AuthenticationProfileArgs, opts ...pulumi.ResourceOption) (*AuthenticationProfile, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AuthenticationProfileContent == nil {
		return nil, errors.New("invalid value for required argument 'AuthenticationProfileContent'")
	}
	if args.AuthenticationProfileName == nil {
		return nil, errors.New("invalid value for required argument 'AuthenticationProfileName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AuthenticationProfile
	err := ctx.RegisterResource("aws:redshift/authenticationProfile:AuthenticationProfile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAuthenticationProfile gets an existing AuthenticationProfile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAuthenticationProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AuthenticationProfileState, opts ...pulumi.ResourceOption) (*AuthenticationProfile, error) {
	var resource AuthenticationProfile
	err := ctx.ReadResource("aws:redshift/authenticationProfile:AuthenticationProfile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AuthenticationProfile resources.
type authenticationProfileState struct {
	// The content of the authentication profile in JSON format. The maximum length of the JSON string is determined by a quota for your account.
	AuthenticationProfileContent *string `pulumi:"authenticationProfileContent"`
	// The name of the authentication profile.
	AuthenticationProfileName *string `pulumi:"authenticationProfileName"`
}

type AuthenticationProfileState struct {
	// The content of the authentication profile in JSON format. The maximum length of the JSON string is determined by a quota for your account.
	AuthenticationProfileContent pulumix.Input[*string]
	// The name of the authentication profile.
	AuthenticationProfileName pulumix.Input[*string]
}

func (AuthenticationProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*authenticationProfileState)(nil)).Elem()
}

type authenticationProfileArgs struct {
	// The content of the authentication profile in JSON format. The maximum length of the JSON string is determined by a quota for your account.
	AuthenticationProfileContent string `pulumi:"authenticationProfileContent"`
	// The name of the authentication profile.
	AuthenticationProfileName string `pulumi:"authenticationProfileName"`
}

// The set of arguments for constructing a AuthenticationProfile resource.
type AuthenticationProfileArgs struct {
	// The content of the authentication profile in JSON format. The maximum length of the JSON string is determined by a quota for your account.
	AuthenticationProfileContent pulumix.Input[string]
	// The name of the authentication profile.
	AuthenticationProfileName pulumix.Input[string]
}

func (AuthenticationProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*authenticationProfileArgs)(nil)).Elem()
}

type AuthenticationProfileOutput struct{ *pulumi.OutputState }

func (AuthenticationProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthenticationProfile)(nil)).Elem()
}

func (o AuthenticationProfileOutput) ToAuthenticationProfileOutput() AuthenticationProfileOutput {
	return o
}

func (o AuthenticationProfileOutput) ToAuthenticationProfileOutputWithContext(ctx context.Context) AuthenticationProfileOutput {
	return o
}

func (o AuthenticationProfileOutput) ToOutput(ctx context.Context) pulumix.Output[AuthenticationProfile] {
	return pulumix.Output[AuthenticationProfile]{
		OutputState: o.OutputState,
	}
}

// The content of the authentication profile in JSON format. The maximum length of the JSON string is determined by a quota for your account.
func (o AuthenticationProfileOutput) AuthenticationProfileContent() pulumix.Output[string] {
	value := pulumix.Apply[AuthenticationProfile](o, func(v AuthenticationProfile) pulumix.Output[string] { return v.AuthenticationProfileContent })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The name of the authentication profile.
func (o AuthenticationProfileOutput) AuthenticationProfileName() pulumix.Output[string] {
	value := pulumix.Apply[AuthenticationProfile](o, func(v AuthenticationProfile) pulumix.Output[string] { return v.AuthenticationProfileName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(AuthenticationProfileOutput{})
}
