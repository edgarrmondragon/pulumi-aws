// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ssoadmin

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an IAM inline policy for a Single Sign-On (SSO) Permission Set resource
//
// > **NOTE:** AWS Single Sign-On (SSO) only supports one IAM inline policy per `ssoadmin.PermissionSet` resource.
// Creating or updating this resource will automatically [Provision the Permission Set](https://docs.aws.amazon.com/singlesignon/latest/APIReference/API_ProvisionPermissionSet.html) to apply the corresponding updates to all assigned accounts.
type PermissionSetInlinePolicy struct {
	pulumi.CustomResourceState

	// The IAM inline policy to attach to a Permission Set.
	InlinePolicy pulumix.Output[string] `pulumi:"inlinePolicy"`
	// The Amazon Resource Name (ARN) of the SSO Instance under which the operation will be executed.
	InstanceArn pulumix.Output[string] `pulumi:"instanceArn"`
	// The Amazon Resource Name (ARN) of the Permission Set.
	PermissionSetArn pulumix.Output[string] `pulumi:"permissionSetArn"`
}

// NewPermissionSetInlinePolicy registers a new resource with the given unique name, arguments, and options.
func NewPermissionSetInlinePolicy(ctx *pulumi.Context,
	name string, args *PermissionSetInlinePolicyArgs, opts ...pulumi.ResourceOption) (*PermissionSetInlinePolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InlinePolicy == nil {
		return nil, errors.New("invalid value for required argument 'InlinePolicy'")
	}
	if args.InstanceArn == nil {
		return nil, errors.New("invalid value for required argument 'InstanceArn'")
	}
	if args.PermissionSetArn == nil {
		return nil, errors.New("invalid value for required argument 'PermissionSetArn'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PermissionSetInlinePolicy
	err := ctx.RegisterResource("aws:ssoadmin/permissionSetInlinePolicy:PermissionSetInlinePolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPermissionSetInlinePolicy gets an existing PermissionSetInlinePolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPermissionSetInlinePolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PermissionSetInlinePolicyState, opts ...pulumi.ResourceOption) (*PermissionSetInlinePolicy, error) {
	var resource PermissionSetInlinePolicy
	err := ctx.ReadResource("aws:ssoadmin/permissionSetInlinePolicy:PermissionSetInlinePolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PermissionSetInlinePolicy resources.
type permissionSetInlinePolicyState struct {
	// The IAM inline policy to attach to a Permission Set.
	InlinePolicy *string `pulumi:"inlinePolicy"`
	// The Amazon Resource Name (ARN) of the SSO Instance under which the operation will be executed.
	InstanceArn *string `pulumi:"instanceArn"`
	// The Amazon Resource Name (ARN) of the Permission Set.
	PermissionSetArn *string `pulumi:"permissionSetArn"`
}

type PermissionSetInlinePolicyState struct {
	// The IAM inline policy to attach to a Permission Set.
	InlinePolicy pulumix.Input[*string]
	// The Amazon Resource Name (ARN) of the SSO Instance under which the operation will be executed.
	InstanceArn pulumix.Input[*string]
	// The Amazon Resource Name (ARN) of the Permission Set.
	PermissionSetArn pulumix.Input[*string]
}

func (PermissionSetInlinePolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*permissionSetInlinePolicyState)(nil)).Elem()
}

type permissionSetInlinePolicyArgs struct {
	// The IAM inline policy to attach to a Permission Set.
	InlinePolicy string `pulumi:"inlinePolicy"`
	// The Amazon Resource Name (ARN) of the SSO Instance under which the operation will be executed.
	InstanceArn string `pulumi:"instanceArn"`
	// The Amazon Resource Name (ARN) of the Permission Set.
	PermissionSetArn string `pulumi:"permissionSetArn"`
}

// The set of arguments for constructing a PermissionSetInlinePolicy resource.
type PermissionSetInlinePolicyArgs struct {
	// The IAM inline policy to attach to a Permission Set.
	InlinePolicy pulumix.Input[string]
	// The Amazon Resource Name (ARN) of the SSO Instance under which the operation will be executed.
	InstanceArn pulumix.Input[string]
	// The Amazon Resource Name (ARN) of the Permission Set.
	PermissionSetArn pulumix.Input[string]
}

func (PermissionSetInlinePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*permissionSetInlinePolicyArgs)(nil)).Elem()
}

type PermissionSetInlinePolicyOutput struct{ *pulumi.OutputState }

func (PermissionSetInlinePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PermissionSetInlinePolicy)(nil)).Elem()
}

func (o PermissionSetInlinePolicyOutput) ToPermissionSetInlinePolicyOutput() PermissionSetInlinePolicyOutput {
	return o
}

func (o PermissionSetInlinePolicyOutput) ToPermissionSetInlinePolicyOutputWithContext(ctx context.Context) PermissionSetInlinePolicyOutput {
	return o
}

func (o PermissionSetInlinePolicyOutput) ToOutput(ctx context.Context) pulumix.Output[PermissionSetInlinePolicy] {
	return pulumix.Output[PermissionSetInlinePolicy]{
		OutputState: o.OutputState,
	}
}

// The IAM inline policy to attach to a Permission Set.
func (o PermissionSetInlinePolicyOutput) InlinePolicy() pulumix.Output[string] {
	value := pulumix.Apply[PermissionSetInlinePolicy](o, func(v PermissionSetInlinePolicy) pulumix.Output[string] { return v.InlinePolicy })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The Amazon Resource Name (ARN) of the SSO Instance under which the operation will be executed.
func (o PermissionSetInlinePolicyOutput) InstanceArn() pulumix.Output[string] {
	value := pulumix.Apply[PermissionSetInlinePolicy](o, func(v PermissionSetInlinePolicy) pulumix.Output[string] { return v.InstanceArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The Amazon Resource Name (ARN) of the Permission Set.
func (o PermissionSetInlinePolicyOutput) PermissionSetArn() pulumix.Output[string] {
	value := pulumix.Apply[PermissionSetInlinePolicy](o, func(v PermissionSetInlinePolicy) pulumix.Output[string] { return v.PermissionSetArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(PermissionSetInlinePolicyOutput{})
}
