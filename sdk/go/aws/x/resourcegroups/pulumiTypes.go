// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package resourcegroups

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type GroupConfiguration struct {
	// A collection of parameters for this group configuration item. See below for details.
	Parameters []GroupConfigurationParameter `pulumi:"parameters"`
	// Specifies the type of group configuration item.
	Type string `pulumi:"type"`
}

type GroupConfigurationArgs struct {
	// A collection of parameters for this group configuration item. See below for details.
	Parameters pulumix.Input[[]*GroupConfigurationParameterArgs] `pulumi:"parameters"`
	// Specifies the type of group configuration item.
	Type pulumix.Input[string] `pulumi:"type"`
}

func (GroupConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupConfiguration)(nil)).Elem()
}

func (i GroupConfigurationArgs) ToGroupConfigurationOutput() GroupConfigurationOutput {
	return i.ToGroupConfigurationOutputWithContext(context.Background())
}

func (i GroupConfigurationArgs) ToGroupConfigurationOutputWithContext(ctx context.Context) GroupConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupConfigurationOutput)
}

func (i *GroupConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*GroupConfigurationArgs] {
	return pulumix.Val(i)
}

type GroupConfigurationOutput struct{ *pulumi.OutputState }

func (GroupConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupConfiguration)(nil)).Elem()
}

func (o GroupConfigurationOutput) ToGroupConfigurationOutput() GroupConfigurationOutput {
	return o
}

func (o GroupConfigurationOutput) ToGroupConfigurationOutputWithContext(ctx context.Context) GroupConfigurationOutput {
	return o
}

func (o GroupConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[GroupConfiguration] {
	return pulumix.Output[GroupConfiguration]{
		OutputState: o.OutputState,
	}
}

// A collection of parameters for this group configuration item. See below for details.
func (o GroupConfigurationOutput) Parameters() pulumix.GArrayOutput[GroupConfigurationParameter, GroupConfigurationParameterOutput] {
	value := pulumix.Apply[GroupConfiguration](o, func(v GroupConfiguration) []GroupConfigurationParameter { return v.Parameters })
	return pulumix.GArrayOutput[GroupConfigurationParameter, GroupConfigurationParameterOutput]{OutputState: value.OutputState}
}

// Specifies the type of group configuration item.
func (o GroupConfigurationOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[GroupConfiguration](o, func(v GroupConfiguration) string { return v.Type })
}

type GroupConfigurationParameter struct {
	// The name of the group configuration parameter.
	Name string `pulumi:"name"`
	// The value or values to be used for the specified parameter.
	Values []string `pulumi:"values"`
}

type GroupConfigurationParameterArgs struct {
	// The name of the group configuration parameter.
	Name pulumix.Input[string] `pulumi:"name"`
	// The value or values to be used for the specified parameter.
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (GroupConfigurationParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupConfigurationParameter)(nil)).Elem()
}

func (i GroupConfigurationParameterArgs) ToGroupConfigurationParameterOutput() GroupConfigurationParameterOutput {
	return i.ToGroupConfigurationParameterOutputWithContext(context.Background())
}

func (i GroupConfigurationParameterArgs) ToGroupConfigurationParameterOutputWithContext(ctx context.Context) GroupConfigurationParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupConfigurationParameterOutput)
}

func (i *GroupConfigurationParameterArgs) ToOutput(ctx context.Context) pulumix.Output[*GroupConfigurationParameterArgs] {
	return pulumix.Val(i)
}

type GroupConfigurationParameterOutput struct{ *pulumi.OutputState }

func (GroupConfigurationParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupConfigurationParameter)(nil)).Elem()
}

func (o GroupConfigurationParameterOutput) ToGroupConfigurationParameterOutput() GroupConfigurationParameterOutput {
	return o
}

func (o GroupConfigurationParameterOutput) ToGroupConfigurationParameterOutputWithContext(ctx context.Context) GroupConfigurationParameterOutput {
	return o
}

func (o GroupConfigurationParameterOutput) ToOutput(ctx context.Context) pulumix.Output[GroupConfigurationParameter] {
	return pulumix.Output[GroupConfigurationParameter]{
		OutputState: o.OutputState,
	}
}

// The name of the group configuration parameter.
func (o GroupConfigurationParameterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[GroupConfigurationParameter](o, func(v GroupConfigurationParameter) string { return v.Name })
}

// The value or values to be used for the specified parameter.
func (o GroupConfigurationParameterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GroupConfigurationParameter](o, func(v GroupConfigurationParameter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type GroupResourceQuery struct {
	// The resource query as a JSON string.
	Query string `pulumi:"query"`
	// The type of the resource query. Defaults to `TAG_FILTERS_1_0`.
	Type *string `pulumi:"type"`
}

type GroupResourceQueryArgs struct {
	// The resource query as a JSON string.
	Query pulumix.Input[string] `pulumi:"query"`
	// The type of the resource query. Defaults to `TAG_FILTERS_1_0`.
	Type pulumix.Input[*string] `pulumi:"type"`
}

func (GroupResourceQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupResourceQuery)(nil)).Elem()
}

func (i GroupResourceQueryArgs) ToGroupResourceQueryOutput() GroupResourceQueryOutput {
	return i.ToGroupResourceQueryOutputWithContext(context.Background())
}

func (i GroupResourceQueryArgs) ToGroupResourceQueryOutputWithContext(ctx context.Context) GroupResourceQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupResourceQueryOutput)
}

func (i *GroupResourceQueryArgs) ToOutput(ctx context.Context) pulumix.Output[*GroupResourceQueryArgs] {
	return pulumix.Val(i)
}

type GroupResourceQueryOutput struct{ *pulumi.OutputState }

func (GroupResourceQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupResourceQuery)(nil)).Elem()
}

func (o GroupResourceQueryOutput) ToGroupResourceQueryOutput() GroupResourceQueryOutput {
	return o
}

func (o GroupResourceQueryOutput) ToGroupResourceQueryOutputWithContext(ctx context.Context) GroupResourceQueryOutput {
	return o
}

func (o GroupResourceQueryOutput) ToOutput(ctx context.Context) pulumix.Output[GroupResourceQuery] {
	return pulumix.Output[GroupResourceQuery]{
		OutputState: o.OutputState,
	}
}

// The resource query as a JSON string.
func (o GroupResourceQueryOutput) Query() pulumix.Output[string] {
	return pulumix.Apply[GroupResourceQuery](o, func(v GroupResourceQuery) string { return v.Query })
}

// The type of the resource query. Defaults to `TAG_FILTERS_1_0`.
func (o GroupResourceQueryOutput) Type() pulumix.Output[*string] {
	return pulumix.Apply[GroupResourceQuery](o, func(v GroupResourceQuery) *string { return v.Type })
}

func init() {
	pulumi.RegisterOutputType(GroupConfigurationOutput{})
	pulumi.RegisterOutputType(GroupConfigurationParameterOutput{})
	pulumi.RegisterOutputType(GroupResourceQueryOutput{})
}
