// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sfn

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a Step Function State Machine Alias.
type Alias struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) identifying your state machine alias.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The date the state machine alias was created.
	CreationDate pulumix.Output[string] `pulumi:"creationDate"`
	// Description of the alias.
	Description pulumix.Output[*string] `pulumi:"description"`
	// Name for the alias you are creating.
	Name pulumix.Output[string] `pulumi:"name"`
	// The StateMachine alias' route configuration settings. Fields documented below
	RoutingConfigurations pulumix.GArrayOutput[AliasRoutingConfiguration, AliasRoutingConfigurationOutput] `pulumi:"routingConfigurations"`
}

// NewAlias registers a new resource with the given unique name, arguments, and options.
func NewAlias(ctx *pulumi.Context,
	name string, args *AliasArgs, opts ...pulumi.ResourceOption) (*Alias, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.RoutingConfigurations == nil {
		return nil, errors.New("invalid value for required argument 'RoutingConfigurations'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Alias
	err := ctx.RegisterResource("aws:sfn/alias:Alias", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAlias gets an existing Alias resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAlias(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AliasState, opts ...pulumi.ResourceOption) (*Alias, error) {
	var resource Alias
	err := ctx.ReadResource("aws:sfn/alias:Alias", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Alias resources.
type aliasState struct {
	// The Amazon Resource Name (ARN) identifying your state machine alias.
	Arn *string `pulumi:"arn"`
	// The date the state machine alias was created.
	CreationDate *string `pulumi:"creationDate"`
	// Description of the alias.
	Description *string `pulumi:"description"`
	// Name for the alias you are creating.
	Name *string `pulumi:"name"`
	// The StateMachine alias' route configuration settings. Fields documented below
	RoutingConfigurations []AliasRoutingConfiguration `pulumi:"routingConfigurations"`
}

type AliasState struct {
	// The Amazon Resource Name (ARN) identifying your state machine alias.
	Arn pulumix.Input[*string]
	// The date the state machine alias was created.
	CreationDate pulumix.Input[*string]
	// Description of the alias.
	Description pulumix.Input[*string]
	// Name for the alias you are creating.
	Name pulumix.Input[*string]
	// The StateMachine alias' route configuration settings. Fields documented below
	RoutingConfigurations pulumix.Input[[]*AliasRoutingConfigurationArgs]
}

func (AliasState) ElementType() reflect.Type {
	return reflect.TypeOf((*aliasState)(nil)).Elem()
}

type aliasArgs struct {
	// Description of the alias.
	Description *string `pulumi:"description"`
	// Name for the alias you are creating.
	Name *string `pulumi:"name"`
	// The StateMachine alias' route configuration settings. Fields documented below
	RoutingConfigurations []AliasRoutingConfiguration `pulumi:"routingConfigurations"`
}

// The set of arguments for constructing a Alias resource.
type AliasArgs struct {
	// Description of the alias.
	Description pulumix.Input[*string]
	// Name for the alias you are creating.
	Name pulumix.Input[*string]
	// The StateMachine alias' route configuration settings. Fields documented below
	RoutingConfigurations pulumix.Input[[]*AliasRoutingConfigurationArgs]
}

func (AliasArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*aliasArgs)(nil)).Elem()
}

type AliasOutput struct{ *pulumi.OutputState }

func (AliasOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Alias)(nil)).Elem()
}

func (o AliasOutput) ToAliasOutput() AliasOutput {
	return o
}

func (o AliasOutput) ToAliasOutputWithContext(ctx context.Context) AliasOutput {
	return o
}

func (o AliasOutput) ToOutput(ctx context.Context) pulumix.Output[Alias] {
	return pulumix.Output[Alias]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) identifying your state machine alias.
func (o AliasOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Alias](o, func(v Alias) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The date the state machine alias was created.
func (o AliasOutput) CreationDate() pulumix.Output[string] {
	value := pulumix.Apply[Alias](o, func(v Alias) pulumix.Output[string] { return v.CreationDate })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Description of the alias.
func (o AliasOutput) Description() pulumix.Output[*string] {
	value := pulumix.Apply[Alias](o, func(v Alias) pulumix.Output[*string] { return v.Description })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Name for the alias you are creating.
func (o AliasOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[Alias](o, func(v Alias) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The StateMachine alias' route configuration settings. Fields documented below
func (o AliasOutput) RoutingConfigurations() pulumix.GArrayOutput[AliasRoutingConfiguration, AliasRoutingConfigurationOutput] {
	value := pulumix.Apply[Alias](o, func(v Alias) pulumix.GArrayOutput[AliasRoutingConfiguration, AliasRoutingConfigurationOutput] {
		return v.RoutingConfigurations
	})
	unwrapped := pulumix.Flatten[[]AliasRoutingConfiguration, pulumix.GArrayOutput[AliasRoutingConfiguration, AliasRoutingConfigurationOutput]](value)
	return pulumix.GArrayOutput[AliasRoutingConfiguration, AliasRoutingConfigurationOutput]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(AliasOutput{})
}
