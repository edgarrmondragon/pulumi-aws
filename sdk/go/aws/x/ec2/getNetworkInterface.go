// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Use this data source to get information about a Network Interface.
func LookupNetworkInterface(ctx *pulumi.Context, args *LookupNetworkInterfaceArgs, opts ...pulumi.InvokeOption) (*LookupNetworkInterfaceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupNetworkInterfaceResult
	err := ctx.Invoke("aws:ec2/getNetworkInterface:getNetworkInterface", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNetworkInterface.
type LookupNetworkInterfaceArgs struct {
	// One or more name/value pairs to filter off of. There are several valid keys, for a full reference, check out [describe-network-interfaces](https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-network-interfaces.html) in the AWS CLI reference.
	Filters []GetNetworkInterfaceFilter `pulumi:"filters"`
	// Identifier for the network interface.
	Id *string `pulumi:"id"`
	// Any tags assigned to the network interface.
	Tags map[string]string `pulumi:"tags"`
}

// A collection of values returned by getNetworkInterface.
type LookupNetworkInterfaceResult struct {
	// ARN of the network interface.
	Arn string `pulumi:"arn"`
	// Association information for an Elastic IP address (IPv4) associated with the network interface. See supported fields below.
	Associations []GetNetworkInterfaceAssociation    `pulumi:"associations"`
	Attachments  []GetNetworkInterfaceAttachmentType `pulumi:"attachments"`
	// Availability Zone.
	AvailabilityZone string `pulumi:"availabilityZone"`
	// Description of the network interface.
	Description string                      `pulumi:"description"`
	Filters     []GetNetworkInterfaceFilter `pulumi:"filters"`
	Id          string                      `pulumi:"id"`
	// Type of interface.
	InterfaceType string `pulumi:"interfaceType"`
	// List of IPv6 addresses to assign to the ENI.
	Ipv6Addresses []string `pulumi:"ipv6Addresses"`
	// MAC address.
	MacAddress string `pulumi:"macAddress"`
	// ARN of the Outpost.
	OutpostArn string `pulumi:"outpostArn"`
	// AWS account ID of the owner of the network interface.
	OwnerId string `pulumi:"ownerId"`
	// Private DNS name.
	PrivateDnsName string `pulumi:"privateDnsName"`
	// Private IPv4 address of the network interface within the subnet.
	PrivateIp string `pulumi:"privateIp"`
	// Private IPv4 addresses associated with the network interface.
	PrivateIps []string `pulumi:"privateIps"`
	// ID of the entity that launched the instance on your behalf.
	RequesterId string `pulumi:"requesterId"`
	// List of security groups for the network interface.
	SecurityGroups []string `pulumi:"securityGroups"`
	// ID of the subnet.
	SubnetId string `pulumi:"subnetId"`
	// Any tags assigned to the network interface.
	Tags map[string]string `pulumi:"tags"`
	// ID of the VPC.
	VpcId string `pulumi:"vpcId"`
}

func LookupNetworkInterfaceOutput(ctx *pulumi.Context, args LookupNetworkInterfaceOutputArgs, opts ...pulumi.InvokeOption) LookupNetworkInterfaceResultOutput {
	outputResult := pulumix.ApplyErr[*LookupNetworkInterfaceArgs](args.ToOutput(), func(plainArgs *LookupNetworkInterfaceArgs) (*LookupNetworkInterfaceResult, error) {
		return LookupNetworkInterface(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[LookupNetworkInterfaceResultOutput, *LookupNetworkInterfaceResult](outputResult)
}

// A collection of arguments for invoking getNetworkInterface.
type LookupNetworkInterfaceOutputArgs struct {
	// One or more name/value pairs to filter off of. There are several valid keys, for a full reference, check out [describe-network-interfaces](https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-network-interfaces.html) in the AWS CLI reference.
	Filters pulumix.Input[[]*GetNetworkInterfaceFilterArgs] `pulumi:"filters"`
	// Identifier for the network interface.
	Id pulumix.Input[*string] `pulumi:"id"`
	// Any tags assigned to the network interface.
	Tags pulumix.Input[map[string]string] `pulumi:"tags"`
}

func (args LookupNetworkInterfaceOutputArgs) ToOutput() pulumix.Output[*LookupNetworkInterfaceArgs] {
	allArgs := pulumix.All(
		args.Filters.ToOutput(context.Background()).AsAny(),
		args.Id.ToOutput(context.Background()).AsAny(),
		args.Tags.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *LookupNetworkInterfaceArgs {
		return &LookupNetworkInterfaceArgs{
			Filters: resolvedArgs[0].([]GetNetworkInterfaceFilter),
			Id:      resolvedArgs[1].(*string),
			Tags:    resolvedArgs[2].(map[string]string),
		}
	})
}

type LookupNetworkInterfaceResultOutput struct{ *pulumi.OutputState }

func (LookupNetworkInterfaceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNetworkInterfaceResult)(nil)).Elem()
}

func (o LookupNetworkInterfaceResultOutput) ToOutput(context.Context) pulumix.Output[*LookupNetworkInterfaceResult] {
	return pulumix.Output[*LookupNetworkInterfaceResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupNetworkInterfaceResultOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[*LookupNetworkInterfaceResult](o, func(v *LookupNetworkInterfaceResult) string { return v.Arn })
}

func (o LookupNetworkInterfaceResultOutput) Associations() pulumix.GArrayOutput[GetNetworkInterfaceAssociation, GetNetworkInterfaceAssociationOutput] {
	value := pulumix.Apply[*LookupNetworkInterfaceResult](o, func(v *LookupNetworkInterfaceResult) []GetNetworkInterfaceAssociation { return v.Associations })
	return pulumix.GArrayOutput[GetNetworkInterfaceAssociation, GetNetworkInterfaceAssociationOutput]{
		OutputState: value.OutputState,
	}
}

func (o LookupNetworkInterfaceResultOutput) Attachments() pulumix.GArrayOutput[GetNetworkInterfaceAttachmentType, GetNetworkInterfaceAttachmentTypeOutput] {
	value := pulumix.Apply[*LookupNetworkInterfaceResult](o, func(v *LookupNetworkInterfaceResult) []GetNetworkInterfaceAttachmentType { return v.Attachments })
	return pulumix.GArrayOutput[GetNetworkInterfaceAttachmentType, GetNetworkInterfaceAttachmentTypeOutput]{
		OutputState: value.OutputState,
	}
}

func (o LookupNetworkInterfaceResultOutput) AvailabilityZone() pulumix.Output[string] {
	return pulumix.Apply[*LookupNetworkInterfaceResult](o, func(v *LookupNetworkInterfaceResult) string { return v.AvailabilityZone })
}

func (o LookupNetworkInterfaceResultOutput) Description() pulumix.Output[string] {
	return pulumix.Apply[*LookupNetworkInterfaceResult](o, func(v *LookupNetworkInterfaceResult) string { return v.Description })
}

func (o LookupNetworkInterfaceResultOutput) Filters() pulumix.GArrayOutput[GetNetworkInterfaceFilter, GetNetworkInterfaceFilterOutput] {
	value := pulumix.Apply[*LookupNetworkInterfaceResult](o, func(v *LookupNetworkInterfaceResult) []GetNetworkInterfaceFilter { return v.Filters })
	return pulumix.GArrayOutput[GetNetworkInterfaceFilter, GetNetworkInterfaceFilterOutput]{
		OutputState: value.OutputState,
	}
}

func (o LookupNetworkInterfaceResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*LookupNetworkInterfaceResult](o, func(v *LookupNetworkInterfaceResult) string { return v.Id })
}

func (o LookupNetworkInterfaceResultOutput) InterfaceType() pulumix.Output[string] {
	return pulumix.Apply[*LookupNetworkInterfaceResult](o, func(v *LookupNetworkInterfaceResult) string { return v.InterfaceType })
}

func (o LookupNetworkInterfaceResultOutput) Ipv6Addresses() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[*LookupNetworkInterfaceResult](o, func(v *LookupNetworkInterfaceResult) []string { return v.Ipv6Addresses })
	return pulumix.ArrayOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o LookupNetworkInterfaceResultOutput) MacAddress() pulumix.Output[string] {
	return pulumix.Apply[*LookupNetworkInterfaceResult](o, func(v *LookupNetworkInterfaceResult) string { return v.MacAddress })
}

func (o LookupNetworkInterfaceResultOutput) OutpostArn() pulumix.Output[string] {
	return pulumix.Apply[*LookupNetworkInterfaceResult](o, func(v *LookupNetworkInterfaceResult) string { return v.OutpostArn })
}

func (o LookupNetworkInterfaceResultOutput) OwnerId() pulumix.Output[string] {
	return pulumix.Apply[*LookupNetworkInterfaceResult](o, func(v *LookupNetworkInterfaceResult) string { return v.OwnerId })
}

func (o LookupNetworkInterfaceResultOutput) PrivateDnsName() pulumix.Output[string] {
	return pulumix.Apply[*LookupNetworkInterfaceResult](o, func(v *LookupNetworkInterfaceResult) string { return v.PrivateDnsName })
}

func (o LookupNetworkInterfaceResultOutput) PrivateIp() pulumix.Output[string] {
	return pulumix.Apply[*LookupNetworkInterfaceResult](o, func(v *LookupNetworkInterfaceResult) string { return v.PrivateIp })
}

func (o LookupNetworkInterfaceResultOutput) PrivateIps() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[*LookupNetworkInterfaceResult](o, func(v *LookupNetworkInterfaceResult) []string { return v.PrivateIps })
	return pulumix.ArrayOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o LookupNetworkInterfaceResultOutput) RequesterId() pulumix.Output[string] {
	return pulumix.Apply[*LookupNetworkInterfaceResult](o, func(v *LookupNetworkInterfaceResult) string { return v.RequesterId })
}

func (o LookupNetworkInterfaceResultOutput) SecurityGroups() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[*LookupNetworkInterfaceResult](o, func(v *LookupNetworkInterfaceResult) []string { return v.SecurityGroups })
	return pulumix.ArrayOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o LookupNetworkInterfaceResultOutput) SubnetId() pulumix.Output[string] {
	return pulumix.Apply[*LookupNetworkInterfaceResult](o, func(v *LookupNetworkInterfaceResult) string { return v.SubnetId })
}

func (o LookupNetworkInterfaceResultOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[*LookupNetworkInterfaceResult](o, func(v *LookupNetworkInterfaceResult) map[string]string { return v.Tags })
	return pulumix.MapOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o LookupNetworkInterfaceResultOutput) VpcId() pulumix.Output[string] {
	return pulumix.Apply[*LookupNetworkInterfaceResult](o, func(v *LookupNetworkInterfaceResult) string { return v.VpcId })
}
