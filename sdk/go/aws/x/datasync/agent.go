// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datasync

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manages an AWS DataSync Agent deployed on premises.
//
// > **NOTE:** One of `activationKey` or `ipAddress` must be provided for resource creation (agent activation). Neither is required for resource import. If using `ipAddress`, this provider must be able to make an HTTP (port 80) GET request to the specified IP address from where it is running. The agent will turn off that HTTP server after activation.
type Agent struct {
	pulumi.CustomResourceState

	// DataSync Agent activation key during resource creation. Conflicts with `ipAddress`. If an `ipAddress` is provided instead, the provider will retrieve the `activationKey` as part of the resource creation.
	ActivationKey pulumix.Output[string] `pulumi:"activationKey"`
	// Amazon Resource Name (ARN) of the DataSync Agent.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// DataSync Agent IP address to retrieve activation key during resource creation. Conflicts with `activationKey`. DataSync Agent must be accessible on port 80 from where the provider is running.
	IpAddress pulumix.Output[string] `pulumi:"ipAddress"`
	// Name of the DataSync Agent.
	Name pulumix.Output[string] `pulumi:"name"`
	// The IP address of the VPC endpoint the agent should connect to when retrieving an activation key during resource creation. Conflicts with `activationKey`.
	PrivateLinkEndpoint pulumix.Output[string] `pulumi:"privateLinkEndpoint"`
	// The ARNs of the security groups used to protect your data transfer task subnets.
	SecurityGroupArns pulumix.ArrayOutput[string] `pulumi:"securityGroupArns"`
	// The Amazon Resource Names (ARNs) of the subnets in which DataSync will create elastic network interfaces for each data transfer task.
	SubnetArns pulumix.ArrayOutput[string] `pulumi:"subnetArns"`
	// Key-value pairs of resource tags to assign to the DataSync Agent. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// The ID of the VPC (virtual private cloud) endpoint that the agent has access to.
	VpcEndpointId pulumix.Output[*string] `pulumi:"vpcEndpointId"`
}

// NewAgent registers a new resource with the given unique name, arguments, and options.
func NewAgent(ctx *pulumi.Context,
	name string, args *AgentArgs, opts ...pulumi.ResourceOption) (*Agent, error) {
	if args == nil {
		args = &AgentArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Agent
	err := ctx.RegisterResource("aws:datasync/agent:Agent", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAgent gets an existing Agent resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAgent(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AgentState, opts ...pulumi.ResourceOption) (*Agent, error) {
	var resource Agent
	err := ctx.ReadResource("aws:datasync/agent:Agent", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Agent resources.
type agentState struct {
	// DataSync Agent activation key during resource creation. Conflicts with `ipAddress`. If an `ipAddress` is provided instead, the provider will retrieve the `activationKey` as part of the resource creation.
	ActivationKey *string `pulumi:"activationKey"`
	// Amazon Resource Name (ARN) of the DataSync Agent.
	Arn *string `pulumi:"arn"`
	// DataSync Agent IP address to retrieve activation key during resource creation. Conflicts with `activationKey`. DataSync Agent must be accessible on port 80 from where the provider is running.
	IpAddress *string `pulumi:"ipAddress"`
	// Name of the DataSync Agent.
	Name *string `pulumi:"name"`
	// The IP address of the VPC endpoint the agent should connect to when retrieving an activation key during resource creation. Conflicts with `activationKey`.
	PrivateLinkEndpoint *string `pulumi:"privateLinkEndpoint"`
	// The ARNs of the security groups used to protect your data transfer task subnets.
	SecurityGroupArns []string `pulumi:"securityGroupArns"`
	// The Amazon Resource Names (ARNs) of the subnets in which DataSync will create elastic network interfaces for each data transfer task.
	SubnetArns []string `pulumi:"subnetArns"`
	// Key-value pairs of resource tags to assign to the DataSync Agent. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// The ID of the VPC (virtual private cloud) endpoint that the agent has access to.
	VpcEndpointId *string `pulumi:"vpcEndpointId"`
}

type AgentState struct {
	// DataSync Agent activation key during resource creation. Conflicts with `ipAddress`. If an `ipAddress` is provided instead, the provider will retrieve the `activationKey` as part of the resource creation.
	ActivationKey pulumix.Input[*string]
	// Amazon Resource Name (ARN) of the DataSync Agent.
	Arn pulumix.Input[*string]
	// DataSync Agent IP address to retrieve activation key during resource creation. Conflicts with `activationKey`. DataSync Agent must be accessible on port 80 from where the provider is running.
	IpAddress pulumix.Input[*string]
	// Name of the DataSync Agent.
	Name pulumix.Input[*string]
	// The IP address of the VPC endpoint the agent should connect to when retrieving an activation key during resource creation. Conflicts with `activationKey`.
	PrivateLinkEndpoint pulumix.Input[*string]
	// The ARNs of the security groups used to protect your data transfer task subnets.
	SecurityGroupArns pulumix.Input[[]string]
	// The Amazon Resource Names (ARNs) of the subnets in which DataSync will create elastic network interfaces for each data transfer task.
	SubnetArns pulumix.Input[[]string]
	// Key-value pairs of resource tags to assign to the DataSync Agent. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// The ID of the VPC (virtual private cloud) endpoint that the agent has access to.
	VpcEndpointId pulumix.Input[*string]
}

func (AgentState) ElementType() reflect.Type {
	return reflect.TypeOf((*agentState)(nil)).Elem()
}

type agentArgs struct {
	// DataSync Agent activation key during resource creation. Conflicts with `ipAddress`. If an `ipAddress` is provided instead, the provider will retrieve the `activationKey` as part of the resource creation.
	ActivationKey *string `pulumi:"activationKey"`
	// DataSync Agent IP address to retrieve activation key during resource creation. Conflicts with `activationKey`. DataSync Agent must be accessible on port 80 from where the provider is running.
	IpAddress *string `pulumi:"ipAddress"`
	// Name of the DataSync Agent.
	Name *string `pulumi:"name"`
	// The IP address of the VPC endpoint the agent should connect to when retrieving an activation key during resource creation. Conflicts with `activationKey`.
	PrivateLinkEndpoint *string `pulumi:"privateLinkEndpoint"`
	// The ARNs of the security groups used to protect your data transfer task subnets.
	SecurityGroupArns []string `pulumi:"securityGroupArns"`
	// The Amazon Resource Names (ARNs) of the subnets in which DataSync will create elastic network interfaces for each data transfer task.
	SubnetArns []string `pulumi:"subnetArns"`
	// Key-value pairs of resource tags to assign to the DataSync Agent. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// The ID of the VPC (virtual private cloud) endpoint that the agent has access to.
	VpcEndpointId *string `pulumi:"vpcEndpointId"`
}

// The set of arguments for constructing a Agent resource.
type AgentArgs struct {
	// DataSync Agent activation key during resource creation. Conflicts with `ipAddress`. If an `ipAddress` is provided instead, the provider will retrieve the `activationKey` as part of the resource creation.
	ActivationKey pulumix.Input[*string]
	// DataSync Agent IP address to retrieve activation key during resource creation. Conflicts with `activationKey`. DataSync Agent must be accessible on port 80 from where the provider is running.
	IpAddress pulumix.Input[*string]
	// Name of the DataSync Agent.
	Name pulumix.Input[*string]
	// The IP address of the VPC endpoint the agent should connect to when retrieving an activation key during resource creation. Conflicts with `activationKey`.
	PrivateLinkEndpoint pulumix.Input[*string]
	// The ARNs of the security groups used to protect your data transfer task subnets.
	SecurityGroupArns pulumix.Input[[]string]
	// The Amazon Resource Names (ARNs) of the subnets in which DataSync will create elastic network interfaces for each data transfer task.
	SubnetArns pulumix.Input[[]string]
	// Key-value pairs of resource tags to assign to the DataSync Agent. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// The ID of the VPC (virtual private cloud) endpoint that the agent has access to.
	VpcEndpointId pulumix.Input[*string]
}

func (AgentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*agentArgs)(nil)).Elem()
}

type AgentOutput struct{ *pulumi.OutputState }

func (AgentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Agent)(nil)).Elem()
}

func (o AgentOutput) ToAgentOutput() AgentOutput {
	return o
}

func (o AgentOutput) ToAgentOutputWithContext(ctx context.Context) AgentOutput {
	return o
}

func (o AgentOutput) ToOutput(ctx context.Context) pulumix.Output[Agent] {
	return pulumix.Output[Agent]{
		OutputState: o.OutputState,
	}
}

// DataSync Agent activation key during resource creation. Conflicts with `ipAddress`. If an `ipAddress` is provided instead, the provider will retrieve the `activationKey` as part of the resource creation.
func (o AgentOutput) ActivationKey() pulumix.Output[string] {
	value := pulumix.Apply[Agent](o, func(v Agent) pulumix.Output[string] { return v.ActivationKey })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Amazon Resource Name (ARN) of the DataSync Agent.
func (o AgentOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Agent](o, func(v Agent) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// DataSync Agent IP address to retrieve activation key during resource creation. Conflicts with `activationKey`. DataSync Agent must be accessible on port 80 from where the provider is running.
func (o AgentOutput) IpAddress() pulumix.Output[string] {
	value := pulumix.Apply[Agent](o, func(v Agent) pulumix.Output[string] { return v.IpAddress })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Name of the DataSync Agent.
func (o AgentOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[Agent](o, func(v Agent) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The IP address of the VPC endpoint the agent should connect to when retrieving an activation key during resource creation. Conflicts with `activationKey`.
func (o AgentOutput) PrivateLinkEndpoint() pulumix.Output[string] {
	value := pulumix.Apply[Agent](o, func(v Agent) pulumix.Output[string] { return v.PrivateLinkEndpoint })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The ARNs of the security groups used to protect your data transfer task subnets.
func (o AgentOutput) SecurityGroupArns() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[Agent](o, func(v Agent) pulumix.ArrayOutput[string] { return v.SecurityGroupArns })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// The Amazon Resource Names (ARNs) of the subnets in which DataSync will create elastic network interfaces for each data transfer task.
func (o AgentOutput) SubnetArns() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[Agent](o, func(v Agent) pulumix.ArrayOutput[string] { return v.SubnetArns })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// Key-value pairs of resource tags to assign to the DataSync Agent. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o AgentOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Agent](o, func(v Agent) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o AgentOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[Agent](o, func(v Agent) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// The ID of the VPC (virtual private cloud) endpoint that the agent has access to.
func (o AgentOutput) VpcEndpointId() pulumix.Output[*string] {
	value := pulumix.Apply[Agent](o, func(v Agent) pulumix.Output[*string] { return v.VpcEndpointId })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

func init() {
	pulumi.RegisterOutputType(AgentOutput{})
}
