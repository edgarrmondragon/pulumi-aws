// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package opensearch

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Data source for managing an AWS OpenSearch Serverless Security Config.
func LookupServerlessSecurityConfig(ctx *pulumi.Context, args *LookupServerlessSecurityConfigArgs, opts ...pulumi.InvokeOption) (*LookupServerlessSecurityConfigResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupServerlessSecurityConfigResult
	err := ctx.Invoke("aws:opensearch/getServerlessSecurityConfig:getServerlessSecurityConfig", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getServerlessSecurityConfig.
type LookupServerlessSecurityConfigArgs struct {
	// The unique identifier of the security configuration.
	Id string `pulumi:"id"`
	// SAML options for the security configuration.
	SamlOptions *GetServerlessSecurityConfigSamlOptions `pulumi:"samlOptions"`
}

// A collection of values returned by getServerlessSecurityConfig.
type LookupServerlessSecurityConfigResult struct {
	// The version of the security configuration.
	ConfigVersion string `pulumi:"configVersion"`
	// The date the configuration was created.
	CreatedDate string `pulumi:"createdDate"`
	// The description of the security configuration.
	Description string `pulumi:"description"`
	Id          string `pulumi:"id"`
	// The date the configuration was last modified.
	LastModifiedDate string `pulumi:"lastModifiedDate"`
	// SAML options for the security configuration.
	SamlOptions *GetServerlessSecurityConfigSamlOptions `pulumi:"samlOptions"`
	// The type of security configuration.
	Type string `pulumi:"type"`
}

func LookupServerlessSecurityConfigOutput(ctx *pulumi.Context, args LookupServerlessSecurityConfigOutputArgs, opts ...pulumi.InvokeOption) LookupServerlessSecurityConfigResultOutput {
	outputResult := pulumix.ApplyErr[*LookupServerlessSecurityConfigArgs](args.ToOutput(), func(plainArgs *LookupServerlessSecurityConfigArgs) (*LookupServerlessSecurityConfigResult, error) {
		return LookupServerlessSecurityConfig(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[LookupServerlessSecurityConfigResultOutput, *LookupServerlessSecurityConfigResult](outputResult)
}

// A collection of arguments for invoking getServerlessSecurityConfig.
type LookupServerlessSecurityConfigOutputArgs struct {
	// The unique identifier of the security configuration.
	Id pulumix.Input[string] `pulumi:"id"`
	// SAML options for the security configuration.
	SamlOptions pulumix.Input[*GetServerlessSecurityConfigSamlOptionsArgs] `pulumi:"samlOptions"`
}

func (args LookupServerlessSecurityConfigOutputArgs) ToOutput() pulumix.Output[*LookupServerlessSecurityConfigArgs] {
	allArgs := pulumix.All(
		args.Id.ToOutput(context.Background()).AsAny(),
		args.SamlOptions.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *LookupServerlessSecurityConfigArgs {
		return &LookupServerlessSecurityConfigArgs{
			Id:          resolvedArgs[0].(string),
			SamlOptions: resolvedArgs[1].(*GetServerlessSecurityConfigSamlOptions),
		}
	})
}

type LookupServerlessSecurityConfigResultOutput struct{ *pulumi.OutputState }

func (LookupServerlessSecurityConfigResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServerlessSecurityConfigResult)(nil)).Elem()
}

func (o LookupServerlessSecurityConfigResultOutput) ToOutput(context.Context) pulumix.Output[*LookupServerlessSecurityConfigResult] {
	return pulumix.Output[*LookupServerlessSecurityConfigResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupServerlessSecurityConfigResultOutput) ConfigVersion() pulumix.Output[string] {
	return pulumix.Apply[*LookupServerlessSecurityConfigResult](o, func(v *LookupServerlessSecurityConfigResult) string { return v.ConfigVersion })
}

func (o LookupServerlessSecurityConfigResultOutput) CreatedDate() pulumix.Output[string] {
	return pulumix.Apply[*LookupServerlessSecurityConfigResult](o, func(v *LookupServerlessSecurityConfigResult) string { return v.CreatedDate })
}

func (o LookupServerlessSecurityConfigResultOutput) Description() pulumix.Output[string] {
	return pulumix.Apply[*LookupServerlessSecurityConfigResult](o, func(v *LookupServerlessSecurityConfigResult) string { return v.Description })
}

func (o LookupServerlessSecurityConfigResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*LookupServerlessSecurityConfigResult](o, func(v *LookupServerlessSecurityConfigResult) string { return v.Id })
}

func (o LookupServerlessSecurityConfigResultOutput) LastModifiedDate() pulumix.Output[string] {
	return pulumix.Apply[*LookupServerlessSecurityConfigResult](o, func(v *LookupServerlessSecurityConfigResult) string { return v.LastModifiedDate })
}

func (o LookupServerlessSecurityConfigResultOutput) SamlOptions() pulumix.GPtrOutput[GetServerlessSecurityConfigSamlOptions, GetServerlessSecurityConfigSamlOptionsOutput] {
	value := pulumix.Apply[*LookupServerlessSecurityConfigResult](o, func(v *LookupServerlessSecurityConfigResult) *GetServerlessSecurityConfigSamlOptions {
		return v.SamlOptions
	})
	return pulumix.GPtrOutput[GetServerlessSecurityConfigSamlOptions, GetServerlessSecurityConfigSamlOptionsOutput]{
		OutputState: value.OutputState,
	}
}

func (o LookupServerlessSecurityConfigResultOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[*LookupServerlessSecurityConfigResult](o, func(v *LookupServerlessSecurityConfigResult) string { return v.Type })
}
