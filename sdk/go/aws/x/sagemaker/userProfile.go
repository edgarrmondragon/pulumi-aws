// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sagemaker

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a SageMaker User Profile resource.
type UserProfile struct {
	pulumi.CustomResourceState

	// The user profile Amazon Resource Name (ARN).
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The ID of the associated Domain.
	DomainId pulumix.Output[string] `pulumi:"domainId"`
	// The ID of the user's profile in the Amazon Elastic File System (EFS) volume.
	HomeEfsFileSystemUid pulumix.Output[string] `pulumi:"homeEfsFileSystemUid"`
	// A specifier for the type of value specified in `singleSignOnUserValue`. Currently, the only supported value is `UserName`. If the Domain's AuthMode is SSO, this field is required. If the Domain's AuthMode is not SSO, this field cannot be specified.
	SingleSignOnUserIdentifier pulumix.Output[*string] `pulumi:"singleSignOnUserIdentifier"`
	// The username of the associated AWS Single Sign-On User for this User Profile. If the Domain's AuthMode is SSO, this field is required, and must match a valid username of a user in your directory. If the Domain's AuthMode is not SSO, this field cannot be specified.
	SingleSignOnUserValue pulumix.Output[*string] `pulumi:"singleSignOnUserValue"`
	// A map of tags to assign to the resource. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// The name for the User Profile.
	UserProfileName pulumix.Output[string] `pulumi:"userProfileName"`
	// The user settings. See User Settings below.
	UserSettings pulumix.GPtrOutput[UserProfileUserSettings, UserProfileUserSettingsOutput] `pulumi:"userSettings"`
}

// NewUserProfile registers a new resource with the given unique name, arguments, and options.
func NewUserProfile(ctx *pulumi.Context,
	name string, args *UserProfileArgs, opts ...pulumi.ResourceOption) (*UserProfile, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DomainId == nil {
		return nil, errors.New("invalid value for required argument 'DomainId'")
	}
	if args.UserProfileName == nil {
		return nil, errors.New("invalid value for required argument 'UserProfileName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource UserProfile
	err := ctx.RegisterResource("aws:sagemaker/userProfile:UserProfile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetUserProfile gets an existing UserProfile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetUserProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *UserProfileState, opts ...pulumi.ResourceOption) (*UserProfile, error) {
	var resource UserProfile
	err := ctx.ReadResource("aws:sagemaker/userProfile:UserProfile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering UserProfile resources.
type userProfileState struct {
	// The user profile Amazon Resource Name (ARN).
	Arn *string `pulumi:"arn"`
	// The ID of the associated Domain.
	DomainId *string `pulumi:"domainId"`
	// The ID of the user's profile in the Amazon Elastic File System (EFS) volume.
	HomeEfsFileSystemUid *string `pulumi:"homeEfsFileSystemUid"`
	// A specifier for the type of value specified in `singleSignOnUserValue`. Currently, the only supported value is `UserName`. If the Domain's AuthMode is SSO, this field is required. If the Domain's AuthMode is not SSO, this field cannot be specified.
	SingleSignOnUserIdentifier *string `pulumi:"singleSignOnUserIdentifier"`
	// The username of the associated AWS Single Sign-On User for this User Profile. If the Domain's AuthMode is SSO, this field is required, and must match a valid username of a user in your directory. If the Domain's AuthMode is not SSO, this field cannot be specified.
	SingleSignOnUserValue *string `pulumi:"singleSignOnUserValue"`
	// A map of tags to assign to the resource. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// The name for the User Profile.
	UserProfileName *string `pulumi:"userProfileName"`
	// The user settings. See User Settings below.
	UserSettings *UserProfileUserSettings `pulumi:"userSettings"`
}

type UserProfileState struct {
	// The user profile Amazon Resource Name (ARN).
	Arn pulumix.Input[*string]
	// The ID of the associated Domain.
	DomainId pulumix.Input[*string]
	// The ID of the user's profile in the Amazon Elastic File System (EFS) volume.
	HomeEfsFileSystemUid pulumix.Input[*string]
	// A specifier for the type of value specified in `singleSignOnUserValue`. Currently, the only supported value is `UserName`. If the Domain's AuthMode is SSO, this field is required. If the Domain's AuthMode is not SSO, this field cannot be specified.
	SingleSignOnUserIdentifier pulumix.Input[*string]
	// The username of the associated AWS Single Sign-On User for this User Profile. If the Domain's AuthMode is SSO, this field is required, and must match a valid username of a user in your directory. If the Domain's AuthMode is not SSO, this field cannot be specified.
	SingleSignOnUserValue pulumix.Input[*string]
	// A map of tags to assign to the resource. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// The name for the User Profile.
	UserProfileName pulumix.Input[*string]
	// The user settings. See User Settings below.
	UserSettings pulumix.Input[*UserProfileUserSettingsArgs]
}

func (UserProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*userProfileState)(nil)).Elem()
}

type userProfileArgs struct {
	// The ID of the associated Domain.
	DomainId string `pulumi:"domainId"`
	// A specifier for the type of value specified in `singleSignOnUserValue`. Currently, the only supported value is `UserName`. If the Domain's AuthMode is SSO, this field is required. If the Domain's AuthMode is not SSO, this field cannot be specified.
	SingleSignOnUserIdentifier *string `pulumi:"singleSignOnUserIdentifier"`
	// The username of the associated AWS Single Sign-On User for this User Profile. If the Domain's AuthMode is SSO, this field is required, and must match a valid username of a user in your directory. If the Domain's AuthMode is not SSO, this field cannot be specified.
	SingleSignOnUserValue *string `pulumi:"singleSignOnUserValue"`
	// A map of tags to assign to the resource. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// The name for the User Profile.
	UserProfileName string `pulumi:"userProfileName"`
	// The user settings. See User Settings below.
	UserSettings *UserProfileUserSettings `pulumi:"userSettings"`
}

// The set of arguments for constructing a UserProfile resource.
type UserProfileArgs struct {
	// The ID of the associated Domain.
	DomainId pulumix.Input[string]
	// A specifier for the type of value specified in `singleSignOnUserValue`. Currently, the only supported value is `UserName`. If the Domain's AuthMode is SSO, this field is required. If the Domain's AuthMode is not SSO, this field cannot be specified.
	SingleSignOnUserIdentifier pulumix.Input[*string]
	// The username of the associated AWS Single Sign-On User for this User Profile. If the Domain's AuthMode is SSO, this field is required, and must match a valid username of a user in your directory. If the Domain's AuthMode is not SSO, this field cannot be specified.
	SingleSignOnUserValue pulumix.Input[*string]
	// A map of tags to assign to the resource. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// The name for the User Profile.
	UserProfileName pulumix.Input[string]
	// The user settings. See User Settings below.
	UserSettings pulumix.Input[*UserProfileUserSettingsArgs]
}

func (UserProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*userProfileArgs)(nil)).Elem()
}

type UserProfileOutput struct{ *pulumi.OutputState }

func (UserProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserProfile)(nil)).Elem()
}

func (o UserProfileOutput) ToUserProfileOutput() UserProfileOutput {
	return o
}

func (o UserProfileOutput) ToUserProfileOutputWithContext(ctx context.Context) UserProfileOutput {
	return o
}

func (o UserProfileOutput) ToOutput(ctx context.Context) pulumix.Output[UserProfile] {
	return pulumix.Output[UserProfile]{
		OutputState: o.OutputState,
	}
}

// The user profile Amazon Resource Name (ARN).
func (o UserProfileOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[UserProfile](o, func(v UserProfile) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The ID of the associated Domain.
func (o UserProfileOutput) DomainId() pulumix.Output[string] {
	value := pulumix.Apply[UserProfile](o, func(v UserProfile) pulumix.Output[string] { return v.DomainId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The ID of the user's profile in the Amazon Elastic File System (EFS) volume.
func (o UserProfileOutput) HomeEfsFileSystemUid() pulumix.Output[string] {
	value := pulumix.Apply[UserProfile](o, func(v UserProfile) pulumix.Output[string] { return v.HomeEfsFileSystemUid })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A specifier for the type of value specified in `singleSignOnUserValue`. Currently, the only supported value is `UserName`. If the Domain's AuthMode is SSO, this field is required. If the Domain's AuthMode is not SSO, this field cannot be specified.
func (o UserProfileOutput) SingleSignOnUserIdentifier() pulumix.Output[*string] {
	value := pulumix.Apply[UserProfile](o, func(v UserProfile) pulumix.Output[*string] { return v.SingleSignOnUserIdentifier })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The username of the associated AWS Single Sign-On User for this User Profile. If the Domain's AuthMode is SSO, this field is required, and must match a valid username of a user in your directory. If the Domain's AuthMode is not SSO, this field cannot be specified.
func (o UserProfileOutput) SingleSignOnUserValue() pulumix.Output[*string] {
	value := pulumix.Apply[UserProfile](o, func(v UserProfile) pulumix.Output[*string] { return v.SingleSignOnUserValue })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// A map of tags to assign to the resource. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o UserProfileOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[UserProfile](o, func(v UserProfile) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o UserProfileOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[UserProfile](o, func(v UserProfile) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// The name for the User Profile.
func (o UserProfileOutput) UserProfileName() pulumix.Output[string] {
	value := pulumix.Apply[UserProfile](o, func(v UserProfile) pulumix.Output[string] { return v.UserProfileName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The user settings. See User Settings below.
func (o UserProfileOutput) UserSettings() pulumix.GPtrOutput[UserProfileUserSettings, UserProfileUserSettingsOutput] {
	value := pulumix.Apply[UserProfile](o, func(v UserProfile) pulumix.GPtrOutput[UserProfileUserSettings, UserProfileUserSettingsOutput] {
		return v.UserSettings
	})
	unwrapped := pulumix.Flatten[*UserProfileUserSettings, pulumix.GPtrOutput[UserProfileUserSettings, UserProfileUserSettingsOutput]](value)
	return pulumix.GPtrOutput[UserProfileUserSettings, UserProfileUserSettingsOutput]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(UserProfileOutput{})
}
