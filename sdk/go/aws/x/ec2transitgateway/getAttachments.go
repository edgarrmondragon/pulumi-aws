// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2transitgateway

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Get information on EC2 Transit Gateway Attachments.
func GetAttachments(ctx *pulumi.Context, args *GetAttachmentsArgs, opts ...pulumi.InvokeOption) (*GetAttachmentsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetAttachmentsResult
	err := ctx.Invoke("aws:ec2transitgateway/getAttachments:getAttachments", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAttachments.
type GetAttachmentsArgs struct {
	// One or more configuration blocks containing name-values filters. Detailed below.
	Filters []GetAttachmentsFilter `pulumi:"filters"`
	Tags    map[string]string      `pulumi:"tags"`
}

// A collection of values returned by getAttachments.
type GetAttachmentsResult struct {
	Filters []GetAttachmentsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A list of all attachments ids matching the filter. You can retrieve more information about the attachment using the [ec2transitgateway.getAttachment][2] data source, searching by identifier.
	Ids  []string          `pulumi:"ids"`
	Tags map[string]string `pulumi:"tags"`
}

func GetAttachmentsOutput(ctx *pulumi.Context, args GetAttachmentsOutputArgs, opts ...pulumi.InvokeOption) GetAttachmentsResultOutput {
	outputResult := pulumix.ApplyErr[*GetAttachmentsArgs](args.ToOutput(), func(plainArgs *GetAttachmentsArgs) (*GetAttachmentsResult, error) {
		return GetAttachments(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[GetAttachmentsResultOutput, *GetAttachmentsResult](outputResult)
}

// A collection of arguments for invoking getAttachments.
type GetAttachmentsOutputArgs struct {
	// One or more configuration blocks containing name-values filters. Detailed below.
	Filters pulumix.Input[[]*GetAttachmentsFilterArgs] `pulumi:"filters"`
	Tags    pulumix.Input[map[string]string]           `pulumi:"tags"`
}

func (args GetAttachmentsOutputArgs) ToOutput() pulumix.Output[*GetAttachmentsArgs] {
	allArgs := pulumix.All(
		args.Filters.ToOutput(context.Background()).AsAny(),
		args.Tags.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *GetAttachmentsArgs {
		return &GetAttachmentsArgs{
			Filters: resolvedArgs[0].([]GetAttachmentsFilter),
			Tags:    resolvedArgs[1].(map[string]string),
		}
	})
}

type GetAttachmentsResultOutput struct{ *pulumi.OutputState }

func (GetAttachmentsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAttachmentsResult)(nil)).Elem()
}

func (o GetAttachmentsResultOutput) ToOutput(context.Context) pulumix.Output[*GetAttachmentsResult] {
	return pulumix.Output[*GetAttachmentsResult]{
		OutputState: o.OutputState,
	}
}

func (o GetAttachmentsResultOutput) Filters() pulumix.GArrayOutput[GetAttachmentsFilter, GetAttachmentsFilterOutput] {
	value := pulumix.Apply[*GetAttachmentsResult](o, func(v *GetAttachmentsResult) []GetAttachmentsFilter { return v.Filters })
	return pulumix.GArrayOutput[GetAttachmentsFilter, GetAttachmentsFilterOutput]{
		OutputState: value.OutputState,
	}
}

func (o GetAttachmentsResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*GetAttachmentsResult](o, func(v *GetAttachmentsResult) string { return v.Id })
}

func (o GetAttachmentsResultOutput) Ids() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[*GetAttachmentsResult](o, func(v *GetAttachmentsResult) []string { return v.Ids })
	return pulumix.ArrayOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o GetAttachmentsResultOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[*GetAttachmentsResult](o, func(v *GetAttachmentsResult) map[string]string { return v.Tags })
	return pulumix.MapOutput[string]{
		OutputState: value.OutputState,
	}
}
