// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package servicecatalog

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Lists the provisioning artifacts for the specified product.
func GetProvisioningArtifacts(ctx *pulumi.Context, args *GetProvisioningArtifactsArgs, opts ...pulumi.InvokeOption) (*GetProvisioningArtifactsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetProvisioningArtifactsResult
	err := ctx.Invoke("aws:servicecatalog/getProvisioningArtifacts:getProvisioningArtifacts", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getProvisioningArtifacts.
type GetProvisioningArtifactsArgs struct {
	// Language code. Valid values: `en` (English), `jp` (Japanese), `zh` (Chinese). Default value is `en`.
	AcceptLanguage *string `pulumi:"acceptLanguage"`
	// Product identifier.
	//
	// The following arguments are optional:
	ProductId string `pulumi:"productId"`
}

// A collection of values returned by getProvisioningArtifacts.
type GetProvisioningArtifactsResult struct {
	AcceptLanguage *string `pulumi:"acceptLanguage"`
	// The provider-assigned unique ID for this managed resource.
	Id        string `pulumi:"id"`
	ProductId string `pulumi:"productId"`
	// List with information about the provisioning artifacts. See details below.
	ProvisioningArtifactDetails []GetProvisioningArtifactsProvisioningArtifactDetail `pulumi:"provisioningArtifactDetails"`
}

func GetProvisioningArtifactsOutput(ctx *pulumi.Context, args GetProvisioningArtifactsOutputArgs, opts ...pulumi.InvokeOption) GetProvisioningArtifactsResultOutput {
	outputResult := pulumix.ApplyErr[*GetProvisioningArtifactsArgs](args.ToOutput(), func(plainArgs *GetProvisioningArtifactsArgs) (*GetProvisioningArtifactsResult, error) {
		return GetProvisioningArtifacts(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[GetProvisioningArtifactsResultOutput, *GetProvisioningArtifactsResult](outputResult)
}

// A collection of arguments for invoking getProvisioningArtifacts.
type GetProvisioningArtifactsOutputArgs struct {
	// Language code. Valid values: `en` (English), `jp` (Japanese), `zh` (Chinese). Default value is `en`.
	AcceptLanguage pulumix.Input[*string] `pulumi:"acceptLanguage"`
	// Product identifier.
	//
	// The following arguments are optional:
	ProductId pulumix.Input[string] `pulumi:"productId"`
}

func (args GetProvisioningArtifactsOutputArgs) ToOutput() pulumix.Output[*GetProvisioningArtifactsArgs] {
	allArgs := pulumix.All(
		args.AcceptLanguage.ToOutput(context.Background()).AsAny(),
		args.ProductId.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *GetProvisioningArtifactsArgs {
		return &GetProvisioningArtifactsArgs{
			AcceptLanguage: resolvedArgs[0].(*string),
			ProductId:      resolvedArgs[1].(string),
		}
	})
}

type GetProvisioningArtifactsResultOutput struct{ *pulumi.OutputState }

func (GetProvisioningArtifactsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProvisioningArtifactsResult)(nil)).Elem()
}

func (o GetProvisioningArtifactsResultOutput) ToOutput(context.Context) pulumix.Output[*GetProvisioningArtifactsResult] {
	return pulumix.Output[*GetProvisioningArtifactsResult]{
		OutputState: o.OutputState,
	}
}

func (o GetProvisioningArtifactsResultOutput) AcceptLanguage() pulumix.Output[*string] {
	return pulumix.Apply[*GetProvisioningArtifactsResult](o, func(v *GetProvisioningArtifactsResult) *string { return v.AcceptLanguage })
}

func (o GetProvisioningArtifactsResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*GetProvisioningArtifactsResult](o, func(v *GetProvisioningArtifactsResult) string { return v.Id })
}

func (o GetProvisioningArtifactsResultOutput) ProductId() pulumix.Output[string] {
	return pulumix.Apply[*GetProvisioningArtifactsResult](o, func(v *GetProvisioningArtifactsResult) string { return v.ProductId })
}

func (o GetProvisioningArtifactsResultOutput) ProvisioningArtifactDetails() pulumix.GArrayOutput[GetProvisioningArtifactsProvisioningArtifactDetail, GetProvisioningArtifactsProvisioningArtifactDetailOutput] {
	value := pulumix.Apply[*GetProvisioningArtifactsResult](o, func(v *GetProvisioningArtifactsResult) []GetProvisioningArtifactsProvisioningArtifactDetail {
		return v.ProvisioningArtifactDetails
	})
	return pulumix.GArrayOutput[GetProvisioningArtifactsProvisioningArtifactDetail, GetProvisioningArtifactsProvisioningArtifactDetailOutput]{
		OutputState: value.OutputState,
	}
}
