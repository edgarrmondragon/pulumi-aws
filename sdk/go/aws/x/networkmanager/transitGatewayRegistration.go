// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networkmanager

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Registers a transit gateway to a global network. The transit gateway can be in any AWS Region,
// but it must be owned by the same AWS account that owns the global network.
// You cannot register a transit gateway in more than one global network.
type TransitGatewayRegistration struct {
	pulumi.CustomResourceState

	// The ID of the Global Network to register to.
	GlobalNetworkId pulumix.Output[string] `pulumi:"globalNetworkId"`
	// The ARN of the Transit Gateway to register.
	TransitGatewayArn pulumix.Output[string] `pulumi:"transitGatewayArn"`
}

// NewTransitGatewayRegistration registers a new resource with the given unique name, arguments, and options.
func NewTransitGatewayRegistration(ctx *pulumi.Context,
	name string, args *TransitGatewayRegistrationArgs, opts ...pulumi.ResourceOption) (*TransitGatewayRegistration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.GlobalNetworkId == nil {
		return nil, errors.New("invalid value for required argument 'GlobalNetworkId'")
	}
	if args.TransitGatewayArn == nil {
		return nil, errors.New("invalid value for required argument 'TransitGatewayArn'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TransitGatewayRegistration
	err := ctx.RegisterResource("aws:networkmanager/transitGatewayRegistration:TransitGatewayRegistration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTransitGatewayRegistration gets an existing TransitGatewayRegistration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTransitGatewayRegistration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TransitGatewayRegistrationState, opts ...pulumi.ResourceOption) (*TransitGatewayRegistration, error) {
	var resource TransitGatewayRegistration
	err := ctx.ReadResource("aws:networkmanager/transitGatewayRegistration:TransitGatewayRegistration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TransitGatewayRegistration resources.
type transitGatewayRegistrationState struct {
	// The ID of the Global Network to register to.
	GlobalNetworkId *string `pulumi:"globalNetworkId"`
	// The ARN of the Transit Gateway to register.
	TransitGatewayArn *string `pulumi:"transitGatewayArn"`
}

type TransitGatewayRegistrationState struct {
	// The ID of the Global Network to register to.
	GlobalNetworkId pulumix.Input[*string]
	// The ARN of the Transit Gateway to register.
	TransitGatewayArn pulumix.Input[*string]
}

func (TransitGatewayRegistrationState) ElementType() reflect.Type {
	return reflect.TypeOf((*transitGatewayRegistrationState)(nil)).Elem()
}

type transitGatewayRegistrationArgs struct {
	// The ID of the Global Network to register to.
	GlobalNetworkId string `pulumi:"globalNetworkId"`
	// The ARN of the Transit Gateway to register.
	TransitGatewayArn string `pulumi:"transitGatewayArn"`
}

// The set of arguments for constructing a TransitGatewayRegistration resource.
type TransitGatewayRegistrationArgs struct {
	// The ID of the Global Network to register to.
	GlobalNetworkId pulumix.Input[string]
	// The ARN of the Transit Gateway to register.
	TransitGatewayArn pulumix.Input[string]
}

func (TransitGatewayRegistrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*transitGatewayRegistrationArgs)(nil)).Elem()
}

type TransitGatewayRegistrationOutput struct{ *pulumi.OutputState }

func (TransitGatewayRegistrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransitGatewayRegistration)(nil)).Elem()
}

func (o TransitGatewayRegistrationOutput) ToTransitGatewayRegistrationOutput() TransitGatewayRegistrationOutput {
	return o
}

func (o TransitGatewayRegistrationOutput) ToTransitGatewayRegistrationOutputWithContext(ctx context.Context) TransitGatewayRegistrationOutput {
	return o
}

func (o TransitGatewayRegistrationOutput) ToOutput(ctx context.Context) pulumix.Output[TransitGatewayRegistration] {
	return pulumix.Output[TransitGatewayRegistration]{
		OutputState: o.OutputState,
	}
}

// The ID of the Global Network to register to.
func (o TransitGatewayRegistrationOutput) GlobalNetworkId() pulumix.Output[string] {
	value := pulumix.Apply[TransitGatewayRegistration](o, func(v TransitGatewayRegistration) pulumix.Output[string] { return v.GlobalNetworkId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The ARN of the Transit Gateway to register.
func (o TransitGatewayRegistrationOutput) TransitGatewayArn() pulumix.Output[string] {
	value := pulumix.Apply[TransitGatewayRegistration](o, func(v TransitGatewayRegistration) pulumix.Output[string] { return v.TransitGatewayArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(TransitGatewayRegistrationOutput{})
}
