// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package guardduty

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manages a GuardDuty Organization Admin Account. The AWS account utilizing this resource must be an Organizations primary account. More information about Organizations support in GuardDuty can be found in the [GuardDuty User Guide](https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_organizations.html).
type OrganizationAdminAccount struct {
	pulumi.CustomResourceState

	// AWS account identifier to designate as a delegated administrator for GuardDuty.
	AdminAccountId pulumix.Output[string] `pulumi:"adminAccountId"`
}

// NewOrganizationAdminAccount registers a new resource with the given unique name, arguments, and options.
func NewOrganizationAdminAccount(ctx *pulumi.Context,
	name string, args *OrganizationAdminAccountArgs, opts ...pulumi.ResourceOption) (*OrganizationAdminAccount, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AdminAccountId == nil {
		return nil, errors.New("invalid value for required argument 'AdminAccountId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource OrganizationAdminAccount
	err := ctx.RegisterResource("aws:guardduty/organizationAdminAccount:OrganizationAdminAccount", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOrganizationAdminAccount gets an existing OrganizationAdminAccount resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOrganizationAdminAccount(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OrganizationAdminAccountState, opts ...pulumi.ResourceOption) (*OrganizationAdminAccount, error) {
	var resource OrganizationAdminAccount
	err := ctx.ReadResource("aws:guardduty/organizationAdminAccount:OrganizationAdminAccount", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OrganizationAdminAccount resources.
type organizationAdminAccountState struct {
	// AWS account identifier to designate as a delegated administrator for GuardDuty.
	AdminAccountId *string `pulumi:"adminAccountId"`
}

type OrganizationAdminAccountState struct {
	// AWS account identifier to designate as a delegated administrator for GuardDuty.
	AdminAccountId pulumix.Input[*string]
}

func (OrganizationAdminAccountState) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationAdminAccountState)(nil)).Elem()
}

type organizationAdminAccountArgs struct {
	// AWS account identifier to designate as a delegated administrator for GuardDuty.
	AdminAccountId string `pulumi:"adminAccountId"`
}

// The set of arguments for constructing a OrganizationAdminAccount resource.
type OrganizationAdminAccountArgs struct {
	// AWS account identifier to designate as a delegated administrator for GuardDuty.
	AdminAccountId pulumix.Input[string]
}

func (OrganizationAdminAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationAdminAccountArgs)(nil)).Elem()
}

type OrganizationAdminAccountOutput struct{ *pulumi.OutputState }

func (OrganizationAdminAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationAdminAccount)(nil)).Elem()
}

func (o OrganizationAdminAccountOutput) ToOrganizationAdminAccountOutput() OrganizationAdminAccountOutput {
	return o
}

func (o OrganizationAdminAccountOutput) ToOrganizationAdminAccountOutputWithContext(ctx context.Context) OrganizationAdminAccountOutput {
	return o
}

func (o OrganizationAdminAccountOutput) ToOutput(ctx context.Context) pulumix.Output[OrganizationAdminAccount] {
	return pulumix.Output[OrganizationAdminAccount]{
		OutputState: o.OutputState,
	}
}

// AWS account identifier to designate as a delegated administrator for GuardDuty.
func (o OrganizationAdminAccountOutput) AdminAccountId() pulumix.Output[string] {
	value := pulumix.Apply[OrganizationAdminAccount](o, func(v OrganizationAdminAccount) pulumix.Output[string] { return v.AdminAccountId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(OrganizationAdminAccountOutput{})
}
