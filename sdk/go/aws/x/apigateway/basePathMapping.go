// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Connects a custom domain name registered via `apigateway.DomainName`
// with a deployed API so that its methods can be called via the
// custom domain name.
type BasePathMapping struct {
	pulumi.CustomResourceState

	// Path segment that must be prepended to the path when accessing the API via this mapping. If omitted, the API is exposed at the root of the given domain.
	BasePath pulumix.Output[*string] `pulumi:"basePath"`
	// Already-registered domain name to connect the API to.
	DomainName pulumix.Output[string] `pulumi:"domainName"`
	// ID of the API to connect.
	RestApi pulumix.Output[string] `pulumi:"restApi"`
	// Name of a specific deployment stage to expose at the given path. If omitted, callers may select any stage by including its name as a path element after the base path.
	StageName pulumix.Output[*string] `pulumi:"stageName"`
}

// NewBasePathMapping registers a new resource with the given unique name, arguments, and options.
func NewBasePathMapping(ctx *pulumi.Context,
	name string, args *BasePathMappingArgs, opts ...pulumi.ResourceOption) (*BasePathMapping, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DomainName == nil {
		return nil, errors.New("invalid value for required argument 'DomainName'")
	}
	if args.RestApi == nil {
		return nil, errors.New("invalid value for required argument 'RestApi'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BasePathMapping
	err := ctx.RegisterResource("aws:apigateway/basePathMapping:BasePathMapping", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBasePathMapping gets an existing BasePathMapping resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBasePathMapping(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BasePathMappingState, opts ...pulumi.ResourceOption) (*BasePathMapping, error) {
	var resource BasePathMapping
	err := ctx.ReadResource("aws:apigateway/basePathMapping:BasePathMapping", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BasePathMapping resources.
type basePathMappingState struct {
	// Path segment that must be prepended to the path when accessing the API via this mapping. If omitted, the API is exposed at the root of the given domain.
	BasePath *string `pulumi:"basePath"`
	// Already-registered domain name to connect the API to.
	DomainName *string `pulumi:"domainName"`
	// ID of the API to connect.
	RestApi interface{} `pulumi:"restApi"`
	// Name of a specific deployment stage to expose at the given path. If omitted, callers may select any stage by including its name as a path element after the base path.
	StageName *string `pulumi:"stageName"`
}

type BasePathMappingState struct {
	// Path segment that must be prepended to the path when accessing the API via this mapping. If omitted, the API is exposed at the root of the given domain.
	BasePath pulumix.Input[*string]
	// Already-registered domain name to connect the API to.
	DomainName pulumix.Input[*string]
	// ID of the API to connect.
	RestApi pulumix.Input[*any]
	// Name of a specific deployment stage to expose at the given path. If omitted, callers may select any stage by including its name as a path element after the base path.
	StageName pulumix.Input[*string]
}

func (BasePathMappingState) ElementType() reflect.Type {
	return reflect.TypeOf((*basePathMappingState)(nil)).Elem()
}

type basePathMappingArgs struct {
	// Path segment that must be prepended to the path when accessing the API via this mapping. If omitted, the API is exposed at the root of the given domain.
	BasePath *string `pulumi:"basePath"`
	// Already-registered domain name to connect the API to.
	DomainName string `pulumi:"domainName"`
	// ID of the API to connect.
	RestApi interface{} `pulumi:"restApi"`
	// Name of a specific deployment stage to expose at the given path. If omitted, callers may select any stage by including its name as a path element after the base path.
	StageName *string `pulumi:"stageName"`
}

// The set of arguments for constructing a BasePathMapping resource.
type BasePathMappingArgs struct {
	// Path segment that must be prepended to the path when accessing the API via this mapping. If omitted, the API is exposed at the root of the given domain.
	BasePath pulumix.Input[*string]
	// Already-registered domain name to connect the API to.
	DomainName pulumix.Input[string]
	// ID of the API to connect.
	RestApi pulumix.Input[any]
	// Name of a specific deployment stage to expose at the given path. If omitted, callers may select any stage by including its name as a path element after the base path.
	StageName pulumix.Input[*string]
}

func (BasePathMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*basePathMappingArgs)(nil)).Elem()
}

type BasePathMappingOutput struct{ *pulumi.OutputState }

func (BasePathMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BasePathMapping)(nil)).Elem()
}

func (o BasePathMappingOutput) ToBasePathMappingOutput() BasePathMappingOutput {
	return o
}

func (o BasePathMappingOutput) ToBasePathMappingOutputWithContext(ctx context.Context) BasePathMappingOutput {
	return o
}

func (o BasePathMappingOutput) ToOutput(ctx context.Context) pulumix.Output[BasePathMapping] {
	return pulumix.Output[BasePathMapping]{
		OutputState: o.OutputState,
	}
}

// Path segment that must be prepended to the path when accessing the API via this mapping. If omitted, the API is exposed at the root of the given domain.
func (o BasePathMappingOutput) BasePath() pulumix.Output[*string] {
	value := pulumix.Apply[BasePathMapping](o, func(v BasePathMapping) pulumix.Output[*string] { return v.BasePath })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Already-registered domain name to connect the API to.
func (o BasePathMappingOutput) DomainName() pulumix.Output[string] {
	value := pulumix.Apply[BasePathMapping](o, func(v BasePathMapping) pulumix.Output[string] { return v.DomainName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// ID of the API to connect.
func (o BasePathMappingOutput) RestApi() pulumix.Output[string] {
	value := pulumix.Apply[BasePathMapping](o, func(v BasePathMapping) pulumix.Output[string] { return v.RestApi })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Name of a specific deployment stage to expose at the given path. If omitted, callers may select any stage by including its name as a path element after the base path.
func (o BasePathMappingOutput) StageName() pulumix.Output[*string] {
	value := pulumix.Apply[BasePathMapping](o, func(v BasePathMapping) pulumix.Output[*string] { return v.StageName })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

func init() {
	pulumi.RegisterOutputType(BasePathMappingOutput{})
}
