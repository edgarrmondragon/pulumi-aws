// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// `ec2.NetworkInsightsAnalysis` provides details about a specific Network Insights Analysis.
func LookupNetworkInsightsAnalysis(ctx *pulumi.Context, args *LookupNetworkInsightsAnalysisArgs, opts ...pulumi.InvokeOption) (*LookupNetworkInsightsAnalysisResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupNetworkInsightsAnalysisResult
	err := ctx.Invoke("aws:ec2/getNetworkInsightsAnalysis:getNetworkInsightsAnalysis", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNetworkInsightsAnalysis.
type LookupNetworkInsightsAnalysisArgs struct {
	// Configuration block(s) for filtering. Detailed below.
	Filters []GetNetworkInsightsAnalysisFilter `pulumi:"filters"`
	// ID of the Network Insights Analysis to select.
	NetworkInsightsAnalysisId *string           `pulumi:"networkInsightsAnalysisId"`
	Tags                      map[string]string `pulumi:"tags"`
}

// A collection of values returned by getNetworkInsightsAnalysis.
type LookupNetworkInsightsAnalysisResult struct {
	// Potential intermediate components of a feasible path.
	AlternatePathHints []GetNetworkInsightsAnalysisAlternatePathHint `pulumi:"alternatePathHints"`
	// ARN of the selected Network Insights Analysis.
	Arn string `pulumi:"arn"`
	// Explanation codes for an unreachable path.
	Explanations []GetNetworkInsightsAnalysisExplanation `pulumi:"explanations"`
	// ARNs of the AWS resources that the path must traverse.
	FilterInArns []string                           `pulumi:"filterInArns"`
	Filters      []GetNetworkInsightsAnalysisFilter `pulumi:"filters"`
	// The components in the path from source to destination.
	ForwardPathComponents []GetNetworkInsightsAnalysisForwardPathComponent `pulumi:"forwardPathComponents"`
	// The provider-assigned unique ID for this managed resource.
	Id                        string `pulumi:"id"`
	NetworkInsightsAnalysisId string `pulumi:"networkInsightsAnalysisId"`
	// The ID of the path.
	NetworkInsightsPathId string `pulumi:"networkInsightsPathId"`
	// Set to `true` if the destination was reachable.
	PathFound bool `pulumi:"pathFound"`
	// The components in the path from destination to source.
	ReturnPathComponents []GetNetworkInsightsAnalysisReturnPathComponent `pulumi:"returnPathComponents"`
	// Date/time the analysis was started.
	StartDate string `pulumi:"startDate"`
	// Status of the analysis. `succeeded` means the analysis was completed, not that a path was found, for that see `pathFound`.
	Status string `pulumi:"status"`
	// Message to provide more context when the `status` is `failed`.
	StatusMessage string            `pulumi:"statusMessage"`
	Tags          map[string]string `pulumi:"tags"`
	// Warning message.
	WarningMessage string `pulumi:"warningMessage"`
}

func LookupNetworkInsightsAnalysisOutput(ctx *pulumi.Context, args LookupNetworkInsightsAnalysisOutputArgs, opts ...pulumi.InvokeOption) LookupNetworkInsightsAnalysisResultOutput {
	outputResult := pulumix.ApplyErr[*LookupNetworkInsightsAnalysisArgs](args.ToOutput(), func(plainArgs *LookupNetworkInsightsAnalysisArgs) (*LookupNetworkInsightsAnalysisResult, error) {
		return LookupNetworkInsightsAnalysis(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[LookupNetworkInsightsAnalysisResultOutput, *LookupNetworkInsightsAnalysisResult](outputResult)
}

// A collection of arguments for invoking getNetworkInsightsAnalysis.
type LookupNetworkInsightsAnalysisOutputArgs struct {
	// Configuration block(s) for filtering. Detailed below.
	Filters pulumix.Input[[]*GetNetworkInsightsAnalysisFilterArgs] `pulumi:"filters"`
	// ID of the Network Insights Analysis to select.
	NetworkInsightsAnalysisId pulumix.Input[*string]           `pulumi:"networkInsightsAnalysisId"`
	Tags                      pulumix.Input[map[string]string] `pulumi:"tags"`
}

func (args LookupNetworkInsightsAnalysisOutputArgs) ToOutput() pulumix.Output[*LookupNetworkInsightsAnalysisArgs] {
	allArgs := pulumix.All(
		args.Filters.ToOutput(context.Background()).AsAny(),
		args.NetworkInsightsAnalysisId.ToOutput(context.Background()).AsAny(),
		args.Tags.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *LookupNetworkInsightsAnalysisArgs {
		return &LookupNetworkInsightsAnalysisArgs{
			Filters:                   resolvedArgs[0].([]GetNetworkInsightsAnalysisFilter),
			NetworkInsightsAnalysisId: resolvedArgs[1].(*string),
			Tags:                      resolvedArgs[2].(map[string]string),
		}
	})
}

type LookupNetworkInsightsAnalysisResultOutput struct{ *pulumi.OutputState }

func (LookupNetworkInsightsAnalysisResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNetworkInsightsAnalysisResult)(nil)).Elem()
}

func (o LookupNetworkInsightsAnalysisResultOutput) ToOutput(context.Context) pulumix.Output[*LookupNetworkInsightsAnalysisResult] {
	return pulumix.Output[*LookupNetworkInsightsAnalysisResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupNetworkInsightsAnalysisResultOutput) AlternatePathHints() pulumix.GArrayOutput[GetNetworkInsightsAnalysisAlternatePathHint, GetNetworkInsightsAnalysisAlternatePathHintOutput] {
	value := pulumix.Apply[*LookupNetworkInsightsAnalysisResult](o, func(v *LookupNetworkInsightsAnalysisResult) []GetNetworkInsightsAnalysisAlternatePathHint {
		return v.AlternatePathHints
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisAlternatePathHint, GetNetworkInsightsAnalysisAlternatePathHintOutput]{
		OutputState: value.OutputState,
	}
}

func (o LookupNetworkInsightsAnalysisResultOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[*LookupNetworkInsightsAnalysisResult](o, func(v *LookupNetworkInsightsAnalysisResult) string { return v.Arn })
}

func (o LookupNetworkInsightsAnalysisResultOutput) Explanations() pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanation, GetNetworkInsightsAnalysisExplanationOutput] {
	value := pulumix.Apply[*LookupNetworkInsightsAnalysisResult](o, func(v *LookupNetworkInsightsAnalysisResult) []GetNetworkInsightsAnalysisExplanation {
		return v.Explanations
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisExplanation, GetNetworkInsightsAnalysisExplanationOutput]{
		OutputState: value.OutputState,
	}
}

func (o LookupNetworkInsightsAnalysisResultOutput) FilterInArns() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[*LookupNetworkInsightsAnalysisResult](o, func(v *LookupNetworkInsightsAnalysisResult) []string { return v.FilterInArns })
	return pulumix.ArrayOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o LookupNetworkInsightsAnalysisResultOutput) Filters() pulumix.GArrayOutput[GetNetworkInsightsAnalysisFilter, GetNetworkInsightsAnalysisFilterOutput] {
	value := pulumix.Apply[*LookupNetworkInsightsAnalysisResult](o, func(v *LookupNetworkInsightsAnalysisResult) []GetNetworkInsightsAnalysisFilter { return v.Filters })
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisFilter, GetNetworkInsightsAnalysisFilterOutput]{
		OutputState: value.OutputState,
	}
}

func (o LookupNetworkInsightsAnalysisResultOutput) ForwardPathComponents() pulumix.GArrayOutput[GetNetworkInsightsAnalysisForwardPathComponent, GetNetworkInsightsAnalysisForwardPathComponentOutput] {
	value := pulumix.Apply[*LookupNetworkInsightsAnalysisResult](o, func(v *LookupNetworkInsightsAnalysisResult) []GetNetworkInsightsAnalysisForwardPathComponent {
		return v.ForwardPathComponents
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisForwardPathComponent, GetNetworkInsightsAnalysisForwardPathComponentOutput]{
		OutputState: value.OutputState,
	}
}

func (o LookupNetworkInsightsAnalysisResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*LookupNetworkInsightsAnalysisResult](o, func(v *LookupNetworkInsightsAnalysisResult) string { return v.Id })
}

func (o LookupNetworkInsightsAnalysisResultOutput) NetworkInsightsAnalysisId() pulumix.Output[string] {
	return pulumix.Apply[*LookupNetworkInsightsAnalysisResult](o, func(v *LookupNetworkInsightsAnalysisResult) string { return v.NetworkInsightsAnalysisId })
}

func (o LookupNetworkInsightsAnalysisResultOutput) NetworkInsightsPathId() pulumix.Output[string] {
	return pulumix.Apply[*LookupNetworkInsightsAnalysisResult](o, func(v *LookupNetworkInsightsAnalysisResult) string { return v.NetworkInsightsPathId })
}

func (o LookupNetworkInsightsAnalysisResultOutput) PathFound() pulumix.Output[bool] {
	return pulumix.Apply[*LookupNetworkInsightsAnalysisResult](o, func(v *LookupNetworkInsightsAnalysisResult) bool { return v.PathFound })
}

func (o LookupNetworkInsightsAnalysisResultOutput) ReturnPathComponents() pulumix.GArrayOutput[GetNetworkInsightsAnalysisReturnPathComponent, GetNetworkInsightsAnalysisReturnPathComponentOutput] {
	value := pulumix.Apply[*LookupNetworkInsightsAnalysisResult](o, func(v *LookupNetworkInsightsAnalysisResult) []GetNetworkInsightsAnalysisReturnPathComponent {
		return v.ReturnPathComponents
	})
	return pulumix.GArrayOutput[GetNetworkInsightsAnalysisReturnPathComponent, GetNetworkInsightsAnalysisReturnPathComponentOutput]{
		OutputState: value.OutputState,
	}
}

func (o LookupNetworkInsightsAnalysisResultOutput) StartDate() pulumix.Output[string] {
	return pulumix.Apply[*LookupNetworkInsightsAnalysisResult](o, func(v *LookupNetworkInsightsAnalysisResult) string { return v.StartDate })
}

func (o LookupNetworkInsightsAnalysisResultOutput) Status() pulumix.Output[string] {
	return pulumix.Apply[*LookupNetworkInsightsAnalysisResult](o, func(v *LookupNetworkInsightsAnalysisResult) string { return v.Status })
}

func (o LookupNetworkInsightsAnalysisResultOutput) StatusMessage() pulumix.Output[string] {
	return pulumix.Apply[*LookupNetworkInsightsAnalysisResult](o, func(v *LookupNetworkInsightsAnalysisResult) string { return v.StatusMessage })
}

func (o LookupNetworkInsightsAnalysisResultOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[*LookupNetworkInsightsAnalysisResult](o, func(v *LookupNetworkInsightsAnalysisResult) map[string]string { return v.Tags })
	return pulumix.MapOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o LookupNetworkInsightsAnalysisResultOutput) WarningMessage() pulumix.Output[string] {
	return pulumix.Apply[*LookupNetworkInsightsAnalysisResult](o, func(v *LookupNetworkInsightsAnalysisResult) string { return v.WarningMessage })
}
