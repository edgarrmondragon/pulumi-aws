// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package pinpoint

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a Pinpoint App resource.
type App struct {
	pulumi.CustomResourceState

	// The Application ID of the Pinpoint App.
	ApplicationId pulumix.Output[string] `pulumi:"applicationId"`
	// Amazon Resource Name (ARN) of the PinPoint Application
	Arn pulumix.Output[string] `pulumi:"arn"`
	// Specifies settings for invoking an AWS Lambda function that customizes a segment for a campaign
	CampaignHook pulumix.GPtrOutput[AppCampaignHook, AppCampaignHookOutput] `pulumi:"campaignHook"`
	// The default campaign limits for the app. These limits apply to each campaign for the app, unless the campaign overrides the default with limits of its own
	Limits pulumix.GPtrOutput[AppLimits, AppLimitsOutput] `pulumi:"limits"`
	// The application name. By default generated by this provider
	Name pulumix.Output[string] `pulumi:"name"`
	// The name of the Pinpoint application. Conflicts with `name`
	NamePrefix pulumix.Output[*string] `pulumi:"namePrefix"`
	// The default quiet time for the app. Each campaign for this app sends no messages during this time unless the campaign overrides the default with a quiet time of its own
	QuietTime pulumix.GPtrOutput[AppQuietTime, AppQuietTimeOutput] `pulumi:"quietTime"`
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
}

// NewApp registers a new resource with the given unique name, arguments, and options.
func NewApp(ctx *pulumi.Context,
	name string, args *AppArgs, opts ...pulumi.ResourceOption) (*App, error) {
	if args == nil {
		args = &AppArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource App
	err := ctx.RegisterResource("aws:pinpoint/app:App", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApp gets an existing App resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApp(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AppState, opts ...pulumi.ResourceOption) (*App, error) {
	var resource App
	err := ctx.ReadResource("aws:pinpoint/app:App", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering App resources.
type appState struct {
	// The Application ID of the Pinpoint App.
	ApplicationId *string `pulumi:"applicationId"`
	// Amazon Resource Name (ARN) of the PinPoint Application
	Arn *string `pulumi:"arn"`
	// Specifies settings for invoking an AWS Lambda function that customizes a segment for a campaign
	CampaignHook *AppCampaignHook `pulumi:"campaignHook"`
	// The default campaign limits for the app. These limits apply to each campaign for the app, unless the campaign overrides the default with limits of its own
	Limits *AppLimits `pulumi:"limits"`
	// The application name. By default generated by this provider
	Name *string `pulumi:"name"`
	// The name of the Pinpoint application. Conflicts with `name`
	NamePrefix *string `pulumi:"namePrefix"`
	// The default quiet time for the app. Each campaign for this app sends no messages during this time unless the campaign overrides the default with a quiet time of its own
	QuietTime *AppQuietTime `pulumi:"quietTime"`
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type AppState struct {
	// The Application ID of the Pinpoint App.
	ApplicationId pulumix.Input[*string]
	// Amazon Resource Name (ARN) of the PinPoint Application
	Arn pulumix.Input[*string]
	// Specifies settings for invoking an AWS Lambda function that customizes a segment for a campaign
	CampaignHook pulumix.Input[*AppCampaignHookArgs]
	// The default campaign limits for the app. These limits apply to each campaign for the app, unless the campaign overrides the default with limits of its own
	Limits pulumix.Input[*AppLimitsArgs]
	// The application name. By default generated by this provider
	Name pulumix.Input[*string]
	// The name of the Pinpoint application. Conflicts with `name`
	NamePrefix pulumix.Input[*string]
	// The default quiet time for the app. Each campaign for this app sends no messages during this time unless the campaign overrides the default with a quiet time of its own
	QuietTime pulumix.Input[*AppQuietTimeArgs]
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
}

func (AppState) ElementType() reflect.Type {
	return reflect.TypeOf((*appState)(nil)).Elem()
}

type appArgs struct {
	// Specifies settings for invoking an AWS Lambda function that customizes a segment for a campaign
	CampaignHook *AppCampaignHook `pulumi:"campaignHook"`
	// The default campaign limits for the app. These limits apply to each campaign for the app, unless the campaign overrides the default with limits of its own
	Limits *AppLimits `pulumi:"limits"`
	// The application name. By default generated by this provider
	Name *string `pulumi:"name"`
	// The name of the Pinpoint application. Conflicts with `name`
	NamePrefix *string `pulumi:"namePrefix"`
	// The default quiet time for the app. Each campaign for this app sends no messages during this time unless the campaign overrides the default with a quiet time of its own
	QuietTime *AppQuietTime `pulumi:"quietTime"`
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a App resource.
type AppArgs struct {
	// Specifies settings for invoking an AWS Lambda function that customizes a segment for a campaign
	CampaignHook pulumix.Input[*AppCampaignHookArgs]
	// The default campaign limits for the app. These limits apply to each campaign for the app, unless the campaign overrides the default with limits of its own
	Limits pulumix.Input[*AppLimitsArgs]
	// The application name. By default generated by this provider
	Name pulumix.Input[*string]
	// The name of the Pinpoint application. Conflicts with `name`
	NamePrefix pulumix.Input[*string]
	// The default quiet time for the app. Each campaign for this app sends no messages during this time unless the campaign overrides the default with a quiet time of its own
	QuietTime pulumix.Input[*AppQuietTimeArgs]
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (AppArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*appArgs)(nil)).Elem()
}

type AppOutput struct{ *pulumi.OutputState }

func (AppOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*App)(nil)).Elem()
}

func (o AppOutput) ToAppOutput() AppOutput {
	return o
}

func (o AppOutput) ToAppOutputWithContext(ctx context.Context) AppOutput {
	return o
}

func (o AppOutput) ToOutput(ctx context.Context) pulumix.Output[App] {
	return pulumix.Output[App]{
		OutputState: o.OutputState,
	}
}

// The Application ID of the Pinpoint App.
func (o AppOutput) ApplicationId() pulumix.Output[string] {
	value := pulumix.Apply[App](o, func(v App) pulumix.Output[string] { return v.ApplicationId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Amazon Resource Name (ARN) of the PinPoint Application
func (o AppOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[App](o, func(v App) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Specifies settings for invoking an AWS Lambda function that customizes a segment for a campaign
func (o AppOutput) CampaignHook() pulumix.GPtrOutput[AppCampaignHook, AppCampaignHookOutput] {
	value := pulumix.Apply[App](o, func(v App) pulumix.GPtrOutput[AppCampaignHook, AppCampaignHookOutput] { return v.CampaignHook })
	unwrapped := pulumix.Flatten[*AppCampaignHook, pulumix.GPtrOutput[AppCampaignHook, AppCampaignHookOutput]](value)
	return pulumix.GPtrOutput[AppCampaignHook, AppCampaignHookOutput]{OutputState: unwrapped.OutputState}
}

// The default campaign limits for the app. These limits apply to each campaign for the app, unless the campaign overrides the default with limits of its own
func (o AppOutput) Limits() pulumix.GPtrOutput[AppLimits, AppLimitsOutput] {
	value := pulumix.Apply[App](o, func(v App) pulumix.GPtrOutput[AppLimits, AppLimitsOutput] { return v.Limits })
	unwrapped := pulumix.Flatten[*AppLimits, pulumix.GPtrOutput[AppLimits, AppLimitsOutput]](value)
	return pulumix.GPtrOutput[AppLimits, AppLimitsOutput]{OutputState: unwrapped.OutputState}
}

// The application name. By default generated by this provider
func (o AppOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[App](o, func(v App) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The name of the Pinpoint application. Conflicts with `name`
func (o AppOutput) NamePrefix() pulumix.Output[*string] {
	value := pulumix.Apply[App](o, func(v App) pulumix.Output[*string] { return v.NamePrefix })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The default quiet time for the app. Each campaign for this app sends no messages during this time unless the campaign overrides the default with a quiet time of its own
func (o AppOutput) QuietTime() pulumix.GPtrOutput[AppQuietTime, AppQuietTimeOutput] {
	value := pulumix.Apply[App](o, func(v App) pulumix.GPtrOutput[AppQuietTime, AppQuietTimeOutput] { return v.QuietTime })
	unwrapped := pulumix.Flatten[*AppQuietTime, pulumix.GPtrOutput[AppQuietTime, AppQuietTimeOutput]](value)
	return pulumix.GPtrOutput[AppQuietTime, AppQuietTimeOutput]{OutputState: unwrapped.OutputState}
}

// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o AppOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[App](o, func(v App) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o AppOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[App](o, func(v App) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(AppOutput{})
}
