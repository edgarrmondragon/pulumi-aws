// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package servicecatalog

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manages a Service Catalog Product.
//
// > **NOTE:** The user or role that uses this resources must have the `cloudformation:GetTemplate` IAM policy permission. This policy permission is required when using the `templatePhysicalId` argument.
//
// > A "provisioning artifact" is also referred to as a "version." A "distributor" is also referred to as a "vendor."
type Product struct {
	pulumi.CustomResourceState

	// Language code. Valid values: `en` (English), `jp` (Japanese), `zh` (Chinese). Default value is `en`.
	AcceptLanguage pulumix.Output[*string] `pulumi:"acceptLanguage"`
	// ARN of the product.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// Time when the product was created.
	CreatedTime pulumix.Output[string] `pulumi:"createdTime"`
	// Description of the product.
	Description pulumix.Output[string] `pulumi:"description"`
	// Distributor (i.e., vendor) of the product.
	Distributor pulumix.Output[string] `pulumi:"distributor"`
	// Whether the product has a default path. If the product does not have a default path, call `ListLaunchPaths` to disambiguate between paths.  Otherwise, `ListLaunchPaths` is not required, and the output of ProductViewSummary can be used directly with `DescribeProvisioningParameters`.
	HasDefaultPath pulumix.Output[bool] `pulumi:"hasDefaultPath"`
	// Name of the product.
	Name pulumix.Output[string] `pulumi:"name"`
	// Owner of the product.
	Owner pulumix.Output[string] `pulumi:"owner"`
	// Configuration block for provisioning artifact (i.e., version) parameters. Detailed below.
	ProvisioningArtifactParameters pulumix.GPtrOutput[ProductProvisioningArtifactParameters, ProductProvisioningArtifactParametersOutput] `pulumi:"provisioningArtifactParameters"`
	// Status of the product.
	Status pulumix.Output[string] `pulumi:"status"`
	// Support information about the product.
	SupportDescription pulumix.Output[string] `pulumi:"supportDescription"`
	// Contact email for product support.
	SupportEmail pulumix.Output[string] `pulumi:"supportEmail"`
	// Contact URL for product support.
	SupportUrl pulumix.Output[string] `pulumi:"supportUrl"`
	// Tags to apply to the product. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// Type of product. See [AWS Docs](https://docs.aws.amazon.com/servicecatalog/latest/dg/API_CreateProduct.html#API_CreateProduct_RequestSyntax) for valid list of values.
	//
	// The following arguments are optional:
	Type pulumix.Output[string] `pulumi:"type"`
}

// NewProduct registers a new resource with the given unique name, arguments, and options.
func NewProduct(ctx *pulumi.Context,
	name string, args *ProductArgs, opts ...pulumi.ResourceOption) (*Product, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Owner == nil {
		return nil, errors.New("invalid value for required argument 'Owner'")
	}
	if args.ProvisioningArtifactParameters == nil {
		return nil, errors.New("invalid value for required argument 'ProvisioningArtifactParameters'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Product
	err := ctx.RegisterResource("aws:servicecatalog/product:Product", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProduct gets an existing Product resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProduct(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProductState, opts ...pulumi.ResourceOption) (*Product, error) {
	var resource Product
	err := ctx.ReadResource("aws:servicecatalog/product:Product", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Product resources.
type productState struct {
	// Language code. Valid values: `en` (English), `jp` (Japanese), `zh` (Chinese). Default value is `en`.
	AcceptLanguage *string `pulumi:"acceptLanguage"`
	// ARN of the product.
	Arn *string `pulumi:"arn"`
	// Time when the product was created.
	CreatedTime *string `pulumi:"createdTime"`
	// Description of the product.
	Description *string `pulumi:"description"`
	// Distributor (i.e., vendor) of the product.
	Distributor *string `pulumi:"distributor"`
	// Whether the product has a default path. If the product does not have a default path, call `ListLaunchPaths` to disambiguate between paths.  Otherwise, `ListLaunchPaths` is not required, and the output of ProductViewSummary can be used directly with `DescribeProvisioningParameters`.
	HasDefaultPath *bool `pulumi:"hasDefaultPath"`
	// Name of the product.
	Name *string `pulumi:"name"`
	// Owner of the product.
	Owner *string `pulumi:"owner"`
	// Configuration block for provisioning artifact (i.e., version) parameters. Detailed below.
	ProvisioningArtifactParameters *ProductProvisioningArtifactParameters `pulumi:"provisioningArtifactParameters"`
	// Status of the product.
	Status *string `pulumi:"status"`
	// Support information about the product.
	SupportDescription *string `pulumi:"supportDescription"`
	// Contact email for product support.
	SupportEmail *string `pulumi:"supportEmail"`
	// Contact URL for product support.
	SupportUrl *string `pulumi:"supportUrl"`
	// Tags to apply to the product. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// Type of product. See [AWS Docs](https://docs.aws.amazon.com/servicecatalog/latest/dg/API_CreateProduct.html#API_CreateProduct_RequestSyntax) for valid list of values.
	//
	// The following arguments are optional:
	Type *string `pulumi:"type"`
}

type ProductState struct {
	// Language code. Valid values: `en` (English), `jp` (Japanese), `zh` (Chinese). Default value is `en`.
	AcceptLanguage pulumix.Input[*string]
	// ARN of the product.
	Arn pulumix.Input[*string]
	// Time when the product was created.
	CreatedTime pulumix.Input[*string]
	// Description of the product.
	Description pulumix.Input[*string]
	// Distributor (i.e., vendor) of the product.
	Distributor pulumix.Input[*string]
	// Whether the product has a default path. If the product does not have a default path, call `ListLaunchPaths` to disambiguate between paths.  Otherwise, `ListLaunchPaths` is not required, and the output of ProductViewSummary can be used directly with `DescribeProvisioningParameters`.
	HasDefaultPath pulumix.Input[*bool]
	// Name of the product.
	Name pulumix.Input[*string]
	// Owner of the product.
	Owner pulumix.Input[*string]
	// Configuration block for provisioning artifact (i.e., version) parameters. Detailed below.
	ProvisioningArtifactParameters pulumix.Input[*ProductProvisioningArtifactParametersArgs]
	// Status of the product.
	Status pulumix.Input[*string]
	// Support information about the product.
	SupportDescription pulumix.Input[*string]
	// Contact email for product support.
	SupportEmail pulumix.Input[*string]
	// Contact URL for product support.
	SupportUrl pulumix.Input[*string]
	// Tags to apply to the product. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// Type of product. See [AWS Docs](https://docs.aws.amazon.com/servicecatalog/latest/dg/API_CreateProduct.html#API_CreateProduct_RequestSyntax) for valid list of values.
	//
	// The following arguments are optional:
	Type pulumix.Input[*string]
}

func (ProductState) ElementType() reflect.Type {
	return reflect.TypeOf((*productState)(nil)).Elem()
}

type productArgs struct {
	// Language code. Valid values: `en` (English), `jp` (Japanese), `zh` (Chinese). Default value is `en`.
	AcceptLanguage *string `pulumi:"acceptLanguage"`
	// Description of the product.
	Description *string `pulumi:"description"`
	// Distributor (i.e., vendor) of the product.
	Distributor *string `pulumi:"distributor"`
	// Name of the product.
	Name *string `pulumi:"name"`
	// Owner of the product.
	Owner string `pulumi:"owner"`
	// Configuration block for provisioning artifact (i.e., version) parameters. Detailed below.
	ProvisioningArtifactParameters ProductProvisioningArtifactParameters `pulumi:"provisioningArtifactParameters"`
	// Support information about the product.
	SupportDescription *string `pulumi:"supportDescription"`
	// Contact email for product support.
	SupportEmail *string `pulumi:"supportEmail"`
	// Contact URL for product support.
	SupportUrl *string `pulumi:"supportUrl"`
	// Tags to apply to the product. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Type of product. See [AWS Docs](https://docs.aws.amazon.com/servicecatalog/latest/dg/API_CreateProduct.html#API_CreateProduct_RequestSyntax) for valid list of values.
	//
	// The following arguments are optional:
	Type string `pulumi:"type"`
}

// The set of arguments for constructing a Product resource.
type ProductArgs struct {
	// Language code. Valid values: `en` (English), `jp` (Japanese), `zh` (Chinese). Default value is `en`.
	AcceptLanguage pulumix.Input[*string]
	// Description of the product.
	Description pulumix.Input[*string]
	// Distributor (i.e., vendor) of the product.
	Distributor pulumix.Input[*string]
	// Name of the product.
	Name pulumix.Input[*string]
	// Owner of the product.
	Owner pulumix.Input[string]
	// Configuration block for provisioning artifact (i.e., version) parameters. Detailed below.
	ProvisioningArtifactParameters pulumix.Input[*ProductProvisioningArtifactParametersArgs]
	// Support information about the product.
	SupportDescription pulumix.Input[*string]
	// Contact email for product support.
	SupportEmail pulumix.Input[*string]
	// Contact URL for product support.
	SupportUrl pulumix.Input[*string]
	// Tags to apply to the product. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// Type of product. See [AWS Docs](https://docs.aws.amazon.com/servicecatalog/latest/dg/API_CreateProduct.html#API_CreateProduct_RequestSyntax) for valid list of values.
	//
	// The following arguments are optional:
	Type pulumix.Input[string]
}

func (ProductArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*productArgs)(nil)).Elem()
}

type ProductOutput struct{ *pulumi.OutputState }

func (ProductOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Product)(nil)).Elem()
}

func (o ProductOutput) ToProductOutput() ProductOutput {
	return o
}

func (o ProductOutput) ToProductOutputWithContext(ctx context.Context) ProductOutput {
	return o
}

func (o ProductOutput) ToOutput(ctx context.Context) pulumix.Output[Product] {
	return pulumix.Output[Product]{
		OutputState: o.OutputState,
	}
}

// Language code. Valid values: `en` (English), `jp` (Japanese), `zh` (Chinese). Default value is `en`.
func (o ProductOutput) AcceptLanguage() pulumix.Output[*string] {
	value := pulumix.Apply[Product](o, func(v Product) pulumix.Output[*string] { return v.AcceptLanguage })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// ARN of the product.
func (o ProductOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Product](o, func(v Product) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Time when the product was created.
func (o ProductOutput) CreatedTime() pulumix.Output[string] {
	value := pulumix.Apply[Product](o, func(v Product) pulumix.Output[string] { return v.CreatedTime })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Description of the product.
func (o ProductOutput) Description() pulumix.Output[string] {
	value := pulumix.Apply[Product](o, func(v Product) pulumix.Output[string] { return v.Description })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Distributor (i.e., vendor) of the product.
func (o ProductOutput) Distributor() pulumix.Output[string] {
	value := pulumix.Apply[Product](o, func(v Product) pulumix.Output[string] { return v.Distributor })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Whether the product has a default path. If the product does not have a default path, call `ListLaunchPaths` to disambiguate between paths.  Otherwise, `ListLaunchPaths` is not required, and the output of ProductViewSummary can be used directly with `DescribeProvisioningParameters`.
func (o ProductOutput) HasDefaultPath() pulumix.Output[bool] {
	value := pulumix.Apply[Product](o, func(v Product) pulumix.Output[bool] { return v.HasDefaultPath })
	return pulumix.Flatten[bool, pulumix.Output[bool]](value)
}

// Name of the product.
func (o ProductOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[Product](o, func(v Product) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Owner of the product.
func (o ProductOutput) Owner() pulumix.Output[string] {
	value := pulumix.Apply[Product](o, func(v Product) pulumix.Output[string] { return v.Owner })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Configuration block for provisioning artifact (i.e., version) parameters. Detailed below.
func (o ProductOutput) ProvisioningArtifactParameters() pulumix.GPtrOutput[ProductProvisioningArtifactParameters, ProductProvisioningArtifactParametersOutput] {
	value := pulumix.Apply[Product](o, func(v Product) pulumix.GPtrOutput[ProductProvisioningArtifactParameters, ProductProvisioningArtifactParametersOutput] {
		return v.ProvisioningArtifactParameters
	})
	unwrapped := pulumix.Flatten[*ProductProvisioningArtifactParameters, pulumix.GPtrOutput[ProductProvisioningArtifactParameters, ProductProvisioningArtifactParametersOutput]](value)
	return pulumix.GPtrOutput[ProductProvisioningArtifactParameters, ProductProvisioningArtifactParametersOutput]{OutputState: unwrapped.OutputState}
}

// Status of the product.
func (o ProductOutput) Status() pulumix.Output[string] {
	value := pulumix.Apply[Product](o, func(v Product) pulumix.Output[string] { return v.Status })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Support information about the product.
func (o ProductOutput) SupportDescription() pulumix.Output[string] {
	value := pulumix.Apply[Product](o, func(v Product) pulumix.Output[string] { return v.SupportDescription })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Contact email for product support.
func (o ProductOutput) SupportEmail() pulumix.Output[string] {
	value := pulumix.Apply[Product](o, func(v Product) pulumix.Output[string] { return v.SupportEmail })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Contact URL for product support.
func (o ProductOutput) SupportUrl() pulumix.Output[string] {
	value := pulumix.Apply[Product](o, func(v Product) pulumix.Output[string] { return v.SupportUrl })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Tags to apply to the product. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o ProductOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Product](o, func(v Product) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o ProductOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[Product](o, func(v Product) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Type of product. See [AWS Docs](https://docs.aws.amazon.com/servicecatalog/latest/dg/API_CreateProduct.html#API_CreateProduct_RequestSyntax) for valid list of values.
//
// The following arguments are optional:
func (o ProductOutput) Type() pulumix.Output[string] {
	value := pulumix.Apply[Product](o, func(v Product) pulumix.Output[string] { return v.Type })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(ProductOutput{})
}
