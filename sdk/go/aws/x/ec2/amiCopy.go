// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// The "AMI copy" resource allows duplication of an Amazon Machine Image (AMI),
// including cross-region copies.
//
// If the source AMI has associated EBS snapshots, those will also be duplicated
// along with the AMI.
//
// This is useful for taking a single AMI provisioned in one region and making
// it available in another for a multi-region deployment.
//
// Copying an AMI can take several minutes. The creation of this resource will
// block until the new AMI is available for use on new instances.
type AmiCopy struct {
	pulumi.CustomResourceState

	// Machine architecture for created instances. Defaults to "x8664".
	Architecture pulumix.Output[string] `pulumi:"architecture"`
	// ARN of the AMI.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// Boot mode of the AMI. For more information, see [Boot modes](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-boot.html) in the Amazon Elastic Compute Cloud User Guide.
	BootMode pulumix.Output[string] `pulumi:"bootMode"`
	// Date and time to deprecate the AMI. If you specified a value for seconds, Amazon EC2 rounds the seconds to the nearest minute. Valid values: [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) (`YYYY-MM-DDTHH:MM:SSZ`)
	DeprecationTime pulumix.Output[*string] `pulumi:"deprecationTime"`
	// Longer, human-readable description for the AMI.
	Description pulumix.Output[*string] `pulumi:"description"`
	// ARN of the Outpost to which to copy the AMI.
	// Only specify this parameter when copying an AMI from an AWS Region to an Outpost. The AMI must be in the Region of the destination Outpost.
	DestinationOutpostArn pulumix.Output[*string] `pulumi:"destinationOutpostArn"`
	// Nested block describing an EBS block device that should be
	// attached to created instances. The structure of this block is described below.
	EbsBlockDevices pulumix.GArrayOutput[AmiCopyEbsBlockDevice, AmiCopyEbsBlockDeviceOutput] `pulumi:"ebsBlockDevices"`
	// Whether enhanced networking with ENA is enabled. Defaults to `false`.
	EnaSupport pulumix.Output[bool] `pulumi:"enaSupport"`
	// Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshotId`.
	Encrypted pulumix.Output[*bool] `pulumi:"encrypted"`
	// Nested block describing an ephemeral block device that
	// should be attached to created instances. The structure of this block is described below.
	EphemeralBlockDevices pulumix.GArrayOutput[AmiCopyEphemeralBlockDevice, AmiCopyEphemeralBlockDeviceOutput] `pulumi:"ephemeralBlockDevices"`
	Hypervisor            pulumix.Output[string]                                                               `pulumi:"hypervisor"`
	// Path to an S3 object containing an image manifest, e.g., created
	// by the `ec2-upload-bundle` command in the EC2 command line tools.
	ImageLocation   pulumix.Output[string] `pulumi:"imageLocation"`
	ImageOwnerAlias pulumix.Output[string] `pulumi:"imageOwnerAlias"`
	ImageType       pulumix.Output[string] `pulumi:"imageType"`
	// If EC2 instances started from this image should require the use of the Instance Metadata Service V2 (IMDSv2), set this argument to `v2.0`. For more information, see [Configure instance metadata options for new instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-IMDS-new-instances.html#configure-IMDS-new-instances-ami-configuration).
	ImdsSupport pulumix.Output[string] `pulumi:"imdsSupport"`
	// ID of the kernel image (AKI) that will be used as the paravirtual
	// kernel in created instances.
	KernelId pulumix.Output[string] `pulumi:"kernelId"`
	// Full ARN of the KMS Key to use when encrypting the snapshots of an image during a copy operation. If not specified, then the default AWS KMS Key will be used
	KmsKeyId           pulumix.Output[string] `pulumi:"kmsKeyId"`
	ManageEbsSnapshots pulumix.Output[bool]   `pulumi:"manageEbsSnapshots"`
	// Region-unique name for the AMI.
	Name            pulumix.Output[string] `pulumi:"name"`
	OwnerId         pulumix.Output[string] `pulumi:"ownerId"`
	Platform        pulumix.Output[string] `pulumi:"platform"`
	PlatformDetails pulumix.Output[string] `pulumi:"platformDetails"`
	Public          pulumix.Output[bool]   `pulumi:"public"`
	// ID of an initrd image (ARI) that will be used when booting the
	// created instances.
	RamdiskId pulumix.Output[string] `pulumi:"ramdiskId"`
	// Name of the root device (for example, `/dev/sda1`, or `/dev/xvda`).
	RootDeviceName pulumix.Output[string] `pulumi:"rootDeviceName"`
	RootSnapshotId pulumix.Output[string] `pulumi:"rootSnapshotId"`
	// Id of the AMI to copy. This id must be valid in the region
	// given by `sourceAmiRegion`.
	SourceAmiId pulumix.Output[string] `pulumi:"sourceAmiId"`
	// Region from which the AMI will be copied. This may be the
	// same as the AWS provider region in order to create a copy within the same region.
	SourceAmiRegion pulumix.Output[string] `pulumi:"sourceAmiRegion"`
	// When set to "simple" (the default), enables enhanced networking
	// for created instances. No other value is supported at this time.
	SriovNetSupport pulumix.Output[string] `pulumi:"sriovNetSupport"`
	// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags    pulumix.MapOutput[string] `pulumi:"tags"`
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// If the image is configured for NitroTPM support, the value is `v2.0`. For more information, see [NitroTPM](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/nitrotpm.html) in the Amazon Elastic Compute Cloud User Guide.
	TpmSupport     pulumix.Output[string] `pulumi:"tpmSupport"`
	UsageOperation pulumix.Output[string] `pulumi:"usageOperation"`
	// Keyword to choose what virtualization mode created instances
	// will use. Can be either "paravirtual" (the default) or "hvm". The choice of virtualization type
	// changes the set of further arguments that are required, as described below.
	VirtualizationType pulumix.Output[string] `pulumi:"virtualizationType"`
}

// NewAmiCopy registers a new resource with the given unique name, arguments, and options.
func NewAmiCopy(ctx *pulumi.Context,
	name string, args *AmiCopyArgs, opts ...pulumi.ResourceOption) (*AmiCopy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.SourceAmiId == nil {
		return nil, errors.New("invalid value for required argument 'SourceAmiId'")
	}
	if args.SourceAmiRegion == nil {
		return nil, errors.New("invalid value for required argument 'SourceAmiRegion'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AmiCopy
	err := ctx.RegisterResource("aws:ec2/amiCopy:AmiCopy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAmiCopy gets an existing AmiCopy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAmiCopy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AmiCopyState, opts ...pulumi.ResourceOption) (*AmiCopy, error) {
	var resource AmiCopy
	err := ctx.ReadResource("aws:ec2/amiCopy:AmiCopy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AmiCopy resources.
type amiCopyState struct {
	// Machine architecture for created instances. Defaults to "x8664".
	Architecture *string `pulumi:"architecture"`
	// ARN of the AMI.
	Arn *string `pulumi:"arn"`
	// Boot mode of the AMI. For more information, see [Boot modes](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-boot.html) in the Amazon Elastic Compute Cloud User Guide.
	BootMode *string `pulumi:"bootMode"`
	// Date and time to deprecate the AMI. If you specified a value for seconds, Amazon EC2 rounds the seconds to the nearest minute. Valid values: [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) (`YYYY-MM-DDTHH:MM:SSZ`)
	DeprecationTime *string `pulumi:"deprecationTime"`
	// Longer, human-readable description for the AMI.
	Description *string `pulumi:"description"`
	// ARN of the Outpost to which to copy the AMI.
	// Only specify this parameter when copying an AMI from an AWS Region to an Outpost. The AMI must be in the Region of the destination Outpost.
	DestinationOutpostArn *string `pulumi:"destinationOutpostArn"`
	// Nested block describing an EBS block device that should be
	// attached to created instances. The structure of this block is described below.
	EbsBlockDevices []AmiCopyEbsBlockDevice `pulumi:"ebsBlockDevices"`
	// Whether enhanced networking with ENA is enabled. Defaults to `false`.
	EnaSupport *bool `pulumi:"enaSupport"`
	// Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshotId`.
	Encrypted *bool `pulumi:"encrypted"`
	// Nested block describing an ephemeral block device that
	// should be attached to created instances. The structure of this block is described below.
	EphemeralBlockDevices []AmiCopyEphemeralBlockDevice `pulumi:"ephemeralBlockDevices"`
	Hypervisor            *string                       `pulumi:"hypervisor"`
	// Path to an S3 object containing an image manifest, e.g., created
	// by the `ec2-upload-bundle` command in the EC2 command line tools.
	ImageLocation   *string `pulumi:"imageLocation"`
	ImageOwnerAlias *string `pulumi:"imageOwnerAlias"`
	ImageType       *string `pulumi:"imageType"`
	// If EC2 instances started from this image should require the use of the Instance Metadata Service V2 (IMDSv2), set this argument to `v2.0`. For more information, see [Configure instance metadata options for new instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-IMDS-new-instances.html#configure-IMDS-new-instances-ami-configuration).
	ImdsSupport *string `pulumi:"imdsSupport"`
	// ID of the kernel image (AKI) that will be used as the paravirtual
	// kernel in created instances.
	KernelId *string `pulumi:"kernelId"`
	// Full ARN of the KMS Key to use when encrypting the snapshots of an image during a copy operation. If not specified, then the default AWS KMS Key will be used
	KmsKeyId           *string `pulumi:"kmsKeyId"`
	ManageEbsSnapshots *bool   `pulumi:"manageEbsSnapshots"`
	// Region-unique name for the AMI.
	Name            *string `pulumi:"name"`
	OwnerId         *string `pulumi:"ownerId"`
	Platform        *string `pulumi:"platform"`
	PlatformDetails *string `pulumi:"platformDetails"`
	Public          *bool   `pulumi:"public"`
	// ID of an initrd image (ARI) that will be used when booting the
	// created instances.
	RamdiskId *string `pulumi:"ramdiskId"`
	// Name of the root device (for example, `/dev/sda1`, or `/dev/xvda`).
	RootDeviceName *string `pulumi:"rootDeviceName"`
	RootSnapshotId *string `pulumi:"rootSnapshotId"`
	// Id of the AMI to copy. This id must be valid in the region
	// given by `sourceAmiRegion`.
	SourceAmiId *string `pulumi:"sourceAmiId"`
	// Region from which the AMI will be copied. This may be the
	// same as the AWS provider region in order to create a copy within the same region.
	SourceAmiRegion *string `pulumi:"sourceAmiRegion"`
	// When set to "simple" (the default), enables enhanced networking
	// for created instances. No other value is supported at this time.
	SriovNetSupport *string `pulumi:"sriovNetSupport"`
	// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags    map[string]string `pulumi:"tags"`
	TagsAll map[string]string `pulumi:"tagsAll"`
	// If the image is configured for NitroTPM support, the value is `v2.0`. For more information, see [NitroTPM](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/nitrotpm.html) in the Amazon Elastic Compute Cloud User Guide.
	TpmSupport     *string `pulumi:"tpmSupport"`
	UsageOperation *string `pulumi:"usageOperation"`
	// Keyword to choose what virtualization mode created instances
	// will use. Can be either "paravirtual" (the default) or "hvm". The choice of virtualization type
	// changes the set of further arguments that are required, as described below.
	VirtualizationType *string `pulumi:"virtualizationType"`
}

type AmiCopyState struct {
	// Machine architecture for created instances. Defaults to "x8664".
	Architecture pulumix.Input[*string]
	// ARN of the AMI.
	Arn pulumix.Input[*string]
	// Boot mode of the AMI. For more information, see [Boot modes](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-boot.html) in the Amazon Elastic Compute Cloud User Guide.
	BootMode pulumix.Input[*string]
	// Date and time to deprecate the AMI. If you specified a value for seconds, Amazon EC2 rounds the seconds to the nearest minute. Valid values: [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) (`YYYY-MM-DDTHH:MM:SSZ`)
	DeprecationTime pulumix.Input[*string]
	// Longer, human-readable description for the AMI.
	Description pulumix.Input[*string]
	// ARN of the Outpost to which to copy the AMI.
	// Only specify this parameter when copying an AMI from an AWS Region to an Outpost. The AMI must be in the Region of the destination Outpost.
	DestinationOutpostArn pulumix.Input[*string]
	// Nested block describing an EBS block device that should be
	// attached to created instances. The structure of this block is described below.
	EbsBlockDevices pulumix.Input[[]*AmiCopyEbsBlockDeviceArgs]
	// Whether enhanced networking with ENA is enabled. Defaults to `false`.
	EnaSupport pulumix.Input[*bool]
	// Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshotId`.
	Encrypted pulumix.Input[*bool]
	// Nested block describing an ephemeral block device that
	// should be attached to created instances. The structure of this block is described below.
	EphemeralBlockDevices pulumix.Input[[]*AmiCopyEphemeralBlockDeviceArgs]
	Hypervisor            pulumix.Input[*string]
	// Path to an S3 object containing an image manifest, e.g., created
	// by the `ec2-upload-bundle` command in the EC2 command line tools.
	ImageLocation   pulumix.Input[*string]
	ImageOwnerAlias pulumix.Input[*string]
	ImageType       pulumix.Input[*string]
	// If EC2 instances started from this image should require the use of the Instance Metadata Service V2 (IMDSv2), set this argument to `v2.0`. For more information, see [Configure instance metadata options for new instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-IMDS-new-instances.html#configure-IMDS-new-instances-ami-configuration).
	ImdsSupport pulumix.Input[*string]
	// ID of the kernel image (AKI) that will be used as the paravirtual
	// kernel in created instances.
	KernelId pulumix.Input[*string]
	// Full ARN of the KMS Key to use when encrypting the snapshots of an image during a copy operation. If not specified, then the default AWS KMS Key will be used
	KmsKeyId           pulumix.Input[*string]
	ManageEbsSnapshots pulumix.Input[*bool]
	// Region-unique name for the AMI.
	Name            pulumix.Input[*string]
	OwnerId         pulumix.Input[*string]
	Platform        pulumix.Input[*string]
	PlatformDetails pulumix.Input[*string]
	Public          pulumix.Input[*bool]
	// ID of an initrd image (ARI) that will be used when booting the
	// created instances.
	RamdiskId pulumix.Input[*string]
	// Name of the root device (for example, `/dev/sda1`, or `/dev/xvda`).
	RootDeviceName pulumix.Input[*string]
	RootSnapshotId pulumix.Input[*string]
	// Id of the AMI to copy. This id must be valid in the region
	// given by `sourceAmiRegion`.
	SourceAmiId pulumix.Input[*string]
	// Region from which the AMI will be copied. This may be the
	// same as the AWS provider region in order to create a copy within the same region.
	SourceAmiRegion pulumix.Input[*string]
	// When set to "simple" (the default), enables enhanced networking
	// for created instances. No other value is supported at this time.
	SriovNetSupport pulumix.Input[*string]
	// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags    pulumix.Input[map[string]string]
	TagsAll pulumix.Input[map[string]string]
	// If the image is configured for NitroTPM support, the value is `v2.0`. For more information, see [NitroTPM](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/nitrotpm.html) in the Amazon Elastic Compute Cloud User Guide.
	TpmSupport     pulumix.Input[*string]
	UsageOperation pulumix.Input[*string]
	// Keyword to choose what virtualization mode created instances
	// will use. Can be either "paravirtual" (the default) or "hvm". The choice of virtualization type
	// changes the set of further arguments that are required, as described below.
	VirtualizationType pulumix.Input[*string]
}

func (AmiCopyState) ElementType() reflect.Type {
	return reflect.TypeOf((*amiCopyState)(nil)).Elem()
}

type amiCopyArgs struct {
	// Date and time to deprecate the AMI. If you specified a value for seconds, Amazon EC2 rounds the seconds to the nearest minute. Valid values: [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) (`YYYY-MM-DDTHH:MM:SSZ`)
	DeprecationTime *string `pulumi:"deprecationTime"`
	// Longer, human-readable description for the AMI.
	Description *string `pulumi:"description"`
	// ARN of the Outpost to which to copy the AMI.
	// Only specify this parameter when copying an AMI from an AWS Region to an Outpost. The AMI must be in the Region of the destination Outpost.
	DestinationOutpostArn *string `pulumi:"destinationOutpostArn"`
	// Nested block describing an EBS block device that should be
	// attached to created instances. The structure of this block is described below.
	EbsBlockDevices []AmiCopyEbsBlockDevice `pulumi:"ebsBlockDevices"`
	// Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshotId`.
	Encrypted *bool `pulumi:"encrypted"`
	// Nested block describing an ephemeral block device that
	// should be attached to created instances. The structure of this block is described below.
	EphemeralBlockDevices []AmiCopyEphemeralBlockDevice `pulumi:"ephemeralBlockDevices"`
	// Full ARN of the KMS Key to use when encrypting the snapshots of an image during a copy operation. If not specified, then the default AWS KMS Key will be used
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// Region-unique name for the AMI.
	Name *string `pulumi:"name"`
	// Id of the AMI to copy. This id must be valid in the region
	// given by `sourceAmiRegion`.
	SourceAmiId string `pulumi:"sourceAmiId"`
	// Region from which the AMI will be copied. This may be the
	// same as the AWS provider region in order to create a copy within the same region.
	SourceAmiRegion string `pulumi:"sourceAmiRegion"`
	// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a AmiCopy resource.
type AmiCopyArgs struct {
	// Date and time to deprecate the AMI. If you specified a value for seconds, Amazon EC2 rounds the seconds to the nearest minute. Valid values: [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) (`YYYY-MM-DDTHH:MM:SSZ`)
	DeprecationTime pulumix.Input[*string]
	// Longer, human-readable description for the AMI.
	Description pulumix.Input[*string]
	// ARN of the Outpost to which to copy the AMI.
	// Only specify this parameter when copying an AMI from an AWS Region to an Outpost. The AMI must be in the Region of the destination Outpost.
	DestinationOutpostArn pulumix.Input[*string]
	// Nested block describing an EBS block device that should be
	// attached to created instances. The structure of this block is described below.
	EbsBlockDevices pulumix.Input[[]*AmiCopyEbsBlockDeviceArgs]
	// Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshotId`.
	Encrypted pulumix.Input[*bool]
	// Nested block describing an ephemeral block device that
	// should be attached to created instances. The structure of this block is described below.
	EphemeralBlockDevices pulumix.Input[[]*AmiCopyEphemeralBlockDeviceArgs]
	// Full ARN of the KMS Key to use when encrypting the snapshots of an image during a copy operation. If not specified, then the default AWS KMS Key will be used
	KmsKeyId pulumix.Input[*string]
	// Region-unique name for the AMI.
	Name pulumix.Input[*string]
	// Id of the AMI to copy. This id must be valid in the region
	// given by `sourceAmiRegion`.
	SourceAmiId pulumix.Input[string]
	// Region from which the AMI will be copied. This may be the
	// same as the AWS provider region in order to create a copy within the same region.
	SourceAmiRegion pulumix.Input[string]
	// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (AmiCopyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*amiCopyArgs)(nil)).Elem()
}

type AmiCopyOutput struct{ *pulumi.OutputState }

func (AmiCopyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiCopy)(nil)).Elem()
}

func (o AmiCopyOutput) ToAmiCopyOutput() AmiCopyOutput {
	return o
}

func (o AmiCopyOutput) ToAmiCopyOutputWithContext(ctx context.Context) AmiCopyOutput {
	return o
}

func (o AmiCopyOutput) ToOutput(ctx context.Context) pulumix.Output[AmiCopy] {
	return pulumix.Output[AmiCopy]{
		OutputState: o.OutputState,
	}
}

// Machine architecture for created instances. Defaults to "x8664".
func (o AmiCopyOutput) Architecture() pulumix.Output[string] {
	value := pulumix.Apply[AmiCopy](o, func(v AmiCopy) pulumix.Output[string] { return v.Architecture })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// ARN of the AMI.
func (o AmiCopyOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[AmiCopy](o, func(v AmiCopy) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Boot mode of the AMI. For more information, see [Boot modes](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-boot.html) in the Amazon Elastic Compute Cloud User Guide.
func (o AmiCopyOutput) BootMode() pulumix.Output[string] {
	value := pulumix.Apply[AmiCopy](o, func(v AmiCopy) pulumix.Output[string] { return v.BootMode })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Date and time to deprecate the AMI. If you specified a value for seconds, Amazon EC2 rounds the seconds to the nearest minute. Valid values: [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) (`YYYY-MM-DDTHH:MM:SSZ`)
func (o AmiCopyOutput) DeprecationTime() pulumix.Output[*string] {
	value := pulumix.Apply[AmiCopy](o, func(v AmiCopy) pulumix.Output[*string] { return v.DeprecationTime })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Longer, human-readable description for the AMI.
func (o AmiCopyOutput) Description() pulumix.Output[*string] {
	value := pulumix.Apply[AmiCopy](o, func(v AmiCopy) pulumix.Output[*string] { return v.Description })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// ARN of the Outpost to which to copy the AMI.
// Only specify this parameter when copying an AMI from an AWS Region to an Outpost. The AMI must be in the Region of the destination Outpost.
func (o AmiCopyOutput) DestinationOutpostArn() pulumix.Output[*string] {
	value := pulumix.Apply[AmiCopy](o, func(v AmiCopy) pulumix.Output[*string] { return v.DestinationOutpostArn })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Nested block describing an EBS block device that should be
// attached to created instances. The structure of this block is described below.
func (o AmiCopyOutput) EbsBlockDevices() pulumix.GArrayOutput[AmiCopyEbsBlockDevice, AmiCopyEbsBlockDeviceOutput] {
	value := pulumix.Apply[AmiCopy](o, func(v AmiCopy) pulumix.GArrayOutput[AmiCopyEbsBlockDevice, AmiCopyEbsBlockDeviceOutput] {
		return v.EbsBlockDevices
	})
	unwrapped := pulumix.Flatten[[]AmiCopyEbsBlockDevice, pulumix.GArrayOutput[AmiCopyEbsBlockDevice, AmiCopyEbsBlockDeviceOutput]](value)
	return pulumix.GArrayOutput[AmiCopyEbsBlockDevice, AmiCopyEbsBlockDeviceOutput]{OutputState: unwrapped.OutputState}
}

// Whether enhanced networking with ENA is enabled. Defaults to `false`.
func (o AmiCopyOutput) EnaSupport() pulumix.Output[bool] {
	value := pulumix.Apply[AmiCopy](o, func(v AmiCopy) pulumix.Output[bool] { return v.EnaSupport })
	return pulumix.Flatten[bool, pulumix.Output[bool]](value)
}

// Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshotId`.
func (o AmiCopyOutput) Encrypted() pulumix.Output[*bool] {
	value := pulumix.Apply[AmiCopy](o, func(v AmiCopy) pulumix.Output[*bool] { return v.Encrypted })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// Nested block describing an ephemeral block device that
// should be attached to created instances. The structure of this block is described below.
func (o AmiCopyOutput) EphemeralBlockDevices() pulumix.GArrayOutput[AmiCopyEphemeralBlockDevice, AmiCopyEphemeralBlockDeviceOutput] {
	value := pulumix.Apply[AmiCopy](o, func(v AmiCopy) pulumix.GArrayOutput[AmiCopyEphemeralBlockDevice, AmiCopyEphemeralBlockDeviceOutput] {
		return v.EphemeralBlockDevices
	})
	unwrapped := pulumix.Flatten[[]AmiCopyEphemeralBlockDevice, pulumix.GArrayOutput[AmiCopyEphemeralBlockDevice, AmiCopyEphemeralBlockDeviceOutput]](value)
	return pulumix.GArrayOutput[AmiCopyEphemeralBlockDevice, AmiCopyEphemeralBlockDeviceOutput]{OutputState: unwrapped.OutputState}
}

func (o AmiCopyOutput) Hypervisor() pulumix.Output[string] {
	value := pulumix.Apply[AmiCopy](o, func(v AmiCopy) pulumix.Output[string] { return v.Hypervisor })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Path to an S3 object containing an image manifest, e.g., created
// by the `ec2-upload-bundle` command in the EC2 command line tools.
func (o AmiCopyOutput) ImageLocation() pulumix.Output[string] {
	value := pulumix.Apply[AmiCopy](o, func(v AmiCopy) pulumix.Output[string] { return v.ImageLocation })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func (o AmiCopyOutput) ImageOwnerAlias() pulumix.Output[string] {
	value := pulumix.Apply[AmiCopy](o, func(v AmiCopy) pulumix.Output[string] { return v.ImageOwnerAlias })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func (o AmiCopyOutput) ImageType() pulumix.Output[string] {
	value := pulumix.Apply[AmiCopy](o, func(v AmiCopy) pulumix.Output[string] { return v.ImageType })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// If EC2 instances started from this image should require the use of the Instance Metadata Service V2 (IMDSv2), set this argument to `v2.0`. For more information, see [Configure instance metadata options for new instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-IMDS-new-instances.html#configure-IMDS-new-instances-ami-configuration).
func (o AmiCopyOutput) ImdsSupport() pulumix.Output[string] {
	value := pulumix.Apply[AmiCopy](o, func(v AmiCopy) pulumix.Output[string] { return v.ImdsSupport })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// ID of the kernel image (AKI) that will be used as the paravirtual
// kernel in created instances.
func (o AmiCopyOutput) KernelId() pulumix.Output[string] {
	value := pulumix.Apply[AmiCopy](o, func(v AmiCopy) pulumix.Output[string] { return v.KernelId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Full ARN of the KMS Key to use when encrypting the snapshots of an image during a copy operation. If not specified, then the default AWS KMS Key will be used
func (o AmiCopyOutput) KmsKeyId() pulumix.Output[string] {
	value := pulumix.Apply[AmiCopy](o, func(v AmiCopy) pulumix.Output[string] { return v.KmsKeyId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func (o AmiCopyOutput) ManageEbsSnapshots() pulumix.Output[bool] {
	value := pulumix.Apply[AmiCopy](o, func(v AmiCopy) pulumix.Output[bool] { return v.ManageEbsSnapshots })
	return pulumix.Flatten[bool, pulumix.Output[bool]](value)
}

// Region-unique name for the AMI.
func (o AmiCopyOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[AmiCopy](o, func(v AmiCopy) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func (o AmiCopyOutput) OwnerId() pulumix.Output[string] {
	value := pulumix.Apply[AmiCopy](o, func(v AmiCopy) pulumix.Output[string] { return v.OwnerId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func (o AmiCopyOutput) Platform() pulumix.Output[string] {
	value := pulumix.Apply[AmiCopy](o, func(v AmiCopy) pulumix.Output[string] { return v.Platform })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func (o AmiCopyOutput) PlatformDetails() pulumix.Output[string] {
	value := pulumix.Apply[AmiCopy](o, func(v AmiCopy) pulumix.Output[string] { return v.PlatformDetails })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func (o AmiCopyOutput) Public() pulumix.Output[bool] {
	value := pulumix.Apply[AmiCopy](o, func(v AmiCopy) pulumix.Output[bool] { return v.Public })
	return pulumix.Flatten[bool, pulumix.Output[bool]](value)
}

// ID of an initrd image (ARI) that will be used when booting the
// created instances.
func (o AmiCopyOutput) RamdiskId() pulumix.Output[string] {
	value := pulumix.Apply[AmiCopy](o, func(v AmiCopy) pulumix.Output[string] { return v.RamdiskId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Name of the root device (for example, `/dev/sda1`, or `/dev/xvda`).
func (o AmiCopyOutput) RootDeviceName() pulumix.Output[string] {
	value := pulumix.Apply[AmiCopy](o, func(v AmiCopy) pulumix.Output[string] { return v.RootDeviceName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func (o AmiCopyOutput) RootSnapshotId() pulumix.Output[string] {
	value := pulumix.Apply[AmiCopy](o, func(v AmiCopy) pulumix.Output[string] { return v.RootSnapshotId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Id of the AMI to copy. This id must be valid in the region
// given by `sourceAmiRegion`.
func (o AmiCopyOutput) SourceAmiId() pulumix.Output[string] {
	value := pulumix.Apply[AmiCopy](o, func(v AmiCopy) pulumix.Output[string] { return v.SourceAmiId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Region from which the AMI will be copied. This may be the
// same as the AWS provider region in order to create a copy within the same region.
func (o AmiCopyOutput) SourceAmiRegion() pulumix.Output[string] {
	value := pulumix.Apply[AmiCopy](o, func(v AmiCopy) pulumix.Output[string] { return v.SourceAmiRegion })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// When set to "simple" (the default), enables enhanced networking
// for created instances. No other value is supported at this time.
func (o AmiCopyOutput) SriovNetSupport() pulumix.Output[string] {
	value := pulumix.Apply[AmiCopy](o, func(v AmiCopy) pulumix.Output[string] { return v.SriovNetSupport })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o AmiCopyOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[AmiCopy](o, func(v AmiCopy) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func (o AmiCopyOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[AmiCopy](o, func(v AmiCopy) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// If the image is configured for NitroTPM support, the value is `v2.0`. For more information, see [NitroTPM](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/nitrotpm.html) in the Amazon Elastic Compute Cloud User Guide.
func (o AmiCopyOutput) TpmSupport() pulumix.Output[string] {
	value := pulumix.Apply[AmiCopy](o, func(v AmiCopy) pulumix.Output[string] { return v.TpmSupport })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func (o AmiCopyOutput) UsageOperation() pulumix.Output[string] {
	value := pulumix.Apply[AmiCopy](o, func(v AmiCopy) pulumix.Output[string] { return v.UsageOperation })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Keyword to choose what virtualization mode created instances
// will use. Can be either "paravirtual" (the default) or "hvm". The choice of virtualization type
// changes the set of further arguments that are required, as described below.
func (o AmiCopyOutput) VirtualizationType() pulumix.Output[string] {
	value := pulumix.Apply[AmiCopy](o, func(v AmiCopy) pulumix.Output[string] { return v.VirtualizationType })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(AmiCopyOutput{})
}
