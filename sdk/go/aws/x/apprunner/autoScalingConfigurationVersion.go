// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apprunner

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manages an App Runner AutoScaling Configuration Version.
type AutoScalingConfigurationVersion struct {
	pulumi.CustomResourceState

	// ARN of this auto scaling configuration version.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// Name of the auto scaling configuration.
	AutoScalingConfigurationName pulumix.Output[string] `pulumi:"autoScalingConfigurationName"`
	// The revision of this auto scaling configuration.
	AutoScalingConfigurationRevision pulumix.Output[int] `pulumi:"autoScalingConfigurationRevision"`
	// Whether the auto scaling configuration has the highest `autoScalingConfigurationRevision` among all configurations that share the same `autoScalingConfigurationName`.
	Latest pulumix.Output[bool] `pulumi:"latest"`
	// Maximal number of concurrent requests that you want an instance to process. When the number of concurrent requests goes over this limit, App Runner scales up your service.
	MaxConcurrency pulumix.Output[*int] `pulumi:"maxConcurrency"`
	// Maximal number of instances that App Runner provisions for your service.
	MaxSize pulumix.Output[*int] `pulumi:"maxSize"`
	// Minimal number of instances that App Runner provisions for your service.
	MinSize pulumix.Output[*int] `pulumi:"minSize"`
	// Current state of the auto scaling configuration. An INACTIVE configuration revision has been deleted and can't be used. It is permanently removed some time after deletion.
	Status pulumix.Output[string] `pulumi:"status"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
}

// NewAutoScalingConfigurationVersion registers a new resource with the given unique name, arguments, and options.
func NewAutoScalingConfigurationVersion(ctx *pulumi.Context,
	name string, args *AutoScalingConfigurationVersionArgs, opts ...pulumi.ResourceOption) (*AutoScalingConfigurationVersion, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AutoScalingConfigurationName == nil {
		return nil, errors.New("invalid value for required argument 'AutoScalingConfigurationName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AutoScalingConfigurationVersion
	err := ctx.RegisterResource("aws:apprunner/autoScalingConfigurationVersion:AutoScalingConfigurationVersion", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAutoScalingConfigurationVersion gets an existing AutoScalingConfigurationVersion resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAutoScalingConfigurationVersion(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AutoScalingConfigurationVersionState, opts ...pulumi.ResourceOption) (*AutoScalingConfigurationVersion, error) {
	var resource AutoScalingConfigurationVersion
	err := ctx.ReadResource("aws:apprunner/autoScalingConfigurationVersion:AutoScalingConfigurationVersion", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AutoScalingConfigurationVersion resources.
type autoScalingConfigurationVersionState struct {
	// ARN of this auto scaling configuration version.
	Arn *string `pulumi:"arn"`
	// Name of the auto scaling configuration.
	AutoScalingConfigurationName *string `pulumi:"autoScalingConfigurationName"`
	// The revision of this auto scaling configuration.
	AutoScalingConfigurationRevision *int `pulumi:"autoScalingConfigurationRevision"`
	// Whether the auto scaling configuration has the highest `autoScalingConfigurationRevision` among all configurations that share the same `autoScalingConfigurationName`.
	Latest *bool `pulumi:"latest"`
	// Maximal number of concurrent requests that you want an instance to process. When the number of concurrent requests goes over this limit, App Runner scales up your service.
	MaxConcurrency *int `pulumi:"maxConcurrency"`
	// Maximal number of instances that App Runner provisions for your service.
	MaxSize *int `pulumi:"maxSize"`
	// Minimal number of instances that App Runner provisions for your service.
	MinSize *int `pulumi:"minSize"`
	// Current state of the auto scaling configuration. An INACTIVE configuration revision has been deleted and can't be used. It is permanently removed some time after deletion.
	Status *string `pulumi:"status"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type AutoScalingConfigurationVersionState struct {
	// ARN of this auto scaling configuration version.
	Arn pulumix.Input[*string]
	// Name of the auto scaling configuration.
	AutoScalingConfigurationName pulumix.Input[*string]
	// The revision of this auto scaling configuration.
	AutoScalingConfigurationRevision pulumix.Input[*int]
	// Whether the auto scaling configuration has the highest `autoScalingConfigurationRevision` among all configurations that share the same `autoScalingConfigurationName`.
	Latest pulumix.Input[*bool]
	// Maximal number of concurrent requests that you want an instance to process. When the number of concurrent requests goes over this limit, App Runner scales up your service.
	MaxConcurrency pulumix.Input[*int]
	// Maximal number of instances that App Runner provisions for your service.
	MaxSize pulumix.Input[*int]
	// Minimal number of instances that App Runner provisions for your service.
	MinSize pulumix.Input[*int]
	// Current state of the auto scaling configuration. An INACTIVE configuration revision has been deleted and can't be used. It is permanently removed some time after deletion.
	Status pulumix.Input[*string]
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
}

func (AutoScalingConfigurationVersionState) ElementType() reflect.Type {
	return reflect.TypeOf((*autoScalingConfigurationVersionState)(nil)).Elem()
}

type autoScalingConfigurationVersionArgs struct {
	// Name of the auto scaling configuration.
	AutoScalingConfigurationName string `pulumi:"autoScalingConfigurationName"`
	// Maximal number of concurrent requests that you want an instance to process. When the number of concurrent requests goes over this limit, App Runner scales up your service.
	MaxConcurrency *int `pulumi:"maxConcurrency"`
	// Maximal number of instances that App Runner provisions for your service.
	MaxSize *int `pulumi:"maxSize"`
	// Minimal number of instances that App Runner provisions for your service.
	MinSize *int `pulumi:"minSize"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a AutoScalingConfigurationVersion resource.
type AutoScalingConfigurationVersionArgs struct {
	// Name of the auto scaling configuration.
	AutoScalingConfigurationName pulumix.Input[string]
	// Maximal number of concurrent requests that you want an instance to process. When the number of concurrent requests goes over this limit, App Runner scales up your service.
	MaxConcurrency pulumix.Input[*int]
	// Maximal number of instances that App Runner provisions for your service.
	MaxSize pulumix.Input[*int]
	// Minimal number of instances that App Runner provisions for your service.
	MinSize pulumix.Input[*int]
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (AutoScalingConfigurationVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*autoScalingConfigurationVersionArgs)(nil)).Elem()
}

type AutoScalingConfigurationVersionOutput struct{ *pulumi.OutputState }

func (AutoScalingConfigurationVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoScalingConfigurationVersion)(nil)).Elem()
}

func (o AutoScalingConfigurationVersionOutput) ToAutoScalingConfigurationVersionOutput() AutoScalingConfigurationVersionOutput {
	return o
}

func (o AutoScalingConfigurationVersionOutput) ToAutoScalingConfigurationVersionOutputWithContext(ctx context.Context) AutoScalingConfigurationVersionOutput {
	return o
}

func (o AutoScalingConfigurationVersionOutput) ToOutput(ctx context.Context) pulumix.Output[AutoScalingConfigurationVersion] {
	return pulumix.Output[AutoScalingConfigurationVersion]{
		OutputState: o.OutputState,
	}
}

// ARN of this auto scaling configuration version.
func (o AutoScalingConfigurationVersionOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[AutoScalingConfigurationVersion](o, func(v AutoScalingConfigurationVersion) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Name of the auto scaling configuration.
func (o AutoScalingConfigurationVersionOutput) AutoScalingConfigurationName() pulumix.Output[string] {
	value := pulumix.Apply[AutoScalingConfigurationVersion](o, func(v AutoScalingConfigurationVersion) pulumix.Output[string] { return v.AutoScalingConfigurationName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The revision of this auto scaling configuration.
func (o AutoScalingConfigurationVersionOutput) AutoScalingConfigurationRevision() pulumix.Output[int] {
	value := pulumix.Apply[AutoScalingConfigurationVersion](o, func(v AutoScalingConfigurationVersion) pulumix.Output[int] { return v.AutoScalingConfigurationRevision })
	return pulumix.Flatten[int, pulumix.Output[int]](value)
}

// Whether the auto scaling configuration has the highest `autoScalingConfigurationRevision` among all configurations that share the same `autoScalingConfigurationName`.
func (o AutoScalingConfigurationVersionOutput) Latest() pulumix.Output[bool] {
	value := pulumix.Apply[AutoScalingConfigurationVersion](o, func(v AutoScalingConfigurationVersion) pulumix.Output[bool] { return v.Latest })
	return pulumix.Flatten[bool, pulumix.Output[bool]](value)
}

// Maximal number of concurrent requests that you want an instance to process. When the number of concurrent requests goes over this limit, App Runner scales up your service.
func (o AutoScalingConfigurationVersionOutput) MaxConcurrency() pulumix.Output[*int] {
	value := pulumix.Apply[AutoScalingConfigurationVersion](o, func(v AutoScalingConfigurationVersion) pulumix.Output[*int] { return v.MaxConcurrency })
	return pulumix.Flatten[*int, pulumix.Output[*int]](value)
}

// Maximal number of instances that App Runner provisions for your service.
func (o AutoScalingConfigurationVersionOutput) MaxSize() pulumix.Output[*int] {
	value := pulumix.Apply[AutoScalingConfigurationVersion](o, func(v AutoScalingConfigurationVersion) pulumix.Output[*int] { return v.MaxSize })
	return pulumix.Flatten[*int, pulumix.Output[*int]](value)
}

// Minimal number of instances that App Runner provisions for your service.
func (o AutoScalingConfigurationVersionOutput) MinSize() pulumix.Output[*int] {
	value := pulumix.Apply[AutoScalingConfigurationVersion](o, func(v AutoScalingConfigurationVersion) pulumix.Output[*int] { return v.MinSize })
	return pulumix.Flatten[*int, pulumix.Output[*int]](value)
}

// Current state of the auto scaling configuration. An INACTIVE configuration revision has been deleted and can't be used. It is permanently removed some time after deletion.
func (o AutoScalingConfigurationVersionOutput) Status() pulumix.Output[string] {
	value := pulumix.Apply[AutoScalingConfigurationVersion](o, func(v AutoScalingConfigurationVersion) pulumix.Output[string] { return v.Status })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o AutoScalingConfigurationVersionOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[AutoScalingConfigurationVersion](o, func(v AutoScalingConfigurationVersion) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o AutoScalingConfigurationVersionOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[AutoScalingConfigurationVersion](o, func(v AutoScalingConfigurationVersion) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(AutoScalingConfigurationVersionOutput{})
}
