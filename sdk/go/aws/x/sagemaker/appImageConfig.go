// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sagemaker

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a SageMaker App Image Config resource.
type AppImageConfig struct {
	pulumi.CustomResourceState

	// The name of the App Image Config.
	AppImageConfigName pulumix.Output[string] `pulumi:"appImageConfigName"`
	// The Amazon Resource Name (ARN) assigned by AWS to this App Image Config.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The configuration for the file system and kernels in a SageMaker image running as a KernelGateway app. See Kernel Gateway Image Config details below.
	KernelGatewayImageConfig pulumix.GPtrOutput[AppImageConfigKernelGatewayImageConfig, AppImageConfigKernelGatewayImageConfigOutput] `pulumi:"kernelGatewayImageConfig"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
}

// NewAppImageConfig registers a new resource with the given unique name, arguments, and options.
func NewAppImageConfig(ctx *pulumi.Context,
	name string, args *AppImageConfigArgs, opts ...pulumi.ResourceOption) (*AppImageConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AppImageConfigName == nil {
		return nil, errors.New("invalid value for required argument 'AppImageConfigName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AppImageConfig
	err := ctx.RegisterResource("aws:sagemaker/appImageConfig:AppImageConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAppImageConfig gets an existing AppImageConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAppImageConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AppImageConfigState, opts ...pulumi.ResourceOption) (*AppImageConfig, error) {
	var resource AppImageConfig
	err := ctx.ReadResource("aws:sagemaker/appImageConfig:AppImageConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AppImageConfig resources.
type appImageConfigState struct {
	// The name of the App Image Config.
	AppImageConfigName *string `pulumi:"appImageConfigName"`
	// The Amazon Resource Name (ARN) assigned by AWS to this App Image Config.
	Arn *string `pulumi:"arn"`
	// The configuration for the file system and kernels in a SageMaker image running as a KernelGateway app. See Kernel Gateway Image Config details below.
	KernelGatewayImageConfig *AppImageConfigKernelGatewayImageConfig `pulumi:"kernelGatewayImageConfig"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type AppImageConfigState struct {
	// The name of the App Image Config.
	AppImageConfigName pulumix.Input[*string]
	// The Amazon Resource Name (ARN) assigned by AWS to this App Image Config.
	Arn pulumix.Input[*string]
	// The configuration for the file system and kernels in a SageMaker image running as a KernelGateway app. See Kernel Gateway Image Config details below.
	KernelGatewayImageConfig pulumix.Input[*AppImageConfigKernelGatewayImageConfigArgs]
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
}

func (AppImageConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*appImageConfigState)(nil)).Elem()
}

type appImageConfigArgs struct {
	// The name of the App Image Config.
	AppImageConfigName string `pulumi:"appImageConfigName"`
	// The configuration for the file system and kernels in a SageMaker image running as a KernelGateway app. See Kernel Gateway Image Config details below.
	KernelGatewayImageConfig *AppImageConfigKernelGatewayImageConfig `pulumi:"kernelGatewayImageConfig"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a AppImageConfig resource.
type AppImageConfigArgs struct {
	// The name of the App Image Config.
	AppImageConfigName pulumix.Input[string]
	// The configuration for the file system and kernels in a SageMaker image running as a KernelGateway app. See Kernel Gateway Image Config details below.
	KernelGatewayImageConfig pulumix.Input[*AppImageConfigKernelGatewayImageConfigArgs]
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (AppImageConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*appImageConfigArgs)(nil)).Elem()
}

type AppImageConfigOutput struct{ *pulumi.OutputState }

func (AppImageConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppImageConfig)(nil)).Elem()
}

func (o AppImageConfigOutput) ToAppImageConfigOutput() AppImageConfigOutput {
	return o
}

func (o AppImageConfigOutput) ToAppImageConfigOutputWithContext(ctx context.Context) AppImageConfigOutput {
	return o
}

func (o AppImageConfigOutput) ToOutput(ctx context.Context) pulumix.Output[AppImageConfig] {
	return pulumix.Output[AppImageConfig]{
		OutputState: o.OutputState,
	}
}

// The name of the App Image Config.
func (o AppImageConfigOutput) AppImageConfigName() pulumix.Output[string] {
	value := pulumix.Apply[AppImageConfig](o, func(v AppImageConfig) pulumix.Output[string] { return v.AppImageConfigName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The Amazon Resource Name (ARN) assigned by AWS to this App Image Config.
func (o AppImageConfigOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[AppImageConfig](o, func(v AppImageConfig) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The configuration for the file system and kernels in a SageMaker image running as a KernelGateway app. See Kernel Gateway Image Config details below.
func (o AppImageConfigOutput) KernelGatewayImageConfig() pulumix.GPtrOutput[AppImageConfigKernelGatewayImageConfig, AppImageConfigKernelGatewayImageConfigOutput] {
	value := pulumix.Apply[AppImageConfig](o, func(v AppImageConfig) pulumix.GPtrOutput[AppImageConfigKernelGatewayImageConfig, AppImageConfigKernelGatewayImageConfigOutput] {
		return v.KernelGatewayImageConfig
	})
	unwrapped := pulumix.Flatten[*AppImageConfigKernelGatewayImageConfig, pulumix.GPtrOutput[AppImageConfigKernelGatewayImageConfig, AppImageConfigKernelGatewayImageConfigOutput]](value)
	return pulumix.GPtrOutput[AppImageConfigKernelGatewayImageConfig, AppImageConfigKernelGatewayImageConfigOutput]{OutputState: unwrapped.OutputState}
}

// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o AppImageConfigOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[AppImageConfig](o, func(v AppImageConfig) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o AppImageConfigOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[AppImageConfig](o, func(v AppImageConfig) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(AppImageConfigOutput{})
}
