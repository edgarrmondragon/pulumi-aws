// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package codepipeline

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a CodePipeline Webhook.
type Webhook struct {
	pulumi.CustomResourceState

	// The CodePipeline webhook's ARN.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The type of authentication  to use. One of `IP`, `GITHUB_HMAC`, or `UNAUTHENTICATED`.
	Authentication pulumix.Output[string] `pulumi:"authentication"`
	// An `auth` block. Required for `IP` and `GITHUB_HMAC`. Auth blocks are documented below.
	AuthenticationConfiguration pulumix.GPtrOutput[WebhookAuthenticationConfiguration, WebhookAuthenticationConfigurationOutput] `pulumi:"authenticationConfiguration"`
	// One or more `filter` blocks. Filter blocks are documented below.
	Filters pulumix.GArrayOutput[WebhookFilter, WebhookFilterOutput] `pulumi:"filters"`
	// The name of the webhook.
	Name pulumix.Output[string] `pulumi:"name"`
	// A map of tags to assign to the resource. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// The name of the action in a pipeline you want to connect to the webhook. The action must be from the source (first) stage of the pipeline.
	TargetAction pulumix.Output[string] `pulumi:"targetAction"`
	// The name of the pipeline.
	TargetPipeline pulumix.Output[string] `pulumi:"targetPipeline"`
	// The CodePipeline webhook's URL. POST events to this endpoint to trigger the target.
	Url pulumix.Output[string] `pulumi:"url"`
}

// NewWebhook registers a new resource with the given unique name, arguments, and options.
func NewWebhook(ctx *pulumi.Context,
	name string, args *WebhookArgs, opts ...pulumi.ResourceOption) (*Webhook, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Authentication == nil {
		return nil, errors.New("invalid value for required argument 'Authentication'")
	}
	if args.Filters == nil {
		return nil, errors.New("invalid value for required argument 'Filters'")
	}
	if args.TargetAction == nil {
		return nil, errors.New("invalid value for required argument 'TargetAction'")
	}
	if args.TargetPipeline == nil {
		return nil, errors.New("invalid value for required argument 'TargetPipeline'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Webhook
	err := ctx.RegisterResource("aws:codepipeline/webhook:Webhook", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWebhook gets an existing Webhook resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWebhook(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WebhookState, opts ...pulumi.ResourceOption) (*Webhook, error) {
	var resource Webhook
	err := ctx.ReadResource("aws:codepipeline/webhook:Webhook", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Webhook resources.
type webhookState struct {
	// The CodePipeline webhook's ARN.
	Arn *string `pulumi:"arn"`
	// The type of authentication  to use. One of `IP`, `GITHUB_HMAC`, or `UNAUTHENTICATED`.
	Authentication *string `pulumi:"authentication"`
	// An `auth` block. Required for `IP` and `GITHUB_HMAC`. Auth blocks are documented below.
	AuthenticationConfiguration *WebhookAuthenticationConfiguration `pulumi:"authenticationConfiguration"`
	// One or more `filter` blocks. Filter blocks are documented below.
	Filters []WebhookFilter `pulumi:"filters"`
	// The name of the webhook.
	Name *string `pulumi:"name"`
	// A map of tags to assign to the resource. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// The name of the action in a pipeline you want to connect to the webhook. The action must be from the source (first) stage of the pipeline.
	TargetAction *string `pulumi:"targetAction"`
	// The name of the pipeline.
	TargetPipeline *string `pulumi:"targetPipeline"`
	// The CodePipeline webhook's URL. POST events to this endpoint to trigger the target.
	Url *string `pulumi:"url"`
}

type WebhookState struct {
	// The CodePipeline webhook's ARN.
	Arn pulumix.Input[*string]
	// The type of authentication  to use. One of `IP`, `GITHUB_HMAC`, or `UNAUTHENTICATED`.
	Authentication pulumix.Input[*string]
	// An `auth` block. Required for `IP` and `GITHUB_HMAC`. Auth blocks are documented below.
	AuthenticationConfiguration pulumix.Input[*WebhookAuthenticationConfigurationArgs]
	// One or more `filter` blocks. Filter blocks are documented below.
	Filters pulumix.Input[[]*WebhookFilterArgs]
	// The name of the webhook.
	Name pulumix.Input[*string]
	// A map of tags to assign to the resource. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// The name of the action in a pipeline you want to connect to the webhook. The action must be from the source (first) stage of the pipeline.
	TargetAction pulumix.Input[*string]
	// The name of the pipeline.
	TargetPipeline pulumix.Input[*string]
	// The CodePipeline webhook's URL. POST events to this endpoint to trigger the target.
	Url pulumix.Input[*string]
}

func (WebhookState) ElementType() reflect.Type {
	return reflect.TypeOf((*webhookState)(nil)).Elem()
}

type webhookArgs struct {
	// The type of authentication  to use. One of `IP`, `GITHUB_HMAC`, or `UNAUTHENTICATED`.
	Authentication string `pulumi:"authentication"`
	// An `auth` block. Required for `IP` and `GITHUB_HMAC`. Auth blocks are documented below.
	AuthenticationConfiguration *WebhookAuthenticationConfiguration `pulumi:"authenticationConfiguration"`
	// One or more `filter` blocks. Filter blocks are documented below.
	Filters []WebhookFilter `pulumi:"filters"`
	// The name of the webhook.
	Name *string `pulumi:"name"`
	// A map of tags to assign to the resource. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// The name of the action in a pipeline you want to connect to the webhook. The action must be from the source (first) stage of the pipeline.
	TargetAction string `pulumi:"targetAction"`
	// The name of the pipeline.
	TargetPipeline string `pulumi:"targetPipeline"`
}

// The set of arguments for constructing a Webhook resource.
type WebhookArgs struct {
	// The type of authentication  to use. One of `IP`, `GITHUB_HMAC`, or `UNAUTHENTICATED`.
	Authentication pulumix.Input[string]
	// An `auth` block. Required for `IP` and `GITHUB_HMAC`. Auth blocks are documented below.
	AuthenticationConfiguration pulumix.Input[*WebhookAuthenticationConfigurationArgs]
	// One or more `filter` blocks. Filter blocks are documented below.
	Filters pulumix.Input[[]*WebhookFilterArgs]
	// The name of the webhook.
	Name pulumix.Input[*string]
	// A map of tags to assign to the resource. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// The name of the action in a pipeline you want to connect to the webhook. The action must be from the source (first) stage of the pipeline.
	TargetAction pulumix.Input[string]
	// The name of the pipeline.
	TargetPipeline pulumix.Input[string]
}

func (WebhookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*webhookArgs)(nil)).Elem()
}

type WebhookOutput struct{ *pulumi.OutputState }

func (WebhookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Webhook)(nil)).Elem()
}

func (o WebhookOutput) ToWebhookOutput() WebhookOutput {
	return o
}

func (o WebhookOutput) ToWebhookOutputWithContext(ctx context.Context) WebhookOutput {
	return o
}

func (o WebhookOutput) ToOutput(ctx context.Context) pulumix.Output[Webhook] {
	return pulumix.Output[Webhook]{
		OutputState: o.OutputState,
	}
}

// The CodePipeline webhook's ARN.
func (o WebhookOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Webhook](o, func(v Webhook) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The type of authentication  to use. One of `IP`, `GITHUB_HMAC`, or `UNAUTHENTICATED`.
func (o WebhookOutput) Authentication() pulumix.Output[string] {
	value := pulumix.Apply[Webhook](o, func(v Webhook) pulumix.Output[string] { return v.Authentication })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// An `auth` block. Required for `IP` and `GITHUB_HMAC`. Auth blocks are documented below.
func (o WebhookOutput) AuthenticationConfiguration() pulumix.GPtrOutput[WebhookAuthenticationConfiguration, WebhookAuthenticationConfigurationOutput] {
	value := pulumix.Apply[Webhook](o, func(v Webhook) pulumix.GPtrOutput[WebhookAuthenticationConfiguration, WebhookAuthenticationConfigurationOutput] {
		return v.AuthenticationConfiguration
	})
	unwrapped := pulumix.Flatten[*WebhookAuthenticationConfiguration, pulumix.GPtrOutput[WebhookAuthenticationConfiguration, WebhookAuthenticationConfigurationOutput]](value)
	return pulumix.GPtrOutput[WebhookAuthenticationConfiguration, WebhookAuthenticationConfigurationOutput]{OutputState: unwrapped.OutputState}
}

// One or more `filter` blocks. Filter blocks are documented below.
func (o WebhookOutput) Filters() pulumix.GArrayOutput[WebhookFilter, WebhookFilterOutput] {
	value := pulumix.Apply[Webhook](o, func(v Webhook) pulumix.GArrayOutput[WebhookFilter, WebhookFilterOutput] { return v.Filters })
	unwrapped := pulumix.Flatten[[]WebhookFilter, pulumix.GArrayOutput[WebhookFilter, WebhookFilterOutput]](value)
	return pulumix.GArrayOutput[WebhookFilter, WebhookFilterOutput]{OutputState: unwrapped.OutputState}
}

// The name of the webhook.
func (o WebhookOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[Webhook](o, func(v Webhook) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A map of tags to assign to the resource. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o WebhookOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Webhook](o, func(v Webhook) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o WebhookOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[Webhook](o, func(v Webhook) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// The name of the action in a pipeline you want to connect to the webhook. The action must be from the source (first) stage of the pipeline.
func (o WebhookOutput) TargetAction() pulumix.Output[string] {
	value := pulumix.Apply[Webhook](o, func(v Webhook) pulumix.Output[string] { return v.TargetAction })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The name of the pipeline.
func (o WebhookOutput) TargetPipeline() pulumix.Output[string] {
	value := pulumix.Apply[Webhook](o, func(v Webhook) pulumix.Output[string] { return v.TargetPipeline })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The CodePipeline webhook's URL. POST events to this endpoint to trigger the target.
func (o WebhookOutput) Url() pulumix.Output[string] {
	value := pulumix.Apply[Webhook](o, func(v Webhook) pulumix.Output[string] { return v.Url })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(WebhookOutput{})
}
