// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package directconnect

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manages a Direct Connect Gateway Association Proposal, typically for enabling cross-account associations. For single account associations, see the `directconnect.GatewayAssociation` resource.
type GatewayAssociationProposal struct {
	pulumi.CustomResourceState

	// VPC prefixes (CIDRs) to advertise to the Direct Connect gateway. Defaults to the CIDR block of the VPC associated with the Virtual Gateway. To enable drift detection, must be configured.
	AllowedPrefixes pulumix.ArrayOutput[string] `pulumi:"allowedPrefixes"`
	// The ID of the VGW or transit gateway with which to associate the Direct Connect gateway.
	AssociatedGatewayId pulumix.Output[string] `pulumi:"associatedGatewayId"`
	// The ID of the AWS account that owns the VGW or transit gateway with which to associate the Direct Connect gateway.
	AssociatedGatewayOwnerAccountId pulumix.Output[string] `pulumi:"associatedGatewayOwnerAccountId"`
	// The type of the associated gateway, `transitGateway` or `virtualPrivateGateway`.
	AssociatedGatewayType pulumix.Output[string] `pulumi:"associatedGatewayType"`
	// Direct Connect Gateway identifier.
	DxGatewayId pulumix.Output[string] `pulumi:"dxGatewayId"`
	// AWS Account identifier of the Direct Connect Gateway's owner.
	DxGatewayOwnerAccountId pulumix.Output[string] `pulumi:"dxGatewayOwnerAccountId"`
}

// NewGatewayAssociationProposal registers a new resource with the given unique name, arguments, and options.
func NewGatewayAssociationProposal(ctx *pulumi.Context,
	name string, args *GatewayAssociationProposalArgs, opts ...pulumi.ResourceOption) (*GatewayAssociationProposal, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AssociatedGatewayId == nil {
		return nil, errors.New("invalid value for required argument 'AssociatedGatewayId'")
	}
	if args.DxGatewayId == nil {
		return nil, errors.New("invalid value for required argument 'DxGatewayId'")
	}
	if args.DxGatewayOwnerAccountId == nil {
		return nil, errors.New("invalid value for required argument 'DxGatewayOwnerAccountId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource GatewayAssociationProposal
	err := ctx.RegisterResource("aws:directconnect/gatewayAssociationProposal:GatewayAssociationProposal", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGatewayAssociationProposal gets an existing GatewayAssociationProposal resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGatewayAssociationProposal(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GatewayAssociationProposalState, opts ...pulumi.ResourceOption) (*GatewayAssociationProposal, error) {
	var resource GatewayAssociationProposal
	err := ctx.ReadResource("aws:directconnect/gatewayAssociationProposal:GatewayAssociationProposal", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GatewayAssociationProposal resources.
type gatewayAssociationProposalState struct {
	// VPC prefixes (CIDRs) to advertise to the Direct Connect gateway. Defaults to the CIDR block of the VPC associated with the Virtual Gateway. To enable drift detection, must be configured.
	AllowedPrefixes []string `pulumi:"allowedPrefixes"`
	// The ID of the VGW or transit gateway with which to associate the Direct Connect gateway.
	AssociatedGatewayId *string `pulumi:"associatedGatewayId"`
	// The ID of the AWS account that owns the VGW or transit gateway with which to associate the Direct Connect gateway.
	AssociatedGatewayOwnerAccountId *string `pulumi:"associatedGatewayOwnerAccountId"`
	// The type of the associated gateway, `transitGateway` or `virtualPrivateGateway`.
	AssociatedGatewayType *string `pulumi:"associatedGatewayType"`
	// Direct Connect Gateway identifier.
	DxGatewayId *string `pulumi:"dxGatewayId"`
	// AWS Account identifier of the Direct Connect Gateway's owner.
	DxGatewayOwnerAccountId *string `pulumi:"dxGatewayOwnerAccountId"`
}

type GatewayAssociationProposalState struct {
	// VPC prefixes (CIDRs) to advertise to the Direct Connect gateway. Defaults to the CIDR block of the VPC associated with the Virtual Gateway. To enable drift detection, must be configured.
	AllowedPrefixes pulumix.Input[[]string]
	// The ID of the VGW or transit gateway with which to associate the Direct Connect gateway.
	AssociatedGatewayId pulumix.Input[*string]
	// The ID of the AWS account that owns the VGW or transit gateway with which to associate the Direct Connect gateway.
	AssociatedGatewayOwnerAccountId pulumix.Input[*string]
	// The type of the associated gateway, `transitGateway` or `virtualPrivateGateway`.
	AssociatedGatewayType pulumix.Input[*string]
	// Direct Connect Gateway identifier.
	DxGatewayId pulumix.Input[*string]
	// AWS Account identifier of the Direct Connect Gateway's owner.
	DxGatewayOwnerAccountId pulumix.Input[*string]
}

func (GatewayAssociationProposalState) ElementType() reflect.Type {
	return reflect.TypeOf((*gatewayAssociationProposalState)(nil)).Elem()
}

type gatewayAssociationProposalArgs struct {
	// VPC prefixes (CIDRs) to advertise to the Direct Connect gateway. Defaults to the CIDR block of the VPC associated with the Virtual Gateway. To enable drift detection, must be configured.
	AllowedPrefixes []string `pulumi:"allowedPrefixes"`
	// The ID of the VGW or transit gateway with which to associate the Direct Connect gateway.
	AssociatedGatewayId string `pulumi:"associatedGatewayId"`
	// Direct Connect Gateway identifier.
	DxGatewayId string `pulumi:"dxGatewayId"`
	// AWS Account identifier of the Direct Connect Gateway's owner.
	DxGatewayOwnerAccountId string `pulumi:"dxGatewayOwnerAccountId"`
}

// The set of arguments for constructing a GatewayAssociationProposal resource.
type GatewayAssociationProposalArgs struct {
	// VPC prefixes (CIDRs) to advertise to the Direct Connect gateway. Defaults to the CIDR block of the VPC associated with the Virtual Gateway. To enable drift detection, must be configured.
	AllowedPrefixes pulumix.Input[[]string]
	// The ID of the VGW or transit gateway with which to associate the Direct Connect gateway.
	AssociatedGatewayId pulumix.Input[string]
	// Direct Connect Gateway identifier.
	DxGatewayId pulumix.Input[string]
	// AWS Account identifier of the Direct Connect Gateway's owner.
	DxGatewayOwnerAccountId pulumix.Input[string]
}

func (GatewayAssociationProposalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*gatewayAssociationProposalArgs)(nil)).Elem()
}

type GatewayAssociationProposalOutput struct{ *pulumi.OutputState }

func (GatewayAssociationProposalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayAssociationProposal)(nil)).Elem()
}

func (o GatewayAssociationProposalOutput) ToGatewayAssociationProposalOutput() GatewayAssociationProposalOutput {
	return o
}

func (o GatewayAssociationProposalOutput) ToGatewayAssociationProposalOutputWithContext(ctx context.Context) GatewayAssociationProposalOutput {
	return o
}

func (o GatewayAssociationProposalOutput) ToOutput(ctx context.Context) pulumix.Output[GatewayAssociationProposal] {
	return pulumix.Output[GatewayAssociationProposal]{
		OutputState: o.OutputState,
	}
}

// VPC prefixes (CIDRs) to advertise to the Direct Connect gateway. Defaults to the CIDR block of the VPC associated with the Virtual Gateway. To enable drift detection, must be configured.
func (o GatewayAssociationProposalOutput) AllowedPrefixes() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GatewayAssociationProposal](o, func(v GatewayAssociationProposal) pulumix.ArrayOutput[string] { return v.AllowedPrefixes })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// The ID of the VGW or transit gateway with which to associate the Direct Connect gateway.
func (o GatewayAssociationProposalOutput) AssociatedGatewayId() pulumix.Output[string] {
	value := pulumix.Apply[GatewayAssociationProposal](o, func(v GatewayAssociationProposal) pulumix.Output[string] { return v.AssociatedGatewayId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The ID of the AWS account that owns the VGW or transit gateway with which to associate the Direct Connect gateway.
func (o GatewayAssociationProposalOutput) AssociatedGatewayOwnerAccountId() pulumix.Output[string] {
	value := pulumix.Apply[GatewayAssociationProposal](o, func(v GatewayAssociationProposal) pulumix.Output[string] { return v.AssociatedGatewayOwnerAccountId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The type of the associated gateway, `transitGateway` or `virtualPrivateGateway`.
func (o GatewayAssociationProposalOutput) AssociatedGatewayType() pulumix.Output[string] {
	value := pulumix.Apply[GatewayAssociationProposal](o, func(v GatewayAssociationProposal) pulumix.Output[string] { return v.AssociatedGatewayType })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Direct Connect Gateway identifier.
func (o GatewayAssociationProposalOutput) DxGatewayId() pulumix.Output[string] {
	value := pulumix.Apply[GatewayAssociationProposal](o, func(v GatewayAssociationProposal) pulumix.Output[string] { return v.DxGatewayId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// AWS Account identifier of the Direct Connect Gateway's owner.
func (o GatewayAssociationProposalOutput) DxGatewayOwnerAccountId() pulumix.Output[string] {
	value := pulumix.Apply[GatewayAssociationProposal](o, func(v GatewayAssociationProposal) pulumix.Output[string] { return v.DxGatewayOwnerAccountId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(GatewayAssociationProposalOutput{})
}
