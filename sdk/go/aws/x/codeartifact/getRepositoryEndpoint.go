// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package codeartifact

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// The CodeArtifact Repository Endpoint data source returns the endpoint of a repository for a specific package format.
func GetRepositoryEndpoint(ctx *pulumi.Context, args *GetRepositoryEndpointArgs, opts ...pulumi.InvokeOption) (*GetRepositoryEndpointResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetRepositoryEndpointResult
	err := ctx.Invoke("aws:codeartifact/getRepositoryEndpoint:getRepositoryEndpoint", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRepositoryEndpoint.
type GetRepositoryEndpointArgs struct {
	// Name of the domain that contains the repository.
	Domain string `pulumi:"domain"`
	// Account number of the AWS account that owns the domain.
	DomainOwner *string `pulumi:"domainOwner"`
	// Which endpoint of a repository to return. A repository has one endpoint for each package format: `npm`, `pypi`, `maven`, and `nuget`.
	Format string `pulumi:"format"`
	// Name of the repository.
	Repository string `pulumi:"repository"`
}

// A collection of values returned by getRepositoryEndpoint.
type GetRepositoryEndpointResult struct {
	Domain      string `pulumi:"domain"`
	DomainOwner string `pulumi:"domainOwner"`
	Format      string `pulumi:"format"`
	// The provider-assigned unique ID for this managed resource.
	Id         string `pulumi:"id"`
	Repository string `pulumi:"repository"`
	// URL of the returned endpoint.
	RepositoryEndpoint string `pulumi:"repositoryEndpoint"`
}

func GetRepositoryEndpointOutput(ctx *pulumi.Context, args GetRepositoryEndpointOutputArgs, opts ...pulumi.InvokeOption) GetRepositoryEndpointResultOutput {
	outputResult := pulumix.ApplyErr[*GetRepositoryEndpointArgs](args.ToOutput(), func(plainArgs *GetRepositoryEndpointArgs) (*GetRepositoryEndpointResult, error) {
		return GetRepositoryEndpoint(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[GetRepositoryEndpointResultOutput, *GetRepositoryEndpointResult](outputResult)
}

// A collection of arguments for invoking getRepositoryEndpoint.
type GetRepositoryEndpointOutputArgs struct {
	// Name of the domain that contains the repository.
	Domain pulumix.Input[string] `pulumi:"domain"`
	// Account number of the AWS account that owns the domain.
	DomainOwner pulumix.Input[*string] `pulumi:"domainOwner"`
	// Which endpoint of a repository to return. A repository has one endpoint for each package format: `npm`, `pypi`, `maven`, and `nuget`.
	Format pulumix.Input[string] `pulumi:"format"`
	// Name of the repository.
	Repository pulumix.Input[string] `pulumi:"repository"`
}

func (args GetRepositoryEndpointOutputArgs) ToOutput() pulumix.Output[*GetRepositoryEndpointArgs] {
	allArgs := pulumix.All(
		args.Domain.ToOutput(context.Background()).AsAny(),
		args.DomainOwner.ToOutput(context.Background()).AsAny(),
		args.Format.ToOutput(context.Background()).AsAny(),
		args.Repository.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *GetRepositoryEndpointArgs {
		return &GetRepositoryEndpointArgs{
			Domain:      resolvedArgs[0].(string),
			DomainOwner: resolvedArgs[1].(*string),
			Format:      resolvedArgs[2].(string),
			Repository:  resolvedArgs[3].(string),
		}
	})
}

type GetRepositoryEndpointResultOutput struct{ *pulumi.OutputState }

func (GetRepositoryEndpointResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRepositoryEndpointResult)(nil)).Elem()
}

func (o GetRepositoryEndpointResultOutput) ToOutput(context.Context) pulumix.Output[*GetRepositoryEndpointResult] {
	return pulumix.Output[*GetRepositoryEndpointResult]{
		OutputState: o.OutputState,
	}
}

func (o GetRepositoryEndpointResultOutput) Domain() pulumix.Output[string] {
	return pulumix.Apply[*GetRepositoryEndpointResult](o, func(v *GetRepositoryEndpointResult) string { return v.Domain })
}

func (o GetRepositoryEndpointResultOutput) DomainOwner() pulumix.Output[string] {
	return pulumix.Apply[*GetRepositoryEndpointResult](o, func(v *GetRepositoryEndpointResult) string { return v.DomainOwner })
}

func (o GetRepositoryEndpointResultOutput) Format() pulumix.Output[string] {
	return pulumix.Apply[*GetRepositoryEndpointResult](o, func(v *GetRepositoryEndpointResult) string { return v.Format })
}

func (o GetRepositoryEndpointResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*GetRepositoryEndpointResult](o, func(v *GetRepositoryEndpointResult) string { return v.Id })
}

func (o GetRepositoryEndpointResultOutput) Repository() pulumix.Output[string] {
	return pulumix.Apply[*GetRepositoryEndpointResult](o, func(v *GetRepositoryEndpointResult) string { return v.Repository })
}

func (o GetRepositoryEndpointResultOutput) RepositoryEndpoint() pulumix.Output[string] {
	return pulumix.Apply[*GetRepositoryEndpointResult](o, func(v *GetRepositoryEndpointResult) string { return v.RepositoryEndpoint })
}
