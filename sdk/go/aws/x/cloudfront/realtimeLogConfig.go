// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudfront

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a CloudFront real-time log configuration resource.
type RealtimeLogConfig struct {
	pulumi.CustomResourceState

	// The ARN (Amazon Resource Name) of the CloudFront real-time log configuration.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The Amazon Kinesis data streams where real-time log data is sent.
	Endpoint pulumix.GPtrOutput[RealtimeLogConfigEndpoint, RealtimeLogConfigEndpointOutput] `pulumi:"endpoint"`
	// The fields that are included in each real-time log record. See the [AWS documentation](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/real-time-logs.html#understand-real-time-log-config-fields) for supported values.
	Fields pulumix.ArrayOutput[string] `pulumi:"fields"`
	// The unique name to identify this real-time log configuration.
	Name pulumix.Output[string] `pulumi:"name"`
	// The sampling rate for this real-time log configuration. The sampling rate determines the percentage of viewer requests that are represented in the real-time log data. An integer between `1` and `100`, inclusive.
	SamplingRate pulumix.Output[int] `pulumi:"samplingRate"`
}

// NewRealtimeLogConfig registers a new resource with the given unique name, arguments, and options.
func NewRealtimeLogConfig(ctx *pulumi.Context,
	name string, args *RealtimeLogConfigArgs, opts ...pulumi.ResourceOption) (*RealtimeLogConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Endpoint == nil {
		return nil, errors.New("invalid value for required argument 'Endpoint'")
	}
	if args.Fields == nil {
		return nil, errors.New("invalid value for required argument 'Fields'")
	}
	if args.SamplingRate == nil {
		return nil, errors.New("invalid value for required argument 'SamplingRate'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RealtimeLogConfig
	err := ctx.RegisterResource("aws:cloudfront/realtimeLogConfig:RealtimeLogConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRealtimeLogConfig gets an existing RealtimeLogConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRealtimeLogConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RealtimeLogConfigState, opts ...pulumi.ResourceOption) (*RealtimeLogConfig, error) {
	var resource RealtimeLogConfig
	err := ctx.ReadResource("aws:cloudfront/realtimeLogConfig:RealtimeLogConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RealtimeLogConfig resources.
type realtimeLogConfigState struct {
	// The ARN (Amazon Resource Name) of the CloudFront real-time log configuration.
	Arn *string `pulumi:"arn"`
	// The Amazon Kinesis data streams where real-time log data is sent.
	Endpoint *RealtimeLogConfigEndpoint `pulumi:"endpoint"`
	// The fields that are included in each real-time log record. See the [AWS documentation](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/real-time-logs.html#understand-real-time-log-config-fields) for supported values.
	Fields []string `pulumi:"fields"`
	// The unique name to identify this real-time log configuration.
	Name *string `pulumi:"name"`
	// The sampling rate for this real-time log configuration. The sampling rate determines the percentage of viewer requests that are represented in the real-time log data. An integer between `1` and `100`, inclusive.
	SamplingRate *int `pulumi:"samplingRate"`
}

type RealtimeLogConfigState struct {
	// The ARN (Amazon Resource Name) of the CloudFront real-time log configuration.
	Arn pulumix.Input[*string]
	// The Amazon Kinesis data streams where real-time log data is sent.
	Endpoint pulumix.Input[*RealtimeLogConfigEndpointArgs]
	// The fields that are included in each real-time log record. See the [AWS documentation](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/real-time-logs.html#understand-real-time-log-config-fields) for supported values.
	Fields pulumix.Input[[]string]
	// The unique name to identify this real-time log configuration.
	Name pulumix.Input[*string]
	// The sampling rate for this real-time log configuration. The sampling rate determines the percentage of viewer requests that are represented in the real-time log data. An integer between `1` and `100`, inclusive.
	SamplingRate pulumix.Input[*int]
}

func (RealtimeLogConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*realtimeLogConfigState)(nil)).Elem()
}

type realtimeLogConfigArgs struct {
	// The Amazon Kinesis data streams where real-time log data is sent.
	Endpoint RealtimeLogConfigEndpoint `pulumi:"endpoint"`
	// The fields that are included in each real-time log record. See the [AWS documentation](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/real-time-logs.html#understand-real-time-log-config-fields) for supported values.
	Fields []string `pulumi:"fields"`
	// The unique name to identify this real-time log configuration.
	Name *string `pulumi:"name"`
	// The sampling rate for this real-time log configuration. The sampling rate determines the percentage of viewer requests that are represented in the real-time log data. An integer between `1` and `100`, inclusive.
	SamplingRate int `pulumi:"samplingRate"`
}

// The set of arguments for constructing a RealtimeLogConfig resource.
type RealtimeLogConfigArgs struct {
	// The Amazon Kinesis data streams where real-time log data is sent.
	Endpoint pulumix.Input[*RealtimeLogConfigEndpointArgs]
	// The fields that are included in each real-time log record. See the [AWS documentation](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/real-time-logs.html#understand-real-time-log-config-fields) for supported values.
	Fields pulumix.Input[[]string]
	// The unique name to identify this real-time log configuration.
	Name pulumix.Input[*string]
	// The sampling rate for this real-time log configuration. The sampling rate determines the percentage of viewer requests that are represented in the real-time log data. An integer between `1` and `100`, inclusive.
	SamplingRate pulumix.Input[int]
}

func (RealtimeLogConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*realtimeLogConfigArgs)(nil)).Elem()
}

type RealtimeLogConfigOutput struct{ *pulumi.OutputState }

func (RealtimeLogConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RealtimeLogConfig)(nil)).Elem()
}

func (o RealtimeLogConfigOutput) ToRealtimeLogConfigOutput() RealtimeLogConfigOutput {
	return o
}

func (o RealtimeLogConfigOutput) ToRealtimeLogConfigOutputWithContext(ctx context.Context) RealtimeLogConfigOutput {
	return o
}

func (o RealtimeLogConfigOutput) ToOutput(ctx context.Context) pulumix.Output[RealtimeLogConfig] {
	return pulumix.Output[RealtimeLogConfig]{
		OutputState: o.OutputState,
	}
}

// The ARN (Amazon Resource Name) of the CloudFront real-time log configuration.
func (o RealtimeLogConfigOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[RealtimeLogConfig](o, func(v RealtimeLogConfig) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The Amazon Kinesis data streams where real-time log data is sent.
func (o RealtimeLogConfigOutput) Endpoint() pulumix.GPtrOutput[RealtimeLogConfigEndpoint, RealtimeLogConfigEndpointOutput] {
	value := pulumix.Apply[RealtimeLogConfig](o, func(v RealtimeLogConfig) pulumix.GPtrOutput[RealtimeLogConfigEndpoint, RealtimeLogConfigEndpointOutput] {
		return v.Endpoint
	})
	unwrapped := pulumix.Flatten[*RealtimeLogConfigEndpoint, pulumix.GPtrOutput[RealtimeLogConfigEndpoint, RealtimeLogConfigEndpointOutput]](value)
	return pulumix.GPtrOutput[RealtimeLogConfigEndpoint, RealtimeLogConfigEndpointOutput]{OutputState: unwrapped.OutputState}
}

// The fields that are included in each real-time log record. See the [AWS documentation](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/real-time-logs.html#understand-real-time-log-config-fields) for supported values.
func (o RealtimeLogConfigOutput) Fields() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[RealtimeLogConfig](o, func(v RealtimeLogConfig) pulumix.ArrayOutput[string] { return v.Fields })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// The unique name to identify this real-time log configuration.
func (o RealtimeLogConfigOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[RealtimeLogConfig](o, func(v RealtimeLogConfig) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The sampling rate for this real-time log configuration. The sampling rate determines the percentage of viewer requests that are represented in the real-time log data. An integer between `1` and `100`, inclusive.
func (o RealtimeLogConfigOutput) SamplingRate() pulumix.Output[int] {
	value := pulumix.Apply[RealtimeLogConfig](o, func(v RealtimeLogConfig) pulumix.Output[int] { return v.SamplingRate })
	return pulumix.Flatten[int, pulumix.Output[int]](value)
}

func init() {
	pulumi.RegisterOutputType(RealtimeLogConfigOutput{})
}
