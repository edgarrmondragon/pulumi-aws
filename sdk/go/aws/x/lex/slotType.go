// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package lex

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an Amazon Lex Slot Type resource. For more information see
// [Amazon Lex: How It Works](https://docs.aws.amazon.com/lex/latest/dg/how-it-works.html)
type SlotType struct {
	pulumi.CustomResourceState

	// Checksum identifying the version of the slot type that was created. The checksum is
	// not included as an argument because the resource will add it automatically when updating the slot type.
	Checksum pulumix.Output[string] `pulumi:"checksum"`
	// Determines if a new slot type version is created when the initial resource is created and on each
	// update. Defaults to `false`.
	CreateVersion pulumix.Output[*bool] `pulumi:"createVersion"`
	// The date when the slot type version was created.
	CreatedDate pulumix.Output[string] `pulumi:"createdDate"`
	// A description of the slot type. Must be less than or equal to 200 characters in length.
	Description pulumix.Output[*string] `pulumi:"description"`
	// A list of EnumerationValue objects that defines the values that
	// the slot type can take. Each value can have a list of synonyms, which are additional values that help
	// train the machine learning model about the values that it resolves for a slot. Attributes are
	// documented under enumeration_value.
	EnumerationValues pulumix.GArrayOutput[SlotTypeEnumerationValue, SlotTypeEnumerationValueOutput] `pulumi:"enumerationValues"`
	// The date when the `$LATEST` version of this slot type was updated.
	LastUpdatedDate pulumix.Output[string] `pulumi:"lastUpdatedDate"`
	// The name of the slot type. The name is not case sensitive. Must be less than or equal to 100 characters in length.
	Name pulumix.Output[string] `pulumi:"name"`
	// Determines the slot resolution strategy that Amazon Lex
	// uses to return slot type values. `ORIGINAL_VALUE` returns the value entered by the user if the user
	// value is similar to the slot value. `TOP_RESOLUTION` returns the first value in the resolution list
	// if there is a resolution list for the slot, otherwise null is returned. Defaults to `ORIGINAL_VALUE`.
	ValueSelectionStrategy pulumix.Output[*string] `pulumi:"valueSelectionStrategy"`
	// The version of the slot type.
	Version pulumix.Output[string] `pulumi:"version"`
}

// NewSlotType registers a new resource with the given unique name, arguments, and options.
func NewSlotType(ctx *pulumi.Context,
	name string, args *SlotTypeArgs, opts ...pulumi.ResourceOption) (*SlotType, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EnumerationValues == nil {
		return nil, errors.New("invalid value for required argument 'EnumerationValues'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SlotType
	err := ctx.RegisterResource("aws:lex/slotType:SlotType", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSlotType gets an existing SlotType resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSlotType(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SlotTypeState, opts ...pulumi.ResourceOption) (*SlotType, error) {
	var resource SlotType
	err := ctx.ReadResource("aws:lex/slotType:SlotType", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SlotType resources.
type slotTypeState struct {
	// Checksum identifying the version of the slot type that was created. The checksum is
	// not included as an argument because the resource will add it automatically when updating the slot type.
	Checksum *string `pulumi:"checksum"`
	// Determines if a new slot type version is created when the initial resource is created and on each
	// update. Defaults to `false`.
	CreateVersion *bool `pulumi:"createVersion"`
	// The date when the slot type version was created.
	CreatedDate *string `pulumi:"createdDate"`
	// A description of the slot type. Must be less than or equal to 200 characters in length.
	Description *string `pulumi:"description"`
	// A list of EnumerationValue objects that defines the values that
	// the slot type can take. Each value can have a list of synonyms, which are additional values that help
	// train the machine learning model about the values that it resolves for a slot. Attributes are
	// documented under enumeration_value.
	EnumerationValues []SlotTypeEnumerationValue `pulumi:"enumerationValues"`
	// The date when the `$LATEST` version of this slot type was updated.
	LastUpdatedDate *string `pulumi:"lastUpdatedDate"`
	// The name of the slot type. The name is not case sensitive. Must be less than or equal to 100 characters in length.
	Name *string `pulumi:"name"`
	// Determines the slot resolution strategy that Amazon Lex
	// uses to return slot type values. `ORIGINAL_VALUE` returns the value entered by the user if the user
	// value is similar to the slot value. `TOP_RESOLUTION` returns the first value in the resolution list
	// if there is a resolution list for the slot, otherwise null is returned. Defaults to `ORIGINAL_VALUE`.
	ValueSelectionStrategy *string `pulumi:"valueSelectionStrategy"`
	// The version of the slot type.
	Version *string `pulumi:"version"`
}

type SlotTypeState struct {
	// Checksum identifying the version of the slot type that was created. The checksum is
	// not included as an argument because the resource will add it automatically when updating the slot type.
	Checksum pulumix.Input[*string]
	// Determines if a new slot type version is created when the initial resource is created and on each
	// update. Defaults to `false`.
	CreateVersion pulumix.Input[*bool]
	// The date when the slot type version was created.
	CreatedDate pulumix.Input[*string]
	// A description of the slot type. Must be less than or equal to 200 characters in length.
	Description pulumix.Input[*string]
	// A list of EnumerationValue objects that defines the values that
	// the slot type can take. Each value can have a list of synonyms, which are additional values that help
	// train the machine learning model about the values that it resolves for a slot. Attributes are
	// documented under enumeration_value.
	EnumerationValues pulumix.Input[[]*SlotTypeEnumerationValueArgs]
	// The date when the `$LATEST` version of this slot type was updated.
	LastUpdatedDate pulumix.Input[*string]
	// The name of the slot type. The name is not case sensitive. Must be less than or equal to 100 characters in length.
	Name pulumix.Input[*string]
	// Determines the slot resolution strategy that Amazon Lex
	// uses to return slot type values. `ORIGINAL_VALUE` returns the value entered by the user if the user
	// value is similar to the slot value. `TOP_RESOLUTION` returns the first value in the resolution list
	// if there is a resolution list for the slot, otherwise null is returned. Defaults to `ORIGINAL_VALUE`.
	ValueSelectionStrategy pulumix.Input[*string]
	// The version of the slot type.
	Version pulumix.Input[*string]
}

func (SlotTypeState) ElementType() reflect.Type {
	return reflect.TypeOf((*slotTypeState)(nil)).Elem()
}

type slotTypeArgs struct {
	// Determines if a new slot type version is created when the initial resource is created and on each
	// update. Defaults to `false`.
	CreateVersion *bool `pulumi:"createVersion"`
	// A description of the slot type. Must be less than or equal to 200 characters in length.
	Description *string `pulumi:"description"`
	// A list of EnumerationValue objects that defines the values that
	// the slot type can take. Each value can have a list of synonyms, which are additional values that help
	// train the machine learning model about the values that it resolves for a slot. Attributes are
	// documented under enumeration_value.
	EnumerationValues []SlotTypeEnumerationValue `pulumi:"enumerationValues"`
	// The name of the slot type. The name is not case sensitive. Must be less than or equal to 100 characters in length.
	Name *string `pulumi:"name"`
	// Determines the slot resolution strategy that Amazon Lex
	// uses to return slot type values. `ORIGINAL_VALUE` returns the value entered by the user if the user
	// value is similar to the slot value. `TOP_RESOLUTION` returns the first value in the resolution list
	// if there is a resolution list for the slot, otherwise null is returned. Defaults to `ORIGINAL_VALUE`.
	ValueSelectionStrategy *string `pulumi:"valueSelectionStrategy"`
}

// The set of arguments for constructing a SlotType resource.
type SlotTypeArgs struct {
	// Determines if a new slot type version is created when the initial resource is created and on each
	// update. Defaults to `false`.
	CreateVersion pulumix.Input[*bool]
	// A description of the slot type. Must be less than or equal to 200 characters in length.
	Description pulumix.Input[*string]
	// A list of EnumerationValue objects that defines the values that
	// the slot type can take. Each value can have a list of synonyms, which are additional values that help
	// train the machine learning model about the values that it resolves for a slot. Attributes are
	// documented under enumeration_value.
	EnumerationValues pulumix.Input[[]*SlotTypeEnumerationValueArgs]
	// The name of the slot type. The name is not case sensitive. Must be less than or equal to 100 characters in length.
	Name pulumix.Input[*string]
	// Determines the slot resolution strategy that Amazon Lex
	// uses to return slot type values. `ORIGINAL_VALUE` returns the value entered by the user if the user
	// value is similar to the slot value. `TOP_RESOLUTION` returns the first value in the resolution list
	// if there is a resolution list for the slot, otherwise null is returned. Defaults to `ORIGINAL_VALUE`.
	ValueSelectionStrategy pulumix.Input[*string]
}

func (SlotTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*slotTypeArgs)(nil)).Elem()
}

type SlotTypeOutput struct{ *pulumi.OutputState }

func (SlotTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SlotType)(nil)).Elem()
}

func (o SlotTypeOutput) ToSlotTypeOutput() SlotTypeOutput {
	return o
}

func (o SlotTypeOutput) ToSlotTypeOutputWithContext(ctx context.Context) SlotTypeOutput {
	return o
}

func (o SlotTypeOutput) ToOutput(ctx context.Context) pulumix.Output[SlotType] {
	return pulumix.Output[SlotType]{
		OutputState: o.OutputState,
	}
}

// Checksum identifying the version of the slot type that was created. The checksum is
// not included as an argument because the resource will add it automatically when updating the slot type.
func (o SlotTypeOutput) Checksum() pulumix.Output[string] {
	value := pulumix.Apply[SlotType](o, func(v SlotType) pulumix.Output[string] { return v.Checksum })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Determines if a new slot type version is created when the initial resource is created and on each
// update. Defaults to `false`.
func (o SlotTypeOutput) CreateVersion() pulumix.Output[*bool] {
	value := pulumix.Apply[SlotType](o, func(v SlotType) pulumix.Output[*bool] { return v.CreateVersion })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// The date when the slot type version was created.
func (o SlotTypeOutput) CreatedDate() pulumix.Output[string] {
	value := pulumix.Apply[SlotType](o, func(v SlotType) pulumix.Output[string] { return v.CreatedDate })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A description of the slot type. Must be less than or equal to 200 characters in length.
func (o SlotTypeOutput) Description() pulumix.Output[*string] {
	value := pulumix.Apply[SlotType](o, func(v SlotType) pulumix.Output[*string] { return v.Description })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// A list of EnumerationValue objects that defines the values that
// the slot type can take. Each value can have a list of synonyms, which are additional values that help
// train the machine learning model about the values that it resolves for a slot. Attributes are
// documented under enumeration_value.
func (o SlotTypeOutput) EnumerationValues() pulumix.GArrayOutput[SlotTypeEnumerationValue, SlotTypeEnumerationValueOutput] {
	value := pulumix.Apply[SlotType](o, func(v SlotType) pulumix.GArrayOutput[SlotTypeEnumerationValue, SlotTypeEnumerationValueOutput] {
		return v.EnumerationValues
	})
	unwrapped := pulumix.Flatten[[]SlotTypeEnumerationValue, pulumix.GArrayOutput[SlotTypeEnumerationValue, SlotTypeEnumerationValueOutput]](value)
	return pulumix.GArrayOutput[SlotTypeEnumerationValue, SlotTypeEnumerationValueOutput]{OutputState: unwrapped.OutputState}
}

// The date when the `$LATEST` version of this slot type was updated.
func (o SlotTypeOutput) LastUpdatedDate() pulumix.Output[string] {
	value := pulumix.Apply[SlotType](o, func(v SlotType) pulumix.Output[string] { return v.LastUpdatedDate })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The name of the slot type. The name is not case sensitive. Must be less than or equal to 100 characters in length.
func (o SlotTypeOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[SlotType](o, func(v SlotType) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Determines the slot resolution strategy that Amazon Lex
// uses to return slot type values. `ORIGINAL_VALUE` returns the value entered by the user if the user
// value is similar to the slot value. `TOP_RESOLUTION` returns the first value in the resolution list
// if there is a resolution list for the slot, otherwise null is returned. Defaults to `ORIGINAL_VALUE`.
func (o SlotTypeOutput) ValueSelectionStrategy() pulumix.Output[*string] {
	value := pulumix.Apply[SlotType](o, func(v SlotType) pulumix.Output[*string] { return v.ValueSelectionStrategy })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The version of the slot type.
func (o SlotTypeOutput) Version() pulumix.Output[string] {
	value := pulumix.Apply[SlotType](o, func(v SlotType) pulumix.Output[string] { return v.Version })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(SlotTypeOutput{})
}
