// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package timestreamwrite

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a Timestream table resource.
type Table struct {
	pulumi.CustomResourceState

	// The ARN that uniquely identifies this table.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The name of the Timestream database.
	DatabaseName pulumix.Output[string] `pulumi:"databaseName"`
	// Contains properties to set on the table when enabling magnetic store writes. See Magnetic Store Write Properties below for more details.
	MagneticStoreWriteProperties pulumix.GPtrOutput[TableMagneticStoreWriteProperties, TableMagneticStoreWritePropertiesOutput] `pulumi:"magneticStoreWriteProperties"`
	// The retention duration for the memory store and magnetic store. See Retention Properties below for more details. If not provided, `magneticStoreRetentionPeriodInDays` default to 73000 and `memoryStoreRetentionPeriodInHours` defaults to 6.
	RetentionProperties pulumix.GPtrOutput[TableRetentionProperties, TableRetentionPropertiesOutput] `pulumi:"retentionProperties"`
	// The schema of the table. See Schema below for more details.
	Schema pulumix.GPtrOutput[TableSchema, TableSchemaOutput] `pulumi:"schema"`
	// The name of the Timestream table.
	TableName pulumix.Output[string] `pulumi:"tableName"`
	// Map of tags to assign to this resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
}

// NewTable registers a new resource with the given unique name, arguments, and options.
func NewTable(ctx *pulumi.Context,
	name string, args *TableArgs, opts ...pulumi.ResourceOption) (*Table, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DatabaseName == nil {
		return nil, errors.New("invalid value for required argument 'DatabaseName'")
	}
	if args.TableName == nil {
		return nil, errors.New("invalid value for required argument 'TableName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Table
	err := ctx.RegisterResource("aws:timestreamwrite/table:Table", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTable gets an existing Table resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTable(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TableState, opts ...pulumi.ResourceOption) (*Table, error) {
	var resource Table
	err := ctx.ReadResource("aws:timestreamwrite/table:Table", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Table resources.
type tableState struct {
	// The ARN that uniquely identifies this table.
	Arn *string `pulumi:"arn"`
	// The name of the Timestream database.
	DatabaseName *string `pulumi:"databaseName"`
	// Contains properties to set on the table when enabling magnetic store writes. See Magnetic Store Write Properties below for more details.
	MagneticStoreWriteProperties *TableMagneticStoreWriteProperties `pulumi:"magneticStoreWriteProperties"`
	// The retention duration for the memory store and magnetic store. See Retention Properties below for more details. If not provided, `magneticStoreRetentionPeriodInDays` default to 73000 and `memoryStoreRetentionPeriodInHours` defaults to 6.
	RetentionProperties *TableRetentionProperties `pulumi:"retentionProperties"`
	// The schema of the table. See Schema below for more details.
	Schema *TableSchema `pulumi:"schema"`
	// The name of the Timestream table.
	TableName *string `pulumi:"tableName"`
	// Map of tags to assign to this resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type TableState struct {
	// The ARN that uniquely identifies this table.
	Arn pulumix.Input[*string]
	// The name of the Timestream database.
	DatabaseName pulumix.Input[*string]
	// Contains properties to set on the table when enabling magnetic store writes. See Magnetic Store Write Properties below for more details.
	MagneticStoreWriteProperties pulumix.Input[*TableMagneticStoreWritePropertiesArgs]
	// The retention duration for the memory store and magnetic store. See Retention Properties below for more details. If not provided, `magneticStoreRetentionPeriodInDays` default to 73000 and `memoryStoreRetentionPeriodInHours` defaults to 6.
	RetentionProperties pulumix.Input[*TableRetentionPropertiesArgs]
	// The schema of the table. See Schema below for more details.
	Schema pulumix.Input[*TableSchemaArgs]
	// The name of the Timestream table.
	TableName pulumix.Input[*string]
	// Map of tags to assign to this resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
}

func (TableState) ElementType() reflect.Type {
	return reflect.TypeOf((*tableState)(nil)).Elem()
}

type tableArgs struct {
	// The name of the Timestream database.
	DatabaseName string `pulumi:"databaseName"`
	// Contains properties to set on the table when enabling magnetic store writes. See Magnetic Store Write Properties below for more details.
	MagneticStoreWriteProperties *TableMagneticStoreWriteProperties `pulumi:"magneticStoreWriteProperties"`
	// The retention duration for the memory store and magnetic store. See Retention Properties below for more details. If not provided, `magneticStoreRetentionPeriodInDays` default to 73000 and `memoryStoreRetentionPeriodInHours` defaults to 6.
	RetentionProperties *TableRetentionProperties `pulumi:"retentionProperties"`
	// The schema of the table. See Schema below for more details.
	Schema *TableSchema `pulumi:"schema"`
	// The name of the Timestream table.
	TableName string `pulumi:"tableName"`
	// Map of tags to assign to this resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Table resource.
type TableArgs struct {
	// The name of the Timestream database.
	DatabaseName pulumix.Input[string]
	// Contains properties to set on the table when enabling magnetic store writes. See Magnetic Store Write Properties below for more details.
	MagneticStoreWriteProperties pulumix.Input[*TableMagneticStoreWritePropertiesArgs]
	// The retention duration for the memory store and magnetic store. See Retention Properties below for more details. If not provided, `magneticStoreRetentionPeriodInDays` default to 73000 and `memoryStoreRetentionPeriodInHours` defaults to 6.
	RetentionProperties pulumix.Input[*TableRetentionPropertiesArgs]
	// The schema of the table. See Schema below for more details.
	Schema pulumix.Input[*TableSchemaArgs]
	// The name of the Timestream table.
	TableName pulumix.Input[string]
	// Map of tags to assign to this resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (TableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*tableArgs)(nil)).Elem()
}

type TableOutput struct{ *pulumi.OutputState }

func (TableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Table)(nil)).Elem()
}

func (o TableOutput) ToTableOutput() TableOutput {
	return o
}

func (o TableOutput) ToTableOutputWithContext(ctx context.Context) TableOutput {
	return o
}

func (o TableOutput) ToOutput(ctx context.Context) pulumix.Output[Table] {
	return pulumix.Output[Table]{
		OutputState: o.OutputState,
	}
}

// The ARN that uniquely identifies this table.
func (o TableOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Table](o, func(v Table) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The name of the Timestream database.
func (o TableOutput) DatabaseName() pulumix.Output[string] {
	value := pulumix.Apply[Table](o, func(v Table) pulumix.Output[string] { return v.DatabaseName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Contains properties to set on the table when enabling magnetic store writes. See Magnetic Store Write Properties below for more details.
func (o TableOutput) MagneticStoreWriteProperties() pulumix.GPtrOutput[TableMagneticStoreWriteProperties, TableMagneticStoreWritePropertiesOutput] {
	value := pulumix.Apply[Table](o, func(v Table) pulumix.GPtrOutput[TableMagneticStoreWriteProperties, TableMagneticStoreWritePropertiesOutput] {
		return v.MagneticStoreWriteProperties
	})
	unwrapped := pulumix.Flatten[*TableMagneticStoreWriteProperties, pulumix.GPtrOutput[TableMagneticStoreWriteProperties, TableMagneticStoreWritePropertiesOutput]](value)
	return pulumix.GPtrOutput[TableMagneticStoreWriteProperties, TableMagneticStoreWritePropertiesOutput]{OutputState: unwrapped.OutputState}
}

// The retention duration for the memory store and magnetic store. See Retention Properties below for more details. If not provided, `magneticStoreRetentionPeriodInDays` default to 73000 and `memoryStoreRetentionPeriodInHours` defaults to 6.
func (o TableOutput) RetentionProperties() pulumix.GPtrOutput[TableRetentionProperties, TableRetentionPropertiesOutput] {
	value := pulumix.Apply[Table](o, func(v Table) pulumix.GPtrOutput[TableRetentionProperties, TableRetentionPropertiesOutput] {
		return v.RetentionProperties
	})
	unwrapped := pulumix.Flatten[*TableRetentionProperties, pulumix.GPtrOutput[TableRetentionProperties, TableRetentionPropertiesOutput]](value)
	return pulumix.GPtrOutput[TableRetentionProperties, TableRetentionPropertiesOutput]{OutputState: unwrapped.OutputState}
}

// The schema of the table. See Schema below for more details.
func (o TableOutput) Schema() pulumix.GPtrOutput[TableSchema, TableSchemaOutput] {
	value := pulumix.Apply[Table](o, func(v Table) pulumix.GPtrOutput[TableSchema, TableSchemaOutput] { return v.Schema })
	unwrapped := pulumix.Flatten[*TableSchema, pulumix.GPtrOutput[TableSchema, TableSchemaOutput]](value)
	return pulumix.GPtrOutput[TableSchema, TableSchemaOutput]{OutputState: unwrapped.OutputState}
}

// The name of the Timestream table.
func (o TableOutput) TableName() pulumix.Output[string] {
	value := pulumix.Apply[Table](o, func(v Table) pulumix.Output[string] { return v.TableName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Map of tags to assign to this resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o TableOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Table](o, func(v Table) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o TableOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[Table](o, func(v Table) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(TableOutput{})
}
