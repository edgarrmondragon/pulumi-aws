// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudfront

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a CloudFront Function resource. With CloudFront Functions in Amazon CloudFront, you can write lightweight functions in JavaScript for high-scale, latency-sensitive CDN customizations.
//
// See [CloudFront Functions](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/cloudfront-functions.html)
//
// > **NOTE:** You cannot delete a function if itâ€™s associated with a cache behavior. First, update your distributions to remove the function association from all cache behaviors, then delete the function.
type Function struct {
	pulumi.CustomResourceState

	// Amazon Resource Name (ARN) identifying your CloudFront Function.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// Source code of the function
	Code pulumix.Output[string] `pulumi:"code"`
	// Comment.
	Comment pulumix.Output[*string] `pulumi:"comment"`
	// ETag hash of the function. This is the value for the `DEVELOPMENT` stage of the function.
	Etag pulumix.Output[string] `pulumi:"etag"`
	// ETag hash of any `LIVE` stage of the function.
	LiveStageEtag pulumix.Output[string] `pulumi:"liveStageEtag"`
	// Unique name for your CloudFront Function.
	Name pulumix.Output[string] `pulumi:"name"`
	// Whether to publish creation/change as Live CloudFront Function Version. Defaults to `true`.
	Publish pulumix.Output[*bool] `pulumi:"publish"`
	// Identifier of the function's runtime. Currently only `cloudfront-js-1.0` is valid.
	//
	// The following arguments are optional:
	Runtime pulumix.Output[string] `pulumi:"runtime"`
	// Status of the function. Can be `UNPUBLISHED`, `UNASSOCIATED` or `ASSOCIATED`.
	Status pulumix.Output[string] `pulumi:"status"`
}

// NewFunction registers a new resource with the given unique name, arguments, and options.
func NewFunction(ctx *pulumi.Context,
	name string, args *FunctionArgs, opts ...pulumi.ResourceOption) (*Function, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Code == nil {
		return nil, errors.New("invalid value for required argument 'Code'")
	}
	if args.Runtime == nil {
		return nil, errors.New("invalid value for required argument 'Runtime'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Function
	err := ctx.RegisterResource("aws:cloudfront/function:Function", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFunction gets an existing Function resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFunction(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FunctionState, opts ...pulumi.ResourceOption) (*Function, error) {
	var resource Function
	err := ctx.ReadResource("aws:cloudfront/function:Function", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Function resources.
type functionState struct {
	// Amazon Resource Name (ARN) identifying your CloudFront Function.
	Arn *string `pulumi:"arn"`
	// Source code of the function
	Code *string `pulumi:"code"`
	// Comment.
	Comment *string `pulumi:"comment"`
	// ETag hash of the function. This is the value for the `DEVELOPMENT` stage of the function.
	Etag *string `pulumi:"etag"`
	// ETag hash of any `LIVE` stage of the function.
	LiveStageEtag *string `pulumi:"liveStageEtag"`
	// Unique name for your CloudFront Function.
	Name *string `pulumi:"name"`
	// Whether to publish creation/change as Live CloudFront Function Version. Defaults to `true`.
	Publish *bool `pulumi:"publish"`
	// Identifier of the function's runtime. Currently only `cloudfront-js-1.0` is valid.
	//
	// The following arguments are optional:
	Runtime *string `pulumi:"runtime"`
	// Status of the function. Can be `UNPUBLISHED`, `UNASSOCIATED` or `ASSOCIATED`.
	Status *string `pulumi:"status"`
}

type FunctionState struct {
	// Amazon Resource Name (ARN) identifying your CloudFront Function.
	Arn pulumix.Input[*string]
	// Source code of the function
	Code pulumix.Input[*string]
	// Comment.
	Comment pulumix.Input[*string]
	// ETag hash of the function. This is the value for the `DEVELOPMENT` stage of the function.
	Etag pulumix.Input[*string]
	// ETag hash of any `LIVE` stage of the function.
	LiveStageEtag pulumix.Input[*string]
	// Unique name for your CloudFront Function.
	Name pulumix.Input[*string]
	// Whether to publish creation/change as Live CloudFront Function Version. Defaults to `true`.
	Publish pulumix.Input[*bool]
	// Identifier of the function's runtime. Currently only `cloudfront-js-1.0` is valid.
	//
	// The following arguments are optional:
	Runtime pulumix.Input[*string]
	// Status of the function. Can be `UNPUBLISHED`, `UNASSOCIATED` or `ASSOCIATED`.
	Status pulumix.Input[*string]
}

func (FunctionState) ElementType() reflect.Type {
	return reflect.TypeOf((*functionState)(nil)).Elem()
}

type functionArgs struct {
	// Source code of the function
	Code string `pulumi:"code"`
	// Comment.
	Comment *string `pulumi:"comment"`
	// Unique name for your CloudFront Function.
	Name *string `pulumi:"name"`
	// Whether to publish creation/change as Live CloudFront Function Version. Defaults to `true`.
	Publish *bool `pulumi:"publish"`
	// Identifier of the function's runtime. Currently only `cloudfront-js-1.0` is valid.
	//
	// The following arguments are optional:
	Runtime string `pulumi:"runtime"`
}

// The set of arguments for constructing a Function resource.
type FunctionArgs struct {
	// Source code of the function
	Code pulumix.Input[string]
	// Comment.
	Comment pulumix.Input[*string]
	// Unique name for your CloudFront Function.
	Name pulumix.Input[*string]
	// Whether to publish creation/change as Live CloudFront Function Version. Defaults to `true`.
	Publish pulumix.Input[*bool]
	// Identifier of the function's runtime. Currently only `cloudfront-js-1.0` is valid.
	//
	// The following arguments are optional:
	Runtime pulumix.Input[string]
}

func (FunctionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*functionArgs)(nil)).Elem()
}

type FunctionOutput struct{ *pulumi.OutputState }

func (FunctionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Function)(nil)).Elem()
}

func (o FunctionOutput) ToFunctionOutput() FunctionOutput {
	return o
}

func (o FunctionOutput) ToFunctionOutputWithContext(ctx context.Context) FunctionOutput {
	return o
}

func (o FunctionOutput) ToOutput(ctx context.Context) pulumix.Output[Function] {
	return pulumix.Output[Function]{
		OutputState: o.OutputState,
	}
}

// Amazon Resource Name (ARN) identifying your CloudFront Function.
func (o FunctionOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Function](o, func(v Function) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Source code of the function
func (o FunctionOutput) Code() pulumix.Output[string] {
	value := pulumix.Apply[Function](o, func(v Function) pulumix.Output[string] { return v.Code })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Comment.
func (o FunctionOutput) Comment() pulumix.Output[*string] {
	value := pulumix.Apply[Function](o, func(v Function) pulumix.Output[*string] { return v.Comment })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// ETag hash of the function. This is the value for the `DEVELOPMENT` stage of the function.
func (o FunctionOutput) Etag() pulumix.Output[string] {
	value := pulumix.Apply[Function](o, func(v Function) pulumix.Output[string] { return v.Etag })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// ETag hash of any `LIVE` stage of the function.
func (o FunctionOutput) LiveStageEtag() pulumix.Output[string] {
	value := pulumix.Apply[Function](o, func(v Function) pulumix.Output[string] { return v.LiveStageEtag })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Unique name for your CloudFront Function.
func (o FunctionOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[Function](o, func(v Function) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Whether to publish creation/change as Live CloudFront Function Version. Defaults to `true`.
func (o FunctionOutput) Publish() pulumix.Output[*bool] {
	value := pulumix.Apply[Function](o, func(v Function) pulumix.Output[*bool] { return v.Publish })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// Identifier of the function's runtime. Currently only `cloudfront-js-1.0` is valid.
//
// The following arguments are optional:
func (o FunctionOutput) Runtime() pulumix.Output[string] {
	value := pulumix.Apply[Function](o, func(v Function) pulumix.Output[string] { return v.Runtime })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Status of the function. Can be `UNPUBLISHED`, `UNASSOCIATED` or `ASSOCIATED`.
func (o FunctionOutput) Status() pulumix.Output[string] {
	value := pulumix.Apply[Function](o, func(v Function) pulumix.Output[string] { return v.Status })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(FunctionOutput{})
}
