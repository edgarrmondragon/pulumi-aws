// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package costexplorer

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a CE Anomaly Monitor.
type AnomalyMonitor struct {
	pulumi.CustomResourceState

	// ARN of the anomaly monitor.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The dimensions to evaluate. Valid values: `SERVICE`.
	MonitorDimension pulumix.Output[*string] `pulumi:"monitorDimension"`
	// A valid JSON representation for the [Expression](https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_Expression.html) object.
	MonitorSpecification pulumix.Output[*string] `pulumi:"monitorSpecification"`
	// The possible type values. Valid values: `DIMENSIONAL` | `CUSTOM`.
	MonitorType pulumix.Output[string] `pulumi:"monitorType"`
	// The name of the monitor.
	Name pulumix.Output[string] `pulumi:"name"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
}

// NewAnomalyMonitor registers a new resource with the given unique name, arguments, and options.
func NewAnomalyMonitor(ctx *pulumi.Context,
	name string, args *AnomalyMonitorArgs, opts ...pulumi.ResourceOption) (*AnomalyMonitor, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.MonitorType == nil {
		return nil, errors.New("invalid value for required argument 'MonitorType'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AnomalyMonitor
	err := ctx.RegisterResource("aws:costexplorer/anomalyMonitor:AnomalyMonitor", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAnomalyMonitor gets an existing AnomalyMonitor resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAnomalyMonitor(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AnomalyMonitorState, opts ...pulumi.ResourceOption) (*AnomalyMonitor, error) {
	var resource AnomalyMonitor
	err := ctx.ReadResource("aws:costexplorer/anomalyMonitor:AnomalyMonitor", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AnomalyMonitor resources.
type anomalyMonitorState struct {
	// ARN of the anomaly monitor.
	Arn *string `pulumi:"arn"`
	// The dimensions to evaluate. Valid values: `SERVICE`.
	MonitorDimension *string `pulumi:"monitorDimension"`
	// A valid JSON representation for the [Expression](https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_Expression.html) object.
	MonitorSpecification *string `pulumi:"monitorSpecification"`
	// The possible type values. Valid values: `DIMENSIONAL` | `CUSTOM`.
	MonitorType *string `pulumi:"monitorType"`
	// The name of the monitor.
	Name *string `pulumi:"name"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type AnomalyMonitorState struct {
	// ARN of the anomaly monitor.
	Arn pulumix.Input[*string]
	// The dimensions to evaluate. Valid values: `SERVICE`.
	MonitorDimension pulumix.Input[*string]
	// A valid JSON representation for the [Expression](https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_Expression.html) object.
	MonitorSpecification pulumix.Input[*string]
	// The possible type values. Valid values: `DIMENSIONAL` | `CUSTOM`.
	MonitorType pulumix.Input[*string]
	// The name of the monitor.
	Name pulumix.Input[*string]
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
}

func (AnomalyMonitorState) ElementType() reflect.Type {
	return reflect.TypeOf((*anomalyMonitorState)(nil)).Elem()
}

type anomalyMonitorArgs struct {
	// The dimensions to evaluate. Valid values: `SERVICE`.
	MonitorDimension *string `pulumi:"monitorDimension"`
	// A valid JSON representation for the [Expression](https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_Expression.html) object.
	MonitorSpecification *string `pulumi:"monitorSpecification"`
	// The possible type values. Valid values: `DIMENSIONAL` | `CUSTOM`.
	MonitorType string `pulumi:"monitorType"`
	// The name of the monitor.
	Name *string `pulumi:"name"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a AnomalyMonitor resource.
type AnomalyMonitorArgs struct {
	// The dimensions to evaluate. Valid values: `SERVICE`.
	MonitorDimension pulumix.Input[*string]
	// A valid JSON representation for the [Expression](https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_Expression.html) object.
	MonitorSpecification pulumix.Input[*string]
	// The possible type values. Valid values: `DIMENSIONAL` | `CUSTOM`.
	MonitorType pulumix.Input[string]
	// The name of the monitor.
	Name pulumix.Input[*string]
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (AnomalyMonitorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*anomalyMonitorArgs)(nil)).Elem()
}

type AnomalyMonitorOutput struct{ *pulumi.OutputState }

func (AnomalyMonitorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnomalyMonitor)(nil)).Elem()
}

func (o AnomalyMonitorOutput) ToAnomalyMonitorOutput() AnomalyMonitorOutput {
	return o
}

func (o AnomalyMonitorOutput) ToAnomalyMonitorOutputWithContext(ctx context.Context) AnomalyMonitorOutput {
	return o
}

func (o AnomalyMonitorOutput) ToOutput(ctx context.Context) pulumix.Output[AnomalyMonitor] {
	return pulumix.Output[AnomalyMonitor]{
		OutputState: o.OutputState,
	}
}

// ARN of the anomaly monitor.
func (o AnomalyMonitorOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[AnomalyMonitor](o, func(v AnomalyMonitor) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The dimensions to evaluate. Valid values: `SERVICE`.
func (o AnomalyMonitorOutput) MonitorDimension() pulumix.Output[*string] {
	value := pulumix.Apply[AnomalyMonitor](o, func(v AnomalyMonitor) pulumix.Output[*string] { return v.MonitorDimension })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// A valid JSON representation for the [Expression](https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_Expression.html) object.
func (o AnomalyMonitorOutput) MonitorSpecification() pulumix.Output[*string] {
	value := pulumix.Apply[AnomalyMonitor](o, func(v AnomalyMonitor) pulumix.Output[*string] { return v.MonitorSpecification })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The possible type values. Valid values: `DIMENSIONAL` | `CUSTOM`.
func (o AnomalyMonitorOutput) MonitorType() pulumix.Output[string] {
	value := pulumix.Apply[AnomalyMonitor](o, func(v AnomalyMonitor) pulumix.Output[string] { return v.MonitorType })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The name of the monitor.
func (o AnomalyMonitorOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[AnomalyMonitor](o, func(v AnomalyMonitor) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o AnomalyMonitorOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[AnomalyMonitor](o, func(v AnomalyMonitor) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o AnomalyMonitorOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[AnomalyMonitor](o, func(v AnomalyMonitor) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(AnomalyMonitorOutput{})
}
