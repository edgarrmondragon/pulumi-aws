// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package autoscalingplans

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type ScalingPlanApplicationSource struct {
	// ARN of a AWS CloudFormation stack.
	CloudformationStackArn *string `pulumi:"cloudformationStackArn"`
	// Set of tags.
	TagFilters []ScalingPlanApplicationSourceTagFilter `pulumi:"tagFilters"`
}

type ScalingPlanApplicationSourceArgs struct {
	// ARN of a AWS CloudFormation stack.
	CloudformationStackArn pulumix.Input[*string] `pulumi:"cloudformationStackArn"`
	// Set of tags.
	TagFilters pulumix.Input[[]*ScalingPlanApplicationSourceTagFilterArgs] `pulumi:"tagFilters"`
}

func (ScalingPlanApplicationSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPlanApplicationSource)(nil)).Elem()
}

func (i ScalingPlanApplicationSourceArgs) ToScalingPlanApplicationSourceOutput() ScalingPlanApplicationSourceOutput {
	return i.ToScalingPlanApplicationSourceOutputWithContext(context.Background())
}

func (i ScalingPlanApplicationSourceArgs) ToScalingPlanApplicationSourceOutputWithContext(ctx context.Context) ScalingPlanApplicationSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPlanApplicationSourceOutput)
}

func (i *ScalingPlanApplicationSourceArgs) ToOutput(ctx context.Context) pulumix.Output[*ScalingPlanApplicationSourceArgs] {
	return pulumix.Val(i)
}

type ScalingPlanApplicationSourceOutput struct{ *pulumi.OutputState }

func (ScalingPlanApplicationSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPlanApplicationSource)(nil)).Elem()
}

func (o ScalingPlanApplicationSourceOutput) ToScalingPlanApplicationSourceOutput() ScalingPlanApplicationSourceOutput {
	return o
}

func (o ScalingPlanApplicationSourceOutput) ToScalingPlanApplicationSourceOutputWithContext(ctx context.Context) ScalingPlanApplicationSourceOutput {
	return o
}

func (o ScalingPlanApplicationSourceOutput) ToOutput(ctx context.Context) pulumix.Output[ScalingPlanApplicationSource] {
	return pulumix.Output[ScalingPlanApplicationSource]{
		OutputState: o.OutputState,
	}
}

// ARN of a AWS CloudFormation stack.
func (o ScalingPlanApplicationSourceOutput) CloudformationStackArn() pulumix.Output[*string] {
	return pulumix.Apply[ScalingPlanApplicationSource](o, func(v ScalingPlanApplicationSource) *string { return v.CloudformationStackArn })
}

// Set of tags.
func (o ScalingPlanApplicationSourceOutput) TagFilters() pulumix.GArrayOutput[ScalingPlanApplicationSourceTagFilter, ScalingPlanApplicationSourceTagFilterOutput] {
	value := pulumix.Apply[ScalingPlanApplicationSource](o, func(v ScalingPlanApplicationSource) []ScalingPlanApplicationSourceTagFilter { return v.TagFilters })
	return pulumix.GArrayOutput[ScalingPlanApplicationSourceTagFilter, ScalingPlanApplicationSourceTagFilterOutput]{OutputState: value.OutputState}
}

type ScalingPlanApplicationSourceTagFilter struct {
	// Tag key.
	Key string `pulumi:"key"`
	// Tag values.
	Values []string `pulumi:"values"`
}

type ScalingPlanApplicationSourceTagFilterArgs struct {
	// Tag key.
	Key pulumix.Input[string] `pulumi:"key"`
	// Tag values.
	Values pulumix.Input[[]string] `pulumi:"values"`
}

func (ScalingPlanApplicationSourceTagFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPlanApplicationSourceTagFilter)(nil)).Elem()
}

func (i ScalingPlanApplicationSourceTagFilterArgs) ToScalingPlanApplicationSourceTagFilterOutput() ScalingPlanApplicationSourceTagFilterOutput {
	return i.ToScalingPlanApplicationSourceTagFilterOutputWithContext(context.Background())
}

func (i ScalingPlanApplicationSourceTagFilterArgs) ToScalingPlanApplicationSourceTagFilterOutputWithContext(ctx context.Context) ScalingPlanApplicationSourceTagFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPlanApplicationSourceTagFilterOutput)
}

func (i *ScalingPlanApplicationSourceTagFilterArgs) ToOutput(ctx context.Context) pulumix.Output[*ScalingPlanApplicationSourceTagFilterArgs] {
	return pulumix.Val(i)
}

type ScalingPlanApplicationSourceTagFilterOutput struct{ *pulumi.OutputState }

func (ScalingPlanApplicationSourceTagFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPlanApplicationSourceTagFilter)(nil)).Elem()
}

func (o ScalingPlanApplicationSourceTagFilterOutput) ToScalingPlanApplicationSourceTagFilterOutput() ScalingPlanApplicationSourceTagFilterOutput {
	return o
}

func (o ScalingPlanApplicationSourceTagFilterOutput) ToScalingPlanApplicationSourceTagFilterOutputWithContext(ctx context.Context) ScalingPlanApplicationSourceTagFilterOutput {
	return o
}

func (o ScalingPlanApplicationSourceTagFilterOutput) ToOutput(ctx context.Context) pulumix.Output[ScalingPlanApplicationSourceTagFilter] {
	return pulumix.Output[ScalingPlanApplicationSourceTagFilter]{
		OutputState: o.OutputState,
	}
}

// Tag key.
func (o ScalingPlanApplicationSourceTagFilterOutput) Key() pulumix.Output[string] {
	return pulumix.Apply[ScalingPlanApplicationSourceTagFilter](o, func(v ScalingPlanApplicationSourceTagFilter) string { return v.Key })
}

// Tag values.
func (o ScalingPlanApplicationSourceTagFilterOutput) Values() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[ScalingPlanApplicationSourceTagFilter](o, func(v ScalingPlanApplicationSourceTagFilter) []string { return v.Values })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

type ScalingPlanScalingInstruction struct {
	// Customized load metric to use for predictive scaling. You must specify either `customizedLoadMetricSpecification` or `predefinedLoadMetricSpecification` when configuring predictive scaling.
	// More details can be found in the [AWS Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/plans/APIReference/API_CustomizedLoadMetricSpecification.html).
	CustomizedLoadMetricSpecification *ScalingPlanScalingInstructionCustomizedLoadMetricSpecification `pulumi:"customizedLoadMetricSpecification"`
	// Boolean controlling whether dynamic scaling by AWS Auto Scaling is disabled. Defaults to `false`.
	DisableDynamicScaling *bool `pulumi:"disableDynamicScaling"`
	// Maximum capacity of the resource. The exception to this upper limit is if you specify a non-default setting for `predictiveScalingMaxCapacityBehavior`.
	MaxCapacity int `pulumi:"maxCapacity"`
	// Minimum capacity of the resource.
	MinCapacity int `pulumi:"minCapacity"`
	// Predefined load metric to use for predictive scaling. You must specify either `predefinedLoadMetricSpecification` or `customizedLoadMetricSpecification` when configuring predictive scaling.
	// More details can be found in the [AWS Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/plans/APIReference/API_PredefinedLoadMetricSpecification.html).
	PredefinedLoadMetricSpecification *ScalingPlanScalingInstructionPredefinedLoadMetricSpecification `pulumi:"predefinedLoadMetricSpecification"`
	// Defines the behavior that should be applied if the forecast capacity approaches or exceeds the maximum capacity specified for the resource.
	// Valid values: `SetForecastCapacityToMaxCapacity`, `SetMaxCapacityAboveForecastCapacity`, `SetMaxCapacityToForecastCapacity`.
	PredictiveScalingMaxCapacityBehavior *string `pulumi:"predictiveScalingMaxCapacityBehavior"`
	// Size of the capacity buffer to use when the forecast capacity is close to or exceeds the maximum capacity.
	PredictiveScalingMaxCapacityBuffer *int `pulumi:"predictiveScalingMaxCapacityBuffer"`
	// Predictive scaling mode. Valid values: `ForecastAndScale`, `ForecastOnly`.
	PredictiveScalingMode *string `pulumi:"predictiveScalingMode"`
	// ID of the resource. This string consists of the resource type and unique identifier.
	ResourceId string `pulumi:"resourceId"`
	// Scalable dimension associated with the resource. Valid values: `autoscaling:autoScalingGroup:DesiredCapacity`, `dynamodb:index:ReadCapacityUnits`, `dynamodb:index:WriteCapacityUnits`, `dynamodb:table:ReadCapacityUnits`, `dynamodb:table:WriteCapacityUnits`, `ecs:service:DesiredCount`, `ec2:spot-fleet-request:TargetCapacity`, `rds:cluster:ReadReplicaCount`.
	ScalableDimension string `pulumi:"scalableDimension"`
	// Controls whether a resource's externally created scaling policies are kept or replaced. Valid values: `KeepExternalPolicies`, `ReplaceExternalPolicies`. Defaults to `KeepExternalPolicies`.
	ScalingPolicyUpdateBehavior *string `pulumi:"scalingPolicyUpdateBehavior"`
	// Amount of time, in seconds, to buffer the run time of scheduled scaling actions when scaling out.
	ScheduledActionBufferTime *int `pulumi:"scheduledActionBufferTime"`
	// Namespace of the AWS service. Valid values: `autoscaling`, `dynamodb`, `ecs`, `ec2`, `rds`.
	ServiceNamespace string `pulumi:"serviceNamespace"`
	// Structure that defines new target tracking configurations. Each of these structures includes a specific scaling metric and a target value for the metric, along with various parameters to use with dynamic scaling.
	// More details can be found in the [AWS Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/plans/APIReference/API_TargetTrackingConfiguration.html).
	TargetTrackingConfigurations []ScalingPlanScalingInstructionTargetTrackingConfiguration `pulumi:"targetTrackingConfigurations"`
}

type ScalingPlanScalingInstructionArgs struct {
	// Customized load metric to use for predictive scaling. You must specify either `customizedLoadMetricSpecification` or `predefinedLoadMetricSpecification` when configuring predictive scaling.
	// More details can be found in the [AWS Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/plans/APIReference/API_CustomizedLoadMetricSpecification.html).
	CustomizedLoadMetricSpecification pulumix.Input[*ScalingPlanScalingInstructionCustomizedLoadMetricSpecificationArgs] `pulumi:"customizedLoadMetricSpecification"`
	// Boolean controlling whether dynamic scaling by AWS Auto Scaling is disabled. Defaults to `false`.
	DisableDynamicScaling pulumix.Input[*bool] `pulumi:"disableDynamicScaling"`
	// Maximum capacity of the resource. The exception to this upper limit is if you specify a non-default setting for `predictiveScalingMaxCapacityBehavior`.
	MaxCapacity pulumix.Input[int] `pulumi:"maxCapacity"`
	// Minimum capacity of the resource.
	MinCapacity pulumix.Input[int] `pulumi:"minCapacity"`
	// Predefined load metric to use for predictive scaling. You must specify either `predefinedLoadMetricSpecification` or `customizedLoadMetricSpecification` when configuring predictive scaling.
	// More details can be found in the [AWS Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/plans/APIReference/API_PredefinedLoadMetricSpecification.html).
	PredefinedLoadMetricSpecification pulumix.Input[*ScalingPlanScalingInstructionPredefinedLoadMetricSpecificationArgs] `pulumi:"predefinedLoadMetricSpecification"`
	// Defines the behavior that should be applied if the forecast capacity approaches or exceeds the maximum capacity specified for the resource.
	// Valid values: `SetForecastCapacityToMaxCapacity`, `SetMaxCapacityAboveForecastCapacity`, `SetMaxCapacityToForecastCapacity`.
	PredictiveScalingMaxCapacityBehavior pulumix.Input[*string] `pulumi:"predictiveScalingMaxCapacityBehavior"`
	// Size of the capacity buffer to use when the forecast capacity is close to or exceeds the maximum capacity.
	PredictiveScalingMaxCapacityBuffer pulumix.Input[*int] `pulumi:"predictiveScalingMaxCapacityBuffer"`
	// Predictive scaling mode. Valid values: `ForecastAndScale`, `ForecastOnly`.
	PredictiveScalingMode pulumix.Input[*string] `pulumi:"predictiveScalingMode"`
	// ID of the resource. This string consists of the resource type and unique identifier.
	ResourceId pulumix.Input[string] `pulumi:"resourceId"`
	// Scalable dimension associated with the resource. Valid values: `autoscaling:autoScalingGroup:DesiredCapacity`, `dynamodb:index:ReadCapacityUnits`, `dynamodb:index:WriteCapacityUnits`, `dynamodb:table:ReadCapacityUnits`, `dynamodb:table:WriteCapacityUnits`, `ecs:service:DesiredCount`, `ec2:spot-fleet-request:TargetCapacity`, `rds:cluster:ReadReplicaCount`.
	ScalableDimension pulumix.Input[string] `pulumi:"scalableDimension"`
	// Controls whether a resource's externally created scaling policies are kept or replaced. Valid values: `KeepExternalPolicies`, `ReplaceExternalPolicies`. Defaults to `KeepExternalPolicies`.
	ScalingPolicyUpdateBehavior pulumix.Input[*string] `pulumi:"scalingPolicyUpdateBehavior"`
	// Amount of time, in seconds, to buffer the run time of scheduled scaling actions when scaling out.
	ScheduledActionBufferTime pulumix.Input[*int] `pulumi:"scheduledActionBufferTime"`
	// Namespace of the AWS service. Valid values: `autoscaling`, `dynamodb`, `ecs`, `ec2`, `rds`.
	ServiceNamespace pulumix.Input[string] `pulumi:"serviceNamespace"`
	// Structure that defines new target tracking configurations. Each of these structures includes a specific scaling metric and a target value for the metric, along with various parameters to use with dynamic scaling.
	// More details can be found in the [AWS Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/plans/APIReference/API_TargetTrackingConfiguration.html).
	TargetTrackingConfigurations pulumix.Input[[]*ScalingPlanScalingInstructionTargetTrackingConfigurationArgs] `pulumi:"targetTrackingConfigurations"`
}

func (ScalingPlanScalingInstructionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPlanScalingInstruction)(nil)).Elem()
}

func (i ScalingPlanScalingInstructionArgs) ToScalingPlanScalingInstructionOutput() ScalingPlanScalingInstructionOutput {
	return i.ToScalingPlanScalingInstructionOutputWithContext(context.Background())
}

func (i ScalingPlanScalingInstructionArgs) ToScalingPlanScalingInstructionOutputWithContext(ctx context.Context) ScalingPlanScalingInstructionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPlanScalingInstructionOutput)
}

func (i *ScalingPlanScalingInstructionArgs) ToOutput(ctx context.Context) pulumix.Output[*ScalingPlanScalingInstructionArgs] {
	return pulumix.Val(i)
}

type ScalingPlanScalingInstructionOutput struct{ *pulumi.OutputState }

func (ScalingPlanScalingInstructionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPlanScalingInstruction)(nil)).Elem()
}

func (o ScalingPlanScalingInstructionOutput) ToScalingPlanScalingInstructionOutput() ScalingPlanScalingInstructionOutput {
	return o
}

func (o ScalingPlanScalingInstructionOutput) ToScalingPlanScalingInstructionOutputWithContext(ctx context.Context) ScalingPlanScalingInstructionOutput {
	return o
}

func (o ScalingPlanScalingInstructionOutput) ToOutput(ctx context.Context) pulumix.Output[ScalingPlanScalingInstruction] {
	return pulumix.Output[ScalingPlanScalingInstruction]{
		OutputState: o.OutputState,
	}
}

// Customized load metric to use for predictive scaling. You must specify either `customizedLoadMetricSpecification` or `predefinedLoadMetricSpecification` when configuring predictive scaling.
// More details can be found in the [AWS Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/plans/APIReference/API_CustomizedLoadMetricSpecification.html).
func (o ScalingPlanScalingInstructionOutput) CustomizedLoadMetricSpecification() pulumix.GPtrOutput[ScalingPlanScalingInstructionCustomizedLoadMetricSpecification, ScalingPlanScalingInstructionCustomizedLoadMetricSpecificationOutput] {
	value := pulumix.Apply[ScalingPlanScalingInstruction](o, func(v ScalingPlanScalingInstruction) *ScalingPlanScalingInstructionCustomizedLoadMetricSpecification {
		return v.CustomizedLoadMetricSpecification
	})
	return pulumix.GPtrOutput[ScalingPlanScalingInstructionCustomizedLoadMetricSpecification, ScalingPlanScalingInstructionCustomizedLoadMetricSpecificationOutput]{OutputState: value.OutputState}
}

// Boolean controlling whether dynamic scaling by AWS Auto Scaling is disabled. Defaults to `false`.
func (o ScalingPlanScalingInstructionOutput) DisableDynamicScaling() pulumix.Output[*bool] {
	return pulumix.Apply[ScalingPlanScalingInstruction](o, func(v ScalingPlanScalingInstruction) *bool { return v.DisableDynamicScaling })
}

// Maximum capacity of the resource. The exception to this upper limit is if you specify a non-default setting for `predictiveScalingMaxCapacityBehavior`.
func (o ScalingPlanScalingInstructionOutput) MaxCapacity() pulumix.Output[int] {
	return pulumix.Apply[ScalingPlanScalingInstruction](o, func(v ScalingPlanScalingInstruction) int { return v.MaxCapacity })
}

// Minimum capacity of the resource.
func (o ScalingPlanScalingInstructionOutput) MinCapacity() pulumix.Output[int] {
	return pulumix.Apply[ScalingPlanScalingInstruction](o, func(v ScalingPlanScalingInstruction) int { return v.MinCapacity })
}

// Predefined load metric to use for predictive scaling. You must specify either `predefinedLoadMetricSpecification` or `customizedLoadMetricSpecification` when configuring predictive scaling.
// More details can be found in the [AWS Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/plans/APIReference/API_PredefinedLoadMetricSpecification.html).
func (o ScalingPlanScalingInstructionOutput) PredefinedLoadMetricSpecification() pulumix.GPtrOutput[ScalingPlanScalingInstructionPredefinedLoadMetricSpecification, ScalingPlanScalingInstructionPredefinedLoadMetricSpecificationOutput] {
	value := pulumix.Apply[ScalingPlanScalingInstruction](o, func(v ScalingPlanScalingInstruction) *ScalingPlanScalingInstructionPredefinedLoadMetricSpecification {
		return v.PredefinedLoadMetricSpecification
	})
	return pulumix.GPtrOutput[ScalingPlanScalingInstructionPredefinedLoadMetricSpecification, ScalingPlanScalingInstructionPredefinedLoadMetricSpecificationOutput]{OutputState: value.OutputState}
}

// Defines the behavior that should be applied if the forecast capacity approaches or exceeds the maximum capacity specified for the resource.
// Valid values: `SetForecastCapacityToMaxCapacity`, `SetMaxCapacityAboveForecastCapacity`, `SetMaxCapacityToForecastCapacity`.
func (o ScalingPlanScalingInstructionOutput) PredictiveScalingMaxCapacityBehavior() pulumix.Output[*string] {
	return pulumix.Apply[ScalingPlanScalingInstruction](o, func(v ScalingPlanScalingInstruction) *string { return v.PredictiveScalingMaxCapacityBehavior })
}

// Size of the capacity buffer to use when the forecast capacity is close to or exceeds the maximum capacity.
func (o ScalingPlanScalingInstructionOutput) PredictiveScalingMaxCapacityBuffer() pulumix.Output[*int] {
	return pulumix.Apply[ScalingPlanScalingInstruction](o, func(v ScalingPlanScalingInstruction) *int { return v.PredictiveScalingMaxCapacityBuffer })
}

// Predictive scaling mode. Valid values: `ForecastAndScale`, `ForecastOnly`.
func (o ScalingPlanScalingInstructionOutput) PredictiveScalingMode() pulumix.Output[*string] {
	return pulumix.Apply[ScalingPlanScalingInstruction](o, func(v ScalingPlanScalingInstruction) *string { return v.PredictiveScalingMode })
}

// ID of the resource. This string consists of the resource type and unique identifier.
func (o ScalingPlanScalingInstructionOutput) ResourceId() pulumix.Output[string] {
	return pulumix.Apply[ScalingPlanScalingInstruction](o, func(v ScalingPlanScalingInstruction) string { return v.ResourceId })
}

// Scalable dimension associated with the resource. Valid values: `autoscaling:autoScalingGroup:DesiredCapacity`, `dynamodb:index:ReadCapacityUnits`, `dynamodb:index:WriteCapacityUnits`, `dynamodb:table:ReadCapacityUnits`, `dynamodb:table:WriteCapacityUnits`, `ecs:service:DesiredCount`, `ec2:spot-fleet-request:TargetCapacity`, `rds:cluster:ReadReplicaCount`.
func (o ScalingPlanScalingInstructionOutput) ScalableDimension() pulumix.Output[string] {
	return pulumix.Apply[ScalingPlanScalingInstruction](o, func(v ScalingPlanScalingInstruction) string { return v.ScalableDimension })
}

// Controls whether a resource's externally created scaling policies are kept or replaced. Valid values: `KeepExternalPolicies`, `ReplaceExternalPolicies`. Defaults to `KeepExternalPolicies`.
func (o ScalingPlanScalingInstructionOutput) ScalingPolicyUpdateBehavior() pulumix.Output[*string] {
	return pulumix.Apply[ScalingPlanScalingInstruction](o, func(v ScalingPlanScalingInstruction) *string { return v.ScalingPolicyUpdateBehavior })
}

// Amount of time, in seconds, to buffer the run time of scheduled scaling actions when scaling out.
func (o ScalingPlanScalingInstructionOutput) ScheduledActionBufferTime() pulumix.Output[*int] {
	return pulumix.Apply[ScalingPlanScalingInstruction](o, func(v ScalingPlanScalingInstruction) *int { return v.ScheduledActionBufferTime })
}

// Namespace of the AWS service. Valid values: `autoscaling`, `dynamodb`, `ecs`, `ec2`, `rds`.
func (o ScalingPlanScalingInstructionOutput) ServiceNamespace() pulumix.Output[string] {
	return pulumix.Apply[ScalingPlanScalingInstruction](o, func(v ScalingPlanScalingInstruction) string { return v.ServiceNamespace })
}

// Structure that defines new target tracking configurations. Each of these structures includes a specific scaling metric and a target value for the metric, along with various parameters to use with dynamic scaling.
// More details can be found in the [AWS Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/plans/APIReference/API_TargetTrackingConfiguration.html).
func (o ScalingPlanScalingInstructionOutput) TargetTrackingConfigurations() pulumix.GArrayOutput[ScalingPlanScalingInstructionTargetTrackingConfiguration, ScalingPlanScalingInstructionTargetTrackingConfigurationOutput] {
	value := pulumix.Apply[ScalingPlanScalingInstruction](o, func(v ScalingPlanScalingInstruction) []ScalingPlanScalingInstructionTargetTrackingConfiguration {
		return v.TargetTrackingConfigurations
	})
	return pulumix.GArrayOutput[ScalingPlanScalingInstructionTargetTrackingConfiguration, ScalingPlanScalingInstructionTargetTrackingConfigurationOutput]{OutputState: value.OutputState}
}

type ScalingPlanScalingInstructionCustomizedLoadMetricSpecification struct {
	// Dimensions of the metric.
	Dimensions map[string]string `pulumi:"dimensions"`
	// Name of the metric.
	MetricName string `pulumi:"metricName"`
	// Namespace of the metric.
	Namespace string `pulumi:"namespace"`
	// Statistic of the metric. Currently, the value must always be `Sum`.
	Statistic string `pulumi:"statistic"`
	// Unit of the metric.
	Unit *string `pulumi:"unit"`
}

type ScalingPlanScalingInstructionCustomizedLoadMetricSpecificationArgs struct {
	// Dimensions of the metric.
	Dimensions pulumix.Input[map[string]string] `pulumi:"dimensions"`
	// Name of the metric.
	MetricName pulumix.Input[string] `pulumi:"metricName"`
	// Namespace of the metric.
	Namespace pulumix.Input[string] `pulumi:"namespace"`
	// Statistic of the metric. Currently, the value must always be `Sum`.
	Statistic pulumix.Input[string] `pulumi:"statistic"`
	// Unit of the metric.
	Unit pulumix.Input[*string] `pulumi:"unit"`
}

func (ScalingPlanScalingInstructionCustomizedLoadMetricSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPlanScalingInstructionCustomizedLoadMetricSpecification)(nil)).Elem()
}

func (i ScalingPlanScalingInstructionCustomizedLoadMetricSpecificationArgs) ToScalingPlanScalingInstructionCustomizedLoadMetricSpecificationOutput() ScalingPlanScalingInstructionCustomizedLoadMetricSpecificationOutput {
	return i.ToScalingPlanScalingInstructionCustomizedLoadMetricSpecificationOutputWithContext(context.Background())
}

func (i ScalingPlanScalingInstructionCustomizedLoadMetricSpecificationArgs) ToScalingPlanScalingInstructionCustomizedLoadMetricSpecificationOutputWithContext(ctx context.Context) ScalingPlanScalingInstructionCustomizedLoadMetricSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPlanScalingInstructionCustomizedLoadMetricSpecificationOutput)
}

func (i *ScalingPlanScalingInstructionCustomizedLoadMetricSpecificationArgs) ToOutput(ctx context.Context) pulumix.Output[*ScalingPlanScalingInstructionCustomizedLoadMetricSpecificationArgs] {
	return pulumix.Val(i)
}

type ScalingPlanScalingInstructionCustomizedLoadMetricSpecificationOutput struct{ *pulumi.OutputState }

func (ScalingPlanScalingInstructionCustomizedLoadMetricSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPlanScalingInstructionCustomizedLoadMetricSpecification)(nil)).Elem()
}

func (o ScalingPlanScalingInstructionCustomizedLoadMetricSpecificationOutput) ToScalingPlanScalingInstructionCustomizedLoadMetricSpecificationOutput() ScalingPlanScalingInstructionCustomizedLoadMetricSpecificationOutput {
	return o
}

func (o ScalingPlanScalingInstructionCustomizedLoadMetricSpecificationOutput) ToScalingPlanScalingInstructionCustomizedLoadMetricSpecificationOutputWithContext(ctx context.Context) ScalingPlanScalingInstructionCustomizedLoadMetricSpecificationOutput {
	return o
}

func (o ScalingPlanScalingInstructionCustomizedLoadMetricSpecificationOutput) ToOutput(ctx context.Context) pulumix.Output[ScalingPlanScalingInstructionCustomizedLoadMetricSpecification] {
	return pulumix.Output[ScalingPlanScalingInstructionCustomizedLoadMetricSpecification]{
		OutputState: o.OutputState,
	}
}

// Dimensions of the metric.
func (o ScalingPlanScalingInstructionCustomizedLoadMetricSpecificationOutput) Dimensions() pulumix.MapOutput[string] {
	value := pulumix.Apply[ScalingPlanScalingInstructionCustomizedLoadMetricSpecification](o, func(v ScalingPlanScalingInstructionCustomizedLoadMetricSpecification) map[string]string {
		return v.Dimensions
	})
	return pulumix.MapOutput[string]{OutputState: value.OutputState}
}

// Name of the metric.
func (o ScalingPlanScalingInstructionCustomizedLoadMetricSpecificationOutput) MetricName() pulumix.Output[string] {
	return pulumix.Apply[ScalingPlanScalingInstructionCustomizedLoadMetricSpecification](o, func(v ScalingPlanScalingInstructionCustomizedLoadMetricSpecification) string { return v.MetricName })
}

// Namespace of the metric.
func (o ScalingPlanScalingInstructionCustomizedLoadMetricSpecificationOutput) Namespace() pulumix.Output[string] {
	return pulumix.Apply[ScalingPlanScalingInstructionCustomizedLoadMetricSpecification](o, func(v ScalingPlanScalingInstructionCustomizedLoadMetricSpecification) string { return v.Namespace })
}

// Statistic of the metric. Currently, the value must always be `Sum`.
func (o ScalingPlanScalingInstructionCustomizedLoadMetricSpecificationOutput) Statistic() pulumix.Output[string] {
	return pulumix.Apply[ScalingPlanScalingInstructionCustomizedLoadMetricSpecification](o, func(v ScalingPlanScalingInstructionCustomizedLoadMetricSpecification) string { return v.Statistic })
}

// Unit of the metric.
func (o ScalingPlanScalingInstructionCustomizedLoadMetricSpecificationOutput) Unit() pulumix.Output[*string] {
	return pulumix.Apply[ScalingPlanScalingInstructionCustomizedLoadMetricSpecification](o, func(v ScalingPlanScalingInstructionCustomizedLoadMetricSpecification) *string { return v.Unit })
}

type ScalingPlanScalingInstructionPredefinedLoadMetricSpecification struct {
	// Metric type. Valid values: `ALBTargetGroupRequestCount`, `ASGTotalCPUUtilization`, `ASGTotalNetworkIn`, `ASGTotalNetworkOut`.
	PredefinedLoadMetricType string `pulumi:"predefinedLoadMetricType"`
	// Identifies the resource associated with the metric type.
	ResourceLabel *string `pulumi:"resourceLabel"`
}

type ScalingPlanScalingInstructionPredefinedLoadMetricSpecificationArgs struct {
	// Metric type. Valid values: `ALBTargetGroupRequestCount`, `ASGTotalCPUUtilization`, `ASGTotalNetworkIn`, `ASGTotalNetworkOut`.
	PredefinedLoadMetricType pulumix.Input[string] `pulumi:"predefinedLoadMetricType"`
	// Identifies the resource associated with the metric type.
	ResourceLabel pulumix.Input[*string] `pulumi:"resourceLabel"`
}

func (ScalingPlanScalingInstructionPredefinedLoadMetricSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPlanScalingInstructionPredefinedLoadMetricSpecification)(nil)).Elem()
}

func (i ScalingPlanScalingInstructionPredefinedLoadMetricSpecificationArgs) ToScalingPlanScalingInstructionPredefinedLoadMetricSpecificationOutput() ScalingPlanScalingInstructionPredefinedLoadMetricSpecificationOutput {
	return i.ToScalingPlanScalingInstructionPredefinedLoadMetricSpecificationOutputWithContext(context.Background())
}

func (i ScalingPlanScalingInstructionPredefinedLoadMetricSpecificationArgs) ToScalingPlanScalingInstructionPredefinedLoadMetricSpecificationOutputWithContext(ctx context.Context) ScalingPlanScalingInstructionPredefinedLoadMetricSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPlanScalingInstructionPredefinedLoadMetricSpecificationOutput)
}

func (i *ScalingPlanScalingInstructionPredefinedLoadMetricSpecificationArgs) ToOutput(ctx context.Context) pulumix.Output[*ScalingPlanScalingInstructionPredefinedLoadMetricSpecificationArgs] {
	return pulumix.Val(i)
}

type ScalingPlanScalingInstructionPredefinedLoadMetricSpecificationOutput struct{ *pulumi.OutputState }

func (ScalingPlanScalingInstructionPredefinedLoadMetricSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPlanScalingInstructionPredefinedLoadMetricSpecification)(nil)).Elem()
}

func (o ScalingPlanScalingInstructionPredefinedLoadMetricSpecificationOutput) ToScalingPlanScalingInstructionPredefinedLoadMetricSpecificationOutput() ScalingPlanScalingInstructionPredefinedLoadMetricSpecificationOutput {
	return o
}

func (o ScalingPlanScalingInstructionPredefinedLoadMetricSpecificationOutput) ToScalingPlanScalingInstructionPredefinedLoadMetricSpecificationOutputWithContext(ctx context.Context) ScalingPlanScalingInstructionPredefinedLoadMetricSpecificationOutput {
	return o
}

func (o ScalingPlanScalingInstructionPredefinedLoadMetricSpecificationOutput) ToOutput(ctx context.Context) pulumix.Output[ScalingPlanScalingInstructionPredefinedLoadMetricSpecification] {
	return pulumix.Output[ScalingPlanScalingInstructionPredefinedLoadMetricSpecification]{
		OutputState: o.OutputState,
	}
}

// Metric type. Valid values: `ALBTargetGroupRequestCount`, `ASGTotalCPUUtilization`, `ASGTotalNetworkIn`, `ASGTotalNetworkOut`.
func (o ScalingPlanScalingInstructionPredefinedLoadMetricSpecificationOutput) PredefinedLoadMetricType() pulumix.Output[string] {
	return pulumix.Apply[ScalingPlanScalingInstructionPredefinedLoadMetricSpecification](o, func(v ScalingPlanScalingInstructionPredefinedLoadMetricSpecification) string {
		return v.PredefinedLoadMetricType
	})
}

// Identifies the resource associated with the metric type.
func (o ScalingPlanScalingInstructionPredefinedLoadMetricSpecificationOutput) ResourceLabel() pulumix.Output[*string] {
	return pulumix.Apply[ScalingPlanScalingInstructionPredefinedLoadMetricSpecification](o, func(v ScalingPlanScalingInstructionPredefinedLoadMetricSpecification) *string { return v.ResourceLabel })
}

type ScalingPlanScalingInstructionTargetTrackingConfiguration struct {
	// Customized metric. You can specify either `customizedScalingMetricSpecification` or `predefinedScalingMetricSpecification`.
	// More details can be found in the [AWS Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/plans/APIReference/API_CustomizedScalingMetricSpecification.html).
	CustomizedScalingMetricSpecification *ScalingPlanScalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecification `pulumi:"customizedScalingMetricSpecification"`
	// Boolean indicating whether scale in by the target tracking scaling policy is disabled. Defaults to `false`.
	DisableScaleIn *bool `pulumi:"disableScaleIn"`
	// Estimated time, in seconds, until a newly launched instance can contribute to the CloudWatch metrics.
	// This value is used only if the resource is an Auto Scaling group.
	EstimatedInstanceWarmup *int `pulumi:"estimatedInstanceWarmup"`
	// Predefined metric. You can specify either `predefinedScalingMetricSpecification` or `customizedScalingMetricSpecification`.
	// More details can be found in the [AWS Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/plans/APIReference/API_PredefinedScalingMetricSpecification.html).
	PredefinedScalingMetricSpecification *ScalingPlanScalingInstructionTargetTrackingConfigurationPredefinedScalingMetricSpecification `pulumi:"predefinedScalingMetricSpecification"`
	// Amount of time, in seconds, after a scale in activity completes before another scale in activity can start.
	// This value is not used if the scalable resource is an Auto Scaling group.
	ScaleInCooldown *int `pulumi:"scaleInCooldown"`
	// Amount of time, in seconds, after a scale-out activity completes before another scale-out activity can start.
	// This value is not used if the scalable resource is an Auto Scaling group.
	ScaleOutCooldown *int `pulumi:"scaleOutCooldown"`
	// Target value for the metric.
	TargetValue float64 `pulumi:"targetValue"`
}

type ScalingPlanScalingInstructionTargetTrackingConfigurationArgs struct {
	// Customized metric. You can specify either `customizedScalingMetricSpecification` or `predefinedScalingMetricSpecification`.
	// More details can be found in the [AWS Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/plans/APIReference/API_CustomizedScalingMetricSpecification.html).
	CustomizedScalingMetricSpecification pulumix.Input[*ScalingPlanScalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecificationArgs] `pulumi:"customizedScalingMetricSpecification"`
	// Boolean indicating whether scale in by the target tracking scaling policy is disabled. Defaults to `false`.
	DisableScaleIn pulumix.Input[*bool] `pulumi:"disableScaleIn"`
	// Estimated time, in seconds, until a newly launched instance can contribute to the CloudWatch metrics.
	// This value is used only if the resource is an Auto Scaling group.
	EstimatedInstanceWarmup pulumix.Input[*int] `pulumi:"estimatedInstanceWarmup"`
	// Predefined metric. You can specify either `predefinedScalingMetricSpecification` or `customizedScalingMetricSpecification`.
	// More details can be found in the [AWS Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/plans/APIReference/API_PredefinedScalingMetricSpecification.html).
	PredefinedScalingMetricSpecification pulumix.Input[*ScalingPlanScalingInstructionTargetTrackingConfigurationPredefinedScalingMetricSpecificationArgs] `pulumi:"predefinedScalingMetricSpecification"`
	// Amount of time, in seconds, after a scale in activity completes before another scale in activity can start.
	// This value is not used if the scalable resource is an Auto Scaling group.
	ScaleInCooldown pulumix.Input[*int] `pulumi:"scaleInCooldown"`
	// Amount of time, in seconds, after a scale-out activity completes before another scale-out activity can start.
	// This value is not used if the scalable resource is an Auto Scaling group.
	ScaleOutCooldown pulumix.Input[*int] `pulumi:"scaleOutCooldown"`
	// Target value for the metric.
	TargetValue pulumix.Input[float64] `pulumi:"targetValue"`
}

func (ScalingPlanScalingInstructionTargetTrackingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPlanScalingInstructionTargetTrackingConfiguration)(nil)).Elem()
}

func (i ScalingPlanScalingInstructionTargetTrackingConfigurationArgs) ToScalingPlanScalingInstructionTargetTrackingConfigurationOutput() ScalingPlanScalingInstructionTargetTrackingConfigurationOutput {
	return i.ToScalingPlanScalingInstructionTargetTrackingConfigurationOutputWithContext(context.Background())
}

func (i ScalingPlanScalingInstructionTargetTrackingConfigurationArgs) ToScalingPlanScalingInstructionTargetTrackingConfigurationOutputWithContext(ctx context.Context) ScalingPlanScalingInstructionTargetTrackingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPlanScalingInstructionTargetTrackingConfigurationOutput)
}

func (i *ScalingPlanScalingInstructionTargetTrackingConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*ScalingPlanScalingInstructionTargetTrackingConfigurationArgs] {
	return pulumix.Val(i)
}

type ScalingPlanScalingInstructionTargetTrackingConfigurationOutput struct{ *pulumi.OutputState }

func (ScalingPlanScalingInstructionTargetTrackingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPlanScalingInstructionTargetTrackingConfiguration)(nil)).Elem()
}

func (o ScalingPlanScalingInstructionTargetTrackingConfigurationOutput) ToScalingPlanScalingInstructionTargetTrackingConfigurationOutput() ScalingPlanScalingInstructionTargetTrackingConfigurationOutput {
	return o
}

func (o ScalingPlanScalingInstructionTargetTrackingConfigurationOutput) ToScalingPlanScalingInstructionTargetTrackingConfigurationOutputWithContext(ctx context.Context) ScalingPlanScalingInstructionTargetTrackingConfigurationOutput {
	return o
}

func (o ScalingPlanScalingInstructionTargetTrackingConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[ScalingPlanScalingInstructionTargetTrackingConfiguration] {
	return pulumix.Output[ScalingPlanScalingInstructionTargetTrackingConfiguration]{
		OutputState: o.OutputState,
	}
}

// Customized metric. You can specify either `customizedScalingMetricSpecification` or `predefinedScalingMetricSpecification`.
// More details can be found in the [AWS Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/plans/APIReference/API_CustomizedScalingMetricSpecification.html).
func (o ScalingPlanScalingInstructionTargetTrackingConfigurationOutput) CustomizedScalingMetricSpecification() pulumix.GPtrOutput[ScalingPlanScalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecification, ScalingPlanScalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecificationOutput] {
	value := pulumix.Apply[ScalingPlanScalingInstructionTargetTrackingConfiguration](o, func(v ScalingPlanScalingInstructionTargetTrackingConfiguration) *ScalingPlanScalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecification {
		return v.CustomizedScalingMetricSpecification
	})
	return pulumix.GPtrOutput[ScalingPlanScalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecification, ScalingPlanScalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecificationOutput]{OutputState: value.OutputState}
}

// Boolean indicating whether scale in by the target tracking scaling policy is disabled. Defaults to `false`.
func (o ScalingPlanScalingInstructionTargetTrackingConfigurationOutput) DisableScaleIn() pulumix.Output[*bool] {
	return pulumix.Apply[ScalingPlanScalingInstructionTargetTrackingConfiguration](o, func(v ScalingPlanScalingInstructionTargetTrackingConfiguration) *bool { return v.DisableScaleIn })
}

// Estimated time, in seconds, until a newly launched instance can contribute to the CloudWatch metrics.
// This value is used only if the resource is an Auto Scaling group.
func (o ScalingPlanScalingInstructionTargetTrackingConfigurationOutput) EstimatedInstanceWarmup() pulumix.Output[*int] {
	return pulumix.Apply[ScalingPlanScalingInstructionTargetTrackingConfiguration](o, func(v ScalingPlanScalingInstructionTargetTrackingConfiguration) *int {
		return v.EstimatedInstanceWarmup
	})
}

// Predefined metric. You can specify either `predefinedScalingMetricSpecification` or `customizedScalingMetricSpecification`.
// More details can be found in the [AWS Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/plans/APIReference/API_PredefinedScalingMetricSpecification.html).
func (o ScalingPlanScalingInstructionTargetTrackingConfigurationOutput) PredefinedScalingMetricSpecification() pulumix.GPtrOutput[ScalingPlanScalingInstructionTargetTrackingConfigurationPredefinedScalingMetricSpecification, ScalingPlanScalingInstructionTargetTrackingConfigurationPredefinedScalingMetricSpecificationOutput] {
	value := pulumix.Apply[ScalingPlanScalingInstructionTargetTrackingConfiguration](o, func(v ScalingPlanScalingInstructionTargetTrackingConfiguration) *ScalingPlanScalingInstructionTargetTrackingConfigurationPredefinedScalingMetricSpecification {
		return v.PredefinedScalingMetricSpecification
	})
	return pulumix.GPtrOutput[ScalingPlanScalingInstructionTargetTrackingConfigurationPredefinedScalingMetricSpecification, ScalingPlanScalingInstructionTargetTrackingConfigurationPredefinedScalingMetricSpecificationOutput]{OutputState: value.OutputState}
}

// Amount of time, in seconds, after a scale in activity completes before another scale in activity can start.
// This value is not used if the scalable resource is an Auto Scaling group.
func (o ScalingPlanScalingInstructionTargetTrackingConfigurationOutput) ScaleInCooldown() pulumix.Output[*int] {
	return pulumix.Apply[ScalingPlanScalingInstructionTargetTrackingConfiguration](o, func(v ScalingPlanScalingInstructionTargetTrackingConfiguration) *int { return v.ScaleInCooldown })
}

// Amount of time, in seconds, after a scale-out activity completes before another scale-out activity can start.
// This value is not used if the scalable resource is an Auto Scaling group.
func (o ScalingPlanScalingInstructionTargetTrackingConfigurationOutput) ScaleOutCooldown() pulumix.Output[*int] {
	return pulumix.Apply[ScalingPlanScalingInstructionTargetTrackingConfiguration](o, func(v ScalingPlanScalingInstructionTargetTrackingConfiguration) *int { return v.ScaleOutCooldown })
}

// Target value for the metric.
func (o ScalingPlanScalingInstructionTargetTrackingConfigurationOutput) TargetValue() pulumix.Output[float64] {
	return pulumix.Apply[ScalingPlanScalingInstructionTargetTrackingConfiguration](o, func(v ScalingPlanScalingInstructionTargetTrackingConfiguration) float64 { return v.TargetValue })
}

type ScalingPlanScalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecification struct {
	// Dimensions of the metric.
	Dimensions map[string]string `pulumi:"dimensions"`
	// Name of the metric.
	MetricName string `pulumi:"metricName"`
	// Namespace of the metric.
	Namespace string `pulumi:"namespace"`
	// Statistic of the metric. Valid values: `Average`, `Maximum`, `Minimum`, `SampleCount`, `Sum`.
	Statistic string `pulumi:"statistic"`
	// Unit of the metric.
	Unit *string `pulumi:"unit"`
}

type ScalingPlanScalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecificationArgs struct {
	// Dimensions of the metric.
	Dimensions pulumix.Input[map[string]string] `pulumi:"dimensions"`
	// Name of the metric.
	MetricName pulumix.Input[string] `pulumi:"metricName"`
	// Namespace of the metric.
	Namespace pulumix.Input[string] `pulumi:"namespace"`
	// Statistic of the metric. Valid values: `Average`, `Maximum`, `Minimum`, `SampleCount`, `Sum`.
	Statistic pulumix.Input[string] `pulumi:"statistic"`
	// Unit of the metric.
	Unit pulumix.Input[*string] `pulumi:"unit"`
}

func (ScalingPlanScalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPlanScalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecification)(nil)).Elem()
}

func (i ScalingPlanScalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecificationArgs) ToScalingPlanScalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecificationOutput() ScalingPlanScalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecificationOutput {
	return i.ToScalingPlanScalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecificationOutputWithContext(context.Background())
}

func (i ScalingPlanScalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecificationArgs) ToScalingPlanScalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecificationOutputWithContext(ctx context.Context) ScalingPlanScalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPlanScalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecificationOutput)
}

func (i *ScalingPlanScalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecificationArgs) ToOutput(ctx context.Context) pulumix.Output[*ScalingPlanScalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecificationArgs] {
	return pulumix.Val(i)
}

type ScalingPlanScalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecificationOutput struct{ *pulumi.OutputState }

func (ScalingPlanScalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPlanScalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecification)(nil)).Elem()
}

func (o ScalingPlanScalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecificationOutput) ToScalingPlanScalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecificationOutput() ScalingPlanScalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecificationOutput {
	return o
}

func (o ScalingPlanScalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecificationOutput) ToScalingPlanScalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecificationOutputWithContext(ctx context.Context) ScalingPlanScalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecificationOutput {
	return o
}

func (o ScalingPlanScalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecificationOutput) ToOutput(ctx context.Context) pulumix.Output[ScalingPlanScalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecification] {
	return pulumix.Output[ScalingPlanScalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecification]{
		OutputState: o.OutputState,
	}
}

// Dimensions of the metric.
func (o ScalingPlanScalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecificationOutput) Dimensions() pulumix.MapOutput[string] {
	value := pulumix.Apply[ScalingPlanScalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecification](o, func(v ScalingPlanScalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecification) map[string]string {
		return v.Dimensions
	})
	return pulumix.MapOutput[string]{OutputState: value.OutputState}
}

// Name of the metric.
func (o ScalingPlanScalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecificationOutput) MetricName() pulumix.Output[string] {
	return pulumix.Apply[ScalingPlanScalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecification](o, func(v ScalingPlanScalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecification) string {
		return v.MetricName
	})
}

// Namespace of the metric.
func (o ScalingPlanScalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecificationOutput) Namespace() pulumix.Output[string] {
	return pulumix.Apply[ScalingPlanScalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecification](o, func(v ScalingPlanScalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecification) string {
		return v.Namespace
	})
}

// Statistic of the metric. Valid values: `Average`, `Maximum`, `Minimum`, `SampleCount`, `Sum`.
func (o ScalingPlanScalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecificationOutput) Statistic() pulumix.Output[string] {
	return pulumix.Apply[ScalingPlanScalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecification](o, func(v ScalingPlanScalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecification) string {
		return v.Statistic
	})
}

// Unit of the metric.
func (o ScalingPlanScalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecificationOutput) Unit() pulumix.Output[*string] {
	return pulumix.Apply[ScalingPlanScalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecification](o, func(v ScalingPlanScalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecification) *string {
		return v.Unit
	})
}

type ScalingPlanScalingInstructionTargetTrackingConfigurationPredefinedScalingMetricSpecification struct {
	// Metric type. Valid values: `ALBRequestCountPerTarget`, `ASGAverageCPUUtilization`, `ASGAverageNetworkIn`, `ASGAverageNetworkOut`, `DynamoDBReadCapacityUtilization`, `DynamoDBWriteCapacityUtilization`, `ECSServiceAverageCPUUtilization`, `ECSServiceAverageMemoryUtilization`, `EC2SpotFleetRequestAverageCPUUtilization`, `EC2SpotFleetRequestAverageNetworkIn`, `EC2SpotFleetRequestAverageNetworkOut`, `RDSReaderAverageCPUUtilization`, `RDSReaderAverageDatabaseConnections`.
	PredefinedScalingMetricType string `pulumi:"predefinedScalingMetricType"`
	// Identifies the resource associated with the metric type.
	ResourceLabel *string `pulumi:"resourceLabel"`
}

type ScalingPlanScalingInstructionTargetTrackingConfigurationPredefinedScalingMetricSpecificationArgs struct {
	// Metric type. Valid values: `ALBRequestCountPerTarget`, `ASGAverageCPUUtilization`, `ASGAverageNetworkIn`, `ASGAverageNetworkOut`, `DynamoDBReadCapacityUtilization`, `DynamoDBWriteCapacityUtilization`, `ECSServiceAverageCPUUtilization`, `ECSServiceAverageMemoryUtilization`, `EC2SpotFleetRequestAverageCPUUtilization`, `EC2SpotFleetRequestAverageNetworkIn`, `EC2SpotFleetRequestAverageNetworkOut`, `RDSReaderAverageCPUUtilization`, `RDSReaderAverageDatabaseConnections`.
	PredefinedScalingMetricType pulumix.Input[string] `pulumi:"predefinedScalingMetricType"`
	// Identifies the resource associated with the metric type.
	ResourceLabel pulumix.Input[*string] `pulumi:"resourceLabel"`
}

func (ScalingPlanScalingInstructionTargetTrackingConfigurationPredefinedScalingMetricSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPlanScalingInstructionTargetTrackingConfigurationPredefinedScalingMetricSpecification)(nil)).Elem()
}

func (i ScalingPlanScalingInstructionTargetTrackingConfigurationPredefinedScalingMetricSpecificationArgs) ToScalingPlanScalingInstructionTargetTrackingConfigurationPredefinedScalingMetricSpecificationOutput() ScalingPlanScalingInstructionTargetTrackingConfigurationPredefinedScalingMetricSpecificationOutput {
	return i.ToScalingPlanScalingInstructionTargetTrackingConfigurationPredefinedScalingMetricSpecificationOutputWithContext(context.Background())
}

func (i ScalingPlanScalingInstructionTargetTrackingConfigurationPredefinedScalingMetricSpecificationArgs) ToScalingPlanScalingInstructionTargetTrackingConfigurationPredefinedScalingMetricSpecificationOutputWithContext(ctx context.Context) ScalingPlanScalingInstructionTargetTrackingConfigurationPredefinedScalingMetricSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingPlanScalingInstructionTargetTrackingConfigurationPredefinedScalingMetricSpecificationOutput)
}

func (i *ScalingPlanScalingInstructionTargetTrackingConfigurationPredefinedScalingMetricSpecificationArgs) ToOutput(ctx context.Context) pulumix.Output[*ScalingPlanScalingInstructionTargetTrackingConfigurationPredefinedScalingMetricSpecificationArgs] {
	return pulumix.Val(i)
}

type ScalingPlanScalingInstructionTargetTrackingConfigurationPredefinedScalingMetricSpecificationOutput struct{ *pulumi.OutputState }

func (ScalingPlanScalingInstructionTargetTrackingConfigurationPredefinedScalingMetricSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingPlanScalingInstructionTargetTrackingConfigurationPredefinedScalingMetricSpecification)(nil)).Elem()
}

func (o ScalingPlanScalingInstructionTargetTrackingConfigurationPredefinedScalingMetricSpecificationOutput) ToScalingPlanScalingInstructionTargetTrackingConfigurationPredefinedScalingMetricSpecificationOutput() ScalingPlanScalingInstructionTargetTrackingConfigurationPredefinedScalingMetricSpecificationOutput {
	return o
}

func (o ScalingPlanScalingInstructionTargetTrackingConfigurationPredefinedScalingMetricSpecificationOutput) ToScalingPlanScalingInstructionTargetTrackingConfigurationPredefinedScalingMetricSpecificationOutputWithContext(ctx context.Context) ScalingPlanScalingInstructionTargetTrackingConfigurationPredefinedScalingMetricSpecificationOutput {
	return o
}

func (o ScalingPlanScalingInstructionTargetTrackingConfigurationPredefinedScalingMetricSpecificationOutput) ToOutput(ctx context.Context) pulumix.Output[ScalingPlanScalingInstructionTargetTrackingConfigurationPredefinedScalingMetricSpecification] {
	return pulumix.Output[ScalingPlanScalingInstructionTargetTrackingConfigurationPredefinedScalingMetricSpecification]{
		OutputState: o.OutputState,
	}
}

// Metric type. Valid values: `ALBRequestCountPerTarget`, `ASGAverageCPUUtilization`, `ASGAverageNetworkIn`, `ASGAverageNetworkOut`, `DynamoDBReadCapacityUtilization`, `DynamoDBWriteCapacityUtilization`, `ECSServiceAverageCPUUtilization`, `ECSServiceAverageMemoryUtilization`, `EC2SpotFleetRequestAverageCPUUtilization`, `EC2SpotFleetRequestAverageNetworkIn`, `EC2SpotFleetRequestAverageNetworkOut`, `RDSReaderAverageCPUUtilization`, `RDSReaderAverageDatabaseConnections`.
func (o ScalingPlanScalingInstructionTargetTrackingConfigurationPredefinedScalingMetricSpecificationOutput) PredefinedScalingMetricType() pulumix.Output[string] {
	return pulumix.Apply[ScalingPlanScalingInstructionTargetTrackingConfigurationPredefinedScalingMetricSpecification](o, func(v ScalingPlanScalingInstructionTargetTrackingConfigurationPredefinedScalingMetricSpecification) string {
		return v.PredefinedScalingMetricType
	})
}

// Identifies the resource associated with the metric type.
func (o ScalingPlanScalingInstructionTargetTrackingConfigurationPredefinedScalingMetricSpecificationOutput) ResourceLabel() pulumix.Output[*string] {
	return pulumix.Apply[ScalingPlanScalingInstructionTargetTrackingConfigurationPredefinedScalingMetricSpecification](o, func(v ScalingPlanScalingInstructionTargetTrackingConfigurationPredefinedScalingMetricSpecification) *string {
		return v.ResourceLabel
	})
}

func init() {
	pulumi.RegisterOutputType(ScalingPlanApplicationSourceOutput{})
	pulumi.RegisterOutputType(ScalingPlanApplicationSourceTagFilterOutput{})
	pulumi.RegisterOutputType(ScalingPlanScalingInstructionOutput{})
	pulumi.RegisterOutputType(ScalingPlanScalingInstructionCustomizedLoadMetricSpecificationOutput{})
	pulumi.RegisterOutputType(ScalingPlanScalingInstructionPredefinedLoadMetricSpecificationOutput{})
	pulumi.RegisterOutputType(ScalingPlanScalingInstructionTargetTrackingConfigurationOutput{})
	pulumi.RegisterOutputType(ScalingPlanScalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecificationOutput{})
	pulumi.RegisterOutputType(ScalingPlanScalingInstructionTargetTrackingConfigurationPredefinedScalingMetricSpecificationOutput{})
}
