// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package lightsail

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a Lightsail Instance. Amazon Lightsail is a service to provide easy virtual private servers
// with custom software already setup. See [What is Amazon Lightsail?](https://lightsail.aws.amazon.com/ls/docs/getting-started/article/what-is-amazon-lightsail)
// for more information.
//
// > **Note:** Lightsail is currently only supported in a limited number of AWS Regions, please see ["Regions and Availability Zones in Amazon Lightsail"](https://lightsail.aws.amazon.com/ls/docs/overview/article/understanding-regions-and-availability-zones-in-amazon-lightsail) for more details
type Instance struct {
	pulumi.CustomResourceState

	// The add on configuration for the instance. Detailed below.
	AddOn pulumix.GPtrOutput[InstanceAddOn, InstanceAddOnOutput] `pulumi:"addOn"`
	// The ARN of the Lightsail instance (matches `id`).
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The Availability Zone in which to create your
	// instance (see list below)
	AvailabilityZone pulumix.Output[string] `pulumi:"availabilityZone"`
	// The ID for a virtual private server image. A list of available blueprint IDs can be obtained using the AWS CLI command: `aws lightsail get-blueprints`
	BlueprintId pulumix.Output[string] `pulumi:"blueprintId"`
	// The bundle of specification information (see list below)
	BundleId pulumix.Output[string] `pulumi:"bundleId"`
	// The number of vCPUs the instance has.
	CpuCount pulumix.Output[int] `pulumi:"cpuCount"`
	// The timestamp when the instance was created.
	CreatedAt pulumix.Output[string] `pulumi:"createdAt"`
	// The IP address type of the Lightsail Instance. Valid Values: `dualstack` | `ipv4`.
	IpAddressType pulumix.Output[*string] `pulumi:"ipAddressType"`
	// List of IPv6 addresses for the Lightsail instance.
	Ipv6Addresses pulumix.ArrayOutput[string] `pulumi:"ipv6Addresses"`
	// A Boolean value indicating whether this instance has a static IP assigned to it.
	IsStaticIp pulumix.Output[bool] `pulumi:"isStaticIp"`
	// The name of your key pair. Created in the
	// Lightsail console (cannot use `ec2.KeyPair` at this time)
	KeyPairName pulumix.Output[*string] `pulumi:"keyPairName"`
	// The name of the Lightsail Instance. Names be unique within each AWS Region in your Lightsail account.
	Name pulumix.Output[string] `pulumi:"name"`
	// The private IP address of the instance.
	PrivateIpAddress pulumix.Output[string] `pulumi:"privateIpAddress"`
	// The public IP address of the instance.
	PublicIpAddress pulumix.Output[string] `pulumi:"publicIpAddress"`
	// The amount of RAM in GB on the instance (e.g., 1.0).
	RamSize pulumix.Output[float64] `pulumi:"ramSize"`
	// A map of tags to assign to the resource. To create a key-only tag, use an empty string as the value. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// Single lined launch script as a string to configure server with additional user data
	UserData pulumix.Output[*string] `pulumi:"userData"`
	// The user name for connecting to the instance (e.g., ec2-user).
	Username pulumix.Output[string] `pulumi:"username"`
}

// NewInstance registers a new resource with the given unique name, arguments, and options.
func NewInstance(ctx *pulumi.Context,
	name string, args *InstanceArgs, opts ...pulumi.ResourceOption) (*Instance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AvailabilityZone == nil {
		return nil, errors.New("invalid value for required argument 'AvailabilityZone'")
	}
	if args.BlueprintId == nil {
		return nil, errors.New("invalid value for required argument 'BlueprintId'")
	}
	if args.BundleId == nil {
		return nil, errors.New("invalid value for required argument 'BundleId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Instance
	err := ctx.RegisterResource("aws:lightsail/instance:Instance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInstance gets an existing Instance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InstanceState, opts ...pulumi.ResourceOption) (*Instance, error) {
	var resource Instance
	err := ctx.ReadResource("aws:lightsail/instance:Instance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Instance resources.
type instanceState struct {
	// The add on configuration for the instance. Detailed below.
	AddOn *InstanceAddOn `pulumi:"addOn"`
	// The ARN of the Lightsail instance (matches `id`).
	Arn *string `pulumi:"arn"`
	// The Availability Zone in which to create your
	// instance (see list below)
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// The ID for a virtual private server image. A list of available blueprint IDs can be obtained using the AWS CLI command: `aws lightsail get-blueprints`
	BlueprintId *string `pulumi:"blueprintId"`
	// The bundle of specification information (see list below)
	BundleId *string `pulumi:"bundleId"`
	// The number of vCPUs the instance has.
	CpuCount *int `pulumi:"cpuCount"`
	// The timestamp when the instance was created.
	CreatedAt *string `pulumi:"createdAt"`
	// The IP address type of the Lightsail Instance. Valid Values: `dualstack` | `ipv4`.
	IpAddressType *string `pulumi:"ipAddressType"`
	// List of IPv6 addresses for the Lightsail instance.
	Ipv6Addresses []string `pulumi:"ipv6Addresses"`
	// A Boolean value indicating whether this instance has a static IP assigned to it.
	IsStaticIp *bool `pulumi:"isStaticIp"`
	// The name of your key pair. Created in the
	// Lightsail console (cannot use `ec2.KeyPair` at this time)
	KeyPairName *string `pulumi:"keyPairName"`
	// The name of the Lightsail Instance. Names be unique within each AWS Region in your Lightsail account.
	Name *string `pulumi:"name"`
	// The private IP address of the instance.
	PrivateIpAddress *string `pulumi:"privateIpAddress"`
	// The public IP address of the instance.
	PublicIpAddress *string `pulumi:"publicIpAddress"`
	// The amount of RAM in GB on the instance (e.g., 1.0).
	RamSize *float64 `pulumi:"ramSize"`
	// A map of tags to assign to the resource. To create a key-only tag, use an empty string as the value. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// Single lined launch script as a string to configure server with additional user data
	UserData *string `pulumi:"userData"`
	// The user name for connecting to the instance (e.g., ec2-user).
	Username *string `pulumi:"username"`
}

type InstanceState struct {
	// The add on configuration for the instance. Detailed below.
	AddOn pulumix.Input[*InstanceAddOnArgs]
	// The ARN of the Lightsail instance (matches `id`).
	Arn pulumix.Input[*string]
	// The Availability Zone in which to create your
	// instance (see list below)
	AvailabilityZone pulumix.Input[*string]
	// The ID for a virtual private server image. A list of available blueprint IDs can be obtained using the AWS CLI command: `aws lightsail get-blueprints`
	BlueprintId pulumix.Input[*string]
	// The bundle of specification information (see list below)
	BundleId pulumix.Input[*string]
	// The number of vCPUs the instance has.
	CpuCount pulumix.Input[*int]
	// The timestamp when the instance was created.
	CreatedAt pulumix.Input[*string]
	// The IP address type of the Lightsail Instance. Valid Values: `dualstack` | `ipv4`.
	IpAddressType pulumix.Input[*string]
	// List of IPv6 addresses for the Lightsail instance.
	Ipv6Addresses pulumix.Input[[]string]
	// A Boolean value indicating whether this instance has a static IP assigned to it.
	IsStaticIp pulumix.Input[*bool]
	// The name of your key pair. Created in the
	// Lightsail console (cannot use `ec2.KeyPair` at this time)
	KeyPairName pulumix.Input[*string]
	// The name of the Lightsail Instance. Names be unique within each AWS Region in your Lightsail account.
	Name pulumix.Input[*string]
	// The private IP address of the instance.
	PrivateIpAddress pulumix.Input[*string]
	// The public IP address of the instance.
	PublicIpAddress pulumix.Input[*string]
	// The amount of RAM in GB on the instance (e.g., 1.0).
	RamSize pulumix.Input[*float64]
	// A map of tags to assign to the resource. To create a key-only tag, use an empty string as the value. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// Single lined launch script as a string to configure server with additional user data
	UserData pulumix.Input[*string]
	// The user name for connecting to the instance (e.g., ec2-user).
	Username pulumix.Input[*string]
}

func (InstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceState)(nil)).Elem()
}

type instanceArgs struct {
	// The add on configuration for the instance. Detailed below.
	AddOn *InstanceAddOn `pulumi:"addOn"`
	// The Availability Zone in which to create your
	// instance (see list below)
	AvailabilityZone string `pulumi:"availabilityZone"`
	// The ID for a virtual private server image. A list of available blueprint IDs can be obtained using the AWS CLI command: `aws lightsail get-blueprints`
	BlueprintId string `pulumi:"blueprintId"`
	// The bundle of specification information (see list below)
	BundleId string `pulumi:"bundleId"`
	// The IP address type of the Lightsail Instance. Valid Values: `dualstack` | `ipv4`.
	IpAddressType *string `pulumi:"ipAddressType"`
	// The name of your key pair. Created in the
	// Lightsail console (cannot use `ec2.KeyPair` at this time)
	KeyPairName *string `pulumi:"keyPairName"`
	// The name of the Lightsail Instance. Names be unique within each AWS Region in your Lightsail account.
	Name *string `pulumi:"name"`
	// A map of tags to assign to the resource. To create a key-only tag, use an empty string as the value. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Single lined launch script as a string to configure server with additional user data
	UserData *string `pulumi:"userData"`
}

// The set of arguments for constructing a Instance resource.
type InstanceArgs struct {
	// The add on configuration for the instance. Detailed below.
	AddOn pulumix.Input[*InstanceAddOnArgs]
	// The Availability Zone in which to create your
	// instance (see list below)
	AvailabilityZone pulumix.Input[string]
	// The ID for a virtual private server image. A list of available blueprint IDs can be obtained using the AWS CLI command: `aws lightsail get-blueprints`
	BlueprintId pulumix.Input[string]
	// The bundle of specification information (see list below)
	BundleId pulumix.Input[string]
	// The IP address type of the Lightsail Instance. Valid Values: `dualstack` | `ipv4`.
	IpAddressType pulumix.Input[*string]
	// The name of your key pair. Created in the
	// Lightsail console (cannot use `ec2.KeyPair` at this time)
	KeyPairName pulumix.Input[*string]
	// The name of the Lightsail Instance. Names be unique within each AWS Region in your Lightsail account.
	Name pulumix.Input[*string]
	// A map of tags to assign to the resource. To create a key-only tag, use an empty string as the value. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// Single lined launch script as a string to configure server with additional user data
	UserData pulumix.Input[*string]
}

func (InstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceArgs)(nil)).Elem()
}

type InstanceOutput struct{ *pulumi.OutputState }

func (InstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Instance)(nil)).Elem()
}

func (o InstanceOutput) ToInstanceOutput() InstanceOutput {
	return o
}

func (o InstanceOutput) ToInstanceOutputWithContext(ctx context.Context) InstanceOutput {
	return o
}

func (o InstanceOutput) ToOutput(ctx context.Context) pulumix.Output[Instance] {
	return pulumix.Output[Instance]{
		OutputState: o.OutputState,
	}
}

// The add on configuration for the instance. Detailed below.
func (o InstanceOutput) AddOn() pulumix.GPtrOutput[InstanceAddOn, InstanceAddOnOutput] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.GPtrOutput[InstanceAddOn, InstanceAddOnOutput] { return v.AddOn })
	unwrapped := pulumix.Flatten[*InstanceAddOn, pulumix.GPtrOutput[InstanceAddOn, InstanceAddOnOutput]](value)
	return pulumix.GPtrOutput[InstanceAddOn, InstanceAddOnOutput]{OutputState: unwrapped.OutputState}
}

// The ARN of the Lightsail instance (matches `id`).
func (o InstanceOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The Availability Zone in which to create your
// instance (see list below)
func (o InstanceOutput) AvailabilityZone() pulumix.Output[string] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.Output[string] { return v.AvailabilityZone })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The ID for a virtual private server image. A list of available blueprint IDs can be obtained using the AWS CLI command: `aws lightsail get-blueprints`
func (o InstanceOutput) BlueprintId() pulumix.Output[string] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.Output[string] { return v.BlueprintId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The bundle of specification information (see list below)
func (o InstanceOutput) BundleId() pulumix.Output[string] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.Output[string] { return v.BundleId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The number of vCPUs the instance has.
func (o InstanceOutput) CpuCount() pulumix.Output[int] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.Output[int] { return v.CpuCount })
	return pulumix.Flatten[int, pulumix.Output[int]](value)
}

// The timestamp when the instance was created.
func (o InstanceOutput) CreatedAt() pulumix.Output[string] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.Output[string] { return v.CreatedAt })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The IP address type of the Lightsail Instance. Valid Values: `dualstack` | `ipv4`.
func (o InstanceOutput) IpAddressType() pulumix.Output[*string] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.Output[*string] { return v.IpAddressType })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// List of IPv6 addresses for the Lightsail instance.
func (o InstanceOutput) Ipv6Addresses() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.ArrayOutput[string] { return v.Ipv6Addresses })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// A Boolean value indicating whether this instance has a static IP assigned to it.
func (o InstanceOutput) IsStaticIp() pulumix.Output[bool] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.Output[bool] { return v.IsStaticIp })
	return pulumix.Flatten[bool, pulumix.Output[bool]](value)
}

// The name of your key pair. Created in the
// Lightsail console (cannot use `ec2.KeyPair` at this time)
func (o InstanceOutput) KeyPairName() pulumix.Output[*string] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.Output[*string] { return v.KeyPairName })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The name of the Lightsail Instance. Names be unique within each AWS Region in your Lightsail account.
func (o InstanceOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The private IP address of the instance.
func (o InstanceOutput) PrivateIpAddress() pulumix.Output[string] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.Output[string] { return v.PrivateIpAddress })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The public IP address of the instance.
func (o InstanceOutput) PublicIpAddress() pulumix.Output[string] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.Output[string] { return v.PublicIpAddress })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The amount of RAM in GB on the instance (e.g., 1.0).
func (o InstanceOutput) RamSize() pulumix.Output[float64] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.Output[float64] { return v.RamSize })
	return pulumix.Flatten[float64, pulumix.Output[float64]](value)
}

// A map of tags to assign to the resource. To create a key-only tag, use an empty string as the value. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o InstanceOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o InstanceOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Single lined launch script as a string to configure server with additional user data
func (o InstanceOutput) UserData() pulumix.Output[*string] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.Output[*string] { return v.UserData })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The user name for connecting to the instance (e.g., ec2-user).
func (o InstanceOutput) Username() pulumix.Output[string] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.Output[string] { return v.Username })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(InstanceOutput{})
}
