// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package msk

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manages an Amazon Managed Streaming for Kafka configuration. More information can be found on the [MSK Developer Guide](https://docs.aws.amazon.com/msk/latest/developerguide/msk-configuration.html).
type Configuration struct {
	pulumi.CustomResourceState

	// Amazon Resource Name (ARN) of the configuration.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// Description of the configuration.
	Description pulumix.Output[*string] `pulumi:"description"`
	// List of Apache Kafka versions which can use this configuration.
	KafkaVersions pulumix.ArrayOutput[string] `pulumi:"kafkaVersions"`
	// Latest revision of the configuration.
	LatestRevision pulumix.Output[int] `pulumi:"latestRevision"`
	// Name of the configuration.
	Name pulumix.Output[string] `pulumi:"name"`
	// Contents of the server.properties file. Supported properties are documented in the [MSK Developer Guide](https://docs.aws.amazon.com/msk/latest/developerguide/msk-configuration-properties.html).
	ServerProperties pulumix.Output[string] `pulumi:"serverProperties"`
}

// NewConfiguration registers a new resource with the given unique name, arguments, and options.
func NewConfiguration(ctx *pulumi.Context,
	name string, args *ConfigurationArgs, opts ...pulumi.ResourceOption) (*Configuration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ServerProperties == nil {
		return nil, errors.New("invalid value for required argument 'ServerProperties'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Configuration
	err := ctx.RegisterResource("aws:msk/configuration:Configuration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetConfiguration gets an existing Configuration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ConfigurationState, opts ...pulumi.ResourceOption) (*Configuration, error) {
	var resource Configuration
	err := ctx.ReadResource("aws:msk/configuration:Configuration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Configuration resources.
type configurationState struct {
	// Amazon Resource Name (ARN) of the configuration.
	Arn *string `pulumi:"arn"`
	// Description of the configuration.
	Description *string `pulumi:"description"`
	// List of Apache Kafka versions which can use this configuration.
	KafkaVersions []string `pulumi:"kafkaVersions"`
	// Latest revision of the configuration.
	LatestRevision *int `pulumi:"latestRevision"`
	// Name of the configuration.
	Name *string `pulumi:"name"`
	// Contents of the server.properties file. Supported properties are documented in the [MSK Developer Guide](https://docs.aws.amazon.com/msk/latest/developerguide/msk-configuration-properties.html).
	ServerProperties *string `pulumi:"serverProperties"`
}

type ConfigurationState struct {
	// Amazon Resource Name (ARN) of the configuration.
	Arn pulumix.Input[*string]
	// Description of the configuration.
	Description pulumix.Input[*string]
	// List of Apache Kafka versions which can use this configuration.
	KafkaVersions pulumix.Input[[]string]
	// Latest revision of the configuration.
	LatestRevision pulumix.Input[*int]
	// Name of the configuration.
	Name pulumix.Input[*string]
	// Contents of the server.properties file. Supported properties are documented in the [MSK Developer Guide](https://docs.aws.amazon.com/msk/latest/developerguide/msk-configuration-properties.html).
	ServerProperties pulumix.Input[*string]
}

func (ConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*configurationState)(nil)).Elem()
}

type configurationArgs struct {
	// Description of the configuration.
	Description *string `pulumi:"description"`
	// List of Apache Kafka versions which can use this configuration.
	KafkaVersions []string `pulumi:"kafkaVersions"`
	// Name of the configuration.
	Name *string `pulumi:"name"`
	// Contents of the server.properties file. Supported properties are documented in the [MSK Developer Guide](https://docs.aws.amazon.com/msk/latest/developerguide/msk-configuration-properties.html).
	ServerProperties string `pulumi:"serverProperties"`
}

// The set of arguments for constructing a Configuration resource.
type ConfigurationArgs struct {
	// Description of the configuration.
	Description pulumix.Input[*string]
	// List of Apache Kafka versions which can use this configuration.
	KafkaVersions pulumix.Input[[]string]
	// Name of the configuration.
	Name pulumix.Input[*string]
	// Contents of the server.properties file. Supported properties are documented in the [MSK Developer Guide](https://docs.aws.amazon.com/msk/latest/developerguide/msk-configuration-properties.html).
	ServerProperties pulumix.Input[string]
}

func (ConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*configurationArgs)(nil)).Elem()
}

type ConfigurationOutput struct{ *pulumi.OutputState }

func (ConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Configuration)(nil)).Elem()
}

func (o ConfigurationOutput) ToConfigurationOutput() ConfigurationOutput {
	return o
}

func (o ConfigurationOutput) ToConfigurationOutputWithContext(ctx context.Context) ConfigurationOutput {
	return o
}

func (o ConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[Configuration] {
	return pulumix.Output[Configuration]{
		OutputState: o.OutputState,
	}
}

// Amazon Resource Name (ARN) of the configuration.
func (o ConfigurationOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Configuration](o, func(v Configuration) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Description of the configuration.
func (o ConfigurationOutput) Description() pulumix.Output[*string] {
	value := pulumix.Apply[Configuration](o, func(v Configuration) pulumix.Output[*string] { return v.Description })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// List of Apache Kafka versions which can use this configuration.
func (o ConfigurationOutput) KafkaVersions() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[Configuration](o, func(v Configuration) pulumix.ArrayOutput[string] { return v.KafkaVersions })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// Latest revision of the configuration.
func (o ConfigurationOutput) LatestRevision() pulumix.Output[int] {
	value := pulumix.Apply[Configuration](o, func(v Configuration) pulumix.Output[int] { return v.LatestRevision })
	return pulumix.Flatten[int, pulumix.Output[int]](value)
}

// Name of the configuration.
func (o ConfigurationOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[Configuration](o, func(v Configuration) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Contents of the server.properties file. Supported properties are documented in the [MSK Developer Guide](https://docs.aws.amazon.com/msk/latest/developerguide/msk-configuration-properties.html).
func (o ConfigurationOutput) ServerProperties() pulumix.Output[string] {
	value := pulumix.Apply[Configuration](o, func(v Configuration) pulumix.Output[string] { return v.ServerProperties })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(ConfigurationOutput{})
}
