// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package s3

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an S3 bucket ACL resource.
//
// > **Note:** destroy does not delete the S3 Bucket ACL but does remove the resource from state.
type BucketAclV2 struct {
	pulumi.CustomResourceState

	// Configuration block that sets the ACL permissions for an object per grantee. See below.
	AccessControlPolicy pulumix.GPtrOutput[BucketAclV2AccessControlPolicy, BucketAclV2AccessControlPolicyOutput] `pulumi:"accessControlPolicy"`
	// Canned ACL to apply to the bucket.
	Acl pulumix.Output[*string] `pulumi:"acl"`
	// Name of the bucket.
	Bucket pulumix.Output[string] `pulumi:"bucket"`
	// Account ID of the expected bucket owner.
	ExpectedBucketOwner pulumix.Output[*string] `pulumi:"expectedBucketOwner"`
}

// NewBucketAclV2 registers a new resource with the given unique name, arguments, and options.
func NewBucketAclV2(ctx *pulumi.Context,
	name string, args *BucketAclV2Args, opts ...pulumi.ResourceOption) (*BucketAclV2, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Bucket == nil {
		return nil, errors.New("invalid value for required argument 'Bucket'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BucketAclV2
	err := ctx.RegisterResource("aws:s3/bucketAclV2:BucketAclV2", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBucketAclV2 gets an existing BucketAclV2 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBucketAclV2(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BucketAclV2State, opts ...pulumi.ResourceOption) (*BucketAclV2, error) {
	var resource BucketAclV2
	err := ctx.ReadResource("aws:s3/bucketAclV2:BucketAclV2", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BucketAclV2 resources.
type bucketAclV2State struct {
	// Configuration block that sets the ACL permissions for an object per grantee. See below.
	AccessControlPolicy *BucketAclV2AccessControlPolicy `pulumi:"accessControlPolicy"`
	// Canned ACL to apply to the bucket.
	Acl *string `pulumi:"acl"`
	// Name of the bucket.
	Bucket *string `pulumi:"bucket"`
	// Account ID of the expected bucket owner.
	ExpectedBucketOwner *string `pulumi:"expectedBucketOwner"`
}

type BucketAclV2State struct {
	// Configuration block that sets the ACL permissions for an object per grantee. See below.
	AccessControlPolicy pulumix.Input[*BucketAclV2AccessControlPolicyArgs]
	// Canned ACL to apply to the bucket.
	Acl pulumix.Input[*string]
	// Name of the bucket.
	Bucket pulumix.Input[*string]
	// Account ID of the expected bucket owner.
	ExpectedBucketOwner pulumix.Input[*string]
}

func (BucketAclV2State) ElementType() reflect.Type {
	return reflect.TypeOf((*bucketAclV2State)(nil)).Elem()
}

type bucketAclV2Args struct {
	// Configuration block that sets the ACL permissions for an object per grantee. See below.
	AccessControlPolicy *BucketAclV2AccessControlPolicy `pulumi:"accessControlPolicy"`
	// Canned ACL to apply to the bucket.
	Acl *string `pulumi:"acl"`
	// Name of the bucket.
	Bucket string `pulumi:"bucket"`
	// Account ID of the expected bucket owner.
	ExpectedBucketOwner *string `pulumi:"expectedBucketOwner"`
}

// The set of arguments for constructing a BucketAclV2 resource.
type BucketAclV2Args struct {
	// Configuration block that sets the ACL permissions for an object per grantee. See below.
	AccessControlPolicy pulumix.Input[*BucketAclV2AccessControlPolicyArgs]
	// Canned ACL to apply to the bucket.
	Acl pulumix.Input[*string]
	// Name of the bucket.
	Bucket pulumix.Input[string]
	// Account ID of the expected bucket owner.
	ExpectedBucketOwner pulumix.Input[*string]
}

func (BucketAclV2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*bucketAclV2Args)(nil)).Elem()
}

type BucketAclV2Output struct{ *pulumi.OutputState }

func (BucketAclV2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketAclV2)(nil)).Elem()
}

func (o BucketAclV2Output) ToBucketAclV2Output() BucketAclV2Output {
	return o
}

func (o BucketAclV2Output) ToBucketAclV2OutputWithContext(ctx context.Context) BucketAclV2Output {
	return o
}

func (o BucketAclV2Output) ToOutput(ctx context.Context) pulumix.Output[BucketAclV2] {
	return pulumix.Output[BucketAclV2]{
		OutputState: o.OutputState,
	}
}

// Configuration block that sets the ACL permissions for an object per grantee. See below.
func (o BucketAclV2Output) AccessControlPolicy() pulumix.GPtrOutput[BucketAclV2AccessControlPolicy, BucketAclV2AccessControlPolicyOutput] {
	value := pulumix.Apply[BucketAclV2](o, func(v BucketAclV2) pulumix.GPtrOutput[BucketAclV2AccessControlPolicy, BucketAclV2AccessControlPolicyOutput] {
		return v.AccessControlPolicy
	})
	unwrapped := pulumix.Flatten[*BucketAclV2AccessControlPolicy, pulumix.GPtrOutput[BucketAclV2AccessControlPolicy, BucketAclV2AccessControlPolicyOutput]](value)
	return pulumix.GPtrOutput[BucketAclV2AccessControlPolicy, BucketAclV2AccessControlPolicyOutput]{OutputState: unwrapped.OutputState}
}

// Canned ACL to apply to the bucket.
func (o BucketAclV2Output) Acl() pulumix.Output[*string] {
	value := pulumix.Apply[BucketAclV2](o, func(v BucketAclV2) pulumix.Output[*string] { return v.Acl })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Name of the bucket.
func (o BucketAclV2Output) Bucket() pulumix.Output[string] {
	value := pulumix.Apply[BucketAclV2](o, func(v BucketAclV2) pulumix.Output[string] { return v.Bucket })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Account ID of the expected bucket owner.
func (o BucketAclV2Output) ExpectedBucketOwner() pulumix.Output[*string] {
	value := pulumix.Apply[BucketAclV2](o, func(v BucketAclV2) pulumix.Output[*string] { return v.ExpectedBucketOwner })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

func init() {
	pulumi.RegisterOutputType(BucketAclV2Output{})
}
