// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ssm

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Resource for registering an AWS Systems Manager Default Patch Baseline.
type DefaultPatchBaseline struct {
	pulumi.CustomResourceState

	// ID of the patch baseline.
	// Can be an ID or an ARN.
	// When specifying an AWS-provided patch baseline, must be the ARN.
	BaselineId pulumix.Output[string] `pulumi:"baselineId"`
	// The operating system the patch baseline applies to.
	// Valid values are
	// `AMAZON_LINUX`,
	// `AMAZON_LINUX_2`,
	// `AMAZON_LINUX_2022`,
	// `CENTOS`,
	// `DEBIAN`,
	// `MACOS`,
	// `ORACLE_LINUX`,
	// `RASPBIAN`,
	// `REDHAT_ENTERPRISE_LINUX`,
	// `ROCKY_LINUX`,
	// `SUSE`,
	// `UBUNTU`, and
	// `WINDOWS`.
	OperatingSystem pulumix.Output[string] `pulumi:"operatingSystem"`
}

// NewDefaultPatchBaseline registers a new resource with the given unique name, arguments, and options.
func NewDefaultPatchBaseline(ctx *pulumi.Context,
	name string, args *DefaultPatchBaselineArgs, opts ...pulumi.ResourceOption) (*DefaultPatchBaseline, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BaselineId == nil {
		return nil, errors.New("invalid value for required argument 'BaselineId'")
	}
	if args.OperatingSystem == nil {
		return nil, errors.New("invalid value for required argument 'OperatingSystem'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DefaultPatchBaseline
	err := ctx.RegisterResource("aws:ssm/defaultPatchBaseline:DefaultPatchBaseline", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDefaultPatchBaseline gets an existing DefaultPatchBaseline resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDefaultPatchBaseline(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DefaultPatchBaselineState, opts ...pulumi.ResourceOption) (*DefaultPatchBaseline, error) {
	var resource DefaultPatchBaseline
	err := ctx.ReadResource("aws:ssm/defaultPatchBaseline:DefaultPatchBaseline", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DefaultPatchBaseline resources.
type defaultPatchBaselineState struct {
	// ID of the patch baseline.
	// Can be an ID or an ARN.
	// When specifying an AWS-provided patch baseline, must be the ARN.
	BaselineId *string `pulumi:"baselineId"`
	// The operating system the patch baseline applies to.
	// Valid values are
	// `AMAZON_LINUX`,
	// `AMAZON_LINUX_2`,
	// `AMAZON_LINUX_2022`,
	// `CENTOS`,
	// `DEBIAN`,
	// `MACOS`,
	// `ORACLE_LINUX`,
	// `RASPBIAN`,
	// `REDHAT_ENTERPRISE_LINUX`,
	// `ROCKY_LINUX`,
	// `SUSE`,
	// `UBUNTU`, and
	// `WINDOWS`.
	OperatingSystem *string `pulumi:"operatingSystem"`
}

type DefaultPatchBaselineState struct {
	// ID of the patch baseline.
	// Can be an ID or an ARN.
	// When specifying an AWS-provided patch baseline, must be the ARN.
	BaselineId pulumix.Input[*string]
	// The operating system the patch baseline applies to.
	// Valid values are
	// `AMAZON_LINUX`,
	// `AMAZON_LINUX_2`,
	// `AMAZON_LINUX_2022`,
	// `CENTOS`,
	// `DEBIAN`,
	// `MACOS`,
	// `ORACLE_LINUX`,
	// `RASPBIAN`,
	// `REDHAT_ENTERPRISE_LINUX`,
	// `ROCKY_LINUX`,
	// `SUSE`,
	// `UBUNTU`, and
	// `WINDOWS`.
	OperatingSystem pulumix.Input[*string]
}

func (DefaultPatchBaselineState) ElementType() reflect.Type {
	return reflect.TypeOf((*defaultPatchBaselineState)(nil)).Elem()
}

type defaultPatchBaselineArgs struct {
	// ID of the patch baseline.
	// Can be an ID or an ARN.
	// When specifying an AWS-provided patch baseline, must be the ARN.
	BaselineId string `pulumi:"baselineId"`
	// The operating system the patch baseline applies to.
	// Valid values are
	// `AMAZON_LINUX`,
	// `AMAZON_LINUX_2`,
	// `AMAZON_LINUX_2022`,
	// `CENTOS`,
	// `DEBIAN`,
	// `MACOS`,
	// `ORACLE_LINUX`,
	// `RASPBIAN`,
	// `REDHAT_ENTERPRISE_LINUX`,
	// `ROCKY_LINUX`,
	// `SUSE`,
	// `UBUNTU`, and
	// `WINDOWS`.
	OperatingSystem string `pulumi:"operatingSystem"`
}

// The set of arguments for constructing a DefaultPatchBaseline resource.
type DefaultPatchBaselineArgs struct {
	// ID of the patch baseline.
	// Can be an ID or an ARN.
	// When specifying an AWS-provided patch baseline, must be the ARN.
	BaselineId pulumix.Input[string]
	// The operating system the patch baseline applies to.
	// Valid values are
	// `AMAZON_LINUX`,
	// `AMAZON_LINUX_2`,
	// `AMAZON_LINUX_2022`,
	// `CENTOS`,
	// `DEBIAN`,
	// `MACOS`,
	// `ORACLE_LINUX`,
	// `RASPBIAN`,
	// `REDHAT_ENTERPRISE_LINUX`,
	// `ROCKY_LINUX`,
	// `SUSE`,
	// `UBUNTU`, and
	// `WINDOWS`.
	OperatingSystem pulumix.Input[string]
}

func (DefaultPatchBaselineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*defaultPatchBaselineArgs)(nil)).Elem()
}

type DefaultPatchBaselineOutput struct{ *pulumi.OutputState }

func (DefaultPatchBaselineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultPatchBaseline)(nil)).Elem()
}

func (o DefaultPatchBaselineOutput) ToDefaultPatchBaselineOutput() DefaultPatchBaselineOutput {
	return o
}

func (o DefaultPatchBaselineOutput) ToDefaultPatchBaselineOutputWithContext(ctx context.Context) DefaultPatchBaselineOutput {
	return o
}

func (o DefaultPatchBaselineOutput) ToOutput(ctx context.Context) pulumix.Output[DefaultPatchBaseline] {
	return pulumix.Output[DefaultPatchBaseline]{
		OutputState: o.OutputState,
	}
}

// ID of the patch baseline.
// Can be an ID or an ARN.
// When specifying an AWS-provided patch baseline, must be the ARN.
func (o DefaultPatchBaselineOutput) BaselineId() pulumix.Output[string] {
	value := pulumix.Apply[DefaultPatchBaseline](o, func(v DefaultPatchBaseline) pulumix.Output[string] { return v.BaselineId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The operating system the patch baseline applies to.
// Valid values are
// `AMAZON_LINUX`,
// `AMAZON_LINUX_2`,
// `AMAZON_LINUX_2022`,
// `CENTOS`,
// `DEBIAN`,
// `MACOS`,
// `ORACLE_LINUX`,
// `RASPBIAN`,
// `REDHAT_ENTERPRISE_LINUX`,
// `ROCKY_LINUX`,
// `SUSE`,
// `UBUNTU`, and
// `WINDOWS`.
func (o DefaultPatchBaselineOutput) OperatingSystem() pulumix.Output[string] {
	value := pulumix.Apply[DefaultPatchBaseline](o, func(v DefaultPatchBaseline) pulumix.Output[string] { return v.OperatingSystem })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(DefaultPatchBaselineOutput{})
}
