// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apprunner

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manages an App Runner Service.
type Service struct {
	pulumi.CustomResourceState

	// ARN of the App Runner service.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// ARN of an App Runner automatic scaling configuration resource that you want to associate with your service. If not provided, App Runner associates the latest revision of a default auto scaling configuration.
	AutoScalingConfigurationArn pulumix.Output[string] `pulumi:"autoScalingConfigurationArn"`
	// An optional custom encryption key that App Runner uses to encrypt the copy of your source repository that it maintains and your service logs. By default, App Runner uses an AWS managed CMK. See Encryption Configuration below for more details.
	EncryptionConfiguration pulumix.GPtrOutput[ServiceEncryptionConfiguration, ServiceEncryptionConfigurationOutput] `pulumi:"encryptionConfiguration"`
	// Settings of the health check that AWS App Runner performs to monitor the health of your service. See Health Check Configuration below for more details.
	HealthCheckConfiguration pulumix.GPtrOutput[ServiceHealthCheckConfiguration, ServiceHealthCheckConfigurationOutput] `pulumi:"healthCheckConfiguration"`
	// The runtime configuration of instances (scaling units) of the App Runner service. See Instance Configuration below for more details.
	InstanceConfiguration pulumix.GPtrOutput[ServiceInstanceConfiguration, ServiceInstanceConfigurationOutput] `pulumi:"instanceConfiguration"`
	// Configuration settings related to network traffic of the web application that the App Runner service runs. See Network Configuration below for more details.
	NetworkConfiguration pulumix.GPtrOutput[ServiceNetworkConfiguration, ServiceNetworkConfigurationOutput] `pulumi:"networkConfiguration"`
	// The observability configuration of your service. See Observability Configuration below for more details.
	ObservabilityConfiguration pulumix.GPtrOutput[ServiceObservabilityConfiguration, ServiceObservabilityConfigurationOutput] `pulumi:"observabilityConfiguration"`
	// An alphanumeric ID that App Runner generated for this service. Unique within the AWS Region.
	ServiceId pulumix.Output[string] `pulumi:"serviceId"`
	// Name of the service.
	ServiceName pulumix.Output[string] `pulumi:"serviceName"`
	// Subdomain URL that App Runner generated for this service. You can use this URL to access your service web application.
	ServiceUrl pulumix.Output[string] `pulumi:"serviceUrl"`
	// The source to deploy to the App Runner service. Can be a code or an image repository. See Source Configuration below for more details.
	//
	// The following arguments are optional:
	SourceConfiguration pulumix.GPtrOutput[ServiceSourceConfiguration, ServiceSourceConfigurationOutput] `pulumi:"sourceConfiguration"`
	// Current state of the App Runner service.
	Status pulumix.Output[string] `pulumi:"status"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
}

// NewService registers a new resource with the given unique name, arguments, and options.
func NewService(ctx *pulumi.Context,
	name string, args *ServiceArgs, opts ...pulumi.ResourceOption) (*Service, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	if args.SourceConfiguration == nil {
		return nil, errors.New("invalid value for required argument 'SourceConfiguration'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Service
	err := ctx.RegisterResource("aws:apprunner/service:Service", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetService gets an existing Service resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetService(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceState, opts ...pulumi.ResourceOption) (*Service, error) {
	var resource Service
	err := ctx.ReadResource("aws:apprunner/service:Service", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Service resources.
type serviceState struct {
	// ARN of the App Runner service.
	Arn *string `pulumi:"arn"`
	// ARN of an App Runner automatic scaling configuration resource that you want to associate with your service. If not provided, App Runner associates the latest revision of a default auto scaling configuration.
	AutoScalingConfigurationArn *string `pulumi:"autoScalingConfigurationArn"`
	// An optional custom encryption key that App Runner uses to encrypt the copy of your source repository that it maintains and your service logs. By default, App Runner uses an AWS managed CMK. See Encryption Configuration below for more details.
	EncryptionConfiguration *ServiceEncryptionConfiguration `pulumi:"encryptionConfiguration"`
	// Settings of the health check that AWS App Runner performs to monitor the health of your service. See Health Check Configuration below for more details.
	HealthCheckConfiguration *ServiceHealthCheckConfiguration `pulumi:"healthCheckConfiguration"`
	// The runtime configuration of instances (scaling units) of the App Runner service. See Instance Configuration below for more details.
	InstanceConfiguration *ServiceInstanceConfiguration `pulumi:"instanceConfiguration"`
	// Configuration settings related to network traffic of the web application that the App Runner service runs. See Network Configuration below for more details.
	NetworkConfiguration *ServiceNetworkConfiguration `pulumi:"networkConfiguration"`
	// The observability configuration of your service. See Observability Configuration below for more details.
	ObservabilityConfiguration *ServiceObservabilityConfiguration `pulumi:"observabilityConfiguration"`
	// An alphanumeric ID that App Runner generated for this service. Unique within the AWS Region.
	ServiceId *string `pulumi:"serviceId"`
	// Name of the service.
	ServiceName *string `pulumi:"serviceName"`
	// Subdomain URL that App Runner generated for this service. You can use this URL to access your service web application.
	ServiceUrl *string `pulumi:"serviceUrl"`
	// The source to deploy to the App Runner service. Can be a code or an image repository. See Source Configuration below for more details.
	//
	// The following arguments are optional:
	SourceConfiguration *ServiceSourceConfiguration `pulumi:"sourceConfiguration"`
	// Current state of the App Runner service.
	Status *string `pulumi:"status"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type ServiceState struct {
	// ARN of the App Runner service.
	Arn pulumix.Input[*string]
	// ARN of an App Runner automatic scaling configuration resource that you want to associate with your service. If not provided, App Runner associates the latest revision of a default auto scaling configuration.
	AutoScalingConfigurationArn pulumix.Input[*string]
	// An optional custom encryption key that App Runner uses to encrypt the copy of your source repository that it maintains and your service logs. By default, App Runner uses an AWS managed CMK. See Encryption Configuration below for more details.
	EncryptionConfiguration pulumix.Input[*ServiceEncryptionConfigurationArgs]
	// Settings of the health check that AWS App Runner performs to monitor the health of your service. See Health Check Configuration below for more details.
	HealthCheckConfiguration pulumix.Input[*ServiceHealthCheckConfigurationArgs]
	// The runtime configuration of instances (scaling units) of the App Runner service. See Instance Configuration below for more details.
	InstanceConfiguration pulumix.Input[*ServiceInstanceConfigurationArgs]
	// Configuration settings related to network traffic of the web application that the App Runner service runs. See Network Configuration below for more details.
	NetworkConfiguration pulumix.Input[*ServiceNetworkConfigurationArgs]
	// The observability configuration of your service. See Observability Configuration below for more details.
	ObservabilityConfiguration pulumix.Input[*ServiceObservabilityConfigurationArgs]
	// An alphanumeric ID that App Runner generated for this service. Unique within the AWS Region.
	ServiceId pulumix.Input[*string]
	// Name of the service.
	ServiceName pulumix.Input[*string]
	// Subdomain URL that App Runner generated for this service. You can use this URL to access your service web application.
	ServiceUrl pulumix.Input[*string]
	// The source to deploy to the App Runner service. Can be a code or an image repository. See Source Configuration below for more details.
	//
	// The following arguments are optional:
	SourceConfiguration pulumix.Input[*ServiceSourceConfigurationArgs]
	// Current state of the App Runner service.
	Status pulumix.Input[*string]
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
}

func (ServiceState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceState)(nil)).Elem()
}

type serviceArgs struct {
	// ARN of an App Runner automatic scaling configuration resource that you want to associate with your service. If not provided, App Runner associates the latest revision of a default auto scaling configuration.
	AutoScalingConfigurationArn *string `pulumi:"autoScalingConfigurationArn"`
	// An optional custom encryption key that App Runner uses to encrypt the copy of your source repository that it maintains and your service logs. By default, App Runner uses an AWS managed CMK. See Encryption Configuration below for more details.
	EncryptionConfiguration *ServiceEncryptionConfiguration `pulumi:"encryptionConfiguration"`
	// Settings of the health check that AWS App Runner performs to monitor the health of your service. See Health Check Configuration below for more details.
	HealthCheckConfiguration *ServiceHealthCheckConfiguration `pulumi:"healthCheckConfiguration"`
	// The runtime configuration of instances (scaling units) of the App Runner service. See Instance Configuration below for more details.
	InstanceConfiguration *ServiceInstanceConfiguration `pulumi:"instanceConfiguration"`
	// Configuration settings related to network traffic of the web application that the App Runner service runs. See Network Configuration below for more details.
	NetworkConfiguration *ServiceNetworkConfiguration `pulumi:"networkConfiguration"`
	// The observability configuration of your service. See Observability Configuration below for more details.
	ObservabilityConfiguration *ServiceObservabilityConfiguration `pulumi:"observabilityConfiguration"`
	// Name of the service.
	ServiceName string `pulumi:"serviceName"`
	// The source to deploy to the App Runner service. Can be a code or an image repository. See Source Configuration below for more details.
	//
	// The following arguments are optional:
	SourceConfiguration ServiceSourceConfiguration `pulumi:"sourceConfiguration"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Service resource.
type ServiceArgs struct {
	// ARN of an App Runner automatic scaling configuration resource that you want to associate with your service. If not provided, App Runner associates the latest revision of a default auto scaling configuration.
	AutoScalingConfigurationArn pulumix.Input[*string]
	// An optional custom encryption key that App Runner uses to encrypt the copy of your source repository that it maintains and your service logs. By default, App Runner uses an AWS managed CMK. See Encryption Configuration below for more details.
	EncryptionConfiguration pulumix.Input[*ServiceEncryptionConfigurationArgs]
	// Settings of the health check that AWS App Runner performs to monitor the health of your service. See Health Check Configuration below for more details.
	HealthCheckConfiguration pulumix.Input[*ServiceHealthCheckConfigurationArgs]
	// The runtime configuration of instances (scaling units) of the App Runner service. See Instance Configuration below for more details.
	InstanceConfiguration pulumix.Input[*ServiceInstanceConfigurationArgs]
	// Configuration settings related to network traffic of the web application that the App Runner service runs. See Network Configuration below for more details.
	NetworkConfiguration pulumix.Input[*ServiceNetworkConfigurationArgs]
	// The observability configuration of your service. See Observability Configuration below for more details.
	ObservabilityConfiguration pulumix.Input[*ServiceObservabilityConfigurationArgs]
	// Name of the service.
	ServiceName pulumix.Input[string]
	// The source to deploy to the App Runner service. Can be a code or an image repository. See Source Configuration below for more details.
	//
	// The following arguments are optional:
	SourceConfiguration pulumix.Input[*ServiceSourceConfigurationArgs]
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (ServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceArgs)(nil)).Elem()
}

type ServiceOutput struct{ *pulumi.OutputState }

func (ServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Service)(nil)).Elem()
}

func (o ServiceOutput) ToServiceOutput() ServiceOutput {
	return o
}

func (o ServiceOutput) ToServiceOutputWithContext(ctx context.Context) ServiceOutput {
	return o
}

func (o ServiceOutput) ToOutput(ctx context.Context) pulumix.Output[Service] {
	return pulumix.Output[Service]{
		OutputState: o.OutputState,
	}
}

// ARN of the App Runner service.
func (o ServiceOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Service](o, func(v Service) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// ARN of an App Runner automatic scaling configuration resource that you want to associate with your service. If not provided, App Runner associates the latest revision of a default auto scaling configuration.
func (o ServiceOutput) AutoScalingConfigurationArn() pulumix.Output[string] {
	value := pulumix.Apply[Service](o, func(v Service) pulumix.Output[string] { return v.AutoScalingConfigurationArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// An optional custom encryption key that App Runner uses to encrypt the copy of your source repository that it maintains and your service logs. By default, App Runner uses an AWS managed CMK. See Encryption Configuration below for more details.
func (o ServiceOutput) EncryptionConfiguration() pulumix.GPtrOutput[ServiceEncryptionConfiguration, ServiceEncryptionConfigurationOutput] {
	value := pulumix.Apply[Service](o, func(v Service) pulumix.GPtrOutput[ServiceEncryptionConfiguration, ServiceEncryptionConfigurationOutput] {
		return v.EncryptionConfiguration
	})
	unwrapped := pulumix.Flatten[*ServiceEncryptionConfiguration, pulumix.GPtrOutput[ServiceEncryptionConfiguration, ServiceEncryptionConfigurationOutput]](value)
	return pulumix.GPtrOutput[ServiceEncryptionConfiguration, ServiceEncryptionConfigurationOutput]{OutputState: unwrapped.OutputState}
}

// Settings of the health check that AWS App Runner performs to monitor the health of your service. See Health Check Configuration below for more details.
func (o ServiceOutput) HealthCheckConfiguration() pulumix.GPtrOutput[ServiceHealthCheckConfiguration, ServiceHealthCheckConfigurationOutput] {
	value := pulumix.Apply[Service](o, func(v Service) pulumix.GPtrOutput[ServiceHealthCheckConfiguration, ServiceHealthCheckConfigurationOutput] {
		return v.HealthCheckConfiguration
	})
	unwrapped := pulumix.Flatten[*ServiceHealthCheckConfiguration, pulumix.GPtrOutput[ServiceHealthCheckConfiguration, ServiceHealthCheckConfigurationOutput]](value)
	return pulumix.GPtrOutput[ServiceHealthCheckConfiguration, ServiceHealthCheckConfigurationOutput]{OutputState: unwrapped.OutputState}
}

// The runtime configuration of instances (scaling units) of the App Runner service. See Instance Configuration below for more details.
func (o ServiceOutput) InstanceConfiguration() pulumix.GPtrOutput[ServiceInstanceConfiguration, ServiceInstanceConfigurationOutput] {
	value := pulumix.Apply[Service](o, func(v Service) pulumix.GPtrOutput[ServiceInstanceConfiguration, ServiceInstanceConfigurationOutput] {
		return v.InstanceConfiguration
	})
	unwrapped := pulumix.Flatten[*ServiceInstanceConfiguration, pulumix.GPtrOutput[ServiceInstanceConfiguration, ServiceInstanceConfigurationOutput]](value)
	return pulumix.GPtrOutput[ServiceInstanceConfiguration, ServiceInstanceConfigurationOutput]{OutputState: unwrapped.OutputState}
}

// Configuration settings related to network traffic of the web application that the App Runner service runs. See Network Configuration below for more details.
func (o ServiceOutput) NetworkConfiguration() pulumix.GPtrOutput[ServiceNetworkConfiguration, ServiceNetworkConfigurationOutput] {
	value := pulumix.Apply[Service](o, func(v Service) pulumix.GPtrOutput[ServiceNetworkConfiguration, ServiceNetworkConfigurationOutput] {
		return v.NetworkConfiguration
	})
	unwrapped := pulumix.Flatten[*ServiceNetworkConfiguration, pulumix.GPtrOutput[ServiceNetworkConfiguration, ServiceNetworkConfigurationOutput]](value)
	return pulumix.GPtrOutput[ServiceNetworkConfiguration, ServiceNetworkConfigurationOutput]{OutputState: unwrapped.OutputState}
}

// The observability configuration of your service. See Observability Configuration below for more details.
func (o ServiceOutput) ObservabilityConfiguration() pulumix.GPtrOutput[ServiceObservabilityConfiguration, ServiceObservabilityConfigurationOutput] {
	value := pulumix.Apply[Service](o, func(v Service) pulumix.GPtrOutput[ServiceObservabilityConfiguration, ServiceObservabilityConfigurationOutput] {
		return v.ObservabilityConfiguration
	})
	unwrapped := pulumix.Flatten[*ServiceObservabilityConfiguration, pulumix.GPtrOutput[ServiceObservabilityConfiguration, ServiceObservabilityConfigurationOutput]](value)
	return pulumix.GPtrOutput[ServiceObservabilityConfiguration, ServiceObservabilityConfigurationOutput]{OutputState: unwrapped.OutputState}
}

// An alphanumeric ID that App Runner generated for this service. Unique within the AWS Region.
func (o ServiceOutput) ServiceId() pulumix.Output[string] {
	value := pulumix.Apply[Service](o, func(v Service) pulumix.Output[string] { return v.ServiceId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Name of the service.
func (o ServiceOutput) ServiceName() pulumix.Output[string] {
	value := pulumix.Apply[Service](o, func(v Service) pulumix.Output[string] { return v.ServiceName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Subdomain URL that App Runner generated for this service. You can use this URL to access your service web application.
func (o ServiceOutput) ServiceUrl() pulumix.Output[string] {
	value := pulumix.Apply[Service](o, func(v Service) pulumix.Output[string] { return v.ServiceUrl })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The source to deploy to the App Runner service. Can be a code or an image repository. See Source Configuration below for more details.
//
// The following arguments are optional:
func (o ServiceOutput) SourceConfiguration() pulumix.GPtrOutput[ServiceSourceConfiguration, ServiceSourceConfigurationOutput] {
	value := pulumix.Apply[Service](o, func(v Service) pulumix.GPtrOutput[ServiceSourceConfiguration, ServiceSourceConfigurationOutput] {
		return v.SourceConfiguration
	})
	unwrapped := pulumix.Flatten[*ServiceSourceConfiguration, pulumix.GPtrOutput[ServiceSourceConfiguration, ServiceSourceConfigurationOutput]](value)
	return pulumix.GPtrOutput[ServiceSourceConfiguration, ServiceSourceConfigurationOutput]{OutputState: unwrapped.OutputState}
}

// Current state of the App Runner service.
func (o ServiceOutput) Status() pulumix.Output[string] {
	value := pulumix.Apply[Service](o, func(v Service) pulumix.Output[string] { return v.Status })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o ServiceOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Service](o, func(v Service) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o ServiceOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[Service](o, func(v Service) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(ServiceOutput{})
}
