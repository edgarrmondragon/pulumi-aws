// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package wafv2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Retrieves the summary of a WAFv2 Web ACL.
func LookupWebAcl(ctx *pulumi.Context, args *LookupWebAclArgs, opts ...pulumi.InvokeOption) (*LookupWebAclResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupWebAclResult
	err := ctx.Invoke("aws:wafv2/getWebAcl:getWebAcl", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getWebAcl.
type LookupWebAclArgs struct {
	// Name of the WAFv2 Web ACL.
	Name string `pulumi:"name"`
	// Specifies whether this is for an AWS CloudFront distribution or for a regional application. Valid values are `CLOUDFRONT` or `REGIONAL`. To work with CloudFront, you must also specify the region `us-east-1` (N. Virginia) on the AWS provider.
	Scope string `pulumi:"scope"`
}

// A collection of values returned by getWebAcl.
type LookupWebAclResult struct {
	// ARN of the entity.
	Arn string `pulumi:"arn"`
	// Description of the WebACL that helps with identification.
	Description string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id    string `pulumi:"id"`
	Name  string `pulumi:"name"`
	Scope string `pulumi:"scope"`
}

func LookupWebAclOutput(ctx *pulumi.Context, args LookupWebAclOutputArgs, opts ...pulumi.InvokeOption) LookupWebAclResultOutput {
	outputResult := pulumix.ApplyErr[*LookupWebAclArgs](args.ToOutput(), func(plainArgs *LookupWebAclArgs) (*LookupWebAclResult, error) {
		return LookupWebAcl(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[LookupWebAclResultOutput, *LookupWebAclResult](outputResult)
}

// A collection of arguments for invoking getWebAcl.
type LookupWebAclOutputArgs struct {
	// Name of the WAFv2 Web ACL.
	Name pulumix.Input[string] `pulumi:"name"`
	// Specifies whether this is for an AWS CloudFront distribution or for a regional application. Valid values are `CLOUDFRONT` or `REGIONAL`. To work with CloudFront, you must also specify the region `us-east-1` (N. Virginia) on the AWS provider.
	Scope pulumix.Input[string] `pulumi:"scope"`
}

func (args LookupWebAclOutputArgs) ToOutput() pulumix.Output[*LookupWebAclArgs] {
	allArgs := pulumix.All(
		args.Name.ToOutput(context.Background()).AsAny(),
		args.Scope.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *LookupWebAclArgs {
		return &LookupWebAclArgs{
			Name:  resolvedArgs[0].(string),
			Scope: resolvedArgs[1].(string),
		}
	})
}

type LookupWebAclResultOutput struct{ *pulumi.OutputState }

func (LookupWebAclResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWebAclResult)(nil)).Elem()
}

func (o LookupWebAclResultOutput) ToOutput(context.Context) pulumix.Output[*LookupWebAclResult] {
	return pulumix.Output[*LookupWebAclResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupWebAclResultOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[*LookupWebAclResult](o, func(v *LookupWebAclResult) string { return v.Arn })
}

func (o LookupWebAclResultOutput) Description() pulumix.Output[string] {
	return pulumix.Apply[*LookupWebAclResult](o, func(v *LookupWebAclResult) string { return v.Description })
}

func (o LookupWebAclResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*LookupWebAclResult](o, func(v *LookupWebAclResult) string { return v.Id })
}

func (o LookupWebAclResultOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[*LookupWebAclResult](o, func(v *LookupWebAclResult) string { return v.Name })
}

func (o LookupWebAclResultOutput) Scope() pulumix.Output[string] {
	return pulumix.Apply[*LookupWebAclResult](o, func(v *LookupWebAclResult) string { return v.Scope })
}
