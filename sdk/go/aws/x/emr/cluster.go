// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package emr

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an Elastic MapReduce Cluster, a web service that makes it easy to process large amounts of data efficiently. See [Amazon Elastic MapReduce Documentation](https://aws.amazon.com/documentation/elastic-mapreduce/) for more information.
//
// To configure [Instance Groups](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-group-configuration.html#emr-plan-instance-groups) for [task nodes](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-master-core-task-nodes.html#emr-plan-task), see the `emr.InstanceGroup` resource.
type Cluster struct {
	pulumi.CustomResourceState

	// JSON string for selecting additional features such as adding proxy information. Note: Currently there is no API to retrieve the value of this argument after EMR cluster creation from provider, therefore the provider cannot detect drift from the actual EMR cluster if its value is changed outside the provider.
	AdditionalInfo pulumix.Output[*string] `pulumi:"additionalInfo"`
	// A case-insensitive list of applications for Amazon EMR to install and configure when launching the cluster. For a list of applications available for each Amazon EMR release version, see the [Amazon EMR Release Guide](https://docs.aws.amazon.com/emr/latest/ReleaseGuide/emr-release-components.html).
	Applications pulumix.ArrayOutput[string] `pulumi:"applications"`
	// ARN of the cluster.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// An auto-termination policy for an Amazon EMR cluster. An auto-termination policy defines the amount of idle time in seconds after which a cluster automatically terminates. See Auto Termination Policy Below.
	AutoTerminationPolicy pulumix.GPtrOutput[ClusterAutoTerminationPolicy, ClusterAutoTerminationPolicyOutput] `pulumi:"autoTerminationPolicy"`
	// IAM role for automatic scaling policies. The IAM role provides permissions that the automatic scaling feature requires to launch and terminate EC2 instances in an instance group.
	AutoscalingRole pulumix.Output[*string] `pulumi:"autoscalingRole"`
	// Ordered list of bootstrap actions that will be run before Hadoop is started on the cluster nodes. See below.
	BootstrapActions pulumix.GArrayOutput[ClusterBootstrapAction, ClusterBootstrapActionOutput] `pulumi:"bootstrapActions"`
	ClusterState     pulumix.Output[string]                                                     `pulumi:"clusterState"`
	// List of configurations supplied for the EMR cluster you are creating. Supply a configuration object for applications to override their default configuration. See [AWS Documentation](https://docs.aws.amazon.com/emr/latest/ReleaseGuide/emr-configure-apps.html) for more information.
	Configurations pulumix.Output[*string] `pulumi:"configurations"`
	// JSON string for supplying list of configurations for the EMR cluster.
	//
	// > **NOTE on `configurationsJson`:** If the `Configurations` value is empty then you should skip the `Configurations` field instead of providing an empty list as a value, `"Configurations": []`.
	//
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/emr"
	// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		_, err := emr.NewCluster(ctx, "cluster", &emr.ClusterArgs{
	// 			ConfigurationsJson: pulumi.String(`[
	// {
	// "Classification": "hadoop-env",
	// "Configurations": [
	// {
	// "Classification": "export",
	// "Properties": {
	// "JAVA_HOME": "/usr/lib/jvm/java-1.8.0"
	// }
	// }
	// ],
	// "Properties": {}
	// }
	// ]
	//
	// `),
	// 		})
	// 		if err != nil {
	// 			return err
	// 		}
	// 		return nil
	// 	})
	// }
	// ```
	ConfigurationsJson pulumix.Output[*string] `pulumi:"configurationsJson"`
	// Configuration block to use an [Instance Fleet](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-fleet.html) for the core node type. Cannot be specified if any `coreInstanceGroup` configuration blocks are set. Detailed below.
	CoreInstanceFleet pulumix.GPtrOutput[ClusterCoreInstanceFleet, ClusterCoreInstanceFleetOutput] `pulumi:"coreInstanceFleet"`
	// Configuration block to use an [Instance Group](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-group-configuration.html#emr-plan-instance-groups) for the [core node type](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-master-core-task-nodes.html#emr-plan-core).
	CoreInstanceGroup pulumix.GPtrOutput[ClusterCoreInstanceGroup, ClusterCoreInstanceGroupOutput] `pulumi:"coreInstanceGroup"`
	// Custom Amazon Linux AMI for the cluster (instead of an EMR-owned AMI). Available in Amazon EMR version 5.7.0 and later.
	CustomAmiId pulumix.Output[*string] `pulumi:"customAmiId"`
	// Size in GiB of the EBS root device volume of the Linux AMI that is used for each EC2 instance. Available in Amazon EMR version 4.x and later.
	EbsRootVolumeSize pulumix.Output[*int] `pulumi:"ebsRootVolumeSize"`
	// Attributes for the EC2 instances running the job flow. See below.
	Ec2Attributes pulumix.GPtrOutput[ClusterEc2Attributes, ClusterEc2AttributesOutput] `pulumi:"ec2Attributes"`
	// Switch on/off run cluster with no steps or when all steps are complete (default is on)
	KeepJobFlowAliveWhenNoSteps pulumix.Output[bool] `pulumi:"keepJobFlowAliveWhenNoSteps"`
	// Kerberos configuration for the cluster. See below.
	KerberosAttributes pulumix.GPtrOutput[ClusterKerberosAttributes, ClusterKerberosAttributesOutput] `pulumi:"kerberosAttributes"`
	// List of [step states](https://docs.aws.amazon.com/emr/latest/APIReference/API_StepStatus.html) used to filter returned steps
	ListStepsStates pulumix.ArrayOutput[string] `pulumi:"listStepsStates"`
	// AWS KMS customer master key (CMK) key ID or arn used for encrypting log files. This attribute is only available with EMR version 5.30.0 and later, excluding EMR 6.0.0.
	LogEncryptionKmsKeyId pulumix.Output[*string] `pulumi:"logEncryptionKmsKeyId"`
	// S3 bucket to write the log files of the job flow. If a value is not provided, logs are not created.
	LogUri pulumix.Output[*string] `pulumi:"logUri"`
	// Configuration block to use an [Instance Fleet](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-fleet.html) for the master node type. Cannot be specified if any `masterInstanceGroup` configuration blocks are set. Detailed below.
	MasterInstanceFleet pulumix.GPtrOutput[ClusterMasterInstanceFleet, ClusterMasterInstanceFleetOutput] `pulumi:"masterInstanceFleet"`
	// Configuration block to use an [Instance Group](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-group-configuration.html#emr-plan-instance-groups) for the [master node type](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-master-core-task-nodes.html#emr-plan-master).
	MasterInstanceGroup pulumix.GPtrOutput[ClusterMasterInstanceGroup, ClusterMasterInstanceGroupOutput] `pulumi:"masterInstanceGroup"`
	// The DNS name of the master node. If the cluster is on a private subnet, this is the private DNS name. On a public subnet, this is the public DNS name.
	MasterPublicDns pulumix.Output[string] `pulumi:"masterPublicDns"`
	// Name of the job flow.
	Name pulumix.Output[string] `pulumi:"name"`
	// The specified placement group configuration for an Amazon EMR cluster.
	PlacementGroupConfigs pulumix.GArrayOutput[ClusterPlacementGroupConfig, ClusterPlacementGroupConfigOutput] `pulumi:"placementGroupConfigs"`
	// Release label for the Amazon EMR release.
	ReleaseLabel pulumix.Output[string] `pulumi:"releaseLabel"`
	// Way that individual Amazon EC2 instances terminate when an automatic scale-in activity occurs or an `instance group` is resized.
	ScaleDownBehavior pulumix.Output[string] `pulumi:"scaleDownBehavior"`
	// Security configuration name to attach to the EMR cluster. Only valid for EMR clusters with `releaseLabel` 4.8.0 or greater.
	SecurityConfiguration pulumix.Output[*string] `pulumi:"securityConfiguration"`
	// IAM role that will be assumed by the Amazon EMR service to access AWS resources.
	//
	// The following arguments are optional:
	ServiceRole pulumix.Output[string] `pulumi:"serviceRole"`
	// Number of steps that can be executed concurrently. You can specify a maximum of 256 steps. Only valid for EMR clusters with `releaseLabel` 5.28.0 or greater (default is 1).
	StepConcurrencyLevel pulumix.Output[*int] `pulumi:"stepConcurrencyLevel"`
	// List of steps to run when creating the cluster. See below. It is highly recommended to utilize the lifecycle resource options block with `ignoreChanges` if other steps are being managed outside of this provider.
	Steps pulumix.GArrayOutput[ClusterStep, ClusterStepOutput] `pulumi:"steps"`
	// list of tags to apply to the EMR Cluster. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// Switch on/off termination protection (default is `false`, except when using multiple master nodes). Before attempting to destroy the resource when termination protection is enabled, this configuration must be applied with its value set to `false`.
	TerminationProtection pulumix.Output[bool] `pulumi:"terminationProtection"`
	// Whether the job flow is visible to all IAM users of the AWS account associated with the job flow. Default value is `true`.
	VisibleToAllUsers pulumix.Output[*bool] `pulumi:"visibleToAllUsers"`
}

// NewCluster registers a new resource with the given unique name, arguments, and options.
func NewCluster(ctx *pulumi.Context,
	name string, args *ClusterArgs, opts ...pulumi.ResourceOption) (*Cluster, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ReleaseLabel == nil {
		return nil, errors.New("invalid value for required argument 'ReleaseLabel'")
	}
	if args.ServiceRole == nil {
		return nil, errors.New("invalid value for required argument 'ServiceRole'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Cluster
	err := ctx.RegisterResource("aws:emr/cluster:Cluster", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCluster gets an existing Cluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCluster(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ClusterState, opts ...pulumi.ResourceOption) (*Cluster, error) {
	var resource Cluster
	err := ctx.ReadResource("aws:emr/cluster:Cluster", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Cluster resources.
type clusterState struct {
	// JSON string for selecting additional features such as adding proxy information. Note: Currently there is no API to retrieve the value of this argument after EMR cluster creation from provider, therefore the provider cannot detect drift from the actual EMR cluster if its value is changed outside the provider.
	AdditionalInfo *string `pulumi:"additionalInfo"`
	// A case-insensitive list of applications for Amazon EMR to install and configure when launching the cluster. For a list of applications available for each Amazon EMR release version, see the [Amazon EMR Release Guide](https://docs.aws.amazon.com/emr/latest/ReleaseGuide/emr-release-components.html).
	Applications []string `pulumi:"applications"`
	// ARN of the cluster.
	Arn *string `pulumi:"arn"`
	// An auto-termination policy for an Amazon EMR cluster. An auto-termination policy defines the amount of idle time in seconds after which a cluster automatically terminates. See Auto Termination Policy Below.
	AutoTerminationPolicy *ClusterAutoTerminationPolicy `pulumi:"autoTerminationPolicy"`
	// IAM role for automatic scaling policies. The IAM role provides permissions that the automatic scaling feature requires to launch and terminate EC2 instances in an instance group.
	AutoscalingRole *string `pulumi:"autoscalingRole"`
	// Ordered list of bootstrap actions that will be run before Hadoop is started on the cluster nodes. See below.
	BootstrapActions []ClusterBootstrapAction `pulumi:"bootstrapActions"`
	ClusterState     *string                  `pulumi:"clusterState"`
	// List of configurations supplied for the EMR cluster you are creating. Supply a configuration object for applications to override their default configuration. See [AWS Documentation](https://docs.aws.amazon.com/emr/latest/ReleaseGuide/emr-configure-apps.html) for more information.
	Configurations *string `pulumi:"configurations"`
	// JSON string for supplying list of configurations for the EMR cluster.
	//
	// > **NOTE on `configurationsJson`:** If the `Configurations` value is empty then you should skip the `Configurations` field instead of providing an empty list as a value, `"Configurations": []`.
	//
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/emr"
	// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		_, err := emr.NewCluster(ctx, "cluster", &emr.ClusterArgs{
	// 			ConfigurationsJson: pulumi.String(`[
	// {
	// "Classification": "hadoop-env",
	// "Configurations": [
	// {
	// "Classification": "export",
	// "Properties": {
	// "JAVA_HOME": "/usr/lib/jvm/java-1.8.0"
	// }
	// }
	// ],
	// "Properties": {}
	// }
	// ]
	//
	// `),
	// 		})
	// 		if err != nil {
	// 			return err
	// 		}
	// 		return nil
	// 	})
	// }
	// ```
	ConfigurationsJson *string `pulumi:"configurationsJson"`
	// Configuration block to use an [Instance Fleet](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-fleet.html) for the core node type. Cannot be specified if any `coreInstanceGroup` configuration blocks are set. Detailed below.
	CoreInstanceFleet *ClusterCoreInstanceFleet `pulumi:"coreInstanceFleet"`
	// Configuration block to use an [Instance Group](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-group-configuration.html#emr-plan-instance-groups) for the [core node type](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-master-core-task-nodes.html#emr-plan-core).
	CoreInstanceGroup *ClusterCoreInstanceGroup `pulumi:"coreInstanceGroup"`
	// Custom Amazon Linux AMI for the cluster (instead of an EMR-owned AMI). Available in Amazon EMR version 5.7.0 and later.
	CustomAmiId *string `pulumi:"customAmiId"`
	// Size in GiB of the EBS root device volume of the Linux AMI that is used for each EC2 instance. Available in Amazon EMR version 4.x and later.
	EbsRootVolumeSize *int `pulumi:"ebsRootVolumeSize"`
	// Attributes for the EC2 instances running the job flow. See below.
	Ec2Attributes *ClusterEc2Attributes `pulumi:"ec2Attributes"`
	// Switch on/off run cluster with no steps or when all steps are complete (default is on)
	KeepJobFlowAliveWhenNoSteps *bool `pulumi:"keepJobFlowAliveWhenNoSteps"`
	// Kerberos configuration for the cluster. See below.
	KerberosAttributes *ClusterKerberosAttributes `pulumi:"kerberosAttributes"`
	// List of [step states](https://docs.aws.amazon.com/emr/latest/APIReference/API_StepStatus.html) used to filter returned steps
	ListStepsStates []string `pulumi:"listStepsStates"`
	// AWS KMS customer master key (CMK) key ID or arn used for encrypting log files. This attribute is only available with EMR version 5.30.0 and later, excluding EMR 6.0.0.
	LogEncryptionKmsKeyId *string `pulumi:"logEncryptionKmsKeyId"`
	// S3 bucket to write the log files of the job flow. If a value is not provided, logs are not created.
	LogUri *string `pulumi:"logUri"`
	// Configuration block to use an [Instance Fleet](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-fleet.html) for the master node type. Cannot be specified if any `masterInstanceGroup` configuration blocks are set. Detailed below.
	MasterInstanceFleet *ClusterMasterInstanceFleet `pulumi:"masterInstanceFleet"`
	// Configuration block to use an [Instance Group](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-group-configuration.html#emr-plan-instance-groups) for the [master node type](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-master-core-task-nodes.html#emr-plan-master).
	MasterInstanceGroup *ClusterMasterInstanceGroup `pulumi:"masterInstanceGroup"`
	// The DNS name of the master node. If the cluster is on a private subnet, this is the private DNS name. On a public subnet, this is the public DNS name.
	MasterPublicDns *string `pulumi:"masterPublicDns"`
	// Name of the job flow.
	Name *string `pulumi:"name"`
	// The specified placement group configuration for an Amazon EMR cluster.
	PlacementGroupConfigs []ClusterPlacementGroupConfig `pulumi:"placementGroupConfigs"`
	// Release label for the Amazon EMR release.
	ReleaseLabel *string `pulumi:"releaseLabel"`
	// Way that individual Amazon EC2 instances terminate when an automatic scale-in activity occurs or an `instance group` is resized.
	ScaleDownBehavior *string `pulumi:"scaleDownBehavior"`
	// Security configuration name to attach to the EMR cluster. Only valid for EMR clusters with `releaseLabel` 4.8.0 or greater.
	SecurityConfiguration *string `pulumi:"securityConfiguration"`
	// IAM role that will be assumed by the Amazon EMR service to access AWS resources.
	//
	// The following arguments are optional:
	ServiceRole *string `pulumi:"serviceRole"`
	// Number of steps that can be executed concurrently. You can specify a maximum of 256 steps. Only valid for EMR clusters with `releaseLabel` 5.28.0 or greater (default is 1).
	StepConcurrencyLevel *int `pulumi:"stepConcurrencyLevel"`
	// List of steps to run when creating the cluster. See below. It is highly recommended to utilize the lifecycle resource options block with `ignoreChanges` if other steps are being managed outside of this provider.
	Steps []ClusterStep `pulumi:"steps"`
	// list of tags to apply to the EMR Cluster. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// Switch on/off termination protection (default is `false`, except when using multiple master nodes). Before attempting to destroy the resource when termination protection is enabled, this configuration must be applied with its value set to `false`.
	TerminationProtection *bool `pulumi:"terminationProtection"`
	// Whether the job flow is visible to all IAM users of the AWS account associated with the job flow. Default value is `true`.
	VisibleToAllUsers *bool `pulumi:"visibleToAllUsers"`
}

type ClusterState struct {
	// JSON string for selecting additional features such as adding proxy information. Note: Currently there is no API to retrieve the value of this argument after EMR cluster creation from provider, therefore the provider cannot detect drift from the actual EMR cluster if its value is changed outside the provider.
	AdditionalInfo pulumix.Input[*string]
	// A case-insensitive list of applications for Amazon EMR to install and configure when launching the cluster. For a list of applications available for each Amazon EMR release version, see the [Amazon EMR Release Guide](https://docs.aws.amazon.com/emr/latest/ReleaseGuide/emr-release-components.html).
	Applications pulumix.Input[[]string]
	// ARN of the cluster.
	Arn pulumix.Input[*string]
	// An auto-termination policy for an Amazon EMR cluster. An auto-termination policy defines the amount of idle time in seconds after which a cluster automatically terminates. See Auto Termination Policy Below.
	AutoTerminationPolicy pulumix.Input[*ClusterAutoTerminationPolicyArgs]
	// IAM role for automatic scaling policies. The IAM role provides permissions that the automatic scaling feature requires to launch and terminate EC2 instances in an instance group.
	AutoscalingRole pulumix.Input[*string]
	// Ordered list of bootstrap actions that will be run before Hadoop is started on the cluster nodes. See below.
	BootstrapActions pulumix.Input[[]*ClusterBootstrapActionArgs]
	ClusterState     pulumix.Input[*string]
	// List of configurations supplied for the EMR cluster you are creating. Supply a configuration object for applications to override their default configuration. See [AWS Documentation](https://docs.aws.amazon.com/emr/latest/ReleaseGuide/emr-configure-apps.html) for more information.
	Configurations pulumix.Input[*string]
	// JSON string for supplying list of configurations for the EMR cluster.
	//
	// > **NOTE on `configurationsJson`:** If the `Configurations` value is empty then you should skip the `Configurations` field instead of providing an empty list as a value, `"Configurations": []`.
	//
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/emr"
	// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		_, err := emr.NewCluster(ctx, "cluster", &emr.ClusterArgs{
	// 			ConfigurationsJson: pulumi.String(`[
	// {
	// "Classification": "hadoop-env",
	// "Configurations": [
	// {
	// "Classification": "export",
	// "Properties": {
	// "JAVA_HOME": "/usr/lib/jvm/java-1.8.0"
	// }
	// }
	// ],
	// "Properties": {}
	// }
	// ]
	//
	// `),
	// 		})
	// 		if err != nil {
	// 			return err
	// 		}
	// 		return nil
	// 	})
	// }
	// ```
	ConfigurationsJson pulumix.Input[*string]
	// Configuration block to use an [Instance Fleet](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-fleet.html) for the core node type. Cannot be specified if any `coreInstanceGroup` configuration blocks are set. Detailed below.
	CoreInstanceFleet pulumix.Input[*ClusterCoreInstanceFleetArgs]
	// Configuration block to use an [Instance Group](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-group-configuration.html#emr-plan-instance-groups) for the [core node type](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-master-core-task-nodes.html#emr-plan-core).
	CoreInstanceGroup pulumix.Input[*ClusterCoreInstanceGroupArgs]
	// Custom Amazon Linux AMI for the cluster (instead of an EMR-owned AMI). Available in Amazon EMR version 5.7.0 and later.
	CustomAmiId pulumix.Input[*string]
	// Size in GiB of the EBS root device volume of the Linux AMI that is used for each EC2 instance. Available in Amazon EMR version 4.x and later.
	EbsRootVolumeSize pulumix.Input[*int]
	// Attributes for the EC2 instances running the job flow. See below.
	Ec2Attributes pulumix.Input[*ClusterEc2AttributesArgs]
	// Switch on/off run cluster with no steps or when all steps are complete (default is on)
	KeepJobFlowAliveWhenNoSteps pulumix.Input[*bool]
	// Kerberos configuration for the cluster. See below.
	KerberosAttributes pulumix.Input[*ClusterKerberosAttributesArgs]
	// List of [step states](https://docs.aws.amazon.com/emr/latest/APIReference/API_StepStatus.html) used to filter returned steps
	ListStepsStates pulumix.Input[[]string]
	// AWS KMS customer master key (CMK) key ID or arn used for encrypting log files. This attribute is only available with EMR version 5.30.0 and later, excluding EMR 6.0.0.
	LogEncryptionKmsKeyId pulumix.Input[*string]
	// S3 bucket to write the log files of the job flow. If a value is not provided, logs are not created.
	LogUri pulumix.Input[*string]
	// Configuration block to use an [Instance Fleet](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-fleet.html) for the master node type. Cannot be specified if any `masterInstanceGroup` configuration blocks are set. Detailed below.
	MasterInstanceFleet pulumix.Input[*ClusterMasterInstanceFleetArgs]
	// Configuration block to use an [Instance Group](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-group-configuration.html#emr-plan-instance-groups) for the [master node type](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-master-core-task-nodes.html#emr-plan-master).
	MasterInstanceGroup pulumix.Input[*ClusterMasterInstanceGroupArgs]
	// The DNS name of the master node. If the cluster is on a private subnet, this is the private DNS name. On a public subnet, this is the public DNS name.
	MasterPublicDns pulumix.Input[*string]
	// Name of the job flow.
	Name pulumix.Input[*string]
	// The specified placement group configuration for an Amazon EMR cluster.
	PlacementGroupConfigs pulumix.Input[[]*ClusterPlacementGroupConfigArgs]
	// Release label for the Amazon EMR release.
	ReleaseLabel pulumix.Input[*string]
	// Way that individual Amazon EC2 instances terminate when an automatic scale-in activity occurs or an `instance group` is resized.
	ScaleDownBehavior pulumix.Input[*string]
	// Security configuration name to attach to the EMR cluster. Only valid for EMR clusters with `releaseLabel` 4.8.0 or greater.
	SecurityConfiguration pulumix.Input[*string]
	// IAM role that will be assumed by the Amazon EMR service to access AWS resources.
	//
	// The following arguments are optional:
	ServiceRole pulumix.Input[*string]
	// Number of steps that can be executed concurrently. You can specify a maximum of 256 steps. Only valid for EMR clusters with `releaseLabel` 5.28.0 or greater (default is 1).
	StepConcurrencyLevel pulumix.Input[*int]
	// List of steps to run when creating the cluster. See below. It is highly recommended to utilize the lifecycle resource options block with `ignoreChanges` if other steps are being managed outside of this provider.
	Steps pulumix.Input[[]*ClusterStepArgs]
	// list of tags to apply to the EMR Cluster. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// Switch on/off termination protection (default is `false`, except when using multiple master nodes). Before attempting to destroy the resource when termination protection is enabled, this configuration must be applied with its value set to `false`.
	TerminationProtection pulumix.Input[*bool]
	// Whether the job flow is visible to all IAM users of the AWS account associated with the job flow. Default value is `true`.
	VisibleToAllUsers pulumix.Input[*bool]
}

func (ClusterState) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterState)(nil)).Elem()
}

type clusterArgs struct {
	// JSON string for selecting additional features such as adding proxy information. Note: Currently there is no API to retrieve the value of this argument after EMR cluster creation from provider, therefore the provider cannot detect drift from the actual EMR cluster if its value is changed outside the provider.
	AdditionalInfo *string `pulumi:"additionalInfo"`
	// A case-insensitive list of applications for Amazon EMR to install and configure when launching the cluster. For a list of applications available for each Amazon EMR release version, see the [Amazon EMR Release Guide](https://docs.aws.amazon.com/emr/latest/ReleaseGuide/emr-release-components.html).
	Applications []string `pulumi:"applications"`
	// An auto-termination policy for an Amazon EMR cluster. An auto-termination policy defines the amount of idle time in seconds after which a cluster automatically terminates. See Auto Termination Policy Below.
	AutoTerminationPolicy *ClusterAutoTerminationPolicy `pulumi:"autoTerminationPolicy"`
	// IAM role for automatic scaling policies. The IAM role provides permissions that the automatic scaling feature requires to launch and terminate EC2 instances in an instance group.
	AutoscalingRole *string `pulumi:"autoscalingRole"`
	// Ordered list of bootstrap actions that will be run before Hadoop is started on the cluster nodes. See below.
	BootstrapActions []ClusterBootstrapAction `pulumi:"bootstrapActions"`
	// List of configurations supplied for the EMR cluster you are creating. Supply a configuration object for applications to override their default configuration. See [AWS Documentation](https://docs.aws.amazon.com/emr/latest/ReleaseGuide/emr-configure-apps.html) for more information.
	Configurations *string `pulumi:"configurations"`
	// JSON string for supplying list of configurations for the EMR cluster.
	//
	// > **NOTE on `configurationsJson`:** If the `Configurations` value is empty then you should skip the `Configurations` field instead of providing an empty list as a value, `"Configurations": []`.
	//
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/emr"
	// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		_, err := emr.NewCluster(ctx, "cluster", &emr.ClusterArgs{
	// 			ConfigurationsJson: pulumi.String(`[
	// {
	// "Classification": "hadoop-env",
	// "Configurations": [
	// {
	// "Classification": "export",
	// "Properties": {
	// "JAVA_HOME": "/usr/lib/jvm/java-1.8.0"
	// }
	// }
	// ],
	// "Properties": {}
	// }
	// ]
	//
	// `),
	// 		})
	// 		if err != nil {
	// 			return err
	// 		}
	// 		return nil
	// 	})
	// }
	// ```
	ConfigurationsJson *string `pulumi:"configurationsJson"`
	// Configuration block to use an [Instance Fleet](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-fleet.html) for the core node type. Cannot be specified if any `coreInstanceGroup` configuration blocks are set. Detailed below.
	CoreInstanceFleet *ClusterCoreInstanceFleet `pulumi:"coreInstanceFleet"`
	// Configuration block to use an [Instance Group](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-group-configuration.html#emr-plan-instance-groups) for the [core node type](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-master-core-task-nodes.html#emr-plan-core).
	CoreInstanceGroup *ClusterCoreInstanceGroup `pulumi:"coreInstanceGroup"`
	// Custom Amazon Linux AMI for the cluster (instead of an EMR-owned AMI). Available in Amazon EMR version 5.7.0 and later.
	CustomAmiId *string `pulumi:"customAmiId"`
	// Size in GiB of the EBS root device volume of the Linux AMI that is used for each EC2 instance. Available in Amazon EMR version 4.x and later.
	EbsRootVolumeSize *int `pulumi:"ebsRootVolumeSize"`
	// Attributes for the EC2 instances running the job flow. See below.
	Ec2Attributes *ClusterEc2Attributes `pulumi:"ec2Attributes"`
	// Switch on/off run cluster with no steps or when all steps are complete (default is on)
	KeepJobFlowAliveWhenNoSteps *bool `pulumi:"keepJobFlowAliveWhenNoSteps"`
	// Kerberos configuration for the cluster. See below.
	KerberosAttributes *ClusterKerberosAttributes `pulumi:"kerberosAttributes"`
	// List of [step states](https://docs.aws.amazon.com/emr/latest/APIReference/API_StepStatus.html) used to filter returned steps
	ListStepsStates []string `pulumi:"listStepsStates"`
	// AWS KMS customer master key (CMK) key ID or arn used for encrypting log files. This attribute is only available with EMR version 5.30.0 and later, excluding EMR 6.0.0.
	LogEncryptionKmsKeyId *string `pulumi:"logEncryptionKmsKeyId"`
	// S3 bucket to write the log files of the job flow. If a value is not provided, logs are not created.
	LogUri *string `pulumi:"logUri"`
	// Configuration block to use an [Instance Fleet](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-fleet.html) for the master node type. Cannot be specified if any `masterInstanceGroup` configuration blocks are set. Detailed below.
	MasterInstanceFleet *ClusterMasterInstanceFleet `pulumi:"masterInstanceFleet"`
	// Configuration block to use an [Instance Group](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-group-configuration.html#emr-plan-instance-groups) for the [master node type](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-master-core-task-nodes.html#emr-plan-master).
	MasterInstanceGroup *ClusterMasterInstanceGroup `pulumi:"masterInstanceGroup"`
	// Name of the job flow.
	Name *string `pulumi:"name"`
	// The specified placement group configuration for an Amazon EMR cluster.
	PlacementGroupConfigs []ClusterPlacementGroupConfig `pulumi:"placementGroupConfigs"`
	// Release label for the Amazon EMR release.
	ReleaseLabel string `pulumi:"releaseLabel"`
	// Way that individual Amazon EC2 instances terminate when an automatic scale-in activity occurs or an `instance group` is resized.
	ScaleDownBehavior *string `pulumi:"scaleDownBehavior"`
	// Security configuration name to attach to the EMR cluster. Only valid for EMR clusters with `releaseLabel` 4.8.0 or greater.
	SecurityConfiguration *string `pulumi:"securityConfiguration"`
	// IAM role that will be assumed by the Amazon EMR service to access AWS resources.
	//
	// The following arguments are optional:
	ServiceRole string `pulumi:"serviceRole"`
	// Number of steps that can be executed concurrently. You can specify a maximum of 256 steps. Only valid for EMR clusters with `releaseLabel` 5.28.0 or greater (default is 1).
	StepConcurrencyLevel *int `pulumi:"stepConcurrencyLevel"`
	// List of steps to run when creating the cluster. See below. It is highly recommended to utilize the lifecycle resource options block with `ignoreChanges` if other steps are being managed outside of this provider.
	Steps []ClusterStep `pulumi:"steps"`
	// list of tags to apply to the EMR Cluster. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Switch on/off termination protection (default is `false`, except when using multiple master nodes). Before attempting to destroy the resource when termination protection is enabled, this configuration must be applied with its value set to `false`.
	TerminationProtection *bool `pulumi:"terminationProtection"`
	// Whether the job flow is visible to all IAM users of the AWS account associated with the job flow. Default value is `true`.
	VisibleToAllUsers *bool `pulumi:"visibleToAllUsers"`
}

// The set of arguments for constructing a Cluster resource.
type ClusterArgs struct {
	// JSON string for selecting additional features such as adding proxy information. Note: Currently there is no API to retrieve the value of this argument after EMR cluster creation from provider, therefore the provider cannot detect drift from the actual EMR cluster if its value is changed outside the provider.
	AdditionalInfo pulumix.Input[*string]
	// A case-insensitive list of applications for Amazon EMR to install and configure when launching the cluster. For a list of applications available for each Amazon EMR release version, see the [Amazon EMR Release Guide](https://docs.aws.amazon.com/emr/latest/ReleaseGuide/emr-release-components.html).
	Applications pulumix.Input[[]string]
	// An auto-termination policy for an Amazon EMR cluster. An auto-termination policy defines the amount of idle time in seconds after which a cluster automatically terminates. See Auto Termination Policy Below.
	AutoTerminationPolicy pulumix.Input[*ClusterAutoTerminationPolicyArgs]
	// IAM role for automatic scaling policies. The IAM role provides permissions that the automatic scaling feature requires to launch and terminate EC2 instances in an instance group.
	AutoscalingRole pulumix.Input[*string]
	// Ordered list of bootstrap actions that will be run before Hadoop is started on the cluster nodes. See below.
	BootstrapActions pulumix.Input[[]*ClusterBootstrapActionArgs]
	// List of configurations supplied for the EMR cluster you are creating. Supply a configuration object for applications to override their default configuration. See [AWS Documentation](https://docs.aws.amazon.com/emr/latest/ReleaseGuide/emr-configure-apps.html) for more information.
	Configurations pulumix.Input[*string]
	// JSON string for supplying list of configurations for the EMR cluster.
	//
	// > **NOTE on `configurationsJson`:** If the `Configurations` value is empty then you should skip the `Configurations` field instead of providing an empty list as a value, `"Configurations": []`.
	//
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/emr"
	// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		_, err := emr.NewCluster(ctx, "cluster", &emr.ClusterArgs{
	// 			ConfigurationsJson: pulumi.String(`[
	// {
	// "Classification": "hadoop-env",
	// "Configurations": [
	// {
	// "Classification": "export",
	// "Properties": {
	// "JAVA_HOME": "/usr/lib/jvm/java-1.8.0"
	// }
	// }
	// ],
	// "Properties": {}
	// }
	// ]
	//
	// `),
	// 		})
	// 		if err != nil {
	// 			return err
	// 		}
	// 		return nil
	// 	})
	// }
	// ```
	ConfigurationsJson pulumix.Input[*string]
	// Configuration block to use an [Instance Fleet](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-fleet.html) for the core node type. Cannot be specified if any `coreInstanceGroup` configuration blocks are set. Detailed below.
	CoreInstanceFleet pulumix.Input[*ClusterCoreInstanceFleetArgs]
	// Configuration block to use an [Instance Group](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-group-configuration.html#emr-plan-instance-groups) for the [core node type](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-master-core-task-nodes.html#emr-plan-core).
	CoreInstanceGroup pulumix.Input[*ClusterCoreInstanceGroupArgs]
	// Custom Amazon Linux AMI for the cluster (instead of an EMR-owned AMI). Available in Amazon EMR version 5.7.0 and later.
	CustomAmiId pulumix.Input[*string]
	// Size in GiB of the EBS root device volume of the Linux AMI that is used for each EC2 instance. Available in Amazon EMR version 4.x and later.
	EbsRootVolumeSize pulumix.Input[*int]
	// Attributes for the EC2 instances running the job flow. See below.
	Ec2Attributes pulumix.Input[*ClusterEc2AttributesArgs]
	// Switch on/off run cluster with no steps or when all steps are complete (default is on)
	KeepJobFlowAliveWhenNoSteps pulumix.Input[*bool]
	// Kerberos configuration for the cluster. See below.
	KerberosAttributes pulumix.Input[*ClusterKerberosAttributesArgs]
	// List of [step states](https://docs.aws.amazon.com/emr/latest/APIReference/API_StepStatus.html) used to filter returned steps
	ListStepsStates pulumix.Input[[]string]
	// AWS KMS customer master key (CMK) key ID or arn used for encrypting log files. This attribute is only available with EMR version 5.30.0 and later, excluding EMR 6.0.0.
	LogEncryptionKmsKeyId pulumix.Input[*string]
	// S3 bucket to write the log files of the job flow. If a value is not provided, logs are not created.
	LogUri pulumix.Input[*string]
	// Configuration block to use an [Instance Fleet](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-fleet.html) for the master node type. Cannot be specified if any `masterInstanceGroup` configuration blocks are set. Detailed below.
	MasterInstanceFleet pulumix.Input[*ClusterMasterInstanceFleetArgs]
	// Configuration block to use an [Instance Group](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-group-configuration.html#emr-plan-instance-groups) for the [master node type](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-master-core-task-nodes.html#emr-plan-master).
	MasterInstanceGroup pulumix.Input[*ClusterMasterInstanceGroupArgs]
	// Name of the job flow.
	Name pulumix.Input[*string]
	// The specified placement group configuration for an Amazon EMR cluster.
	PlacementGroupConfigs pulumix.Input[[]*ClusterPlacementGroupConfigArgs]
	// Release label for the Amazon EMR release.
	ReleaseLabel pulumix.Input[string]
	// Way that individual Amazon EC2 instances terminate when an automatic scale-in activity occurs or an `instance group` is resized.
	ScaleDownBehavior pulumix.Input[*string]
	// Security configuration name to attach to the EMR cluster. Only valid for EMR clusters with `releaseLabel` 4.8.0 or greater.
	SecurityConfiguration pulumix.Input[*string]
	// IAM role that will be assumed by the Amazon EMR service to access AWS resources.
	//
	// The following arguments are optional:
	ServiceRole pulumix.Input[string]
	// Number of steps that can be executed concurrently. You can specify a maximum of 256 steps. Only valid for EMR clusters with `releaseLabel` 5.28.0 or greater (default is 1).
	StepConcurrencyLevel pulumix.Input[*int]
	// List of steps to run when creating the cluster. See below. It is highly recommended to utilize the lifecycle resource options block with `ignoreChanges` if other steps are being managed outside of this provider.
	Steps pulumix.Input[[]*ClusterStepArgs]
	// list of tags to apply to the EMR Cluster. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// Switch on/off termination protection (default is `false`, except when using multiple master nodes). Before attempting to destroy the resource when termination protection is enabled, this configuration must be applied with its value set to `false`.
	TerminationProtection pulumix.Input[*bool]
	// Whether the job flow is visible to all IAM users of the AWS account associated with the job flow. Default value is `true`.
	VisibleToAllUsers pulumix.Input[*bool]
}

func (ClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterArgs)(nil)).Elem()
}

type ClusterOutput struct{ *pulumi.OutputState }

func (ClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Cluster)(nil)).Elem()
}

func (o ClusterOutput) ToClusterOutput() ClusterOutput {
	return o
}

func (o ClusterOutput) ToClusterOutputWithContext(ctx context.Context) ClusterOutput {
	return o
}

func (o ClusterOutput) ToOutput(ctx context.Context) pulumix.Output[Cluster] {
	return pulumix.Output[Cluster]{
		OutputState: o.OutputState,
	}
}

// JSON string for selecting additional features such as adding proxy information. Note: Currently there is no API to retrieve the value of this argument after EMR cluster creation from provider, therefore the provider cannot detect drift from the actual EMR cluster if its value is changed outside the provider.
func (o ClusterOutput) AdditionalInfo() pulumix.Output[*string] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.Output[*string] { return v.AdditionalInfo })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// A case-insensitive list of applications for Amazon EMR to install and configure when launching the cluster. For a list of applications available for each Amazon EMR release version, see the [Amazon EMR Release Guide](https://docs.aws.amazon.com/emr/latest/ReleaseGuide/emr-release-components.html).
func (o ClusterOutput) Applications() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.ArrayOutput[string] { return v.Applications })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// ARN of the cluster.
func (o ClusterOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// An auto-termination policy for an Amazon EMR cluster. An auto-termination policy defines the amount of idle time in seconds after which a cluster automatically terminates. See Auto Termination Policy Below.
func (o ClusterOutput) AutoTerminationPolicy() pulumix.GPtrOutput[ClusterAutoTerminationPolicy, ClusterAutoTerminationPolicyOutput] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.GPtrOutput[ClusterAutoTerminationPolicy, ClusterAutoTerminationPolicyOutput] {
		return v.AutoTerminationPolicy
	})
	unwrapped := pulumix.Flatten[*ClusterAutoTerminationPolicy, pulumix.GPtrOutput[ClusterAutoTerminationPolicy, ClusterAutoTerminationPolicyOutput]](value)
	return pulumix.GPtrOutput[ClusterAutoTerminationPolicy, ClusterAutoTerminationPolicyOutput]{OutputState: unwrapped.OutputState}
}

// IAM role for automatic scaling policies. The IAM role provides permissions that the automatic scaling feature requires to launch and terminate EC2 instances in an instance group.
func (o ClusterOutput) AutoscalingRole() pulumix.Output[*string] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.Output[*string] { return v.AutoscalingRole })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Ordered list of bootstrap actions that will be run before Hadoop is started on the cluster nodes. See below.
func (o ClusterOutput) BootstrapActions() pulumix.GArrayOutput[ClusterBootstrapAction, ClusterBootstrapActionOutput] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.GArrayOutput[ClusterBootstrapAction, ClusterBootstrapActionOutput] {
		return v.BootstrapActions
	})
	unwrapped := pulumix.Flatten[[]ClusterBootstrapAction, pulumix.GArrayOutput[ClusterBootstrapAction, ClusterBootstrapActionOutput]](value)
	return pulumix.GArrayOutput[ClusterBootstrapAction, ClusterBootstrapActionOutput]{OutputState: unwrapped.OutputState}
}

func (o ClusterOutput) ClusterState() pulumix.Output[string] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.Output[string] { return v.ClusterState })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// List of configurations supplied for the EMR cluster you are creating. Supply a configuration object for applications to override their default configuration. See [AWS Documentation](https://docs.aws.amazon.com/emr/latest/ReleaseGuide/emr-configure-apps.html) for more information.
func (o ClusterOutput) Configurations() pulumix.Output[*string] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.Output[*string] { return v.Configurations })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// JSON string for supplying list of configurations for the EMR cluster.
//
// > **NOTE on `configurationsJson`:** If the `Configurations` value is empty then you should skip the `Configurations` field instead of providing an empty list as a value, `"Configurations": []`.
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/emr"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := emr.NewCluster(ctx, "cluster", &emr.ClusterArgs{
//				ConfigurationsJson: pulumi.String(`[
//
// {
// "Classification": "hadoop-env",
// "Configurations": [
// {
// "Classification": "export",
// "Properties": {
// "JAVA_HOME": "/usr/lib/jvm/java-1.8.0"
// }
// }
// ],
// "Properties": {}
// }
// ]
//
// `),
//
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func (o ClusterOutput) ConfigurationsJson() pulumix.Output[*string] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.Output[*string] { return v.ConfigurationsJson })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Configuration block to use an [Instance Fleet](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-fleet.html) for the core node type. Cannot be specified if any `coreInstanceGroup` configuration blocks are set. Detailed below.
func (o ClusterOutput) CoreInstanceFleet() pulumix.GPtrOutput[ClusterCoreInstanceFleet, ClusterCoreInstanceFleetOutput] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.GPtrOutput[ClusterCoreInstanceFleet, ClusterCoreInstanceFleetOutput] {
		return v.CoreInstanceFleet
	})
	unwrapped := pulumix.Flatten[*ClusterCoreInstanceFleet, pulumix.GPtrOutput[ClusterCoreInstanceFleet, ClusterCoreInstanceFleetOutput]](value)
	return pulumix.GPtrOutput[ClusterCoreInstanceFleet, ClusterCoreInstanceFleetOutput]{OutputState: unwrapped.OutputState}
}

// Configuration block to use an [Instance Group](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-group-configuration.html#emr-plan-instance-groups) for the [core node type](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-master-core-task-nodes.html#emr-plan-core).
func (o ClusterOutput) CoreInstanceGroup() pulumix.GPtrOutput[ClusterCoreInstanceGroup, ClusterCoreInstanceGroupOutput] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.GPtrOutput[ClusterCoreInstanceGroup, ClusterCoreInstanceGroupOutput] {
		return v.CoreInstanceGroup
	})
	unwrapped := pulumix.Flatten[*ClusterCoreInstanceGroup, pulumix.GPtrOutput[ClusterCoreInstanceGroup, ClusterCoreInstanceGroupOutput]](value)
	return pulumix.GPtrOutput[ClusterCoreInstanceGroup, ClusterCoreInstanceGroupOutput]{OutputState: unwrapped.OutputState}
}

// Custom Amazon Linux AMI for the cluster (instead of an EMR-owned AMI). Available in Amazon EMR version 5.7.0 and later.
func (o ClusterOutput) CustomAmiId() pulumix.Output[*string] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.Output[*string] { return v.CustomAmiId })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Size in GiB of the EBS root device volume of the Linux AMI that is used for each EC2 instance. Available in Amazon EMR version 4.x and later.
func (o ClusterOutput) EbsRootVolumeSize() pulumix.Output[*int] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.Output[*int] { return v.EbsRootVolumeSize })
	return pulumix.Flatten[*int, pulumix.Output[*int]](value)
}

// Attributes for the EC2 instances running the job flow. See below.
func (o ClusterOutput) Ec2Attributes() pulumix.GPtrOutput[ClusterEc2Attributes, ClusterEc2AttributesOutput] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.GPtrOutput[ClusterEc2Attributes, ClusterEc2AttributesOutput] {
		return v.Ec2Attributes
	})
	unwrapped := pulumix.Flatten[*ClusterEc2Attributes, pulumix.GPtrOutput[ClusterEc2Attributes, ClusterEc2AttributesOutput]](value)
	return pulumix.GPtrOutput[ClusterEc2Attributes, ClusterEc2AttributesOutput]{OutputState: unwrapped.OutputState}
}

// Switch on/off run cluster with no steps or when all steps are complete (default is on)
func (o ClusterOutput) KeepJobFlowAliveWhenNoSteps() pulumix.Output[bool] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.Output[bool] { return v.KeepJobFlowAliveWhenNoSteps })
	return pulumix.Flatten[bool, pulumix.Output[bool]](value)
}

// Kerberos configuration for the cluster. See below.
func (o ClusterOutput) KerberosAttributes() pulumix.GPtrOutput[ClusterKerberosAttributes, ClusterKerberosAttributesOutput] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.GPtrOutput[ClusterKerberosAttributes, ClusterKerberosAttributesOutput] {
		return v.KerberosAttributes
	})
	unwrapped := pulumix.Flatten[*ClusterKerberosAttributes, pulumix.GPtrOutput[ClusterKerberosAttributes, ClusterKerberosAttributesOutput]](value)
	return pulumix.GPtrOutput[ClusterKerberosAttributes, ClusterKerberosAttributesOutput]{OutputState: unwrapped.OutputState}
}

// List of [step states](https://docs.aws.amazon.com/emr/latest/APIReference/API_StepStatus.html) used to filter returned steps
func (o ClusterOutput) ListStepsStates() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.ArrayOutput[string] { return v.ListStepsStates })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// AWS KMS customer master key (CMK) key ID or arn used for encrypting log files. This attribute is only available with EMR version 5.30.0 and later, excluding EMR 6.0.0.
func (o ClusterOutput) LogEncryptionKmsKeyId() pulumix.Output[*string] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.Output[*string] { return v.LogEncryptionKmsKeyId })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// S3 bucket to write the log files of the job flow. If a value is not provided, logs are not created.
func (o ClusterOutput) LogUri() pulumix.Output[*string] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.Output[*string] { return v.LogUri })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Configuration block to use an [Instance Fleet](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-fleet.html) for the master node type. Cannot be specified if any `masterInstanceGroup` configuration blocks are set. Detailed below.
func (o ClusterOutput) MasterInstanceFleet() pulumix.GPtrOutput[ClusterMasterInstanceFleet, ClusterMasterInstanceFleetOutput] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.GPtrOutput[ClusterMasterInstanceFleet, ClusterMasterInstanceFleetOutput] {
		return v.MasterInstanceFleet
	})
	unwrapped := pulumix.Flatten[*ClusterMasterInstanceFleet, pulumix.GPtrOutput[ClusterMasterInstanceFleet, ClusterMasterInstanceFleetOutput]](value)
	return pulumix.GPtrOutput[ClusterMasterInstanceFleet, ClusterMasterInstanceFleetOutput]{OutputState: unwrapped.OutputState}
}

// Configuration block to use an [Instance Group](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-group-configuration.html#emr-plan-instance-groups) for the [master node type](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-master-core-task-nodes.html#emr-plan-master).
func (o ClusterOutput) MasterInstanceGroup() pulumix.GPtrOutput[ClusterMasterInstanceGroup, ClusterMasterInstanceGroupOutput] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.GPtrOutput[ClusterMasterInstanceGroup, ClusterMasterInstanceGroupOutput] {
		return v.MasterInstanceGroup
	})
	unwrapped := pulumix.Flatten[*ClusterMasterInstanceGroup, pulumix.GPtrOutput[ClusterMasterInstanceGroup, ClusterMasterInstanceGroupOutput]](value)
	return pulumix.GPtrOutput[ClusterMasterInstanceGroup, ClusterMasterInstanceGroupOutput]{OutputState: unwrapped.OutputState}
}

// The DNS name of the master node. If the cluster is on a private subnet, this is the private DNS name. On a public subnet, this is the public DNS name.
func (o ClusterOutput) MasterPublicDns() pulumix.Output[string] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.Output[string] { return v.MasterPublicDns })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Name of the job flow.
func (o ClusterOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The specified placement group configuration for an Amazon EMR cluster.
func (o ClusterOutput) PlacementGroupConfigs() pulumix.GArrayOutput[ClusterPlacementGroupConfig, ClusterPlacementGroupConfigOutput] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.GArrayOutput[ClusterPlacementGroupConfig, ClusterPlacementGroupConfigOutput] {
		return v.PlacementGroupConfigs
	})
	unwrapped := pulumix.Flatten[[]ClusterPlacementGroupConfig, pulumix.GArrayOutput[ClusterPlacementGroupConfig, ClusterPlacementGroupConfigOutput]](value)
	return pulumix.GArrayOutput[ClusterPlacementGroupConfig, ClusterPlacementGroupConfigOutput]{OutputState: unwrapped.OutputState}
}

// Release label for the Amazon EMR release.
func (o ClusterOutput) ReleaseLabel() pulumix.Output[string] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.Output[string] { return v.ReleaseLabel })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Way that individual Amazon EC2 instances terminate when an automatic scale-in activity occurs or an `instance group` is resized.
func (o ClusterOutput) ScaleDownBehavior() pulumix.Output[string] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.Output[string] { return v.ScaleDownBehavior })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Security configuration name to attach to the EMR cluster. Only valid for EMR clusters with `releaseLabel` 4.8.0 or greater.
func (o ClusterOutput) SecurityConfiguration() pulumix.Output[*string] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.Output[*string] { return v.SecurityConfiguration })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// IAM role that will be assumed by the Amazon EMR service to access AWS resources.
//
// The following arguments are optional:
func (o ClusterOutput) ServiceRole() pulumix.Output[string] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.Output[string] { return v.ServiceRole })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Number of steps that can be executed concurrently. You can specify a maximum of 256 steps. Only valid for EMR clusters with `releaseLabel` 5.28.0 or greater (default is 1).
func (o ClusterOutput) StepConcurrencyLevel() pulumix.Output[*int] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.Output[*int] { return v.StepConcurrencyLevel })
	return pulumix.Flatten[*int, pulumix.Output[*int]](value)
}

// List of steps to run when creating the cluster. See below. It is highly recommended to utilize the lifecycle resource options block with `ignoreChanges` if other steps are being managed outside of this provider.
func (o ClusterOutput) Steps() pulumix.GArrayOutput[ClusterStep, ClusterStepOutput] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.GArrayOutput[ClusterStep, ClusterStepOutput] { return v.Steps })
	unwrapped := pulumix.Flatten[[]ClusterStep, pulumix.GArrayOutput[ClusterStep, ClusterStepOutput]](value)
	return pulumix.GArrayOutput[ClusterStep, ClusterStepOutput]{OutputState: unwrapped.OutputState}
}

// list of tags to apply to the EMR Cluster. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o ClusterOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o ClusterOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Switch on/off termination protection (default is `false`, except when using multiple master nodes). Before attempting to destroy the resource when termination protection is enabled, this configuration must be applied with its value set to `false`.
func (o ClusterOutput) TerminationProtection() pulumix.Output[bool] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.Output[bool] { return v.TerminationProtection })
	return pulumix.Flatten[bool, pulumix.Output[bool]](value)
}

// Whether the job flow is visible to all IAM users of the AWS account associated with the job flow. Default value is `true`.
func (o ClusterOutput) VisibleToAllUsers() pulumix.Output[*bool] {
	value := pulumix.Apply[Cluster](o, func(v Cluster) pulumix.Output[*bool] { return v.VisibleToAllUsers })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

func init() {
	pulumi.RegisterOutputType(ClusterOutput{})
}
