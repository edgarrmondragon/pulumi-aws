// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package lakeformation

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Get Lake Formation principals designated as data lake administrators and lists of principal permission entries for default create database and default create table permissions.
func LookupDataLakeSettings(ctx *pulumi.Context, args *LookupDataLakeSettingsArgs, opts ...pulumi.InvokeOption) (*LookupDataLakeSettingsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDataLakeSettingsResult
	err := ctx.Invoke("aws:lakeformation/getDataLakeSettings:getDataLakeSettings", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDataLakeSettings.
type LookupDataLakeSettingsArgs struct {
	// Identifier for the Data Catalog. By default, the account ID.
	CatalogId *string `pulumi:"catalogId"`
}

// A collection of values returned by getDataLakeSettings.
type LookupDataLakeSettingsResult struct {
	// List of ARNs of AWS Lake Formation principals (IAM users or roles).
	Admins []string `pulumi:"admins"`
	// Whether to allow Amazon EMR clusters to access data managed by Lake Formation.
	AllowExternalDataFiltering bool `pulumi:"allowExternalDataFiltering"`
	// Lake Formation relies on a privileged process secured by Amazon EMR or the third party integrator to tag the user's role while assuming it.
	AuthorizedSessionTagValueLists []string `pulumi:"authorizedSessionTagValueLists"`
	CatalogId                      *string  `pulumi:"catalogId"`
	// Up to three configuration blocks of principal permissions for default create database permissions. Detailed below.
	CreateDatabaseDefaultPermissions []GetDataLakeSettingsCreateDatabaseDefaultPermission `pulumi:"createDatabaseDefaultPermissions"`
	// Up to three configuration blocks of principal permissions for default create table permissions. Detailed below.
	CreateTableDefaultPermissions []GetDataLakeSettingsCreateTableDefaultPermission `pulumi:"createTableDefaultPermissions"`
	// A list of the account IDs of Amazon Web Services accounts with Amazon EMR clusters that are to perform data filtering.
	ExternalDataFilteringAllowLists []string `pulumi:"externalDataFilteringAllowLists"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// List of ARNs of AWS Lake Formation principals (IAM users or roles) with only view access to the resources.
	ReadOnlyAdmins []string `pulumi:"readOnlyAdmins"`
	// List of the resource-owning account IDs that the caller's account can use to share their user access details (user ARNs).
	TrustedResourceOwners []string `pulumi:"trustedResourceOwners"`
}

func LookupDataLakeSettingsOutput(ctx *pulumi.Context, args LookupDataLakeSettingsOutputArgs, opts ...pulumi.InvokeOption) LookupDataLakeSettingsResultOutput {
	outputResult := pulumix.ApplyErr[*LookupDataLakeSettingsArgs](args.ToOutput(), func(plainArgs *LookupDataLakeSettingsArgs) (*LookupDataLakeSettingsResult, error) {
		return LookupDataLakeSettings(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[LookupDataLakeSettingsResultOutput, *LookupDataLakeSettingsResult](outputResult)
}

// A collection of arguments for invoking getDataLakeSettings.
type LookupDataLakeSettingsOutputArgs struct {
	// Identifier for the Data Catalog. By default, the account ID.
	CatalogId pulumix.Input[*string] `pulumi:"catalogId"`
}

func (args LookupDataLakeSettingsOutputArgs) ToOutput() pulumix.Output[*LookupDataLakeSettingsArgs] {
	allArgs := pulumix.All(
		args.CatalogId.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *LookupDataLakeSettingsArgs {
		return &LookupDataLakeSettingsArgs{
			CatalogId: resolvedArgs[0].(*string),
		}
	})
}

type LookupDataLakeSettingsResultOutput struct{ *pulumi.OutputState }

func (LookupDataLakeSettingsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDataLakeSettingsResult)(nil)).Elem()
}

func (o LookupDataLakeSettingsResultOutput) ToOutput(context.Context) pulumix.Output[*LookupDataLakeSettingsResult] {
	return pulumix.Output[*LookupDataLakeSettingsResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupDataLakeSettingsResultOutput) Admins() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[*LookupDataLakeSettingsResult](o, func(v *LookupDataLakeSettingsResult) []string { return v.Admins })
	return pulumix.ArrayOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o LookupDataLakeSettingsResultOutput) AllowExternalDataFiltering() pulumix.Output[bool] {
	return pulumix.Apply[*LookupDataLakeSettingsResult](o, func(v *LookupDataLakeSettingsResult) bool { return v.AllowExternalDataFiltering })
}

func (o LookupDataLakeSettingsResultOutput) AuthorizedSessionTagValueLists() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[*LookupDataLakeSettingsResult](o, func(v *LookupDataLakeSettingsResult) []string { return v.AuthorizedSessionTagValueLists })
	return pulumix.ArrayOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o LookupDataLakeSettingsResultOutput) CatalogId() pulumix.Output[*string] {
	return pulumix.Apply[*LookupDataLakeSettingsResult](o, func(v *LookupDataLakeSettingsResult) *string { return v.CatalogId })
}

func (o LookupDataLakeSettingsResultOutput) CreateDatabaseDefaultPermissions() pulumix.GArrayOutput[GetDataLakeSettingsCreateDatabaseDefaultPermission, GetDataLakeSettingsCreateDatabaseDefaultPermissionOutput] {
	value := pulumix.Apply[*LookupDataLakeSettingsResult](o, func(v *LookupDataLakeSettingsResult) []GetDataLakeSettingsCreateDatabaseDefaultPermission {
		return v.CreateDatabaseDefaultPermissions
	})
	return pulumix.GArrayOutput[GetDataLakeSettingsCreateDatabaseDefaultPermission, GetDataLakeSettingsCreateDatabaseDefaultPermissionOutput]{
		OutputState: value.OutputState,
	}
}

func (o LookupDataLakeSettingsResultOutput) CreateTableDefaultPermissions() pulumix.GArrayOutput[GetDataLakeSettingsCreateTableDefaultPermission, GetDataLakeSettingsCreateTableDefaultPermissionOutput] {
	value := pulumix.Apply[*LookupDataLakeSettingsResult](o, func(v *LookupDataLakeSettingsResult) []GetDataLakeSettingsCreateTableDefaultPermission {
		return v.CreateTableDefaultPermissions
	})
	return pulumix.GArrayOutput[GetDataLakeSettingsCreateTableDefaultPermission, GetDataLakeSettingsCreateTableDefaultPermissionOutput]{
		OutputState: value.OutputState,
	}
}

func (o LookupDataLakeSettingsResultOutput) ExternalDataFilteringAllowLists() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[*LookupDataLakeSettingsResult](o, func(v *LookupDataLakeSettingsResult) []string { return v.ExternalDataFilteringAllowLists })
	return pulumix.ArrayOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o LookupDataLakeSettingsResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*LookupDataLakeSettingsResult](o, func(v *LookupDataLakeSettingsResult) string { return v.Id })
}

func (o LookupDataLakeSettingsResultOutput) ReadOnlyAdmins() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[*LookupDataLakeSettingsResult](o, func(v *LookupDataLakeSettingsResult) []string { return v.ReadOnlyAdmins })
	return pulumix.ArrayOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o LookupDataLakeSettingsResultOutput) TrustedResourceOwners() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[*LookupDataLakeSettingsResult](o, func(v *LookupDataLakeSettingsResult) []string { return v.TrustedResourceOwners })
	return pulumix.ArrayOutput[string]{
		OutputState: value.OutputState,
	}
}
