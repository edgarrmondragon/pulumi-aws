// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manages a RDS DB Cluster association with an IAM Role. Example use cases:
//
// * [Creating an IAM Role to Allow Amazon Aurora to Access AWS Services](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraMySQL.Integrating.Authorizing.IAM.CreateRole.html)
// * [Importing Amazon S3 Data into an RDS PostgreSQL DB Cluster](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PostgreSQL.S3Import.html)
type ClusterRoleAssociation struct {
	pulumi.CustomResourceState

	// DB Cluster Identifier to associate with the IAM Role.
	DbClusterIdentifier pulumix.Output[string] `pulumi:"dbClusterIdentifier"`
	// Name of the feature for association. This can be found in the AWS documentation relevant to the integration or a full list is available in the `SupportedFeatureNames` list returned by [AWS CLI rds describe-db-engine-versions](https://docs.aws.amazon.com/cli/latest/reference/rds/describe-db-engine-versions.html).
	FeatureName pulumix.Output[string] `pulumi:"featureName"`
	// Amazon Resource Name (ARN) of the IAM Role to associate with the DB Cluster.
	RoleArn pulumix.Output[string] `pulumi:"roleArn"`
}

// NewClusterRoleAssociation registers a new resource with the given unique name, arguments, and options.
func NewClusterRoleAssociation(ctx *pulumi.Context,
	name string, args *ClusterRoleAssociationArgs, opts ...pulumi.ResourceOption) (*ClusterRoleAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DbClusterIdentifier == nil {
		return nil, errors.New("invalid value for required argument 'DbClusterIdentifier'")
	}
	if args.FeatureName == nil {
		return nil, errors.New("invalid value for required argument 'FeatureName'")
	}
	if args.RoleArn == nil {
		return nil, errors.New("invalid value for required argument 'RoleArn'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ClusterRoleAssociation
	err := ctx.RegisterResource("aws:rds/clusterRoleAssociation:ClusterRoleAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetClusterRoleAssociation gets an existing ClusterRoleAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetClusterRoleAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ClusterRoleAssociationState, opts ...pulumi.ResourceOption) (*ClusterRoleAssociation, error) {
	var resource ClusterRoleAssociation
	err := ctx.ReadResource("aws:rds/clusterRoleAssociation:ClusterRoleAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ClusterRoleAssociation resources.
type clusterRoleAssociationState struct {
	// DB Cluster Identifier to associate with the IAM Role.
	DbClusterIdentifier *string `pulumi:"dbClusterIdentifier"`
	// Name of the feature for association. This can be found in the AWS documentation relevant to the integration or a full list is available in the `SupportedFeatureNames` list returned by [AWS CLI rds describe-db-engine-versions](https://docs.aws.amazon.com/cli/latest/reference/rds/describe-db-engine-versions.html).
	FeatureName *string `pulumi:"featureName"`
	// Amazon Resource Name (ARN) of the IAM Role to associate with the DB Cluster.
	RoleArn *string `pulumi:"roleArn"`
}

type ClusterRoleAssociationState struct {
	// DB Cluster Identifier to associate with the IAM Role.
	DbClusterIdentifier pulumix.Input[*string]
	// Name of the feature for association. This can be found in the AWS documentation relevant to the integration or a full list is available in the `SupportedFeatureNames` list returned by [AWS CLI rds describe-db-engine-versions](https://docs.aws.amazon.com/cli/latest/reference/rds/describe-db-engine-versions.html).
	FeatureName pulumix.Input[*string]
	// Amazon Resource Name (ARN) of the IAM Role to associate with the DB Cluster.
	RoleArn pulumix.Input[*string]
}

func (ClusterRoleAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterRoleAssociationState)(nil)).Elem()
}

type clusterRoleAssociationArgs struct {
	// DB Cluster Identifier to associate with the IAM Role.
	DbClusterIdentifier string `pulumi:"dbClusterIdentifier"`
	// Name of the feature for association. This can be found in the AWS documentation relevant to the integration or a full list is available in the `SupportedFeatureNames` list returned by [AWS CLI rds describe-db-engine-versions](https://docs.aws.amazon.com/cli/latest/reference/rds/describe-db-engine-versions.html).
	FeatureName string `pulumi:"featureName"`
	// Amazon Resource Name (ARN) of the IAM Role to associate with the DB Cluster.
	RoleArn string `pulumi:"roleArn"`
}

// The set of arguments for constructing a ClusterRoleAssociation resource.
type ClusterRoleAssociationArgs struct {
	// DB Cluster Identifier to associate with the IAM Role.
	DbClusterIdentifier pulumix.Input[string]
	// Name of the feature for association. This can be found in the AWS documentation relevant to the integration or a full list is available in the `SupportedFeatureNames` list returned by [AWS CLI rds describe-db-engine-versions](https://docs.aws.amazon.com/cli/latest/reference/rds/describe-db-engine-versions.html).
	FeatureName pulumix.Input[string]
	// Amazon Resource Name (ARN) of the IAM Role to associate with the DB Cluster.
	RoleArn pulumix.Input[string]
}

func (ClusterRoleAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterRoleAssociationArgs)(nil)).Elem()
}

type ClusterRoleAssociationOutput struct{ *pulumi.OutputState }

func (ClusterRoleAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterRoleAssociation)(nil)).Elem()
}

func (o ClusterRoleAssociationOutput) ToClusterRoleAssociationOutput() ClusterRoleAssociationOutput {
	return o
}

func (o ClusterRoleAssociationOutput) ToClusterRoleAssociationOutputWithContext(ctx context.Context) ClusterRoleAssociationOutput {
	return o
}

func (o ClusterRoleAssociationOutput) ToOutput(ctx context.Context) pulumix.Output[ClusterRoleAssociation] {
	return pulumix.Output[ClusterRoleAssociation]{
		OutputState: o.OutputState,
	}
}

// DB Cluster Identifier to associate with the IAM Role.
func (o ClusterRoleAssociationOutput) DbClusterIdentifier() pulumix.Output[string] {
	value := pulumix.Apply[ClusterRoleAssociation](o, func(v ClusterRoleAssociation) pulumix.Output[string] { return v.DbClusterIdentifier })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Name of the feature for association. This can be found in the AWS documentation relevant to the integration or a full list is available in the `SupportedFeatureNames` list returned by [AWS CLI rds describe-db-engine-versions](https://docs.aws.amazon.com/cli/latest/reference/rds/describe-db-engine-versions.html).
func (o ClusterRoleAssociationOutput) FeatureName() pulumix.Output[string] {
	value := pulumix.Apply[ClusterRoleAssociation](o, func(v ClusterRoleAssociation) pulumix.Output[string] { return v.FeatureName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Amazon Resource Name (ARN) of the IAM Role to associate with the DB Cluster.
func (o ClusterRoleAssociationOutput) RoleArn() pulumix.Output[string] {
	value := pulumix.Apply[ClusterRoleAssociation](o, func(v ClusterRoleAssociation) pulumix.Output[string] { return v.RoleArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(ClusterRoleAssociationOutput{})
}
