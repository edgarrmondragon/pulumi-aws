// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ecr

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an Elastic Container Registry Replication Configuration.
type ReplicationConfiguration struct {
	pulumi.CustomResourceState

	// The account ID of the destination registry to replicate to.
	RegistryId pulumix.Output[string] `pulumi:"registryId"`
	// Replication configuration for a registry. See Replication Configuration.
	ReplicationConfiguration pulumix.GPtrOutput[ReplicationConfigurationReplicationConfiguration, ReplicationConfigurationReplicationConfigurationOutput] `pulumi:"replicationConfiguration"`
}

// NewReplicationConfiguration registers a new resource with the given unique name, arguments, and options.
func NewReplicationConfiguration(ctx *pulumi.Context,
	name string, args *ReplicationConfigurationArgs, opts ...pulumi.ResourceOption) (*ReplicationConfiguration, error) {
	if args == nil {
		args = &ReplicationConfigurationArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ReplicationConfiguration
	err := ctx.RegisterResource("aws:ecr/replicationConfiguration:ReplicationConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetReplicationConfiguration gets an existing ReplicationConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetReplicationConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ReplicationConfigurationState, opts ...pulumi.ResourceOption) (*ReplicationConfiguration, error) {
	var resource ReplicationConfiguration
	err := ctx.ReadResource("aws:ecr/replicationConfiguration:ReplicationConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ReplicationConfiguration resources.
type replicationConfigurationState struct {
	// The account ID of the destination registry to replicate to.
	RegistryId *string `pulumi:"registryId"`
	// Replication configuration for a registry. See Replication Configuration.
	ReplicationConfiguration *ReplicationConfigurationReplicationConfiguration `pulumi:"replicationConfiguration"`
}

type ReplicationConfigurationState struct {
	// The account ID of the destination registry to replicate to.
	RegistryId pulumix.Input[*string]
	// Replication configuration for a registry. See Replication Configuration.
	ReplicationConfiguration pulumix.Input[*ReplicationConfigurationReplicationConfigurationArgs]
}

func (ReplicationConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*replicationConfigurationState)(nil)).Elem()
}

type replicationConfigurationArgs struct {
	// Replication configuration for a registry. See Replication Configuration.
	ReplicationConfiguration *ReplicationConfigurationReplicationConfiguration `pulumi:"replicationConfiguration"`
}

// The set of arguments for constructing a ReplicationConfiguration resource.
type ReplicationConfigurationArgs struct {
	// Replication configuration for a registry. See Replication Configuration.
	ReplicationConfiguration pulumix.Input[*ReplicationConfigurationReplicationConfigurationArgs]
}

func (ReplicationConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*replicationConfigurationArgs)(nil)).Elem()
}

type ReplicationConfigurationOutput struct{ *pulumi.OutputState }

func (ReplicationConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationConfiguration)(nil)).Elem()
}

func (o ReplicationConfigurationOutput) ToReplicationConfigurationOutput() ReplicationConfigurationOutput {
	return o
}

func (o ReplicationConfigurationOutput) ToReplicationConfigurationOutputWithContext(ctx context.Context) ReplicationConfigurationOutput {
	return o
}

func (o ReplicationConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[ReplicationConfiguration] {
	return pulumix.Output[ReplicationConfiguration]{
		OutputState: o.OutputState,
	}
}

// The account ID of the destination registry to replicate to.
func (o ReplicationConfigurationOutput) RegistryId() pulumix.Output[string] {
	value := pulumix.Apply[ReplicationConfiguration](o, func(v ReplicationConfiguration) pulumix.Output[string] { return v.RegistryId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Replication configuration for a registry. See Replication Configuration.
func (o ReplicationConfigurationOutput) ReplicationConfiguration() pulumix.GPtrOutput[ReplicationConfigurationReplicationConfiguration, ReplicationConfigurationReplicationConfigurationOutput] {
	value := pulumix.Apply[ReplicationConfiguration](o, func(v ReplicationConfiguration) pulumix.GPtrOutput[ReplicationConfigurationReplicationConfiguration, ReplicationConfigurationReplicationConfigurationOutput] {
		return v.ReplicationConfiguration
	})
	unwrapped := pulumix.Flatten[*ReplicationConfigurationReplicationConfiguration, pulumix.GPtrOutput[ReplicationConfigurationReplicationConfiguration, ReplicationConfigurationReplicationConfigurationOutput]](value)
	return pulumix.GPtrOutput[ReplicationConfigurationReplicationConfiguration, ReplicationConfigurationReplicationConfigurationOutput]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(ReplicationConfigurationOutput{})
}
