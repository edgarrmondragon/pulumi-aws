// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ecr

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

func GetCredentials(ctx *pulumi.Context, args *GetCredentialsArgs, opts ...pulumi.InvokeOption) (*GetCredentialsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetCredentialsResult
	err := ctx.Invoke("aws:ecr/getCredentials:getCredentials", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCredentials.
type GetCredentialsArgs struct {
	RegistryId string `pulumi:"registryId"`
}

// A collection of values returned by getCredentials.
type GetCredentialsResult struct {
	AuthorizationToken string `pulumi:"authorizationToken"`
	ExpiresAt          string `pulumi:"expiresAt"`
	// The provider-assigned unique ID for this managed resource.
	Id            string `pulumi:"id"`
	ProxyEndpoint string `pulumi:"proxyEndpoint"`
	RegistryId    string `pulumi:"registryId"`
}

func GetCredentialsOutput(ctx *pulumi.Context, args GetCredentialsOutputArgs, opts ...pulumi.InvokeOption) GetCredentialsResultOutput {
	outputResult := pulumix.ApplyErr[*GetCredentialsArgs](args.ToOutput(), func(plainArgs *GetCredentialsArgs) (*GetCredentialsResult, error) {
		return GetCredentials(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[GetCredentialsResultOutput, *GetCredentialsResult](outputResult)
}

// A collection of arguments for invoking getCredentials.
type GetCredentialsOutputArgs struct {
	RegistryId pulumix.Input[string] `pulumi:"registryId"`
}

func (args GetCredentialsOutputArgs) ToOutput() pulumix.Output[*GetCredentialsArgs] {
	allArgs := pulumix.All(
		args.RegistryId.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *GetCredentialsArgs {
		return &GetCredentialsArgs{
			RegistryId: resolvedArgs[0].(string),
		}
	})
}

type GetCredentialsResultOutput struct{ *pulumi.OutputState }

func (GetCredentialsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCredentialsResult)(nil)).Elem()
}

func (o GetCredentialsResultOutput) ToOutput(context.Context) pulumix.Output[*GetCredentialsResult] {
	return pulumix.Output[*GetCredentialsResult]{
		OutputState: o.OutputState,
	}
}

func (o GetCredentialsResultOutput) AuthorizationToken() pulumix.Output[string] {
	return pulumix.Apply[*GetCredentialsResult](o, func(v *GetCredentialsResult) string { return v.AuthorizationToken })
}

func (o GetCredentialsResultOutput) ExpiresAt() pulumix.Output[string] {
	return pulumix.Apply[*GetCredentialsResult](o, func(v *GetCredentialsResult) string { return v.ExpiresAt })
}

func (o GetCredentialsResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*GetCredentialsResult](o, func(v *GetCredentialsResult) string { return v.Id })
}

func (o GetCredentialsResultOutput) ProxyEndpoint() pulumix.Output[string] {
	return pulumix.Apply[*GetCredentialsResult](o, func(v *GetCredentialsResult) string { return v.ProxyEndpoint })
}

func (o GetCredentialsResultOutput) RegistryId() pulumix.Output[string] {
	return pulumix.Apply[*GetCredentialsResult](o, func(v *GetCredentialsResult) string { return v.RegistryId })
}
