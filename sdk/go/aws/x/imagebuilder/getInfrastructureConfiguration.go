// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package imagebuilder

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides details about an Image Builder Infrastructure Configuration.
func LookupInfrastructureConfiguration(ctx *pulumi.Context, args *LookupInfrastructureConfigurationArgs, opts ...pulumi.InvokeOption) (*LookupInfrastructureConfigurationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupInfrastructureConfigurationResult
	err := ctx.Invoke("aws:imagebuilder/getInfrastructureConfiguration:getInfrastructureConfiguration", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getInfrastructureConfiguration.
type LookupInfrastructureConfigurationArgs struct {
	// ARN of the infrastructure configuration.
	Arn string `pulumi:"arn"`
	// Key-value map of resource tags for the infrastructure created by the infrastructure configuration.
	ResourceTags map[string]string `pulumi:"resourceTags"`
	// Key-value map of resource tags for the infrastructure configuration.
	Tags map[string]string `pulumi:"tags"`
}

// A collection of values returned by getInfrastructureConfiguration.
type LookupInfrastructureConfigurationResult struct {
	Arn string `pulumi:"arn"`
	// Date the infrastructure configuration was updated.
	DateCreated string `pulumi:"dateCreated"`
	DateUpdated string `pulumi:"dateUpdated"`
	// Description of the infrastructure configuration.
	Description string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Nested list of instance metadata options for the HTTP requests that pipeline builds use to launch EC2 build and test instances.
	InstanceMetadataOptions []GetInfrastructureConfigurationInstanceMetadataOption `pulumi:"instanceMetadataOptions"`
	// Name of the IAM Instance Profile associated with the configuration.
	InstanceProfileName string `pulumi:"instanceProfileName"`
	// Set of EC2 Instance Types associated with the configuration.
	InstanceTypes []string `pulumi:"instanceTypes"`
	// Name of the EC2 Key Pair associated with the configuration.
	KeyPair string `pulumi:"keyPair"`
	// Nested list of logging settings.
	Loggings []GetInfrastructureConfigurationLogging `pulumi:"loggings"`
	// Name of the infrastructure configuration.
	Name string `pulumi:"name"`
	// Key-value map of resource tags for the infrastructure created by the infrastructure configuration.
	ResourceTags map[string]string `pulumi:"resourceTags"`
	// Set of EC2 Security Group identifiers associated with the configuration.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// ARN of the SNS Topic associated with the configuration.
	SnsTopicArn string `pulumi:"snsTopicArn"`
	// Identifier of the EC2 Subnet associated with the configuration.
	SubnetId string `pulumi:"subnetId"`
	// Key-value map of resource tags for the infrastructure configuration.
	Tags map[string]string `pulumi:"tags"`
	// Whether instances are terminated on failure.
	TerminateInstanceOnFailure bool `pulumi:"terminateInstanceOnFailure"`
}

func LookupInfrastructureConfigurationOutput(ctx *pulumi.Context, args LookupInfrastructureConfigurationOutputArgs, opts ...pulumi.InvokeOption) LookupInfrastructureConfigurationResultOutput {
	outputResult := pulumix.ApplyErr[*LookupInfrastructureConfigurationArgs](args.ToOutput(), func(plainArgs *LookupInfrastructureConfigurationArgs) (*LookupInfrastructureConfigurationResult, error) {
		return LookupInfrastructureConfiguration(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[LookupInfrastructureConfigurationResultOutput, *LookupInfrastructureConfigurationResult](outputResult)
}

// A collection of arguments for invoking getInfrastructureConfiguration.
type LookupInfrastructureConfigurationOutputArgs struct {
	// ARN of the infrastructure configuration.
	Arn pulumix.Input[string] `pulumi:"arn"`
	// Key-value map of resource tags for the infrastructure created by the infrastructure configuration.
	ResourceTags pulumix.Input[map[string]string] `pulumi:"resourceTags"`
	// Key-value map of resource tags for the infrastructure configuration.
	Tags pulumix.Input[map[string]string] `pulumi:"tags"`
}

func (args LookupInfrastructureConfigurationOutputArgs) ToOutput() pulumix.Output[*LookupInfrastructureConfigurationArgs] {
	allArgs := pulumix.All(
		args.Arn.ToOutput(context.Background()).AsAny(),
		args.ResourceTags.ToOutput(context.Background()).AsAny(),
		args.Tags.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *LookupInfrastructureConfigurationArgs {
		return &LookupInfrastructureConfigurationArgs{
			Arn:          resolvedArgs[0].(string),
			ResourceTags: resolvedArgs[1].(map[string]string),
			Tags:         resolvedArgs[2].(map[string]string),
		}
	})
}

type LookupInfrastructureConfigurationResultOutput struct{ *pulumi.OutputState }

func (LookupInfrastructureConfigurationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInfrastructureConfigurationResult)(nil)).Elem()
}

func (o LookupInfrastructureConfigurationResultOutput) ToOutput(context.Context) pulumix.Output[*LookupInfrastructureConfigurationResult] {
	return pulumix.Output[*LookupInfrastructureConfigurationResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupInfrastructureConfigurationResultOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[*LookupInfrastructureConfigurationResult](o, func(v *LookupInfrastructureConfigurationResult) string { return v.Arn })
}

func (o LookupInfrastructureConfigurationResultOutput) DateCreated() pulumix.Output[string] {
	return pulumix.Apply[*LookupInfrastructureConfigurationResult](o, func(v *LookupInfrastructureConfigurationResult) string { return v.DateCreated })
}

func (o LookupInfrastructureConfigurationResultOutput) DateUpdated() pulumix.Output[string] {
	return pulumix.Apply[*LookupInfrastructureConfigurationResult](o, func(v *LookupInfrastructureConfigurationResult) string { return v.DateUpdated })
}

func (o LookupInfrastructureConfigurationResultOutput) Description() pulumix.Output[string] {
	return pulumix.Apply[*LookupInfrastructureConfigurationResult](o, func(v *LookupInfrastructureConfigurationResult) string { return v.Description })
}

func (o LookupInfrastructureConfigurationResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*LookupInfrastructureConfigurationResult](o, func(v *LookupInfrastructureConfigurationResult) string { return v.Id })
}

func (o LookupInfrastructureConfigurationResultOutput) InstanceMetadataOptions() pulumix.GArrayOutput[GetInfrastructureConfigurationInstanceMetadataOption, GetInfrastructureConfigurationInstanceMetadataOptionOutput] {
	value := pulumix.Apply[*LookupInfrastructureConfigurationResult](o, func(v *LookupInfrastructureConfigurationResult) []GetInfrastructureConfigurationInstanceMetadataOption {
		return v.InstanceMetadataOptions
	})
	return pulumix.GArrayOutput[GetInfrastructureConfigurationInstanceMetadataOption, GetInfrastructureConfigurationInstanceMetadataOptionOutput]{
		OutputState: value.OutputState,
	}
}

func (o LookupInfrastructureConfigurationResultOutput) InstanceProfileName() pulumix.Output[string] {
	return pulumix.Apply[*LookupInfrastructureConfigurationResult](o, func(v *LookupInfrastructureConfigurationResult) string { return v.InstanceProfileName })
}

func (o LookupInfrastructureConfigurationResultOutput) InstanceTypes() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[*LookupInfrastructureConfigurationResult](o, func(v *LookupInfrastructureConfigurationResult) []string { return v.InstanceTypes })
	return pulumix.ArrayOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o LookupInfrastructureConfigurationResultOutput) KeyPair() pulumix.Output[string] {
	return pulumix.Apply[*LookupInfrastructureConfigurationResult](o, func(v *LookupInfrastructureConfigurationResult) string { return v.KeyPair })
}

func (o LookupInfrastructureConfigurationResultOutput) Loggings() pulumix.GArrayOutput[GetInfrastructureConfigurationLogging, GetInfrastructureConfigurationLoggingOutput] {
	value := pulumix.Apply[*LookupInfrastructureConfigurationResult](o, func(v *LookupInfrastructureConfigurationResult) []GetInfrastructureConfigurationLogging {
		return v.Loggings
	})
	return pulumix.GArrayOutput[GetInfrastructureConfigurationLogging, GetInfrastructureConfigurationLoggingOutput]{
		OutputState: value.OutputState,
	}
}

func (o LookupInfrastructureConfigurationResultOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[*LookupInfrastructureConfigurationResult](o, func(v *LookupInfrastructureConfigurationResult) string { return v.Name })
}

func (o LookupInfrastructureConfigurationResultOutput) ResourceTags() pulumix.MapOutput[string] {
	value := pulumix.Apply[*LookupInfrastructureConfigurationResult](o, func(v *LookupInfrastructureConfigurationResult) map[string]string { return v.ResourceTags })
	return pulumix.MapOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o LookupInfrastructureConfigurationResultOutput) SecurityGroupIds() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[*LookupInfrastructureConfigurationResult](o, func(v *LookupInfrastructureConfigurationResult) []string { return v.SecurityGroupIds })
	return pulumix.ArrayOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o LookupInfrastructureConfigurationResultOutput) SnsTopicArn() pulumix.Output[string] {
	return pulumix.Apply[*LookupInfrastructureConfigurationResult](o, func(v *LookupInfrastructureConfigurationResult) string { return v.SnsTopicArn })
}

func (o LookupInfrastructureConfigurationResultOutput) SubnetId() pulumix.Output[string] {
	return pulumix.Apply[*LookupInfrastructureConfigurationResult](o, func(v *LookupInfrastructureConfigurationResult) string { return v.SubnetId })
}

func (o LookupInfrastructureConfigurationResultOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[*LookupInfrastructureConfigurationResult](o, func(v *LookupInfrastructureConfigurationResult) map[string]string { return v.Tags })
	return pulumix.MapOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o LookupInfrastructureConfigurationResultOutput) TerminateInstanceOnFailure() pulumix.Output[bool] {
	return pulumix.Apply[*LookupInfrastructureConfigurationResult](o, func(v *LookupInfrastructureConfigurationResult) bool { return v.TerminateInstanceOnFailure })
}
