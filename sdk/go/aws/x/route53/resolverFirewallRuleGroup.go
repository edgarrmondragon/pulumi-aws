// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package route53

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a Route 53 Resolver DNS Firewall rule group resource.
type ResolverFirewallRuleGroup struct {
	pulumi.CustomResourceState

	// The ARN (Amazon Resource Name) of the rule group.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// A name that lets you identify the rule group, to manage and use it.
	Name pulumix.Output[string] `pulumi:"name"`
	// The AWS account ID for the account that created the rule group. When a rule group is shared with your account, this is the account that has shared the rule group with you.
	OwnerId pulumix.Output[string] `pulumi:"ownerId"`
	// Whether the rule group is shared with other AWS accounts, or was shared with the current account by another AWS account. Sharing is configured through AWS Resource Access Manager (AWS RAM). Valid values: `NOT_SHARED`, `SHARED_BY_ME`, `SHARED_WITH_ME`
	ShareStatus pulumix.Output[string] `pulumi:"shareStatus"`
	// A map of tags to assign to the resource. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
}

// NewResolverFirewallRuleGroup registers a new resource with the given unique name, arguments, and options.
func NewResolverFirewallRuleGroup(ctx *pulumi.Context,
	name string, args *ResolverFirewallRuleGroupArgs, opts ...pulumi.ResourceOption) (*ResolverFirewallRuleGroup, error) {
	if args == nil {
		args = &ResolverFirewallRuleGroupArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ResolverFirewallRuleGroup
	err := ctx.RegisterResource("aws:route53/resolverFirewallRuleGroup:ResolverFirewallRuleGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetResolverFirewallRuleGroup gets an existing ResolverFirewallRuleGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetResolverFirewallRuleGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ResolverFirewallRuleGroupState, opts ...pulumi.ResourceOption) (*ResolverFirewallRuleGroup, error) {
	var resource ResolverFirewallRuleGroup
	err := ctx.ReadResource("aws:route53/resolverFirewallRuleGroup:ResolverFirewallRuleGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ResolverFirewallRuleGroup resources.
type resolverFirewallRuleGroupState struct {
	// The ARN (Amazon Resource Name) of the rule group.
	Arn *string `pulumi:"arn"`
	// A name that lets you identify the rule group, to manage and use it.
	Name *string `pulumi:"name"`
	// The AWS account ID for the account that created the rule group. When a rule group is shared with your account, this is the account that has shared the rule group with you.
	OwnerId *string `pulumi:"ownerId"`
	// Whether the rule group is shared with other AWS accounts, or was shared with the current account by another AWS account. Sharing is configured through AWS Resource Access Manager (AWS RAM). Valid values: `NOT_SHARED`, `SHARED_BY_ME`, `SHARED_WITH_ME`
	ShareStatus *string `pulumi:"shareStatus"`
	// A map of tags to assign to the resource. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type ResolverFirewallRuleGroupState struct {
	// The ARN (Amazon Resource Name) of the rule group.
	Arn pulumix.Input[*string]
	// A name that lets you identify the rule group, to manage and use it.
	Name pulumix.Input[*string]
	// The AWS account ID for the account that created the rule group. When a rule group is shared with your account, this is the account that has shared the rule group with you.
	OwnerId pulumix.Input[*string]
	// Whether the rule group is shared with other AWS accounts, or was shared with the current account by another AWS account. Sharing is configured through AWS Resource Access Manager (AWS RAM). Valid values: `NOT_SHARED`, `SHARED_BY_ME`, `SHARED_WITH_ME`
	ShareStatus pulumix.Input[*string]
	// A map of tags to assign to the resource. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
}

func (ResolverFirewallRuleGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*resolverFirewallRuleGroupState)(nil)).Elem()
}

type resolverFirewallRuleGroupArgs struct {
	// A name that lets you identify the rule group, to manage and use it.
	Name *string `pulumi:"name"`
	// A map of tags to assign to the resource. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a ResolverFirewallRuleGroup resource.
type ResolverFirewallRuleGroupArgs struct {
	// A name that lets you identify the rule group, to manage and use it.
	Name pulumix.Input[*string]
	// A map of tags to assign to the resource. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (ResolverFirewallRuleGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*resolverFirewallRuleGroupArgs)(nil)).Elem()
}

type ResolverFirewallRuleGroupOutput struct{ *pulumi.OutputState }

func (ResolverFirewallRuleGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverFirewallRuleGroup)(nil)).Elem()
}

func (o ResolverFirewallRuleGroupOutput) ToResolverFirewallRuleGroupOutput() ResolverFirewallRuleGroupOutput {
	return o
}

func (o ResolverFirewallRuleGroupOutput) ToResolverFirewallRuleGroupOutputWithContext(ctx context.Context) ResolverFirewallRuleGroupOutput {
	return o
}

func (o ResolverFirewallRuleGroupOutput) ToOutput(ctx context.Context) pulumix.Output[ResolverFirewallRuleGroup] {
	return pulumix.Output[ResolverFirewallRuleGroup]{
		OutputState: o.OutputState,
	}
}

// The ARN (Amazon Resource Name) of the rule group.
func (o ResolverFirewallRuleGroupOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[ResolverFirewallRuleGroup](o, func(v ResolverFirewallRuleGroup) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A name that lets you identify the rule group, to manage and use it.
func (o ResolverFirewallRuleGroupOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[ResolverFirewallRuleGroup](o, func(v ResolverFirewallRuleGroup) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The AWS account ID for the account that created the rule group. When a rule group is shared with your account, this is the account that has shared the rule group with you.
func (o ResolverFirewallRuleGroupOutput) OwnerId() pulumix.Output[string] {
	value := pulumix.Apply[ResolverFirewallRuleGroup](o, func(v ResolverFirewallRuleGroup) pulumix.Output[string] { return v.OwnerId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Whether the rule group is shared with other AWS accounts, or was shared with the current account by another AWS account. Sharing is configured through AWS Resource Access Manager (AWS RAM). Valid values: `NOT_SHARED`, `SHARED_BY_ME`, `SHARED_WITH_ME`
func (o ResolverFirewallRuleGroupOutput) ShareStatus() pulumix.Output[string] {
	value := pulumix.Apply[ResolverFirewallRuleGroup](o, func(v ResolverFirewallRuleGroup) pulumix.Output[string] { return v.ShareStatus })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A map of tags to assign to the resource. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o ResolverFirewallRuleGroupOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[ResolverFirewallRuleGroup](o, func(v ResolverFirewallRuleGroup) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o ResolverFirewallRuleGroupOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[ResolverFirewallRuleGroup](o, func(v ResolverFirewallRuleGroup) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(ResolverFirewallRuleGroupOutput{})
}
