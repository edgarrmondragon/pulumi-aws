// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ssmcontacts

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Data source for managing an AWS SSM Contacts Contact Channel.
func LookupContactChannel(ctx *pulumi.Context, args *LookupContactChannelArgs, opts ...pulumi.InvokeOption) (*LookupContactChannelResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupContactChannelResult
	err := ctx.Invoke("aws:ssmcontacts/getContactChannel:getContactChannel", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getContactChannel.
type LookupContactChannelArgs struct {
	// Amazon Resource Name (ARN) of the contact channel.
	Arn string `pulumi:"arn"`
}

// A collection of values returned by getContactChannel.
type LookupContactChannelResult struct {
	// Whether the contact channel is activated.
	ActivationStatus string `pulumi:"activationStatus"`
	Arn              string `pulumi:"arn"`
	// Amazon Resource Name (ARN) of the AWS SSM Contact that the contact channel belongs to.
	ContactId string `pulumi:"contactId"`
	// Details used to engage the contact channel.
	DeliveryAddresses []GetContactChannelDeliveryAddress `pulumi:"deliveryAddresses"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Name of the contact channel.
	Name string `pulumi:"name"`
	// Type of the contact channel.
	Type string `pulumi:"type"`
}

func LookupContactChannelOutput(ctx *pulumi.Context, args LookupContactChannelOutputArgs, opts ...pulumi.InvokeOption) LookupContactChannelResultOutput {
	outputResult := pulumix.ApplyErr[*LookupContactChannelArgs](args.ToOutput(), func(plainArgs *LookupContactChannelArgs) (*LookupContactChannelResult, error) {
		return LookupContactChannel(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[LookupContactChannelResultOutput, *LookupContactChannelResult](outputResult)
}

// A collection of arguments for invoking getContactChannel.
type LookupContactChannelOutputArgs struct {
	// Amazon Resource Name (ARN) of the contact channel.
	Arn pulumix.Input[string] `pulumi:"arn"`
}

func (args LookupContactChannelOutputArgs) ToOutput() pulumix.Output[*LookupContactChannelArgs] {
	allArgs := pulumix.All(
		args.Arn.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *LookupContactChannelArgs {
		return &LookupContactChannelArgs{
			Arn: resolvedArgs[0].(string),
		}
	})
}

type LookupContactChannelResultOutput struct{ *pulumi.OutputState }

func (LookupContactChannelResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupContactChannelResult)(nil)).Elem()
}

func (o LookupContactChannelResultOutput) ToOutput(context.Context) pulumix.Output[*LookupContactChannelResult] {
	return pulumix.Output[*LookupContactChannelResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupContactChannelResultOutput) ActivationStatus() pulumix.Output[string] {
	return pulumix.Apply[*LookupContactChannelResult](o, func(v *LookupContactChannelResult) string { return v.ActivationStatus })
}

func (o LookupContactChannelResultOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[*LookupContactChannelResult](o, func(v *LookupContactChannelResult) string { return v.Arn })
}

func (o LookupContactChannelResultOutput) ContactId() pulumix.Output[string] {
	return pulumix.Apply[*LookupContactChannelResult](o, func(v *LookupContactChannelResult) string { return v.ContactId })
}

func (o LookupContactChannelResultOutput) DeliveryAddresses() pulumix.GArrayOutput[GetContactChannelDeliveryAddress, GetContactChannelDeliveryAddressOutput] {
	value := pulumix.Apply[*LookupContactChannelResult](o, func(v *LookupContactChannelResult) []GetContactChannelDeliveryAddress { return v.DeliveryAddresses })
	return pulumix.GArrayOutput[GetContactChannelDeliveryAddress, GetContactChannelDeliveryAddressOutput]{
		OutputState: value.OutputState,
	}
}

func (o LookupContactChannelResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*LookupContactChannelResult](o, func(v *LookupContactChannelResult) string { return v.Id })
}

func (o LookupContactChannelResultOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[*LookupContactChannelResult](o, func(v *LookupContactChannelResult) string { return v.Name })
}

func (o LookupContactChannelResultOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[*LookupContactChannelResult](o, func(v *LookupContactChannelResult) string { return v.Type })
}
