// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ses

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Retrieve the active SES email identity
func LookupEmailIdentity(ctx *pulumi.Context, args *LookupEmailIdentityArgs, opts ...pulumi.InvokeOption) (*LookupEmailIdentityResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupEmailIdentityResult
	err := ctx.Invoke("aws:ses/getEmailIdentity:getEmailIdentity", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getEmailIdentity.
type LookupEmailIdentityArgs struct {
	// Email identity.
	Email string `pulumi:"email"`
}

// A collection of values returned by getEmailIdentity.
type LookupEmailIdentityResult struct {
	// The ARN of the email identity.
	Arn string `pulumi:"arn"`
	// Email identity.
	Email string `pulumi:"email"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
}

func LookupEmailIdentityOutput(ctx *pulumi.Context, args LookupEmailIdentityOutputArgs, opts ...pulumi.InvokeOption) LookupEmailIdentityResultOutput {
	outputResult := pulumix.ApplyErr[*LookupEmailIdentityArgs](args.ToOutput(), func(plainArgs *LookupEmailIdentityArgs) (*LookupEmailIdentityResult, error) {
		return LookupEmailIdentity(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[LookupEmailIdentityResultOutput, *LookupEmailIdentityResult](outputResult)
}

// A collection of arguments for invoking getEmailIdentity.
type LookupEmailIdentityOutputArgs struct {
	// Email identity.
	Email pulumix.Input[string] `pulumi:"email"`
}

func (args LookupEmailIdentityOutputArgs) ToOutput() pulumix.Output[*LookupEmailIdentityArgs] {
	allArgs := pulumix.All(
		args.Email.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *LookupEmailIdentityArgs {
		return &LookupEmailIdentityArgs{
			Email: resolvedArgs[0].(string),
		}
	})
}

type LookupEmailIdentityResultOutput struct{ *pulumi.OutputState }

func (LookupEmailIdentityResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEmailIdentityResult)(nil)).Elem()
}

func (o LookupEmailIdentityResultOutput) ToOutput(context.Context) pulumix.Output[*LookupEmailIdentityResult] {
	return pulumix.Output[*LookupEmailIdentityResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupEmailIdentityResultOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[*LookupEmailIdentityResult](o, func(v *LookupEmailIdentityResult) string { return v.Arn })
}

func (o LookupEmailIdentityResultOutput) Email() pulumix.Output[string] {
	return pulumix.Apply[*LookupEmailIdentityResult](o, func(v *LookupEmailIdentityResult) string { return v.Email })
}

func (o LookupEmailIdentityResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*LookupEmailIdentityResult](o, func(v *LookupEmailIdentityResult) string { return v.Id })
}
