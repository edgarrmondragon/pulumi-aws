// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dax

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type ClusterNode struct {
	Address          *string `pulumi:"address"`
	AvailabilityZone *string `pulumi:"availabilityZone"`
	Id               *string `pulumi:"id"`
	// The port used by the configuration endpoint
	Port *int `pulumi:"port"`
}

type ClusterNodeArgs struct {
	Address          pulumix.Input[*string] `pulumi:"address"`
	AvailabilityZone pulumix.Input[*string] `pulumi:"availabilityZone"`
	Id               pulumix.Input[*string] `pulumi:"id"`
	// The port used by the configuration endpoint
	Port pulumix.Input[*int] `pulumi:"port"`
}

func (ClusterNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNode)(nil)).Elem()
}

func (i ClusterNodeArgs) ToClusterNodeOutput() ClusterNodeOutput {
	return i.ToClusterNodeOutputWithContext(context.Background())
}

func (i ClusterNodeArgs) ToClusterNodeOutputWithContext(ctx context.Context) ClusterNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeOutput)
}

func (i *ClusterNodeArgs) ToOutput(ctx context.Context) pulumix.Output[*ClusterNodeArgs] {
	return pulumix.Val(i)
}

type ClusterNodeOutput struct{ *pulumi.OutputState }

func (ClusterNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNode)(nil)).Elem()
}

func (o ClusterNodeOutput) ToClusterNodeOutput() ClusterNodeOutput {
	return o
}

func (o ClusterNodeOutput) ToClusterNodeOutputWithContext(ctx context.Context) ClusterNodeOutput {
	return o
}

func (o ClusterNodeOutput) ToOutput(ctx context.Context) pulumix.Output[ClusterNode] {
	return pulumix.Output[ClusterNode]{
		OutputState: o.OutputState,
	}
}

func (o ClusterNodeOutput) Address() pulumix.Output[*string] {
	return pulumix.Apply[ClusterNode](o, func(v ClusterNode) *string { return v.Address })
}

func (o ClusterNodeOutput) AvailabilityZone() pulumix.Output[*string] {
	return pulumix.Apply[ClusterNode](o, func(v ClusterNode) *string { return v.AvailabilityZone })
}

func (o ClusterNodeOutput) Id() pulumix.Output[*string] {
	return pulumix.Apply[ClusterNode](o, func(v ClusterNode) *string { return v.Id })
}

// The port used by the configuration endpoint
func (o ClusterNodeOutput) Port() pulumix.Output[*int] {
	return pulumix.Apply[ClusterNode](o, func(v ClusterNode) *int { return v.Port })
}

type ClusterServerSideEncryption struct {
	// Whether to enable encryption at rest. Defaults to `false`.
	Enabled *bool `pulumi:"enabled"`
}

type ClusterServerSideEncryptionArgs struct {
	// Whether to enable encryption at rest. Defaults to `false`.
	Enabled pulumix.Input[*bool] `pulumi:"enabled"`
}

func (ClusterServerSideEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterServerSideEncryption)(nil)).Elem()
}

func (i ClusterServerSideEncryptionArgs) ToClusterServerSideEncryptionOutput() ClusterServerSideEncryptionOutput {
	return i.ToClusterServerSideEncryptionOutputWithContext(context.Background())
}

func (i ClusterServerSideEncryptionArgs) ToClusterServerSideEncryptionOutputWithContext(ctx context.Context) ClusterServerSideEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServerSideEncryptionOutput)
}

func (i *ClusterServerSideEncryptionArgs) ToOutput(ctx context.Context) pulumix.Output[*ClusterServerSideEncryptionArgs] {
	return pulumix.Val(i)
}

type ClusterServerSideEncryptionOutput struct{ *pulumi.OutputState }

func (ClusterServerSideEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterServerSideEncryption)(nil)).Elem()
}

func (o ClusterServerSideEncryptionOutput) ToClusterServerSideEncryptionOutput() ClusterServerSideEncryptionOutput {
	return o
}

func (o ClusterServerSideEncryptionOutput) ToClusterServerSideEncryptionOutputWithContext(ctx context.Context) ClusterServerSideEncryptionOutput {
	return o
}

func (o ClusterServerSideEncryptionOutput) ToOutput(ctx context.Context) pulumix.Output[ClusterServerSideEncryption] {
	return pulumix.Output[ClusterServerSideEncryption]{
		OutputState: o.OutputState,
	}
}

// Whether to enable encryption at rest. Defaults to `false`.
func (o ClusterServerSideEncryptionOutput) Enabled() pulumix.Output[*bool] {
	return pulumix.Apply[ClusterServerSideEncryption](o, func(v ClusterServerSideEncryption) *bool { return v.Enabled })
}

type ParameterGroupParameter struct {
	// The name of the parameter.
	Name string `pulumi:"name"`
	// The value for the parameter.
	Value string `pulumi:"value"`
}

type ParameterGroupParameterArgs struct {
	// The name of the parameter.
	Name pulumix.Input[string] `pulumi:"name"`
	// The value for the parameter.
	Value pulumix.Input[string] `pulumi:"value"`
}

func (ParameterGroupParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ParameterGroupParameter)(nil)).Elem()
}

func (i ParameterGroupParameterArgs) ToParameterGroupParameterOutput() ParameterGroupParameterOutput {
	return i.ToParameterGroupParameterOutputWithContext(context.Background())
}

func (i ParameterGroupParameterArgs) ToParameterGroupParameterOutputWithContext(ctx context.Context) ParameterGroupParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterGroupParameterOutput)
}

func (i *ParameterGroupParameterArgs) ToOutput(ctx context.Context) pulumix.Output[*ParameterGroupParameterArgs] {
	return pulumix.Val(i)
}

type ParameterGroupParameterOutput struct{ *pulumi.OutputState }

func (ParameterGroupParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ParameterGroupParameter)(nil)).Elem()
}

func (o ParameterGroupParameterOutput) ToParameterGroupParameterOutput() ParameterGroupParameterOutput {
	return o
}

func (o ParameterGroupParameterOutput) ToParameterGroupParameterOutputWithContext(ctx context.Context) ParameterGroupParameterOutput {
	return o
}

func (o ParameterGroupParameterOutput) ToOutput(ctx context.Context) pulumix.Output[ParameterGroupParameter] {
	return pulumix.Output[ParameterGroupParameter]{
		OutputState: o.OutputState,
	}
}

// The name of the parameter.
func (o ParameterGroupParameterOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[ParameterGroupParameter](o, func(v ParameterGroupParameter) string { return v.Name })
}

// The value for the parameter.
func (o ParameterGroupParameterOutput) Value() pulumix.Output[string] {
	return pulumix.Apply[ParameterGroupParameter](o, func(v ParameterGroupParameter) string { return v.Value })
}

func init() {
	pulumi.RegisterOutputType(ClusterNodeOutput{})
	pulumi.RegisterOutputType(ClusterServerSideEncryptionOutput{})
	pulumi.RegisterOutputType(ParameterGroupParameterOutput{})
}
