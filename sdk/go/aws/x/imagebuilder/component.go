// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package imagebuilder

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manages an Image Builder Component.
type Component struct {
	pulumi.CustomResourceState

	// (Required) Amazon Resource Name (ARN) of the component.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// Change description of the component.
	ChangeDescription pulumix.Output[*string] `pulumi:"changeDescription"`
	// Inline YAML string with data of the component. Exactly one of `data` and `uri` can be specified. the provider will only perform drift detection of its value when present in a configuration.
	Data pulumix.Output[string] `pulumi:"data"`
	// Date the component was created.
	DateCreated pulumix.Output[string] `pulumi:"dateCreated"`
	// Description of the component.
	Description pulumix.Output[*string] `pulumi:"description"`
	// Encryption status of the component.
	Encrypted pulumix.Output[bool] `pulumi:"encrypted"`
	// Amazon Resource Name (ARN) of the Key Management Service (KMS) Key used to encrypt the component.
	KmsKeyId pulumix.Output[*string] `pulumi:"kmsKeyId"`
	// Name of the component.
	Name pulumix.Output[string] `pulumi:"name"`
	// Owner of the component.
	Owner pulumix.Output[string] `pulumi:"owner"`
	// Platform of the component.
	Platform pulumix.Output[string] `pulumi:"platform"`
	// Whether to retain the old version when the resource is destroyed or replacement is necessary. Defaults to `false`.
	SkipDestroy pulumix.Output[*bool] `pulumi:"skipDestroy"`
	// Set of Operating Systems (OS) supported by the component.
	SupportedOsVersions pulumix.ArrayOutput[string] `pulumi:"supportedOsVersions"`
	// Key-value map of resource tags for the component. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// Type of the component.
	Type pulumix.Output[string] `pulumi:"type"`
	// S3 URI with data of the component. Exactly one of `data` and `uri` can be specified.
	//
	// > **NOTE:** Updating `data` or `uri` requires specifying a new `version`. This causes replacement of the resource. The `skipDestroy` argument can be used to retain the old version.
	Uri pulumix.Output[*string] `pulumi:"uri"`
	// Version of the component.
	//
	// The following attributes are optional:
	Version pulumix.Output[string] `pulumi:"version"`
}

// NewComponent registers a new resource with the given unique name, arguments, and options.
func NewComponent(ctx *pulumi.Context,
	name string, args *ComponentArgs, opts ...pulumi.ResourceOption) (*Component, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Platform == nil {
		return nil, errors.New("invalid value for required argument 'Platform'")
	}
	if args.Version == nil {
		return nil, errors.New("invalid value for required argument 'Version'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Component
	err := ctx.RegisterResource("aws:imagebuilder/component:Component", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetComponent gets an existing Component resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetComponent(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ComponentState, opts ...pulumi.ResourceOption) (*Component, error) {
	var resource Component
	err := ctx.ReadResource("aws:imagebuilder/component:Component", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Component resources.
type componentState struct {
	// (Required) Amazon Resource Name (ARN) of the component.
	Arn *string `pulumi:"arn"`
	// Change description of the component.
	ChangeDescription *string `pulumi:"changeDescription"`
	// Inline YAML string with data of the component. Exactly one of `data` and `uri` can be specified. the provider will only perform drift detection of its value when present in a configuration.
	Data *string `pulumi:"data"`
	// Date the component was created.
	DateCreated *string `pulumi:"dateCreated"`
	// Description of the component.
	Description *string `pulumi:"description"`
	// Encryption status of the component.
	Encrypted *bool `pulumi:"encrypted"`
	// Amazon Resource Name (ARN) of the Key Management Service (KMS) Key used to encrypt the component.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// Name of the component.
	Name *string `pulumi:"name"`
	// Owner of the component.
	Owner *string `pulumi:"owner"`
	// Platform of the component.
	Platform *string `pulumi:"platform"`
	// Whether to retain the old version when the resource is destroyed or replacement is necessary. Defaults to `false`.
	SkipDestroy *bool `pulumi:"skipDestroy"`
	// Set of Operating Systems (OS) supported by the component.
	SupportedOsVersions []string `pulumi:"supportedOsVersions"`
	// Key-value map of resource tags for the component. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// Type of the component.
	Type *string `pulumi:"type"`
	// S3 URI with data of the component. Exactly one of `data` and `uri` can be specified.
	//
	// > **NOTE:** Updating `data` or `uri` requires specifying a new `version`. This causes replacement of the resource. The `skipDestroy` argument can be used to retain the old version.
	Uri *string `pulumi:"uri"`
	// Version of the component.
	//
	// The following attributes are optional:
	Version *string `pulumi:"version"`
}

type ComponentState struct {
	// (Required) Amazon Resource Name (ARN) of the component.
	Arn pulumix.Input[*string]
	// Change description of the component.
	ChangeDescription pulumix.Input[*string]
	// Inline YAML string with data of the component. Exactly one of `data` and `uri` can be specified. the provider will only perform drift detection of its value when present in a configuration.
	Data pulumix.Input[*string]
	// Date the component was created.
	DateCreated pulumix.Input[*string]
	// Description of the component.
	Description pulumix.Input[*string]
	// Encryption status of the component.
	Encrypted pulumix.Input[*bool]
	// Amazon Resource Name (ARN) of the Key Management Service (KMS) Key used to encrypt the component.
	KmsKeyId pulumix.Input[*string]
	// Name of the component.
	Name pulumix.Input[*string]
	// Owner of the component.
	Owner pulumix.Input[*string]
	// Platform of the component.
	Platform pulumix.Input[*string]
	// Whether to retain the old version when the resource is destroyed or replacement is necessary. Defaults to `false`.
	SkipDestroy pulumix.Input[*bool]
	// Set of Operating Systems (OS) supported by the component.
	SupportedOsVersions pulumix.Input[[]string]
	// Key-value map of resource tags for the component. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// Type of the component.
	Type pulumix.Input[*string]
	// S3 URI with data of the component. Exactly one of `data` and `uri` can be specified.
	//
	// > **NOTE:** Updating `data` or `uri` requires specifying a new `version`. This causes replacement of the resource. The `skipDestroy` argument can be used to retain the old version.
	Uri pulumix.Input[*string]
	// Version of the component.
	//
	// The following attributes are optional:
	Version pulumix.Input[*string]
}

func (ComponentState) ElementType() reflect.Type {
	return reflect.TypeOf((*componentState)(nil)).Elem()
}

type componentArgs struct {
	// Change description of the component.
	ChangeDescription *string `pulumi:"changeDescription"`
	// Inline YAML string with data of the component. Exactly one of `data` and `uri` can be specified. the provider will only perform drift detection of its value when present in a configuration.
	Data *string `pulumi:"data"`
	// Description of the component.
	Description *string `pulumi:"description"`
	// Amazon Resource Name (ARN) of the Key Management Service (KMS) Key used to encrypt the component.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// Name of the component.
	Name *string `pulumi:"name"`
	// Platform of the component.
	Platform string `pulumi:"platform"`
	// Whether to retain the old version when the resource is destroyed or replacement is necessary. Defaults to `false`.
	SkipDestroy *bool `pulumi:"skipDestroy"`
	// Set of Operating Systems (OS) supported by the component.
	SupportedOsVersions []string `pulumi:"supportedOsVersions"`
	// Key-value map of resource tags for the component. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// S3 URI with data of the component. Exactly one of `data` and `uri` can be specified.
	//
	// > **NOTE:** Updating `data` or `uri` requires specifying a new `version`. This causes replacement of the resource. The `skipDestroy` argument can be used to retain the old version.
	Uri *string `pulumi:"uri"`
	// Version of the component.
	//
	// The following attributes are optional:
	Version string `pulumi:"version"`
}

// The set of arguments for constructing a Component resource.
type ComponentArgs struct {
	// Change description of the component.
	ChangeDescription pulumix.Input[*string]
	// Inline YAML string with data of the component. Exactly one of `data` and `uri` can be specified. the provider will only perform drift detection of its value when present in a configuration.
	Data pulumix.Input[*string]
	// Description of the component.
	Description pulumix.Input[*string]
	// Amazon Resource Name (ARN) of the Key Management Service (KMS) Key used to encrypt the component.
	KmsKeyId pulumix.Input[*string]
	// Name of the component.
	Name pulumix.Input[*string]
	// Platform of the component.
	Platform pulumix.Input[string]
	// Whether to retain the old version when the resource is destroyed or replacement is necessary. Defaults to `false`.
	SkipDestroy pulumix.Input[*bool]
	// Set of Operating Systems (OS) supported by the component.
	SupportedOsVersions pulumix.Input[[]string]
	// Key-value map of resource tags for the component. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// S3 URI with data of the component. Exactly one of `data` and `uri` can be specified.
	//
	// > **NOTE:** Updating `data` or `uri` requires specifying a new `version`. This causes replacement of the resource. The `skipDestroy` argument can be used to retain the old version.
	Uri pulumix.Input[*string]
	// Version of the component.
	//
	// The following attributes are optional:
	Version pulumix.Input[string]
}

func (ComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*componentArgs)(nil)).Elem()
}

type ComponentOutput struct{ *pulumi.OutputState }

func (ComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Component)(nil)).Elem()
}

func (o ComponentOutput) ToComponentOutput() ComponentOutput {
	return o
}

func (o ComponentOutput) ToComponentOutputWithContext(ctx context.Context) ComponentOutput {
	return o
}

func (o ComponentOutput) ToOutput(ctx context.Context) pulumix.Output[Component] {
	return pulumix.Output[Component]{
		OutputState: o.OutputState,
	}
}

// (Required) Amazon Resource Name (ARN) of the component.
func (o ComponentOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Component](o, func(v Component) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Change description of the component.
func (o ComponentOutput) ChangeDescription() pulumix.Output[*string] {
	value := pulumix.Apply[Component](o, func(v Component) pulumix.Output[*string] { return v.ChangeDescription })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Inline YAML string with data of the component. Exactly one of `data` and `uri` can be specified. the provider will only perform drift detection of its value when present in a configuration.
func (o ComponentOutput) Data() pulumix.Output[string] {
	value := pulumix.Apply[Component](o, func(v Component) pulumix.Output[string] { return v.Data })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Date the component was created.
func (o ComponentOutput) DateCreated() pulumix.Output[string] {
	value := pulumix.Apply[Component](o, func(v Component) pulumix.Output[string] { return v.DateCreated })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Description of the component.
func (o ComponentOutput) Description() pulumix.Output[*string] {
	value := pulumix.Apply[Component](o, func(v Component) pulumix.Output[*string] { return v.Description })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Encryption status of the component.
func (o ComponentOutput) Encrypted() pulumix.Output[bool] {
	value := pulumix.Apply[Component](o, func(v Component) pulumix.Output[bool] { return v.Encrypted })
	return pulumix.Flatten[bool, pulumix.Output[bool]](value)
}

// Amazon Resource Name (ARN) of the Key Management Service (KMS) Key used to encrypt the component.
func (o ComponentOutput) KmsKeyId() pulumix.Output[*string] {
	value := pulumix.Apply[Component](o, func(v Component) pulumix.Output[*string] { return v.KmsKeyId })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Name of the component.
func (o ComponentOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[Component](o, func(v Component) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Owner of the component.
func (o ComponentOutput) Owner() pulumix.Output[string] {
	value := pulumix.Apply[Component](o, func(v Component) pulumix.Output[string] { return v.Owner })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Platform of the component.
func (o ComponentOutput) Platform() pulumix.Output[string] {
	value := pulumix.Apply[Component](o, func(v Component) pulumix.Output[string] { return v.Platform })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Whether to retain the old version when the resource is destroyed or replacement is necessary. Defaults to `false`.
func (o ComponentOutput) SkipDestroy() pulumix.Output[*bool] {
	value := pulumix.Apply[Component](o, func(v Component) pulumix.Output[*bool] { return v.SkipDestroy })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// Set of Operating Systems (OS) supported by the component.
func (o ComponentOutput) SupportedOsVersions() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[Component](o, func(v Component) pulumix.ArrayOutput[string] { return v.SupportedOsVersions })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// Key-value map of resource tags for the component. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o ComponentOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Component](o, func(v Component) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o ComponentOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[Component](o, func(v Component) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Type of the component.
func (o ComponentOutput) Type() pulumix.Output[string] {
	value := pulumix.Apply[Component](o, func(v Component) pulumix.Output[string] { return v.Type })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// S3 URI with data of the component. Exactly one of `data` and `uri` can be specified.
//
// > **NOTE:** Updating `data` or `uri` requires specifying a new `version`. This causes replacement of the resource. The `skipDestroy` argument can be used to retain the old version.
func (o ComponentOutput) Uri() pulumix.Output[*string] {
	value := pulumix.Apply[Component](o, func(v Component) pulumix.Output[*string] { return v.Uri })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Version of the component.
//
// The following attributes are optional:
func (o ComponentOutput) Version() pulumix.Output[string] {
	value := pulumix.Apply[Component](o, func(v Component) pulumix.Output[string] { return v.Version })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(ComponentOutput{})
}
