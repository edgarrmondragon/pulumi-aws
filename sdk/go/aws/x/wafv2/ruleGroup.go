// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package wafv2

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type RuleGroup struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) of the IP Set that this statement references.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The web ACL capacity units (WCUs) required for this rule group. See [here](https://docs.aws.amazon.com/waf/latest/APIReference/API_CreateRuleGroup.html#API_CreateRuleGroup_RequestSyntax) for general information and [here](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statements-list.html) for capacity specific information.
	Capacity pulumix.Output[int] `pulumi:"capacity"`
	// Defines custom response bodies that can be referenced by `customResponse` actions. See Custom Response Body below for details.
	CustomResponseBodies pulumix.GArrayOutput[RuleGroupCustomResponseBody, RuleGroupCustomResponseBodyOutput] `pulumi:"customResponseBodies"`
	// A friendly description of the rule group.
	Description pulumix.Output[*string] `pulumi:"description"`
	LockToken   pulumix.Output[string]  `pulumi:"lockToken"`
	// A friendly name of the rule group.
	Name       pulumix.Output[string] `pulumi:"name"`
	NamePrefix pulumix.Output[string] `pulumi:"namePrefix"`
	// The rule blocks used to identify the web requests that you want to `allow`, `block`, or `count`. See Rules below for details.
	Rules pulumix.GArrayOutput[RuleGroupRule, RuleGroupRuleOutput] `pulumi:"rules"`
	// Specifies whether this is for an AWS CloudFront distribution or for a regional application. Valid values are `CLOUDFRONT` or `REGIONAL`. To work with CloudFront, you must also specify the region `us-east-1` (N. Virginia) on the AWS provider.
	Scope pulumix.Output[string] `pulumi:"scope"`
	// An array of key:value pairs to associate with the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// Defines and enables Amazon CloudWatch metrics and web request sample collection. See Visibility Configuration below for details.
	VisibilityConfig pulumix.GPtrOutput[RuleGroupVisibilityConfig, RuleGroupVisibilityConfigOutput] `pulumi:"visibilityConfig"`
}

// NewRuleGroup registers a new resource with the given unique name, arguments, and options.
func NewRuleGroup(ctx *pulumi.Context,
	name string, args *RuleGroupArgs, opts ...pulumi.ResourceOption) (*RuleGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Capacity == nil {
		return nil, errors.New("invalid value for required argument 'Capacity'")
	}
	if args.Scope == nil {
		return nil, errors.New("invalid value for required argument 'Scope'")
	}
	if args.VisibilityConfig == nil {
		return nil, errors.New("invalid value for required argument 'VisibilityConfig'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RuleGroup
	err := ctx.RegisterResource("aws:wafv2/ruleGroup:RuleGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRuleGroup gets an existing RuleGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRuleGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RuleGroupState, opts ...pulumi.ResourceOption) (*RuleGroup, error) {
	var resource RuleGroup
	err := ctx.ReadResource("aws:wafv2/ruleGroup:RuleGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RuleGroup resources.
type ruleGroupState struct {
	// The Amazon Resource Name (ARN) of the IP Set that this statement references.
	Arn *string `pulumi:"arn"`
	// The web ACL capacity units (WCUs) required for this rule group. See [here](https://docs.aws.amazon.com/waf/latest/APIReference/API_CreateRuleGroup.html#API_CreateRuleGroup_RequestSyntax) for general information and [here](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statements-list.html) for capacity specific information.
	Capacity *int `pulumi:"capacity"`
	// Defines custom response bodies that can be referenced by `customResponse` actions. See Custom Response Body below for details.
	CustomResponseBodies []RuleGroupCustomResponseBody `pulumi:"customResponseBodies"`
	// A friendly description of the rule group.
	Description *string `pulumi:"description"`
	LockToken   *string `pulumi:"lockToken"`
	// A friendly name of the rule group.
	Name       *string `pulumi:"name"`
	NamePrefix *string `pulumi:"namePrefix"`
	// The rule blocks used to identify the web requests that you want to `allow`, `block`, or `count`. See Rules below for details.
	Rules []RuleGroupRule `pulumi:"rules"`
	// Specifies whether this is for an AWS CloudFront distribution or for a regional application. Valid values are `CLOUDFRONT` or `REGIONAL`. To work with CloudFront, you must also specify the region `us-east-1` (N. Virginia) on the AWS provider.
	Scope *string `pulumi:"scope"`
	// An array of key:value pairs to associate with the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// Defines and enables Amazon CloudWatch metrics and web request sample collection. See Visibility Configuration below for details.
	VisibilityConfig *RuleGroupVisibilityConfig `pulumi:"visibilityConfig"`
}

type RuleGroupState struct {
	// The Amazon Resource Name (ARN) of the IP Set that this statement references.
	Arn pulumix.Input[*string]
	// The web ACL capacity units (WCUs) required for this rule group. See [here](https://docs.aws.amazon.com/waf/latest/APIReference/API_CreateRuleGroup.html#API_CreateRuleGroup_RequestSyntax) for general information and [here](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statements-list.html) for capacity specific information.
	Capacity pulumix.Input[*int]
	// Defines custom response bodies that can be referenced by `customResponse` actions. See Custom Response Body below for details.
	CustomResponseBodies pulumix.Input[[]*RuleGroupCustomResponseBodyArgs]
	// A friendly description of the rule group.
	Description pulumix.Input[*string]
	LockToken   pulumix.Input[*string]
	// A friendly name of the rule group.
	Name       pulumix.Input[*string]
	NamePrefix pulumix.Input[*string]
	// The rule blocks used to identify the web requests that you want to `allow`, `block`, or `count`. See Rules below for details.
	Rules pulumix.Input[[]*RuleGroupRuleArgs]
	// Specifies whether this is for an AWS CloudFront distribution or for a regional application. Valid values are `CLOUDFRONT` or `REGIONAL`. To work with CloudFront, you must also specify the region `us-east-1` (N. Virginia) on the AWS provider.
	Scope pulumix.Input[*string]
	// An array of key:value pairs to associate with the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// Defines and enables Amazon CloudWatch metrics and web request sample collection. See Visibility Configuration below for details.
	VisibilityConfig pulumix.Input[*RuleGroupVisibilityConfigArgs]
}

func (RuleGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*ruleGroupState)(nil)).Elem()
}

type ruleGroupArgs struct {
	// The web ACL capacity units (WCUs) required for this rule group. See [here](https://docs.aws.amazon.com/waf/latest/APIReference/API_CreateRuleGroup.html#API_CreateRuleGroup_RequestSyntax) for general information and [here](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statements-list.html) for capacity specific information.
	Capacity int `pulumi:"capacity"`
	// Defines custom response bodies that can be referenced by `customResponse` actions. See Custom Response Body below for details.
	CustomResponseBodies []RuleGroupCustomResponseBody `pulumi:"customResponseBodies"`
	// A friendly description of the rule group.
	Description *string `pulumi:"description"`
	// A friendly name of the rule group.
	Name       *string `pulumi:"name"`
	NamePrefix *string `pulumi:"namePrefix"`
	// The rule blocks used to identify the web requests that you want to `allow`, `block`, or `count`. See Rules below for details.
	Rules []RuleGroupRule `pulumi:"rules"`
	// Specifies whether this is for an AWS CloudFront distribution or for a regional application. Valid values are `CLOUDFRONT` or `REGIONAL`. To work with CloudFront, you must also specify the region `us-east-1` (N. Virginia) on the AWS provider.
	Scope string `pulumi:"scope"`
	// An array of key:value pairs to associate with the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Defines and enables Amazon CloudWatch metrics and web request sample collection. See Visibility Configuration below for details.
	VisibilityConfig RuleGroupVisibilityConfig `pulumi:"visibilityConfig"`
}

// The set of arguments for constructing a RuleGroup resource.
type RuleGroupArgs struct {
	// The web ACL capacity units (WCUs) required for this rule group. See [here](https://docs.aws.amazon.com/waf/latest/APIReference/API_CreateRuleGroup.html#API_CreateRuleGroup_RequestSyntax) for general information and [here](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statements-list.html) for capacity specific information.
	Capacity pulumix.Input[int]
	// Defines custom response bodies that can be referenced by `customResponse` actions. See Custom Response Body below for details.
	CustomResponseBodies pulumix.Input[[]*RuleGroupCustomResponseBodyArgs]
	// A friendly description of the rule group.
	Description pulumix.Input[*string]
	// A friendly name of the rule group.
	Name       pulumix.Input[*string]
	NamePrefix pulumix.Input[*string]
	// The rule blocks used to identify the web requests that you want to `allow`, `block`, or `count`. See Rules below for details.
	Rules pulumix.Input[[]*RuleGroupRuleArgs]
	// Specifies whether this is for an AWS CloudFront distribution or for a regional application. Valid values are `CLOUDFRONT` or `REGIONAL`. To work with CloudFront, you must also specify the region `us-east-1` (N. Virginia) on the AWS provider.
	Scope pulumix.Input[string]
	// An array of key:value pairs to associate with the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// Defines and enables Amazon CloudWatch metrics and web request sample collection. See Visibility Configuration below for details.
	VisibilityConfig pulumix.Input[*RuleGroupVisibilityConfigArgs]
}

func (RuleGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ruleGroupArgs)(nil)).Elem()
}

type RuleGroupOutput struct{ *pulumi.OutputState }

func (RuleGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroup)(nil)).Elem()
}

func (o RuleGroupOutput) ToRuleGroupOutput() RuleGroupOutput {
	return o
}

func (o RuleGroupOutput) ToRuleGroupOutputWithContext(ctx context.Context) RuleGroupOutput {
	return o
}

func (o RuleGroupOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroup] {
	return pulumix.Output[RuleGroup]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) of the IP Set that this statement references.
func (o RuleGroupOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[RuleGroup](o, func(v RuleGroup) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The web ACL capacity units (WCUs) required for this rule group. See [here](https://docs.aws.amazon.com/waf/latest/APIReference/API_CreateRuleGroup.html#API_CreateRuleGroup_RequestSyntax) for general information and [here](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statements-list.html) for capacity specific information.
func (o RuleGroupOutput) Capacity() pulumix.Output[int] {
	value := pulumix.Apply[RuleGroup](o, func(v RuleGroup) pulumix.Output[int] { return v.Capacity })
	return pulumix.Flatten[int, pulumix.Output[int]](value)
}

// Defines custom response bodies that can be referenced by `customResponse` actions. See Custom Response Body below for details.
func (o RuleGroupOutput) CustomResponseBodies() pulumix.GArrayOutput[RuleGroupCustomResponseBody, RuleGroupCustomResponseBodyOutput] {
	value := pulumix.Apply[RuleGroup](o, func(v RuleGroup) pulumix.GArrayOutput[RuleGroupCustomResponseBody, RuleGroupCustomResponseBodyOutput] {
		return v.CustomResponseBodies
	})
	unwrapped := pulumix.Flatten[[]RuleGroupCustomResponseBody, pulumix.GArrayOutput[RuleGroupCustomResponseBody, RuleGroupCustomResponseBodyOutput]](value)
	return pulumix.GArrayOutput[RuleGroupCustomResponseBody, RuleGroupCustomResponseBodyOutput]{OutputState: unwrapped.OutputState}
}

// A friendly description of the rule group.
func (o RuleGroupOutput) Description() pulumix.Output[*string] {
	value := pulumix.Apply[RuleGroup](o, func(v RuleGroup) pulumix.Output[*string] { return v.Description })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

func (o RuleGroupOutput) LockToken() pulumix.Output[string] {
	value := pulumix.Apply[RuleGroup](o, func(v RuleGroup) pulumix.Output[string] { return v.LockToken })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A friendly name of the rule group.
func (o RuleGroupOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[RuleGroup](o, func(v RuleGroup) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func (o RuleGroupOutput) NamePrefix() pulumix.Output[string] {
	value := pulumix.Apply[RuleGroup](o, func(v RuleGroup) pulumix.Output[string] { return v.NamePrefix })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The rule blocks used to identify the web requests that you want to `allow`, `block`, or `count`. See Rules below for details.
func (o RuleGroupOutput) Rules() pulumix.GArrayOutput[RuleGroupRule, RuleGroupRuleOutput] {
	value := pulumix.Apply[RuleGroup](o, func(v RuleGroup) pulumix.GArrayOutput[RuleGroupRule, RuleGroupRuleOutput] { return v.Rules })
	unwrapped := pulumix.Flatten[[]RuleGroupRule, pulumix.GArrayOutput[RuleGroupRule, RuleGroupRuleOutput]](value)
	return pulumix.GArrayOutput[RuleGroupRule, RuleGroupRuleOutput]{OutputState: unwrapped.OutputState}
}

// Specifies whether this is for an AWS CloudFront distribution or for a regional application. Valid values are `CLOUDFRONT` or `REGIONAL`. To work with CloudFront, you must also specify the region `us-east-1` (N. Virginia) on the AWS provider.
func (o RuleGroupOutput) Scope() pulumix.Output[string] {
	value := pulumix.Apply[RuleGroup](o, func(v RuleGroup) pulumix.Output[string] { return v.Scope })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// An array of key:value pairs to associate with the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o RuleGroupOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[RuleGroup](o, func(v RuleGroup) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o RuleGroupOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[RuleGroup](o, func(v RuleGroup) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Defines and enables Amazon CloudWatch metrics and web request sample collection. See Visibility Configuration below for details.
func (o RuleGroupOutput) VisibilityConfig() pulumix.GPtrOutput[RuleGroupVisibilityConfig, RuleGroupVisibilityConfigOutput] {
	value := pulumix.Apply[RuleGroup](o, func(v RuleGroup) pulumix.GPtrOutput[RuleGroupVisibilityConfig, RuleGroupVisibilityConfigOutput] {
		return v.VisibilityConfig
	})
	unwrapped := pulumix.Flatten[*RuleGroupVisibilityConfig, pulumix.GPtrOutput[RuleGroupVisibilityConfig, RuleGroupVisibilityConfigOutput]](value)
	return pulumix.GPtrOutput[RuleGroupVisibilityConfig, RuleGroupVisibilityConfigOutput]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(RuleGroupOutput{})
}
