// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networkmanager

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Resource for managing an AWS NetworkManager Connect Peer.
type ConnectPeer struct {
	pulumi.CustomResourceState

	// The ARN of the attachment.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The Connect peer BGP options.
	BgpOptions pulumix.GPtrOutput[ConnectPeerBgpOptions, ConnectPeerBgpOptionsOutput] `pulumi:"bgpOptions"`
	// The configuration of the Connect peer.
	Configurations pulumix.GArrayOutput[ConnectPeerConfiguration, ConnectPeerConfigurationOutput] `pulumi:"configurations"`
	// The ID of the connection attachment.
	ConnectAttachmentId pulumix.Output[string] `pulumi:"connectAttachmentId"`
	ConnectPeerId       pulumix.Output[string] `pulumi:"connectPeerId"`
	// A Connect peer core network address.
	CoreNetworkAddress pulumix.Output[*string] `pulumi:"coreNetworkAddress"`
	// The ID of a core network.
	CoreNetworkId pulumix.Output[string] `pulumi:"coreNetworkId"`
	CreatedAt     pulumix.Output[string] `pulumi:"createdAt"`
	// The Region where the peer is located.
	EdgeLocation pulumix.Output[string] `pulumi:"edgeLocation"`
	// The inside IP addresses used for BGP peering.
	InsideCidrBlocks pulumix.ArrayOutput[string] `pulumi:"insideCidrBlocks"`
	// The Connect peer address.
	//
	// The following arguments are optional:
	PeerAddress pulumix.Output[string] `pulumi:"peerAddress"`
	// The state of the Connect peer.
	State pulumix.Output[string] `pulumi:"state"`
	// Key-value tags for the attachment. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
}

// NewConnectPeer registers a new resource with the given unique name, arguments, and options.
func NewConnectPeer(ctx *pulumi.Context,
	name string, args *ConnectPeerArgs, opts ...pulumi.ResourceOption) (*ConnectPeer, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConnectAttachmentId == nil {
		return nil, errors.New("invalid value for required argument 'ConnectAttachmentId'")
	}
	if args.InsideCidrBlocks == nil {
		return nil, errors.New("invalid value for required argument 'InsideCidrBlocks'")
	}
	if args.PeerAddress == nil {
		return nil, errors.New("invalid value for required argument 'PeerAddress'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ConnectPeer
	err := ctx.RegisterResource("aws:networkmanager/connectPeer:ConnectPeer", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetConnectPeer gets an existing ConnectPeer resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetConnectPeer(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ConnectPeerState, opts ...pulumi.ResourceOption) (*ConnectPeer, error) {
	var resource ConnectPeer
	err := ctx.ReadResource("aws:networkmanager/connectPeer:ConnectPeer", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ConnectPeer resources.
type connectPeerState struct {
	// The ARN of the attachment.
	Arn *string `pulumi:"arn"`
	// The Connect peer BGP options.
	BgpOptions *ConnectPeerBgpOptions `pulumi:"bgpOptions"`
	// The configuration of the Connect peer.
	Configurations []ConnectPeerConfiguration `pulumi:"configurations"`
	// The ID of the connection attachment.
	ConnectAttachmentId *string `pulumi:"connectAttachmentId"`
	ConnectPeerId       *string `pulumi:"connectPeerId"`
	// A Connect peer core network address.
	CoreNetworkAddress *string `pulumi:"coreNetworkAddress"`
	// The ID of a core network.
	CoreNetworkId *string `pulumi:"coreNetworkId"`
	CreatedAt     *string `pulumi:"createdAt"`
	// The Region where the peer is located.
	EdgeLocation *string `pulumi:"edgeLocation"`
	// The inside IP addresses used for BGP peering.
	InsideCidrBlocks []string `pulumi:"insideCidrBlocks"`
	// The Connect peer address.
	//
	// The following arguments are optional:
	PeerAddress *string `pulumi:"peerAddress"`
	// The state of the Connect peer.
	State *string `pulumi:"state"`
	// Key-value tags for the attachment. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type ConnectPeerState struct {
	// The ARN of the attachment.
	Arn pulumix.Input[*string]
	// The Connect peer BGP options.
	BgpOptions pulumix.Input[*ConnectPeerBgpOptionsArgs]
	// The configuration of the Connect peer.
	Configurations pulumix.Input[[]*ConnectPeerConfigurationArgs]
	// The ID of the connection attachment.
	ConnectAttachmentId pulumix.Input[*string]
	ConnectPeerId       pulumix.Input[*string]
	// A Connect peer core network address.
	CoreNetworkAddress pulumix.Input[*string]
	// The ID of a core network.
	CoreNetworkId pulumix.Input[*string]
	CreatedAt     pulumix.Input[*string]
	// The Region where the peer is located.
	EdgeLocation pulumix.Input[*string]
	// The inside IP addresses used for BGP peering.
	InsideCidrBlocks pulumix.Input[[]string]
	// The Connect peer address.
	//
	// The following arguments are optional:
	PeerAddress pulumix.Input[*string]
	// The state of the Connect peer.
	State pulumix.Input[*string]
	// Key-value tags for the attachment. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
}

func (ConnectPeerState) ElementType() reflect.Type {
	return reflect.TypeOf((*connectPeerState)(nil)).Elem()
}

type connectPeerArgs struct {
	// The Connect peer BGP options.
	BgpOptions *ConnectPeerBgpOptions `pulumi:"bgpOptions"`
	// The ID of the connection attachment.
	ConnectAttachmentId string `pulumi:"connectAttachmentId"`
	// A Connect peer core network address.
	CoreNetworkAddress *string `pulumi:"coreNetworkAddress"`
	// The inside IP addresses used for BGP peering.
	InsideCidrBlocks []string `pulumi:"insideCidrBlocks"`
	// The Connect peer address.
	//
	// The following arguments are optional:
	PeerAddress string `pulumi:"peerAddress"`
	// Key-value tags for the attachment. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a ConnectPeer resource.
type ConnectPeerArgs struct {
	// The Connect peer BGP options.
	BgpOptions pulumix.Input[*ConnectPeerBgpOptionsArgs]
	// The ID of the connection attachment.
	ConnectAttachmentId pulumix.Input[string]
	// A Connect peer core network address.
	CoreNetworkAddress pulumix.Input[*string]
	// The inside IP addresses used for BGP peering.
	InsideCidrBlocks pulumix.Input[[]string]
	// The Connect peer address.
	//
	// The following arguments are optional:
	PeerAddress pulumix.Input[string]
	// Key-value tags for the attachment. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (ConnectPeerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*connectPeerArgs)(nil)).Elem()
}

type ConnectPeerOutput struct{ *pulumi.OutputState }

func (ConnectPeerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectPeer)(nil)).Elem()
}

func (o ConnectPeerOutput) ToConnectPeerOutput() ConnectPeerOutput {
	return o
}

func (o ConnectPeerOutput) ToConnectPeerOutputWithContext(ctx context.Context) ConnectPeerOutput {
	return o
}

func (o ConnectPeerOutput) ToOutput(ctx context.Context) pulumix.Output[ConnectPeer] {
	return pulumix.Output[ConnectPeer]{
		OutputState: o.OutputState,
	}
}

// The ARN of the attachment.
func (o ConnectPeerOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[ConnectPeer](o, func(v ConnectPeer) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The Connect peer BGP options.
func (o ConnectPeerOutput) BgpOptions() pulumix.GPtrOutput[ConnectPeerBgpOptions, ConnectPeerBgpOptionsOutput] {
	value := pulumix.Apply[ConnectPeer](o, func(v ConnectPeer) pulumix.GPtrOutput[ConnectPeerBgpOptions, ConnectPeerBgpOptionsOutput] {
		return v.BgpOptions
	})
	unwrapped := pulumix.Flatten[*ConnectPeerBgpOptions, pulumix.GPtrOutput[ConnectPeerBgpOptions, ConnectPeerBgpOptionsOutput]](value)
	return pulumix.GPtrOutput[ConnectPeerBgpOptions, ConnectPeerBgpOptionsOutput]{OutputState: unwrapped.OutputState}
}

// The configuration of the Connect peer.
func (o ConnectPeerOutput) Configurations() pulumix.GArrayOutput[ConnectPeerConfiguration, ConnectPeerConfigurationOutput] {
	value := pulumix.Apply[ConnectPeer](o, func(v ConnectPeer) pulumix.GArrayOutput[ConnectPeerConfiguration, ConnectPeerConfigurationOutput] {
		return v.Configurations
	})
	unwrapped := pulumix.Flatten[[]ConnectPeerConfiguration, pulumix.GArrayOutput[ConnectPeerConfiguration, ConnectPeerConfigurationOutput]](value)
	return pulumix.GArrayOutput[ConnectPeerConfiguration, ConnectPeerConfigurationOutput]{OutputState: unwrapped.OutputState}
}

// The ID of the connection attachment.
func (o ConnectPeerOutput) ConnectAttachmentId() pulumix.Output[string] {
	value := pulumix.Apply[ConnectPeer](o, func(v ConnectPeer) pulumix.Output[string] { return v.ConnectAttachmentId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func (o ConnectPeerOutput) ConnectPeerId() pulumix.Output[string] {
	value := pulumix.Apply[ConnectPeer](o, func(v ConnectPeer) pulumix.Output[string] { return v.ConnectPeerId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A Connect peer core network address.
func (o ConnectPeerOutput) CoreNetworkAddress() pulumix.Output[*string] {
	value := pulumix.Apply[ConnectPeer](o, func(v ConnectPeer) pulumix.Output[*string] { return v.CoreNetworkAddress })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The ID of a core network.
func (o ConnectPeerOutput) CoreNetworkId() pulumix.Output[string] {
	value := pulumix.Apply[ConnectPeer](o, func(v ConnectPeer) pulumix.Output[string] { return v.CoreNetworkId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func (o ConnectPeerOutput) CreatedAt() pulumix.Output[string] {
	value := pulumix.Apply[ConnectPeer](o, func(v ConnectPeer) pulumix.Output[string] { return v.CreatedAt })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The Region where the peer is located.
func (o ConnectPeerOutput) EdgeLocation() pulumix.Output[string] {
	value := pulumix.Apply[ConnectPeer](o, func(v ConnectPeer) pulumix.Output[string] { return v.EdgeLocation })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The inside IP addresses used for BGP peering.
func (o ConnectPeerOutput) InsideCidrBlocks() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[ConnectPeer](o, func(v ConnectPeer) pulumix.ArrayOutput[string] { return v.InsideCidrBlocks })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// The Connect peer address.
//
// The following arguments are optional:
func (o ConnectPeerOutput) PeerAddress() pulumix.Output[string] {
	value := pulumix.Apply[ConnectPeer](o, func(v ConnectPeer) pulumix.Output[string] { return v.PeerAddress })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The state of the Connect peer.
func (o ConnectPeerOutput) State() pulumix.Output[string] {
	value := pulumix.Apply[ConnectPeer](o, func(v ConnectPeer) pulumix.Output[string] { return v.State })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Key-value tags for the attachment. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o ConnectPeerOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[ConnectPeer](o, func(v ConnectPeer) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o ConnectPeerOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[ConnectPeer](o, func(v ConnectPeer) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(ConnectPeerOutput{})
}
