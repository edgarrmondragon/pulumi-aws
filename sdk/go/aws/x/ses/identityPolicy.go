// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ses

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manages a SES Identity Policy. More information about SES Sending Authorization Policies can be found in the [SES Developer Guide](https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization-policies.html).
type IdentityPolicy struct {
	pulumi.CustomResourceState

	// Name or Amazon Resource Name (ARN) of the SES Identity.
	Identity pulumix.Output[string] `pulumi:"identity"`
	// Name of the policy.
	Name pulumix.Output[string] `pulumi:"name"`
	// JSON string of the policy.
	Policy pulumix.Output[string] `pulumi:"policy"`
}

// NewIdentityPolicy registers a new resource with the given unique name, arguments, and options.
func NewIdentityPolicy(ctx *pulumi.Context,
	name string, args *IdentityPolicyArgs, opts ...pulumi.ResourceOption) (*IdentityPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Identity == nil {
		return nil, errors.New("invalid value for required argument 'Identity'")
	}
	if args.Policy == nil {
		return nil, errors.New("invalid value for required argument 'Policy'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource IdentityPolicy
	err := ctx.RegisterResource("aws:ses/identityPolicy:IdentityPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIdentityPolicy gets an existing IdentityPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIdentityPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IdentityPolicyState, opts ...pulumi.ResourceOption) (*IdentityPolicy, error) {
	var resource IdentityPolicy
	err := ctx.ReadResource("aws:ses/identityPolicy:IdentityPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IdentityPolicy resources.
type identityPolicyState struct {
	// Name or Amazon Resource Name (ARN) of the SES Identity.
	Identity *string `pulumi:"identity"`
	// Name of the policy.
	Name *string `pulumi:"name"`
	// JSON string of the policy.
	Policy *string `pulumi:"policy"`
}

type IdentityPolicyState struct {
	// Name or Amazon Resource Name (ARN) of the SES Identity.
	Identity pulumix.Input[*string]
	// Name of the policy.
	Name pulumix.Input[*string]
	// JSON string of the policy.
	Policy pulumix.Input[*string]
}

func (IdentityPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*identityPolicyState)(nil)).Elem()
}

type identityPolicyArgs struct {
	// Name or Amazon Resource Name (ARN) of the SES Identity.
	Identity string `pulumi:"identity"`
	// Name of the policy.
	Name *string `pulumi:"name"`
	// JSON string of the policy.
	Policy string `pulumi:"policy"`
}

// The set of arguments for constructing a IdentityPolicy resource.
type IdentityPolicyArgs struct {
	// Name or Amazon Resource Name (ARN) of the SES Identity.
	Identity pulumix.Input[string]
	// Name of the policy.
	Name pulumix.Input[*string]
	// JSON string of the policy.
	Policy pulumix.Input[string]
}

func (IdentityPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*identityPolicyArgs)(nil)).Elem()
}

type IdentityPolicyOutput struct{ *pulumi.OutputState }

func (IdentityPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityPolicy)(nil)).Elem()
}

func (o IdentityPolicyOutput) ToIdentityPolicyOutput() IdentityPolicyOutput {
	return o
}

func (o IdentityPolicyOutput) ToIdentityPolicyOutputWithContext(ctx context.Context) IdentityPolicyOutput {
	return o
}

func (o IdentityPolicyOutput) ToOutput(ctx context.Context) pulumix.Output[IdentityPolicy] {
	return pulumix.Output[IdentityPolicy]{
		OutputState: o.OutputState,
	}
}

// Name or Amazon Resource Name (ARN) of the SES Identity.
func (o IdentityPolicyOutput) Identity() pulumix.Output[string] {
	value := pulumix.Apply[IdentityPolicy](o, func(v IdentityPolicy) pulumix.Output[string] { return v.Identity })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Name of the policy.
func (o IdentityPolicyOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[IdentityPolicy](o, func(v IdentityPolicy) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// JSON string of the policy.
func (o IdentityPolicyOutput) Policy() pulumix.Output[string] {
	value := pulumix.Apply[IdentityPolicy](o, func(v IdentityPolicy) pulumix.Output[string] { return v.Policy })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(IdentityPolicyOutput{})
}
