// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package amp

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manages an Amazon Managed Service for Prometheus (AMP) Alert Manager Definition
type AlertManagerDefinition struct {
	pulumi.CustomResourceState

	// the alert manager definition that you want to be applied. See more [in AWS Docs](https://docs.aws.amazon.com/prometheus/latest/userguide/AMP-alert-manager.html).
	Definition pulumix.Output[string] `pulumi:"definition"`
	// ID of the prometheus workspace the alert manager definition should be linked to
	WorkspaceId pulumix.Output[string] `pulumi:"workspaceId"`
}

// NewAlertManagerDefinition registers a new resource with the given unique name, arguments, and options.
func NewAlertManagerDefinition(ctx *pulumi.Context,
	name string, args *AlertManagerDefinitionArgs, opts ...pulumi.ResourceOption) (*AlertManagerDefinition, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Definition == nil {
		return nil, errors.New("invalid value for required argument 'Definition'")
	}
	if args.WorkspaceId == nil {
		return nil, errors.New("invalid value for required argument 'WorkspaceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AlertManagerDefinition
	err := ctx.RegisterResource("aws:amp/alertManagerDefinition:AlertManagerDefinition", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAlertManagerDefinition gets an existing AlertManagerDefinition resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAlertManagerDefinition(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AlertManagerDefinitionState, opts ...pulumi.ResourceOption) (*AlertManagerDefinition, error) {
	var resource AlertManagerDefinition
	err := ctx.ReadResource("aws:amp/alertManagerDefinition:AlertManagerDefinition", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AlertManagerDefinition resources.
type alertManagerDefinitionState struct {
	// the alert manager definition that you want to be applied. See more [in AWS Docs](https://docs.aws.amazon.com/prometheus/latest/userguide/AMP-alert-manager.html).
	Definition *string `pulumi:"definition"`
	// ID of the prometheus workspace the alert manager definition should be linked to
	WorkspaceId *string `pulumi:"workspaceId"`
}

type AlertManagerDefinitionState struct {
	// the alert manager definition that you want to be applied. See more [in AWS Docs](https://docs.aws.amazon.com/prometheus/latest/userguide/AMP-alert-manager.html).
	Definition pulumix.Input[*string]
	// ID of the prometheus workspace the alert manager definition should be linked to
	WorkspaceId pulumix.Input[*string]
}

func (AlertManagerDefinitionState) ElementType() reflect.Type {
	return reflect.TypeOf((*alertManagerDefinitionState)(nil)).Elem()
}

type alertManagerDefinitionArgs struct {
	// the alert manager definition that you want to be applied. See more [in AWS Docs](https://docs.aws.amazon.com/prometheus/latest/userguide/AMP-alert-manager.html).
	Definition string `pulumi:"definition"`
	// ID of the prometheus workspace the alert manager definition should be linked to
	WorkspaceId string `pulumi:"workspaceId"`
}

// The set of arguments for constructing a AlertManagerDefinition resource.
type AlertManagerDefinitionArgs struct {
	// the alert manager definition that you want to be applied. See more [in AWS Docs](https://docs.aws.amazon.com/prometheus/latest/userguide/AMP-alert-manager.html).
	Definition pulumix.Input[string]
	// ID of the prometheus workspace the alert manager definition should be linked to
	WorkspaceId pulumix.Input[string]
}

func (AlertManagerDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*alertManagerDefinitionArgs)(nil)).Elem()
}

type AlertManagerDefinitionOutput struct{ *pulumi.OutputState }

func (AlertManagerDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertManagerDefinition)(nil)).Elem()
}

func (o AlertManagerDefinitionOutput) ToAlertManagerDefinitionOutput() AlertManagerDefinitionOutput {
	return o
}

func (o AlertManagerDefinitionOutput) ToAlertManagerDefinitionOutputWithContext(ctx context.Context) AlertManagerDefinitionOutput {
	return o
}

func (o AlertManagerDefinitionOutput) ToOutput(ctx context.Context) pulumix.Output[AlertManagerDefinition] {
	return pulumix.Output[AlertManagerDefinition]{
		OutputState: o.OutputState,
	}
}

// the alert manager definition that you want to be applied. See more [in AWS Docs](https://docs.aws.amazon.com/prometheus/latest/userguide/AMP-alert-manager.html).
func (o AlertManagerDefinitionOutput) Definition() pulumix.Output[string] {
	value := pulumix.Apply[AlertManagerDefinition](o, func(v AlertManagerDefinition) pulumix.Output[string] { return v.Definition })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// ID of the prometheus workspace the alert manager definition should be linked to
func (o AlertManagerDefinitionOutput) WorkspaceId() pulumix.Output[string] {
	value := pulumix.Apply[AlertManagerDefinition](o, func(v AlertManagerDefinition) pulumix.Output[string] { return v.WorkspaceId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(AlertManagerDefinitionOutput{})
}
