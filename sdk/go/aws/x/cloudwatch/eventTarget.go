// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudwatch

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an EventBridge Target resource.
//
// > **Note:** EventBridge was formerly known as CloudWatch Events. The functionality is identical.
type EventTarget struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) of the target.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// Parameters used when you are using the rule to invoke an Amazon Batch Job. Documented below. A maximum of 1 are allowed.
	BatchTarget pulumix.GPtrOutput[EventTargetBatchTarget, EventTargetBatchTargetOutput] `pulumi:"batchTarget"`
	// Parameters used when you are providing a dead letter config. Documented below. A maximum of 1 are allowed.
	DeadLetterConfig pulumix.GPtrOutput[EventTargetDeadLetterConfig, EventTargetDeadLetterConfigOutput] `pulumi:"deadLetterConfig"`
	// Parameters used when you are using the rule to invoke Amazon ECS Task. Documented below. A maximum of 1 are allowed.
	EcsTarget pulumix.GPtrOutput[EventTargetEcsTarget, EventTargetEcsTargetOutput] `pulumi:"ecsTarget"`
	// The name or ARN of the event bus to associate with the rule.
	// If you omit this, the `default` event bus is used.
	EventBusName pulumix.Output[*string] `pulumi:"eventBusName"`
	// Parameters used when you are using the rule to invoke an API Gateway REST endpoint. Documented below. A maximum of 1 is allowed.
	HttpTarget pulumix.GPtrOutput[EventTargetHttpTarget, EventTargetHttpTargetOutput] `pulumi:"httpTarget"`
	// Valid JSON text passed to the target. Conflicts with `inputPath` and `inputTransformer`.
	Input pulumix.Output[*string] `pulumi:"input"`
	// The value of the [JSONPath](http://goessner.net/articles/JsonPath/) that is used for extracting part of the matched event when passing it to the target. Conflicts with `input` and `inputTransformer`.
	InputPath pulumix.Output[*string] `pulumi:"inputPath"`
	// Parameters used when you are providing a custom input to a target based on certain event data. Conflicts with `input` and `inputPath`.
	InputTransformer pulumix.GPtrOutput[EventTargetInputTransformer, EventTargetInputTransformerOutput] `pulumi:"inputTransformer"`
	// Parameters used when you are using the rule to invoke an Amazon Kinesis Stream. Documented below. A maximum of 1 are allowed.
	KinesisTarget pulumix.GPtrOutput[EventTargetKinesisTarget, EventTargetKinesisTargetOutput] `pulumi:"kinesisTarget"`
	// Parameters used when you are using the rule to invoke an Amazon Redshift Statement. Documented below. A maximum of 1 are allowed.
	RedshiftTarget pulumix.GPtrOutput[EventTargetRedshiftTarget, EventTargetRedshiftTargetOutput] `pulumi:"redshiftTarget"`
	// Parameters used when you are providing retry policies. Documented below. A maximum of 1 are allowed.
	RetryPolicy pulumix.GPtrOutput[EventTargetRetryPolicy, EventTargetRetryPolicyOutput] `pulumi:"retryPolicy"`
	// The Amazon Resource Name (ARN) of the IAM role to be used for this target when the rule is triggered. Required if `ecsTarget` is used or target in `arn` is EC2 instance, Kinesis data stream, Step Functions state machine, or Event Bus in different account or region.
	RoleArn pulumix.Output[*string] `pulumi:"roleArn"`
	// The name of the rule you want to add targets to.
	//
	// The following arguments are optional:
	Rule pulumix.Output[string] `pulumi:"rule"`
	// Parameters used when you are using the rule to invoke Amazon EC2 Run Command. Documented below. A maximum of 5 are allowed.
	RunCommandTargets pulumix.GArrayOutput[EventTargetRunCommandTarget, EventTargetRunCommandTargetOutput] `pulumi:"runCommandTargets"`
	// Parameters used when you are using the rule to invoke an Amazon SageMaker Pipeline. Documented below. A maximum of 1 are allowed.
	SagemakerPipelineTarget pulumix.GPtrOutput[EventTargetSagemakerPipelineTarget, EventTargetSagemakerPipelineTargetOutput] `pulumi:"sagemakerPipelineTarget"`
	// Parameters used when you are using the rule to invoke an Amazon SQS Queue. Documented below. A maximum of 1 are allowed.
	SqsTarget pulumix.GPtrOutput[EventTargetSqsTarget, EventTargetSqsTargetOutput] `pulumi:"sqsTarget"`
	// The unique target assignment ID. If missing, will generate a random, unique id.
	TargetId pulumix.Output[string] `pulumi:"targetId"`
}

// NewEventTarget registers a new resource with the given unique name, arguments, and options.
func NewEventTarget(ctx *pulumi.Context,
	name string, args *EventTargetArgs, opts ...pulumi.ResourceOption) (*EventTarget, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Arn == nil {
		return nil, errors.New("invalid value for required argument 'Arn'")
	}
	if args.Rule == nil {
		return nil, errors.New("invalid value for required argument 'Rule'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource EventTarget
	err := ctx.RegisterResource("aws:cloudwatch/eventTarget:EventTarget", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEventTarget gets an existing EventTarget resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEventTarget(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EventTargetState, opts ...pulumi.ResourceOption) (*EventTarget, error) {
	var resource EventTarget
	err := ctx.ReadResource("aws:cloudwatch/eventTarget:EventTarget", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EventTarget resources.
type eventTargetState struct {
	// The Amazon Resource Name (ARN) of the target.
	Arn *string `pulumi:"arn"`
	// Parameters used when you are using the rule to invoke an Amazon Batch Job. Documented below. A maximum of 1 are allowed.
	BatchTarget *EventTargetBatchTarget `pulumi:"batchTarget"`
	// Parameters used when you are providing a dead letter config. Documented below. A maximum of 1 are allowed.
	DeadLetterConfig *EventTargetDeadLetterConfig `pulumi:"deadLetterConfig"`
	// Parameters used when you are using the rule to invoke Amazon ECS Task. Documented below. A maximum of 1 are allowed.
	EcsTarget *EventTargetEcsTarget `pulumi:"ecsTarget"`
	// The name or ARN of the event bus to associate with the rule.
	// If you omit this, the `default` event bus is used.
	EventBusName *string `pulumi:"eventBusName"`
	// Parameters used when you are using the rule to invoke an API Gateway REST endpoint. Documented below. A maximum of 1 is allowed.
	HttpTarget *EventTargetHttpTarget `pulumi:"httpTarget"`
	// Valid JSON text passed to the target. Conflicts with `inputPath` and `inputTransformer`.
	Input *string `pulumi:"input"`
	// The value of the [JSONPath](http://goessner.net/articles/JsonPath/) that is used for extracting part of the matched event when passing it to the target. Conflicts with `input` and `inputTransformer`.
	InputPath *string `pulumi:"inputPath"`
	// Parameters used when you are providing a custom input to a target based on certain event data. Conflicts with `input` and `inputPath`.
	InputTransformer *EventTargetInputTransformer `pulumi:"inputTransformer"`
	// Parameters used when you are using the rule to invoke an Amazon Kinesis Stream. Documented below. A maximum of 1 are allowed.
	KinesisTarget *EventTargetKinesisTarget `pulumi:"kinesisTarget"`
	// Parameters used when you are using the rule to invoke an Amazon Redshift Statement. Documented below. A maximum of 1 are allowed.
	RedshiftTarget *EventTargetRedshiftTarget `pulumi:"redshiftTarget"`
	// Parameters used when you are providing retry policies. Documented below. A maximum of 1 are allowed.
	RetryPolicy *EventTargetRetryPolicy `pulumi:"retryPolicy"`
	// The Amazon Resource Name (ARN) of the IAM role to be used for this target when the rule is triggered. Required if `ecsTarget` is used or target in `arn` is EC2 instance, Kinesis data stream, Step Functions state machine, or Event Bus in different account or region.
	RoleArn *string `pulumi:"roleArn"`
	// The name of the rule you want to add targets to.
	//
	// The following arguments are optional:
	Rule *string `pulumi:"rule"`
	// Parameters used when you are using the rule to invoke Amazon EC2 Run Command. Documented below. A maximum of 5 are allowed.
	RunCommandTargets []EventTargetRunCommandTarget `pulumi:"runCommandTargets"`
	// Parameters used when you are using the rule to invoke an Amazon SageMaker Pipeline. Documented below. A maximum of 1 are allowed.
	SagemakerPipelineTarget *EventTargetSagemakerPipelineTarget `pulumi:"sagemakerPipelineTarget"`
	// Parameters used when you are using the rule to invoke an Amazon SQS Queue. Documented below. A maximum of 1 are allowed.
	SqsTarget *EventTargetSqsTarget `pulumi:"sqsTarget"`
	// The unique target assignment ID. If missing, will generate a random, unique id.
	TargetId *string `pulumi:"targetId"`
}

type EventTargetState struct {
	// The Amazon Resource Name (ARN) of the target.
	Arn pulumix.Input[*string]
	// Parameters used when you are using the rule to invoke an Amazon Batch Job. Documented below. A maximum of 1 are allowed.
	BatchTarget pulumix.Input[*EventTargetBatchTargetArgs]
	// Parameters used when you are providing a dead letter config. Documented below. A maximum of 1 are allowed.
	DeadLetterConfig pulumix.Input[*EventTargetDeadLetterConfigArgs]
	// Parameters used when you are using the rule to invoke Amazon ECS Task. Documented below. A maximum of 1 are allowed.
	EcsTarget pulumix.Input[*EventTargetEcsTargetArgs]
	// The name or ARN of the event bus to associate with the rule.
	// If you omit this, the `default` event bus is used.
	EventBusName pulumix.Input[*string]
	// Parameters used when you are using the rule to invoke an API Gateway REST endpoint. Documented below. A maximum of 1 is allowed.
	HttpTarget pulumix.Input[*EventTargetHttpTargetArgs]
	// Valid JSON text passed to the target. Conflicts with `inputPath` and `inputTransformer`.
	Input pulumix.Input[*string]
	// The value of the [JSONPath](http://goessner.net/articles/JsonPath/) that is used for extracting part of the matched event when passing it to the target. Conflicts with `input` and `inputTransformer`.
	InputPath pulumix.Input[*string]
	// Parameters used when you are providing a custom input to a target based on certain event data. Conflicts with `input` and `inputPath`.
	InputTransformer pulumix.Input[*EventTargetInputTransformerArgs]
	// Parameters used when you are using the rule to invoke an Amazon Kinesis Stream. Documented below. A maximum of 1 are allowed.
	KinesisTarget pulumix.Input[*EventTargetKinesisTargetArgs]
	// Parameters used when you are using the rule to invoke an Amazon Redshift Statement. Documented below. A maximum of 1 are allowed.
	RedshiftTarget pulumix.Input[*EventTargetRedshiftTargetArgs]
	// Parameters used when you are providing retry policies. Documented below. A maximum of 1 are allowed.
	RetryPolicy pulumix.Input[*EventTargetRetryPolicyArgs]
	// The Amazon Resource Name (ARN) of the IAM role to be used for this target when the rule is triggered. Required if `ecsTarget` is used or target in `arn` is EC2 instance, Kinesis data stream, Step Functions state machine, or Event Bus in different account or region.
	RoleArn pulumix.Input[*string]
	// The name of the rule you want to add targets to.
	//
	// The following arguments are optional:
	Rule pulumix.Input[*string]
	// Parameters used when you are using the rule to invoke Amazon EC2 Run Command. Documented below. A maximum of 5 are allowed.
	RunCommandTargets pulumix.Input[[]*EventTargetRunCommandTargetArgs]
	// Parameters used when you are using the rule to invoke an Amazon SageMaker Pipeline. Documented below. A maximum of 1 are allowed.
	SagemakerPipelineTarget pulumix.Input[*EventTargetSagemakerPipelineTargetArgs]
	// Parameters used when you are using the rule to invoke an Amazon SQS Queue. Documented below. A maximum of 1 are allowed.
	SqsTarget pulumix.Input[*EventTargetSqsTargetArgs]
	// The unique target assignment ID. If missing, will generate a random, unique id.
	TargetId pulumix.Input[*string]
}

func (EventTargetState) ElementType() reflect.Type {
	return reflect.TypeOf((*eventTargetState)(nil)).Elem()
}

type eventTargetArgs struct {
	// The Amazon Resource Name (ARN) of the target.
	Arn string `pulumi:"arn"`
	// Parameters used when you are using the rule to invoke an Amazon Batch Job. Documented below. A maximum of 1 are allowed.
	BatchTarget *EventTargetBatchTarget `pulumi:"batchTarget"`
	// Parameters used when you are providing a dead letter config. Documented below. A maximum of 1 are allowed.
	DeadLetterConfig *EventTargetDeadLetterConfig `pulumi:"deadLetterConfig"`
	// Parameters used when you are using the rule to invoke Amazon ECS Task. Documented below. A maximum of 1 are allowed.
	EcsTarget *EventTargetEcsTarget `pulumi:"ecsTarget"`
	// The name or ARN of the event bus to associate with the rule.
	// If you omit this, the `default` event bus is used.
	EventBusName *string `pulumi:"eventBusName"`
	// Parameters used when you are using the rule to invoke an API Gateway REST endpoint. Documented below. A maximum of 1 is allowed.
	HttpTarget *EventTargetHttpTarget `pulumi:"httpTarget"`
	// Valid JSON text passed to the target. Conflicts with `inputPath` and `inputTransformer`.
	Input *string `pulumi:"input"`
	// The value of the [JSONPath](http://goessner.net/articles/JsonPath/) that is used for extracting part of the matched event when passing it to the target. Conflicts with `input` and `inputTransformer`.
	InputPath *string `pulumi:"inputPath"`
	// Parameters used when you are providing a custom input to a target based on certain event data. Conflicts with `input` and `inputPath`.
	InputTransformer *EventTargetInputTransformer `pulumi:"inputTransformer"`
	// Parameters used when you are using the rule to invoke an Amazon Kinesis Stream. Documented below. A maximum of 1 are allowed.
	KinesisTarget *EventTargetKinesisTarget `pulumi:"kinesisTarget"`
	// Parameters used when you are using the rule to invoke an Amazon Redshift Statement. Documented below. A maximum of 1 are allowed.
	RedshiftTarget *EventTargetRedshiftTarget `pulumi:"redshiftTarget"`
	// Parameters used when you are providing retry policies. Documented below. A maximum of 1 are allowed.
	RetryPolicy *EventTargetRetryPolicy `pulumi:"retryPolicy"`
	// The Amazon Resource Name (ARN) of the IAM role to be used for this target when the rule is triggered. Required if `ecsTarget` is used or target in `arn` is EC2 instance, Kinesis data stream, Step Functions state machine, or Event Bus in different account or region.
	RoleArn *string `pulumi:"roleArn"`
	// The name of the rule you want to add targets to.
	//
	// The following arguments are optional:
	Rule string `pulumi:"rule"`
	// Parameters used when you are using the rule to invoke Amazon EC2 Run Command. Documented below. A maximum of 5 are allowed.
	RunCommandTargets []EventTargetRunCommandTarget `pulumi:"runCommandTargets"`
	// Parameters used when you are using the rule to invoke an Amazon SageMaker Pipeline. Documented below. A maximum of 1 are allowed.
	SagemakerPipelineTarget *EventTargetSagemakerPipelineTarget `pulumi:"sagemakerPipelineTarget"`
	// Parameters used when you are using the rule to invoke an Amazon SQS Queue. Documented below. A maximum of 1 are allowed.
	SqsTarget *EventTargetSqsTarget `pulumi:"sqsTarget"`
	// The unique target assignment ID. If missing, will generate a random, unique id.
	TargetId *string `pulumi:"targetId"`
}

// The set of arguments for constructing a EventTarget resource.
type EventTargetArgs struct {
	// The Amazon Resource Name (ARN) of the target.
	Arn pulumix.Input[string]
	// Parameters used when you are using the rule to invoke an Amazon Batch Job. Documented below. A maximum of 1 are allowed.
	BatchTarget pulumix.Input[*EventTargetBatchTargetArgs]
	// Parameters used when you are providing a dead letter config. Documented below. A maximum of 1 are allowed.
	DeadLetterConfig pulumix.Input[*EventTargetDeadLetterConfigArgs]
	// Parameters used when you are using the rule to invoke Amazon ECS Task. Documented below. A maximum of 1 are allowed.
	EcsTarget pulumix.Input[*EventTargetEcsTargetArgs]
	// The name or ARN of the event bus to associate with the rule.
	// If you omit this, the `default` event bus is used.
	EventBusName pulumix.Input[*string]
	// Parameters used when you are using the rule to invoke an API Gateway REST endpoint. Documented below. A maximum of 1 is allowed.
	HttpTarget pulumix.Input[*EventTargetHttpTargetArgs]
	// Valid JSON text passed to the target. Conflicts with `inputPath` and `inputTransformer`.
	Input pulumix.Input[*string]
	// The value of the [JSONPath](http://goessner.net/articles/JsonPath/) that is used for extracting part of the matched event when passing it to the target. Conflicts with `input` and `inputTransformer`.
	InputPath pulumix.Input[*string]
	// Parameters used when you are providing a custom input to a target based on certain event data. Conflicts with `input` and `inputPath`.
	InputTransformer pulumix.Input[*EventTargetInputTransformerArgs]
	// Parameters used when you are using the rule to invoke an Amazon Kinesis Stream. Documented below. A maximum of 1 are allowed.
	KinesisTarget pulumix.Input[*EventTargetKinesisTargetArgs]
	// Parameters used when you are using the rule to invoke an Amazon Redshift Statement. Documented below. A maximum of 1 are allowed.
	RedshiftTarget pulumix.Input[*EventTargetRedshiftTargetArgs]
	// Parameters used when you are providing retry policies. Documented below. A maximum of 1 are allowed.
	RetryPolicy pulumix.Input[*EventTargetRetryPolicyArgs]
	// The Amazon Resource Name (ARN) of the IAM role to be used for this target when the rule is triggered. Required if `ecsTarget` is used or target in `arn` is EC2 instance, Kinesis data stream, Step Functions state machine, or Event Bus in different account or region.
	RoleArn pulumix.Input[*string]
	// The name of the rule you want to add targets to.
	//
	// The following arguments are optional:
	Rule pulumix.Input[string]
	// Parameters used when you are using the rule to invoke Amazon EC2 Run Command. Documented below. A maximum of 5 are allowed.
	RunCommandTargets pulumix.Input[[]*EventTargetRunCommandTargetArgs]
	// Parameters used when you are using the rule to invoke an Amazon SageMaker Pipeline. Documented below. A maximum of 1 are allowed.
	SagemakerPipelineTarget pulumix.Input[*EventTargetSagemakerPipelineTargetArgs]
	// Parameters used when you are using the rule to invoke an Amazon SQS Queue. Documented below. A maximum of 1 are allowed.
	SqsTarget pulumix.Input[*EventTargetSqsTargetArgs]
	// The unique target assignment ID. If missing, will generate a random, unique id.
	TargetId pulumix.Input[*string]
}

func (EventTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*eventTargetArgs)(nil)).Elem()
}

type EventTargetOutput struct{ *pulumi.OutputState }

func (EventTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventTarget)(nil)).Elem()
}

func (o EventTargetOutput) ToEventTargetOutput() EventTargetOutput {
	return o
}

func (o EventTargetOutput) ToEventTargetOutputWithContext(ctx context.Context) EventTargetOutput {
	return o
}

func (o EventTargetOutput) ToOutput(ctx context.Context) pulumix.Output[EventTarget] {
	return pulumix.Output[EventTarget]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) of the target.
func (o EventTargetOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[EventTarget](o, func(v EventTarget) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Parameters used when you are using the rule to invoke an Amazon Batch Job. Documented below. A maximum of 1 are allowed.
func (o EventTargetOutput) BatchTarget() pulumix.GPtrOutput[EventTargetBatchTarget, EventTargetBatchTargetOutput] {
	value := pulumix.Apply[EventTarget](o, func(v EventTarget) pulumix.GPtrOutput[EventTargetBatchTarget, EventTargetBatchTargetOutput] {
		return v.BatchTarget
	})
	unwrapped := pulumix.Flatten[*EventTargetBatchTarget, pulumix.GPtrOutput[EventTargetBatchTarget, EventTargetBatchTargetOutput]](value)
	return pulumix.GPtrOutput[EventTargetBatchTarget, EventTargetBatchTargetOutput]{OutputState: unwrapped.OutputState}
}

// Parameters used when you are providing a dead letter config. Documented below. A maximum of 1 are allowed.
func (o EventTargetOutput) DeadLetterConfig() pulumix.GPtrOutput[EventTargetDeadLetterConfig, EventTargetDeadLetterConfigOutput] {
	value := pulumix.Apply[EventTarget](o, func(v EventTarget) pulumix.GPtrOutput[EventTargetDeadLetterConfig, EventTargetDeadLetterConfigOutput] {
		return v.DeadLetterConfig
	})
	unwrapped := pulumix.Flatten[*EventTargetDeadLetterConfig, pulumix.GPtrOutput[EventTargetDeadLetterConfig, EventTargetDeadLetterConfigOutput]](value)
	return pulumix.GPtrOutput[EventTargetDeadLetterConfig, EventTargetDeadLetterConfigOutput]{OutputState: unwrapped.OutputState}
}

// Parameters used when you are using the rule to invoke Amazon ECS Task. Documented below. A maximum of 1 are allowed.
func (o EventTargetOutput) EcsTarget() pulumix.GPtrOutput[EventTargetEcsTarget, EventTargetEcsTargetOutput] {
	value := pulumix.Apply[EventTarget](o, func(v EventTarget) pulumix.GPtrOutput[EventTargetEcsTarget, EventTargetEcsTargetOutput] {
		return v.EcsTarget
	})
	unwrapped := pulumix.Flatten[*EventTargetEcsTarget, pulumix.GPtrOutput[EventTargetEcsTarget, EventTargetEcsTargetOutput]](value)
	return pulumix.GPtrOutput[EventTargetEcsTarget, EventTargetEcsTargetOutput]{OutputState: unwrapped.OutputState}
}

// The name or ARN of the event bus to associate with the rule.
// If you omit this, the `default` event bus is used.
func (o EventTargetOutput) EventBusName() pulumix.Output[*string] {
	value := pulumix.Apply[EventTarget](o, func(v EventTarget) pulumix.Output[*string] { return v.EventBusName })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Parameters used when you are using the rule to invoke an API Gateway REST endpoint. Documented below. A maximum of 1 is allowed.
func (o EventTargetOutput) HttpTarget() pulumix.GPtrOutput[EventTargetHttpTarget, EventTargetHttpTargetOutput] {
	value := pulumix.Apply[EventTarget](o, func(v EventTarget) pulumix.GPtrOutput[EventTargetHttpTarget, EventTargetHttpTargetOutput] {
		return v.HttpTarget
	})
	unwrapped := pulumix.Flatten[*EventTargetHttpTarget, pulumix.GPtrOutput[EventTargetHttpTarget, EventTargetHttpTargetOutput]](value)
	return pulumix.GPtrOutput[EventTargetHttpTarget, EventTargetHttpTargetOutput]{OutputState: unwrapped.OutputState}
}

// Valid JSON text passed to the target. Conflicts with `inputPath` and `inputTransformer`.
func (o EventTargetOutput) Input() pulumix.Output[*string] {
	value := pulumix.Apply[EventTarget](o, func(v EventTarget) pulumix.Output[*string] { return v.Input })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The value of the [JSONPath](http://goessner.net/articles/JsonPath/) that is used for extracting part of the matched event when passing it to the target. Conflicts with `input` and `inputTransformer`.
func (o EventTargetOutput) InputPath() pulumix.Output[*string] {
	value := pulumix.Apply[EventTarget](o, func(v EventTarget) pulumix.Output[*string] { return v.InputPath })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Parameters used when you are providing a custom input to a target based on certain event data. Conflicts with `input` and `inputPath`.
func (o EventTargetOutput) InputTransformer() pulumix.GPtrOutput[EventTargetInputTransformer, EventTargetInputTransformerOutput] {
	value := pulumix.Apply[EventTarget](o, func(v EventTarget) pulumix.GPtrOutput[EventTargetInputTransformer, EventTargetInputTransformerOutput] {
		return v.InputTransformer
	})
	unwrapped := pulumix.Flatten[*EventTargetInputTransformer, pulumix.GPtrOutput[EventTargetInputTransformer, EventTargetInputTransformerOutput]](value)
	return pulumix.GPtrOutput[EventTargetInputTransformer, EventTargetInputTransformerOutput]{OutputState: unwrapped.OutputState}
}

// Parameters used when you are using the rule to invoke an Amazon Kinesis Stream. Documented below. A maximum of 1 are allowed.
func (o EventTargetOutput) KinesisTarget() pulumix.GPtrOutput[EventTargetKinesisTarget, EventTargetKinesisTargetOutput] {
	value := pulumix.Apply[EventTarget](o, func(v EventTarget) pulumix.GPtrOutput[EventTargetKinesisTarget, EventTargetKinesisTargetOutput] {
		return v.KinesisTarget
	})
	unwrapped := pulumix.Flatten[*EventTargetKinesisTarget, pulumix.GPtrOutput[EventTargetKinesisTarget, EventTargetKinesisTargetOutput]](value)
	return pulumix.GPtrOutput[EventTargetKinesisTarget, EventTargetKinesisTargetOutput]{OutputState: unwrapped.OutputState}
}

// Parameters used when you are using the rule to invoke an Amazon Redshift Statement. Documented below. A maximum of 1 are allowed.
func (o EventTargetOutput) RedshiftTarget() pulumix.GPtrOutput[EventTargetRedshiftTarget, EventTargetRedshiftTargetOutput] {
	value := pulumix.Apply[EventTarget](o, func(v EventTarget) pulumix.GPtrOutput[EventTargetRedshiftTarget, EventTargetRedshiftTargetOutput] {
		return v.RedshiftTarget
	})
	unwrapped := pulumix.Flatten[*EventTargetRedshiftTarget, pulumix.GPtrOutput[EventTargetRedshiftTarget, EventTargetRedshiftTargetOutput]](value)
	return pulumix.GPtrOutput[EventTargetRedshiftTarget, EventTargetRedshiftTargetOutput]{OutputState: unwrapped.OutputState}
}

// Parameters used when you are providing retry policies. Documented below. A maximum of 1 are allowed.
func (o EventTargetOutput) RetryPolicy() pulumix.GPtrOutput[EventTargetRetryPolicy, EventTargetRetryPolicyOutput] {
	value := pulumix.Apply[EventTarget](o, func(v EventTarget) pulumix.GPtrOutput[EventTargetRetryPolicy, EventTargetRetryPolicyOutput] {
		return v.RetryPolicy
	})
	unwrapped := pulumix.Flatten[*EventTargetRetryPolicy, pulumix.GPtrOutput[EventTargetRetryPolicy, EventTargetRetryPolicyOutput]](value)
	return pulumix.GPtrOutput[EventTargetRetryPolicy, EventTargetRetryPolicyOutput]{OutputState: unwrapped.OutputState}
}

// The Amazon Resource Name (ARN) of the IAM role to be used for this target when the rule is triggered. Required if `ecsTarget` is used or target in `arn` is EC2 instance, Kinesis data stream, Step Functions state machine, or Event Bus in different account or region.
func (o EventTargetOutput) RoleArn() pulumix.Output[*string] {
	value := pulumix.Apply[EventTarget](o, func(v EventTarget) pulumix.Output[*string] { return v.RoleArn })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The name of the rule you want to add targets to.
//
// The following arguments are optional:
func (o EventTargetOutput) Rule() pulumix.Output[string] {
	value := pulumix.Apply[EventTarget](o, func(v EventTarget) pulumix.Output[string] { return v.Rule })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Parameters used when you are using the rule to invoke Amazon EC2 Run Command. Documented below. A maximum of 5 are allowed.
func (o EventTargetOutput) RunCommandTargets() pulumix.GArrayOutput[EventTargetRunCommandTarget, EventTargetRunCommandTargetOutput] {
	value := pulumix.Apply[EventTarget](o, func(v EventTarget) pulumix.GArrayOutput[EventTargetRunCommandTarget, EventTargetRunCommandTargetOutput] {
		return v.RunCommandTargets
	})
	unwrapped := pulumix.Flatten[[]EventTargetRunCommandTarget, pulumix.GArrayOutput[EventTargetRunCommandTarget, EventTargetRunCommandTargetOutput]](value)
	return pulumix.GArrayOutput[EventTargetRunCommandTarget, EventTargetRunCommandTargetOutput]{OutputState: unwrapped.OutputState}
}

// Parameters used when you are using the rule to invoke an Amazon SageMaker Pipeline. Documented below. A maximum of 1 are allowed.
func (o EventTargetOutput) SagemakerPipelineTarget() pulumix.GPtrOutput[EventTargetSagemakerPipelineTarget, EventTargetSagemakerPipelineTargetOutput] {
	value := pulumix.Apply[EventTarget](o, func(v EventTarget) pulumix.GPtrOutput[EventTargetSagemakerPipelineTarget, EventTargetSagemakerPipelineTargetOutput] {
		return v.SagemakerPipelineTarget
	})
	unwrapped := pulumix.Flatten[*EventTargetSagemakerPipelineTarget, pulumix.GPtrOutput[EventTargetSagemakerPipelineTarget, EventTargetSagemakerPipelineTargetOutput]](value)
	return pulumix.GPtrOutput[EventTargetSagemakerPipelineTarget, EventTargetSagemakerPipelineTargetOutput]{OutputState: unwrapped.OutputState}
}

// Parameters used when you are using the rule to invoke an Amazon SQS Queue. Documented below. A maximum of 1 are allowed.
func (o EventTargetOutput) SqsTarget() pulumix.GPtrOutput[EventTargetSqsTarget, EventTargetSqsTargetOutput] {
	value := pulumix.Apply[EventTarget](o, func(v EventTarget) pulumix.GPtrOutput[EventTargetSqsTarget, EventTargetSqsTargetOutput] {
		return v.SqsTarget
	})
	unwrapped := pulumix.Flatten[*EventTargetSqsTarget, pulumix.GPtrOutput[EventTargetSqsTarget, EventTargetSqsTargetOutput]](value)
	return pulumix.GPtrOutput[EventTargetSqsTarget, EventTargetSqsTargetOutput]{OutputState: unwrapped.OutputState}
}

// The unique target assignment ID. If missing, will generate a random, unique id.
func (o EventTargetOutput) TargetId() pulumix.Output[string] {
	value := pulumix.Apply[EventTarget](o, func(v EventTarget) pulumix.Output[string] { return v.TargetId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(EventTargetOutput{})
}
