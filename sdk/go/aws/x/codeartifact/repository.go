// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package codeartifact

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a CodeArtifact Repository Resource.
type Repository struct {
	pulumi.CustomResourceState

	// The account number of the AWS account that manages the repository.
	AdministratorAccount pulumix.Output[string] `pulumi:"administratorAccount"`
	// The ARN of the repository.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The description of the repository.
	Description pulumix.Output[*string] `pulumi:"description"`
	// The domain that contains the created repository.
	Domain pulumix.Output[string] `pulumi:"domain"`
	// The account number of the AWS account that owns the domain.
	DomainOwner pulumix.Output[string] `pulumi:"domainOwner"`
	// An array of external connections associated with the repository. Only one external connection can be set per repository. see External Connections.
	ExternalConnections pulumix.GPtrOutput[RepositoryExternalConnections, RepositoryExternalConnectionsOutput] `pulumi:"externalConnections"`
	// The name of the repository to create.
	Repository pulumix.Output[string] `pulumi:"repository"`
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// A list of upstream repositories to associate with the repository. The order of the upstream repositories in the list determines their priority order when AWS CodeArtifact looks for a requested package version. see Upstream
	Upstreams pulumix.GArrayOutput[RepositoryUpstream, RepositoryUpstreamOutput] `pulumi:"upstreams"`
}

// NewRepository registers a new resource with the given unique name, arguments, and options.
func NewRepository(ctx *pulumi.Context,
	name string, args *RepositoryArgs, opts ...pulumi.ResourceOption) (*Repository, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Domain == nil {
		return nil, errors.New("invalid value for required argument 'Domain'")
	}
	if args.Repository == nil {
		return nil, errors.New("invalid value for required argument 'Repository'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Repository
	err := ctx.RegisterResource("aws:codeartifact/repository:Repository", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRepository gets an existing Repository resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRepository(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RepositoryState, opts ...pulumi.ResourceOption) (*Repository, error) {
	var resource Repository
	err := ctx.ReadResource("aws:codeartifact/repository:Repository", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Repository resources.
type repositoryState struct {
	// The account number of the AWS account that manages the repository.
	AdministratorAccount *string `pulumi:"administratorAccount"`
	// The ARN of the repository.
	Arn *string `pulumi:"arn"`
	// The description of the repository.
	Description *string `pulumi:"description"`
	// The domain that contains the created repository.
	Domain *string `pulumi:"domain"`
	// The account number of the AWS account that owns the domain.
	DomainOwner *string `pulumi:"domainOwner"`
	// An array of external connections associated with the repository. Only one external connection can be set per repository. see External Connections.
	ExternalConnections *RepositoryExternalConnections `pulumi:"externalConnections"`
	// The name of the repository to create.
	Repository *string `pulumi:"repository"`
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// A list of upstream repositories to associate with the repository. The order of the upstream repositories in the list determines their priority order when AWS CodeArtifact looks for a requested package version. see Upstream
	Upstreams []RepositoryUpstream `pulumi:"upstreams"`
}

type RepositoryState struct {
	// The account number of the AWS account that manages the repository.
	AdministratorAccount pulumix.Input[*string]
	// The ARN of the repository.
	Arn pulumix.Input[*string]
	// The description of the repository.
	Description pulumix.Input[*string]
	// The domain that contains the created repository.
	Domain pulumix.Input[*string]
	// The account number of the AWS account that owns the domain.
	DomainOwner pulumix.Input[*string]
	// An array of external connections associated with the repository. Only one external connection can be set per repository. see External Connections.
	ExternalConnections pulumix.Input[*RepositoryExternalConnectionsArgs]
	// The name of the repository to create.
	Repository pulumix.Input[*string]
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// A list of upstream repositories to associate with the repository. The order of the upstream repositories in the list determines their priority order when AWS CodeArtifact looks for a requested package version. see Upstream
	Upstreams pulumix.Input[[]*RepositoryUpstreamArgs]
}

func (RepositoryState) ElementType() reflect.Type {
	return reflect.TypeOf((*repositoryState)(nil)).Elem()
}

type repositoryArgs struct {
	// The description of the repository.
	Description *string `pulumi:"description"`
	// The domain that contains the created repository.
	Domain string `pulumi:"domain"`
	// The account number of the AWS account that owns the domain.
	DomainOwner *string `pulumi:"domainOwner"`
	// An array of external connections associated with the repository. Only one external connection can be set per repository. see External Connections.
	ExternalConnections *RepositoryExternalConnections `pulumi:"externalConnections"`
	// The name of the repository to create.
	Repository string `pulumi:"repository"`
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A list of upstream repositories to associate with the repository. The order of the upstream repositories in the list determines their priority order when AWS CodeArtifact looks for a requested package version. see Upstream
	Upstreams []RepositoryUpstream `pulumi:"upstreams"`
}

// The set of arguments for constructing a Repository resource.
type RepositoryArgs struct {
	// The description of the repository.
	Description pulumix.Input[*string]
	// The domain that contains the created repository.
	Domain pulumix.Input[string]
	// The account number of the AWS account that owns the domain.
	DomainOwner pulumix.Input[*string]
	// An array of external connections associated with the repository. Only one external connection can be set per repository. see External Connections.
	ExternalConnections pulumix.Input[*RepositoryExternalConnectionsArgs]
	// The name of the repository to create.
	Repository pulumix.Input[string]
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A list of upstream repositories to associate with the repository. The order of the upstream repositories in the list determines their priority order when AWS CodeArtifact looks for a requested package version. see Upstream
	Upstreams pulumix.Input[[]*RepositoryUpstreamArgs]
}

func (RepositoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*repositoryArgs)(nil)).Elem()
}

type RepositoryOutput struct{ *pulumi.OutputState }

func (RepositoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Repository)(nil)).Elem()
}

func (o RepositoryOutput) ToRepositoryOutput() RepositoryOutput {
	return o
}

func (o RepositoryOutput) ToRepositoryOutputWithContext(ctx context.Context) RepositoryOutput {
	return o
}

func (o RepositoryOutput) ToOutput(ctx context.Context) pulumix.Output[Repository] {
	return pulumix.Output[Repository]{
		OutputState: o.OutputState,
	}
}

// The account number of the AWS account that manages the repository.
func (o RepositoryOutput) AdministratorAccount() pulumix.Output[string] {
	value := pulumix.Apply[Repository](o, func(v Repository) pulumix.Output[string] { return v.AdministratorAccount })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The ARN of the repository.
func (o RepositoryOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Repository](o, func(v Repository) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The description of the repository.
func (o RepositoryOutput) Description() pulumix.Output[*string] {
	value := pulumix.Apply[Repository](o, func(v Repository) pulumix.Output[*string] { return v.Description })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The domain that contains the created repository.
func (o RepositoryOutput) Domain() pulumix.Output[string] {
	value := pulumix.Apply[Repository](o, func(v Repository) pulumix.Output[string] { return v.Domain })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The account number of the AWS account that owns the domain.
func (o RepositoryOutput) DomainOwner() pulumix.Output[string] {
	value := pulumix.Apply[Repository](o, func(v Repository) pulumix.Output[string] { return v.DomainOwner })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// An array of external connections associated with the repository. Only one external connection can be set per repository. see External Connections.
func (o RepositoryOutput) ExternalConnections() pulumix.GPtrOutput[RepositoryExternalConnections, RepositoryExternalConnectionsOutput] {
	value := pulumix.Apply[Repository](o, func(v Repository) pulumix.GPtrOutput[RepositoryExternalConnections, RepositoryExternalConnectionsOutput] {
		return v.ExternalConnections
	})
	unwrapped := pulumix.Flatten[*RepositoryExternalConnections, pulumix.GPtrOutput[RepositoryExternalConnections, RepositoryExternalConnectionsOutput]](value)
	return pulumix.GPtrOutput[RepositoryExternalConnections, RepositoryExternalConnectionsOutput]{OutputState: unwrapped.OutputState}
}

// The name of the repository to create.
func (o RepositoryOutput) Repository() pulumix.Output[string] {
	value := pulumix.Apply[Repository](o, func(v Repository) pulumix.Output[string] { return v.Repository })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o RepositoryOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Repository](o, func(v Repository) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o RepositoryOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[Repository](o, func(v Repository) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A list of upstream repositories to associate with the repository. The order of the upstream repositories in the list determines their priority order when AWS CodeArtifact looks for a requested package version. see Upstream
func (o RepositoryOutput) Upstreams() pulumix.GArrayOutput[RepositoryUpstream, RepositoryUpstreamOutput] {
	value := pulumix.Apply[Repository](o, func(v Repository) pulumix.GArrayOutput[RepositoryUpstream, RepositoryUpstreamOutput] {
		return v.Upstreams
	})
	unwrapped := pulumix.Flatten[[]RepositoryUpstream, pulumix.GArrayOutput[RepositoryUpstream, RepositoryUpstreamOutput]](value)
	return pulumix.GArrayOutput[RepositoryUpstream, RepositoryUpstreamOutput]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(RepositoryOutput{})
}
