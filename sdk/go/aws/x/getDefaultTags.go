// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aws

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Use this data source to get the default tags configured on the provider.
//
// With this data source, you can apply default tags to resources not _directly_ managed by a resource, such as the instances underneath an Auto Scaling group or the volumes created for an EC2 instance.
func GetDefaultTags(ctx *pulumi.Context, args *GetDefaultTagsArgs, opts ...pulumi.InvokeOption) (*GetDefaultTagsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDefaultTagsResult
	err := ctx.Invoke("aws:index/getDefaultTags:getDefaultTags", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDefaultTags.
type GetDefaultTagsArgs struct {
	Id *string `pulumi:"id"`
}

// A collection of values returned by getDefaultTags.
type GetDefaultTagsResult struct {
	Id string `pulumi:"id"`
	// Blocks of default tags set on the provider. See details below.
	Tags map[string]string `pulumi:"tags"`
}

func GetDefaultTagsOutput(ctx *pulumi.Context, args GetDefaultTagsOutputArgs, opts ...pulumi.InvokeOption) GetDefaultTagsResultOutput {
	outputResult := pulumix.ApplyErr[*GetDefaultTagsArgs](args.ToOutput(), func(plainArgs *GetDefaultTagsArgs) (*GetDefaultTagsResult, error) {
		return GetDefaultTags(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[GetDefaultTagsResultOutput, *GetDefaultTagsResult](outputResult)
}

// A collection of arguments for invoking getDefaultTags.
type GetDefaultTagsOutputArgs struct {
	Id pulumix.Input[*string] `pulumi:"id"`
}

func (args GetDefaultTagsOutputArgs) ToOutput() pulumix.Output[*GetDefaultTagsArgs] {
	allArgs := pulumix.All(
		args.Id.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *GetDefaultTagsArgs {
		return &GetDefaultTagsArgs{
			Id: resolvedArgs[0].(*string),
		}
	})
}

type GetDefaultTagsResultOutput struct{ *pulumi.OutputState }

func (GetDefaultTagsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDefaultTagsResult)(nil)).Elem()
}

func (o GetDefaultTagsResultOutput) ToOutput(context.Context) pulumix.Output[*GetDefaultTagsResult] {
	return pulumix.Output[*GetDefaultTagsResult]{
		OutputState: o.OutputState,
	}
}

func (o GetDefaultTagsResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*GetDefaultTagsResult](o, func(v *GetDefaultTagsResult) string { return v.Id })
}

func (o GetDefaultTagsResultOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[*GetDefaultTagsResult](o, func(v *GetDefaultTagsResult) map[string]string { return v.Tags })
	return pulumix.MapOutput[string]{
		OutputState: value.OutputState,
	}
}
