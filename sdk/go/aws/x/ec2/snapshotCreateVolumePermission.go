// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Adds permission to create volumes off of a given EBS Snapshot.
type SnapshotCreateVolumePermission struct {
	pulumi.CustomResourceState

	// An AWS Account ID to add create volume permissions. The AWS Account cannot be the snapshot's owner
	AccountId pulumix.Output[string] `pulumi:"accountId"`
	// A snapshot ID
	SnapshotId pulumix.Output[string] `pulumi:"snapshotId"`
}

// NewSnapshotCreateVolumePermission registers a new resource with the given unique name, arguments, and options.
func NewSnapshotCreateVolumePermission(ctx *pulumi.Context,
	name string, args *SnapshotCreateVolumePermissionArgs, opts ...pulumi.ResourceOption) (*SnapshotCreateVolumePermission, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountId == nil {
		return nil, errors.New("invalid value for required argument 'AccountId'")
	}
	if args.SnapshotId == nil {
		return nil, errors.New("invalid value for required argument 'SnapshotId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SnapshotCreateVolumePermission
	err := ctx.RegisterResource("aws:ec2/snapshotCreateVolumePermission:SnapshotCreateVolumePermission", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSnapshotCreateVolumePermission gets an existing SnapshotCreateVolumePermission resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSnapshotCreateVolumePermission(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SnapshotCreateVolumePermissionState, opts ...pulumi.ResourceOption) (*SnapshotCreateVolumePermission, error) {
	var resource SnapshotCreateVolumePermission
	err := ctx.ReadResource("aws:ec2/snapshotCreateVolumePermission:SnapshotCreateVolumePermission", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SnapshotCreateVolumePermission resources.
type snapshotCreateVolumePermissionState struct {
	// An AWS Account ID to add create volume permissions. The AWS Account cannot be the snapshot's owner
	AccountId *string `pulumi:"accountId"`
	// A snapshot ID
	SnapshotId *string `pulumi:"snapshotId"`
}

type SnapshotCreateVolumePermissionState struct {
	// An AWS Account ID to add create volume permissions. The AWS Account cannot be the snapshot's owner
	AccountId pulumix.Input[*string]
	// A snapshot ID
	SnapshotId pulumix.Input[*string]
}

func (SnapshotCreateVolumePermissionState) ElementType() reflect.Type {
	return reflect.TypeOf((*snapshotCreateVolumePermissionState)(nil)).Elem()
}

type snapshotCreateVolumePermissionArgs struct {
	// An AWS Account ID to add create volume permissions. The AWS Account cannot be the snapshot's owner
	AccountId string `pulumi:"accountId"`
	// A snapshot ID
	SnapshotId string `pulumi:"snapshotId"`
}

// The set of arguments for constructing a SnapshotCreateVolumePermission resource.
type SnapshotCreateVolumePermissionArgs struct {
	// An AWS Account ID to add create volume permissions. The AWS Account cannot be the snapshot's owner
	AccountId pulumix.Input[string]
	// A snapshot ID
	SnapshotId pulumix.Input[string]
}

func (SnapshotCreateVolumePermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*snapshotCreateVolumePermissionArgs)(nil)).Elem()
}

type SnapshotCreateVolumePermissionOutput struct{ *pulumi.OutputState }

func (SnapshotCreateVolumePermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapshotCreateVolumePermission)(nil)).Elem()
}

func (o SnapshotCreateVolumePermissionOutput) ToSnapshotCreateVolumePermissionOutput() SnapshotCreateVolumePermissionOutput {
	return o
}

func (o SnapshotCreateVolumePermissionOutput) ToSnapshotCreateVolumePermissionOutputWithContext(ctx context.Context) SnapshotCreateVolumePermissionOutput {
	return o
}

func (o SnapshotCreateVolumePermissionOutput) ToOutput(ctx context.Context) pulumix.Output[SnapshotCreateVolumePermission] {
	return pulumix.Output[SnapshotCreateVolumePermission]{
		OutputState: o.OutputState,
	}
}

// An AWS Account ID to add create volume permissions. The AWS Account cannot be the snapshot's owner
func (o SnapshotCreateVolumePermissionOutput) AccountId() pulumix.Output[string] {
	value := pulumix.Apply[SnapshotCreateVolumePermission](o, func(v SnapshotCreateVolumePermission) pulumix.Output[string] { return v.AccountId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A snapshot ID
func (o SnapshotCreateVolumePermissionOutput) SnapshotId() pulumix.Output[string] {
	value := pulumix.Apply[SnapshotCreateVolumePermission](o, func(v SnapshotCreateVolumePermission) pulumix.Output[string] { return v.SnapshotId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(SnapshotCreateVolumePermissionOutput{})
}
