// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package emr

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an Elastic MapReduce Cluster Instance Fleet configuration.
// See [Amazon Elastic MapReduce Documentation](https://aws.amazon.com/documentation/emr/) for more information.
//
// > **NOTE:** At this time, Instance Fleets cannot be destroyed through the API nor
// web interface. Instance Fleets are destroyed when the EMR Cluster is destroyed.
// the provider will resize any Instance Fleet to zero when destroying the resource.
type InstanceFleet struct {
	pulumi.CustomResourceState

	// ID of the EMR Cluster to attach to. Changing this forces a new resource to be created.
	ClusterId pulumix.Output[string] `pulumi:"clusterId"`
	// Configuration block for instance fleet
	InstanceTypeConfigs pulumix.GArrayOutput[InstanceFleetInstanceTypeConfig, InstanceFleetInstanceTypeConfigOutput] `pulumi:"instanceTypeConfigs"`
	// Configuration block for launch specification
	LaunchSpecifications pulumix.GPtrOutput[InstanceFleetLaunchSpecifications, InstanceFleetLaunchSpecificationsOutput] `pulumi:"launchSpecifications"`
	// Friendly name given to the instance fleet.
	Name pulumix.Output[string] `pulumi:"name"`
	// The number of On-Demand units that have been provisioned for the instance
	// fleet to fulfill TargetOnDemandCapacity. This provisioned capacity might be less than or greater than TargetOnDemandCapacity.
	ProvisionedOnDemandCapacity pulumix.Output[int] `pulumi:"provisionedOnDemandCapacity"`
	// The number of Spot units that have been provisioned for this instance fleet
	// to fulfill TargetSpotCapacity. This provisioned capacity might be less than or greater than TargetSpotCapacity.
	ProvisionedSpotCapacity pulumix.Output[int] `pulumi:"provisionedSpotCapacity"`
	// The target capacity of On-Demand units for the instance fleet, which determines how many On-Demand instances to provision.
	TargetOnDemandCapacity pulumix.Output[*int] `pulumi:"targetOnDemandCapacity"`
	// The target capacity of Spot units for the instance fleet, which determines how many Spot instances to provision.
	TargetSpotCapacity pulumix.Output[*int] `pulumi:"targetSpotCapacity"`
}

// NewInstanceFleet registers a new resource with the given unique name, arguments, and options.
func NewInstanceFleet(ctx *pulumi.Context,
	name string, args *InstanceFleetArgs, opts ...pulumi.ResourceOption) (*InstanceFleet, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterId == nil {
		return nil, errors.New("invalid value for required argument 'ClusterId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource InstanceFleet
	err := ctx.RegisterResource("aws:emr/instanceFleet:InstanceFleet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInstanceFleet gets an existing InstanceFleet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstanceFleet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InstanceFleetState, opts ...pulumi.ResourceOption) (*InstanceFleet, error) {
	var resource InstanceFleet
	err := ctx.ReadResource("aws:emr/instanceFleet:InstanceFleet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering InstanceFleet resources.
type instanceFleetState struct {
	// ID of the EMR Cluster to attach to. Changing this forces a new resource to be created.
	ClusterId *string `pulumi:"clusterId"`
	// Configuration block for instance fleet
	InstanceTypeConfigs []InstanceFleetInstanceTypeConfig `pulumi:"instanceTypeConfigs"`
	// Configuration block for launch specification
	LaunchSpecifications *InstanceFleetLaunchSpecifications `pulumi:"launchSpecifications"`
	// Friendly name given to the instance fleet.
	Name *string `pulumi:"name"`
	// The number of On-Demand units that have been provisioned for the instance
	// fleet to fulfill TargetOnDemandCapacity. This provisioned capacity might be less than or greater than TargetOnDemandCapacity.
	ProvisionedOnDemandCapacity *int `pulumi:"provisionedOnDemandCapacity"`
	// The number of Spot units that have been provisioned for this instance fleet
	// to fulfill TargetSpotCapacity. This provisioned capacity might be less than or greater than TargetSpotCapacity.
	ProvisionedSpotCapacity *int `pulumi:"provisionedSpotCapacity"`
	// The target capacity of On-Demand units for the instance fleet, which determines how many On-Demand instances to provision.
	TargetOnDemandCapacity *int `pulumi:"targetOnDemandCapacity"`
	// The target capacity of Spot units for the instance fleet, which determines how many Spot instances to provision.
	TargetSpotCapacity *int `pulumi:"targetSpotCapacity"`
}

type InstanceFleetState struct {
	// ID of the EMR Cluster to attach to. Changing this forces a new resource to be created.
	ClusterId pulumix.Input[*string]
	// Configuration block for instance fleet
	InstanceTypeConfigs pulumix.Input[[]*InstanceFleetInstanceTypeConfigArgs]
	// Configuration block for launch specification
	LaunchSpecifications pulumix.Input[*InstanceFleetLaunchSpecificationsArgs]
	// Friendly name given to the instance fleet.
	Name pulumix.Input[*string]
	// The number of On-Demand units that have been provisioned for the instance
	// fleet to fulfill TargetOnDemandCapacity. This provisioned capacity might be less than or greater than TargetOnDemandCapacity.
	ProvisionedOnDemandCapacity pulumix.Input[*int]
	// The number of Spot units that have been provisioned for this instance fleet
	// to fulfill TargetSpotCapacity. This provisioned capacity might be less than or greater than TargetSpotCapacity.
	ProvisionedSpotCapacity pulumix.Input[*int]
	// The target capacity of On-Demand units for the instance fleet, which determines how many On-Demand instances to provision.
	TargetOnDemandCapacity pulumix.Input[*int]
	// The target capacity of Spot units for the instance fleet, which determines how many Spot instances to provision.
	TargetSpotCapacity pulumix.Input[*int]
}

func (InstanceFleetState) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceFleetState)(nil)).Elem()
}

type instanceFleetArgs struct {
	// ID of the EMR Cluster to attach to. Changing this forces a new resource to be created.
	ClusterId string `pulumi:"clusterId"`
	// Configuration block for instance fleet
	InstanceTypeConfigs []InstanceFleetInstanceTypeConfig `pulumi:"instanceTypeConfigs"`
	// Configuration block for launch specification
	LaunchSpecifications *InstanceFleetLaunchSpecifications `pulumi:"launchSpecifications"`
	// Friendly name given to the instance fleet.
	Name *string `pulumi:"name"`
	// The target capacity of On-Demand units for the instance fleet, which determines how many On-Demand instances to provision.
	TargetOnDemandCapacity *int `pulumi:"targetOnDemandCapacity"`
	// The target capacity of Spot units for the instance fleet, which determines how many Spot instances to provision.
	TargetSpotCapacity *int `pulumi:"targetSpotCapacity"`
}

// The set of arguments for constructing a InstanceFleet resource.
type InstanceFleetArgs struct {
	// ID of the EMR Cluster to attach to. Changing this forces a new resource to be created.
	ClusterId pulumix.Input[string]
	// Configuration block for instance fleet
	InstanceTypeConfigs pulumix.Input[[]*InstanceFleetInstanceTypeConfigArgs]
	// Configuration block for launch specification
	LaunchSpecifications pulumix.Input[*InstanceFleetLaunchSpecificationsArgs]
	// Friendly name given to the instance fleet.
	Name pulumix.Input[*string]
	// The target capacity of On-Demand units for the instance fleet, which determines how many On-Demand instances to provision.
	TargetOnDemandCapacity pulumix.Input[*int]
	// The target capacity of Spot units for the instance fleet, which determines how many Spot instances to provision.
	TargetSpotCapacity pulumix.Input[*int]
}

func (InstanceFleetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceFleetArgs)(nil)).Elem()
}

type InstanceFleetOutput struct{ *pulumi.OutputState }

func (InstanceFleetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceFleet)(nil)).Elem()
}

func (o InstanceFleetOutput) ToInstanceFleetOutput() InstanceFleetOutput {
	return o
}

func (o InstanceFleetOutput) ToInstanceFleetOutputWithContext(ctx context.Context) InstanceFleetOutput {
	return o
}

func (o InstanceFleetOutput) ToOutput(ctx context.Context) pulumix.Output[InstanceFleet] {
	return pulumix.Output[InstanceFleet]{
		OutputState: o.OutputState,
	}
}

// ID of the EMR Cluster to attach to. Changing this forces a new resource to be created.
func (o InstanceFleetOutput) ClusterId() pulumix.Output[string] {
	value := pulumix.Apply[InstanceFleet](o, func(v InstanceFleet) pulumix.Output[string] { return v.ClusterId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Configuration block for instance fleet
func (o InstanceFleetOutput) InstanceTypeConfigs() pulumix.GArrayOutput[InstanceFleetInstanceTypeConfig, InstanceFleetInstanceTypeConfigOutput] {
	value := pulumix.Apply[InstanceFleet](o, func(v InstanceFleet) pulumix.GArrayOutput[InstanceFleetInstanceTypeConfig, InstanceFleetInstanceTypeConfigOutput] {
		return v.InstanceTypeConfigs
	})
	unwrapped := pulumix.Flatten[[]InstanceFleetInstanceTypeConfig, pulumix.GArrayOutput[InstanceFleetInstanceTypeConfig, InstanceFleetInstanceTypeConfigOutput]](value)
	return pulumix.GArrayOutput[InstanceFleetInstanceTypeConfig, InstanceFleetInstanceTypeConfigOutput]{OutputState: unwrapped.OutputState}
}

// Configuration block for launch specification
func (o InstanceFleetOutput) LaunchSpecifications() pulumix.GPtrOutput[InstanceFleetLaunchSpecifications, InstanceFleetLaunchSpecificationsOutput] {
	value := pulumix.Apply[InstanceFleet](o, func(v InstanceFleet) pulumix.GPtrOutput[InstanceFleetLaunchSpecifications, InstanceFleetLaunchSpecificationsOutput] {
		return v.LaunchSpecifications
	})
	unwrapped := pulumix.Flatten[*InstanceFleetLaunchSpecifications, pulumix.GPtrOutput[InstanceFleetLaunchSpecifications, InstanceFleetLaunchSpecificationsOutput]](value)
	return pulumix.GPtrOutput[InstanceFleetLaunchSpecifications, InstanceFleetLaunchSpecificationsOutput]{OutputState: unwrapped.OutputState}
}

// Friendly name given to the instance fleet.
func (o InstanceFleetOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[InstanceFleet](o, func(v InstanceFleet) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The number of On-Demand units that have been provisioned for the instance
// fleet to fulfill TargetOnDemandCapacity. This provisioned capacity might be less than or greater than TargetOnDemandCapacity.
func (o InstanceFleetOutput) ProvisionedOnDemandCapacity() pulumix.Output[int] {
	value := pulumix.Apply[InstanceFleet](o, func(v InstanceFleet) pulumix.Output[int] { return v.ProvisionedOnDemandCapacity })
	return pulumix.Flatten[int, pulumix.Output[int]](value)
}

// The number of Spot units that have been provisioned for this instance fleet
// to fulfill TargetSpotCapacity. This provisioned capacity might be less than or greater than TargetSpotCapacity.
func (o InstanceFleetOutput) ProvisionedSpotCapacity() pulumix.Output[int] {
	value := pulumix.Apply[InstanceFleet](o, func(v InstanceFleet) pulumix.Output[int] { return v.ProvisionedSpotCapacity })
	return pulumix.Flatten[int, pulumix.Output[int]](value)
}

// The target capacity of On-Demand units for the instance fleet, which determines how many On-Demand instances to provision.
func (o InstanceFleetOutput) TargetOnDemandCapacity() pulumix.Output[*int] {
	value := pulumix.Apply[InstanceFleet](o, func(v InstanceFleet) pulumix.Output[*int] { return v.TargetOnDemandCapacity })
	return pulumix.Flatten[*int, pulumix.Output[*int]](value)
}

// The target capacity of Spot units for the instance fleet, which determines how many Spot instances to provision.
func (o InstanceFleetOutput) TargetSpotCapacity() pulumix.Output[*int] {
	value := pulumix.Apply[InstanceFleet](o, func(v InstanceFleet) pulumix.Output[*int] { return v.TargetSpotCapacity })
	return pulumix.Flatten[*int, pulumix.Output[*int]](value)
}

func init() {
	pulumi.RegisterOutputType(InstanceFleetOutput{})
}
