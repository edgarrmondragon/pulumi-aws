// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cognito

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a Cognito User Pool Client resource.
//
// To manage a User Pool Client created by another service, such as when [configuring an OpenSearch Domain to use Cognito authentication](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/cognito-auth.html),
// use the `cognito.ManagedUserPoolClient` resource instead.
type UserPoolClient struct {
	pulumi.CustomResourceState

	// Time limit, between 5 minutes and 1 day, after which the access token is no longer valid and cannot be used.
	// By default, the unit is hours.
	// The unit can be overridden by a value in `token_validity_units.access_token`.
	AccessTokenValidity pulumix.Output[int] `pulumi:"accessTokenValidity"`
	// List of allowed OAuth flows (code, implicit, client_credentials).
	AllowedOauthFlows pulumix.ArrayOutput[string] `pulumi:"allowedOauthFlows"`
	// Whether the client is allowed to follow the OAuth protocol when interacting with Cognito user pools.
	AllowedOauthFlowsUserPoolClient pulumix.Output[bool] `pulumi:"allowedOauthFlowsUserPoolClient"`
	// List of allowed OAuth scopes (phone, email, openid, profile, and aws.cognito.signin.user.admin).
	AllowedOauthScopes pulumix.ArrayOutput[string] `pulumi:"allowedOauthScopes"`
	// Configuration block for Amazon Pinpoint analytics for collecting metrics for this user pool. Detailed below.
	AnalyticsConfiguration pulumix.GPtrOutput[UserPoolClientAnalyticsConfiguration, UserPoolClientAnalyticsConfigurationOutput] `pulumi:"analyticsConfiguration"`
	// Amazon Cognito creates a session token for each API request in an authentication flow. AuthSessionValidity is the duration, in minutes, of that session token. Your user pool native user must respond to each authentication challenge before the session expires. Valid values between `3` and `15`. Default value is `3`.
	AuthSessionValidity pulumix.Output[int] `pulumi:"authSessionValidity"`
	// List of allowed callback URLs for the identity providers.
	CallbackUrls pulumix.ArrayOutput[string] `pulumi:"callbackUrls"`
	// Client secret of the user pool client.
	ClientSecret pulumix.Output[string] `pulumi:"clientSecret"`
	// Default redirect URI. Must be in the list of callback URLs.
	DefaultRedirectUri pulumix.Output[string] `pulumi:"defaultRedirectUri"`
	// Activates the propagation of additional user context data.
	EnablePropagateAdditionalUserContextData pulumix.Output[bool] `pulumi:"enablePropagateAdditionalUserContextData"`
	// Enables or disables token revocation.
	EnableTokenRevocation pulumix.Output[bool] `pulumi:"enableTokenRevocation"`
	// List of authentication flows (ADMIN_NO_SRP_AUTH, CUSTOM_AUTH_FLOW_ONLY, USER_PASSWORD_AUTH, ALLOW_ADMIN_USER_PASSWORD_AUTH, ALLOW_CUSTOM_AUTH, ALLOW_USER_PASSWORD_AUTH, ALLOW_USER_SRP_AUTH, ALLOW_REFRESH_TOKEN_AUTH).
	ExplicitAuthFlows pulumix.ArrayOutput[string] `pulumi:"explicitAuthFlows"`
	// Should an application secret be generated.
	GenerateSecret pulumix.Output[*bool] `pulumi:"generateSecret"`
	// Time limit, between 5 minutes and 1 day, after which the ID token is no longer valid and cannot be used.
	// By default, the unit is hours.
	// The unit can be overridden by a value in `token_validity_units.id_token`.
	IdTokenValidity pulumix.Output[int] `pulumi:"idTokenValidity"`
	// List of allowed logout URLs for the identity providers.
	LogoutUrls pulumix.ArrayOutput[string] `pulumi:"logoutUrls"`
	// Name of the application client.
	Name pulumix.Output[string] `pulumi:"name"`
	// Choose which errors and responses are returned by Cognito APIs during authentication, account confirmation, and password recovery when the user does not exist in the user pool. When set to `ENABLED` and the user does not exist, authentication returns an error indicating either the username or password was incorrect, and account confirmation and password recovery return a response indicating a code was sent to a simulated destination. When set to `LEGACY`, those APIs will return a `UserNotFoundException` exception if the user does not exist in the user pool.
	PreventUserExistenceErrors pulumix.Output[string] `pulumi:"preventUserExistenceErrors"`
	// List of user pool attributes the application client can read from.
	ReadAttributes pulumix.ArrayOutput[string] `pulumi:"readAttributes"`
	// Time limit, between 60 minutes and 10 years, after which the refresh token is no longer valid and cannot be used.
	// By default, the unit is days.
	// The unit can be overridden by a value in `token_validity_units.refresh_token`.
	RefreshTokenValidity pulumix.Output[int] `pulumi:"refreshTokenValidity"`
	// List of provider names for the identity providers that are supported on this client. Uses the `providerName` attribute of `cognito.IdentityProvider` resource(s), or the equivalent string(s).
	SupportedIdentityProviders pulumix.ArrayOutput[string] `pulumi:"supportedIdentityProviders"`
	// Configuration block for units in which the validity times are represented in. Detailed below.
	TokenValidityUnits pulumix.GPtrOutput[UserPoolClientTokenValidityUnits, UserPoolClientTokenValidityUnitsOutput] `pulumi:"tokenValidityUnits"`
	// User pool the client belongs to.
	//
	// The following arguments are optional:
	UserPoolId pulumix.Output[string] `pulumi:"userPoolId"`
	// List of user pool attributes the application client can write to.
	WriteAttributes pulumix.ArrayOutput[string] `pulumi:"writeAttributes"`
}

// NewUserPoolClient registers a new resource with the given unique name, arguments, and options.
func NewUserPoolClient(ctx *pulumi.Context,
	name string, args *UserPoolClientArgs, opts ...pulumi.ResourceOption) (*UserPoolClient, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.UserPoolId == nil {
		return nil, errors.New("invalid value for required argument 'UserPoolId'")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"clientSecret",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource UserPoolClient
	err := ctx.RegisterResource("aws:cognito/userPoolClient:UserPoolClient", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetUserPoolClient gets an existing UserPoolClient resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetUserPoolClient(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *UserPoolClientState, opts ...pulumi.ResourceOption) (*UserPoolClient, error) {
	var resource UserPoolClient
	err := ctx.ReadResource("aws:cognito/userPoolClient:UserPoolClient", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering UserPoolClient resources.
type userPoolClientState struct {
	// Time limit, between 5 minutes and 1 day, after which the access token is no longer valid and cannot be used.
	// By default, the unit is hours.
	// The unit can be overridden by a value in `token_validity_units.access_token`.
	AccessTokenValidity *int `pulumi:"accessTokenValidity"`
	// List of allowed OAuth flows (code, implicit, client_credentials).
	AllowedOauthFlows []string `pulumi:"allowedOauthFlows"`
	// Whether the client is allowed to follow the OAuth protocol when interacting with Cognito user pools.
	AllowedOauthFlowsUserPoolClient *bool `pulumi:"allowedOauthFlowsUserPoolClient"`
	// List of allowed OAuth scopes (phone, email, openid, profile, and aws.cognito.signin.user.admin).
	AllowedOauthScopes []string `pulumi:"allowedOauthScopes"`
	// Configuration block for Amazon Pinpoint analytics for collecting metrics for this user pool. Detailed below.
	AnalyticsConfiguration *UserPoolClientAnalyticsConfiguration `pulumi:"analyticsConfiguration"`
	// Amazon Cognito creates a session token for each API request in an authentication flow. AuthSessionValidity is the duration, in minutes, of that session token. Your user pool native user must respond to each authentication challenge before the session expires. Valid values between `3` and `15`. Default value is `3`.
	AuthSessionValidity *int `pulumi:"authSessionValidity"`
	// List of allowed callback URLs for the identity providers.
	CallbackUrls []string `pulumi:"callbackUrls"`
	// Client secret of the user pool client.
	ClientSecret *string `pulumi:"clientSecret"`
	// Default redirect URI. Must be in the list of callback URLs.
	DefaultRedirectUri *string `pulumi:"defaultRedirectUri"`
	// Activates the propagation of additional user context data.
	EnablePropagateAdditionalUserContextData *bool `pulumi:"enablePropagateAdditionalUserContextData"`
	// Enables or disables token revocation.
	EnableTokenRevocation *bool `pulumi:"enableTokenRevocation"`
	// List of authentication flows (ADMIN_NO_SRP_AUTH, CUSTOM_AUTH_FLOW_ONLY, USER_PASSWORD_AUTH, ALLOW_ADMIN_USER_PASSWORD_AUTH, ALLOW_CUSTOM_AUTH, ALLOW_USER_PASSWORD_AUTH, ALLOW_USER_SRP_AUTH, ALLOW_REFRESH_TOKEN_AUTH).
	ExplicitAuthFlows []string `pulumi:"explicitAuthFlows"`
	// Should an application secret be generated.
	GenerateSecret *bool `pulumi:"generateSecret"`
	// Time limit, between 5 minutes and 1 day, after which the ID token is no longer valid and cannot be used.
	// By default, the unit is hours.
	// The unit can be overridden by a value in `token_validity_units.id_token`.
	IdTokenValidity *int `pulumi:"idTokenValidity"`
	// List of allowed logout URLs for the identity providers.
	LogoutUrls []string `pulumi:"logoutUrls"`
	// Name of the application client.
	Name *string `pulumi:"name"`
	// Choose which errors and responses are returned by Cognito APIs during authentication, account confirmation, and password recovery when the user does not exist in the user pool. When set to `ENABLED` and the user does not exist, authentication returns an error indicating either the username or password was incorrect, and account confirmation and password recovery return a response indicating a code was sent to a simulated destination. When set to `LEGACY`, those APIs will return a `UserNotFoundException` exception if the user does not exist in the user pool.
	PreventUserExistenceErrors *string `pulumi:"preventUserExistenceErrors"`
	// List of user pool attributes the application client can read from.
	ReadAttributes []string `pulumi:"readAttributes"`
	// Time limit, between 60 minutes and 10 years, after which the refresh token is no longer valid and cannot be used.
	// By default, the unit is days.
	// The unit can be overridden by a value in `token_validity_units.refresh_token`.
	RefreshTokenValidity *int `pulumi:"refreshTokenValidity"`
	// List of provider names for the identity providers that are supported on this client. Uses the `providerName` attribute of `cognito.IdentityProvider` resource(s), or the equivalent string(s).
	SupportedIdentityProviders []string `pulumi:"supportedIdentityProviders"`
	// Configuration block for units in which the validity times are represented in. Detailed below.
	TokenValidityUnits *UserPoolClientTokenValidityUnits `pulumi:"tokenValidityUnits"`
	// User pool the client belongs to.
	//
	// The following arguments are optional:
	UserPoolId *string `pulumi:"userPoolId"`
	// List of user pool attributes the application client can write to.
	WriteAttributes []string `pulumi:"writeAttributes"`
}

type UserPoolClientState struct {
	// Time limit, between 5 minutes and 1 day, after which the access token is no longer valid and cannot be used.
	// By default, the unit is hours.
	// The unit can be overridden by a value in `token_validity_units.access_token`.
	AccessTokenValidity pulumix.Input[*int]
	// List of allowed OAuth flows (code, implicit, client_credentials).
	AllowedOauthFlows pulumix.Input[[]string]
	// Whether the client is allowed to follow the OAuth protocol when interacting with Cognito user pools.
	AllowedOauthFlowsUserPoolClient pulumix.Input[*bool]
	// List of allowed OAuth scopes (phone, email, openid, profile, and aws.cognito.signin.user.admin).
	AllowedOauthScopes pulumix.Input[[]string]
	// Configuration block for Amazon Pinpoint analytics for collecting metrics for this user pool. Detailed below.
	AnalyticsConfiguration pulumix.Input[*UserPoolClientAnalyticsConfigurationArgs]
	// Amazon Cognito creates a session token for each API request in an authentication flow. AuthSessionValidity is the duration, in minutes, of that session token. Your user pool native user must respond to each authentication challenge before the session expires. Valid values between `3` and `15`. Default value is `3`.
	AuthSessionValidity pulumix.Input[*int]
	// List of allowed callback URLs for the identity providers.
	CallbackUrls pulumix.Input[[]string]
	// Client secret of the user pool client.
	ClientSecret pulumix.Input[*string]
	// Default redirect URI. Must be in the list of callback URLs.
	DefaultRedirectUri pulumix.Input[*string]
	// Activates the propagation of additional user context data.
	EnablePropagateAdditionalUserContextData pulumix.Input[*bool]
	// Enables or disables token revocation.
	EnableTokenRevocation pulumix.Input[*bool]
	// List of authentication flows (ADMIN_NO_SRP_AUTH, CUSTOM_AUTH_FLOW_ONLY, USER_PASSWORD_AUTH, ALLOW_ADMIN_USER_PASSWORD_AUTH, ALLOW_CUSTOM_AUTH, ALLOW_USER_PASSWORD_AUTH, ALLOW_USER_SRP_AUTH, ALLOW_REFRESH_TOKEN_AUTH).
	ExplicitAuthFlows pulumix.Input[[]string]
	// Should an application secret be generated.
	GenerateSecret pulumix.Input[*bool]
	// Time limit, between 5 minutes and 1 day, after which the ID token is no longer valid and cannot be used.
	// By default, the unit is hours.
	// The unit can be overridden by a value in `token_validity_units.id_token`.
	IdTokenValidity pulumix.Input[*int]
	// List of allowed logout URLs for the identity providers.
	LogoutUrls pulumix.Input[[]string]
	// Name of the application client.
	Name pulumix.Input[*string]
	// Choose which errors and responses are returned by Cognito APIs during authentication, account confirmation, and password recovery when the user does not exist in the user pool. When set to `ENABLED` and the user does not exist, authentication returns an error indicating either the username or password was incorrect, and account confirmation and password recovery return a response indicating a code was sent to a simulated destination. When set to `LEGACY`, those APIs will return a `UserNotFoundException` exception if the user does not exist in the user pool.
	PreventUserExistenceErrors pulumix.Input[*string]
	// List of user pool attributes the application client can read from.
	ReadAttributes pulumix.Input[[]string]
	// Time limit, between 60 minutes and 10 years, after which the refresh token is no longer valid and cannot be used.
	// By default, the unit is days.
	// The unit can be overridden by a value in `token_validity_units.refresh_token`.
	RefreshTokenValidity pulumix.Input[*int]
	// List of provider names for the identity providers that are supported on this client. Uses the `providerName` attribute of `cognito.IdentityProvider` resource(s), or the equivalent string(s).
	SupportedIdentityProviders pulumix.Input[[]string]
	// Configuration block for units in which the validity times are represented in. Detailed below.
	TokenValidityUnits pulumix.Input[*UserPoolClientTokenValidityUnitsArgs]
	// User pool the client belongs to.
	//
	// The following arguments are optional:
	UserPoolId pulumix.Input[*string]
	// List of user pool attributes the application client can write to.
	WriteAttributes pulumix.Input[[]string]
}

func (UserPoolClientState) ElementType() reflect.Type {
	return reflect.TypeOf((*userPoolClientState)(nil)).Elem()
}

type userPoolClientArgs struct {
	// Time limit, between 5 minutes and 1 day, after which the access token is no longer valid and cannot be used.
	// By default, the unit is hours.
	// The unit can be overridden by a value in `token_validity_units.access_token`.
	AccessTokenValidity *int `pulumi:"accessTokenValidity"`
	// List of allowed OAuth flows (code, implicit, client_credentials).
	AllowedOauthFlows []string `pulumi:"allowedOauthFlows"`
	// Whether the client is allowed to follow the OAuth protocol when interacting with Cognito user pools.
	AllowedOauthFlowsUserPoolClient *bool `pulumi:"allowedOauthFlowsUserPoolClient"`
	// List of allowed OAuth scopes (phone, email, openid, profile, and aws.cognito.signin.user.admin).
	AllowedOauthScopes []string `pulumi:"allowedOauthScopes"`
	// Configuration block for Amazon Pinpoint analytics for collecting metrics for this user pool. Detailed below.
	AnalyticsConfiguration *UserPoolClientAnalyticsConfiguration `pulumi:"analyticsConfiguration"`
	// Amazon Cognito creates a session token for each API request in an authentication flow. AuthSessionValidity is the duration, in minutes, of that session token. Your user pool native user must respond to each authentication challenge before the session expires. Valid values between `3` and `15`. Default value is `3`.
	AuthSessionValidity *int `pulumi:"authSessionValidity"`
	// List of allowed callback URLs for the identity providers.
	CallbackUrls []string `pulumi:"callbackUrls"`
	// Default redirect URI. Must be in the list of callback URLs.
	DefaultRedirectUri *string `pulumi:"defaultRedirectUri"`
	// Activates the propagation of additional user context data.
	EnablePropagateAdditionalUserContextData *bool `pulumi:"enablePropagateAdditionalUserContextData"`
	// Enables or disables token revocation.
	EnableTokenRevocation *bool `pulumi:"enableTokenRevocation"`
	// List of authentication flows (ADMIN_NO_SRP_AUTH, CUSTOM_AUTH_FLOW_ONLY, USER_PASSWORD_AUTH, ALLOW_ADMIN_USER_PASSWORD_AUTH, ALLOW_CUSTOM_AUTH, ALLOW_USER_PASSWORD_AUTH, ALLOW_USER_SRP_AUTH, ALLOW_REFRESH_TOKEN_AUTH).
	ExplicitAuthFlows []string `pulumi:"explicitAuthFlows"`
	// Should an application secret be generated.
	GenerateSecret *bool `pulumi:"generateSecret"`
	// Time limit, between 5 minutes and 1 day, after which the ID token is no longer valid and cannot be used.
	// By default, the unit is hours.
	// The unit can be overridden by a value in `token_validity_units.id_token`.
	IdTokenValidity *int `pulumi:"idTokenValidity"`
	// List of allowed logout URLs for the identity providers.
	LogoutUrls []string `pulumi:"logoutUrls"`
	// Name of the application client.
	Name *string `pulumi:"name"`
	// Choose which errors and responses are returned by Cognito APIs during authentication, account confirmation, and password recovery when the user does not exist in the user pool. When set to `ENABLED` and the user does not exist, authentication returns an error indicating either the username or password was incorrect, and account confirmation and password recovery return a response indicating a code was sent to a simulated destination. When set to `LEGACY`, those APIs will return a `UserNotFoundException` exception if the user does not exist in the user pool.
	PreventUserExistenceErrors *string `pulumi:"preventUserExistenceErrors"`
	// List of user pool attributes the application client can read from.
	ReadAttributes []string `pulumi:"readAttributes"`
	// Time limit, between 60 minutes and 10 years, after which the refresh token is no longer valid and cannot be used.
	// By default, the unit is days.
	// The unit can be overridden by a value in `token_validity_units.refresh_token`.
	RefreshTokenValidity *int `pulumi:"refreshTokenValidity"`
	// List of provider names for the identity providers that are supported on this client. Uses the `providerName` attribute of `cognito.IdentityProvider` resource(s), or the equivalent string(s).
	SupportedIdentityProviders []string `pulumi:"supportedIdentityProviders"`
	// Configuration block for units in which the validity times are represented in. Detailed below.
	TokenValidityUnits *UserPoolClientTokenValidityUnits `pulumi:"tokenValidityUnits"`
	// User pool the client belongs to.
	//
	// The following arguments are optional:
	UserPoolId string `pulumi:"userPoolId"`
	// List of user pool attributes the application client can write to.
	WriteAttributes []string `pulumi:"writeAttributes"`
}

// The set of arguments for constructing a UserPoolClient resource.
type UserPoolClientArgs struct {
	// Time limit, between 5 minutes and 1 day, after which the access token is no longer valid and cannot be used.
	// By default, the unit is hours.
	// The unit can be overridden by a value in `token_validity_units.access_token`.
	AccessTokenValidity pulumix.Input[*int]
	// List of allowed OAuth flows (code, implicit, client_credentials).
	AllowedOauthFlows pulumix.Input[[]string]
	// Whether the client is allowed to follow the OAuth protocol when interacting with Cognito user pools.
	AllowedOauthFlowsUserPoolClient pulumix.Input[*bool]
	// List of allowed OAuth scopes (phone, email, openid, profile, and aws.cognito.signin.user.admin).
	AllowedOauthScopes pulumix.Input[[]string]
	// Configuration block for Amazon Pinpoint analytics for collecting metrics for this user pool. Detailed below.
	AnalyticsConfiguration pulumix.Input[*UserPoolClientAnalyticsConfigurationArgs]
	// Amazon Cognito creates a session token for each API request in an authentication flow. AuthSessionValidity is the duration, in minutes, of that session token. Your user pool native user must respond to each authentication challenge before the session expires. Valid values between `3` and `15`. Default value is `3`.
	AuthSessionValidity pulumix.Input[*int]
	// List of allowed callback URLs for the identity providers.
	CallbackUrls pulumix.Input[[]string]
	// Default redirect URI. Must be in the list of callback URLs.
	DefaultRedirectUri pulumix.Input[*string]
	// Activates the propagation of additional user context data.
	EnablePropagateAdditionalUserContextData pulumix.Input[*bool]
	// Enables or disables token revocation.
	EnableTokenRevocation pulumix.Input[*bool]
	// List of authentication flows (ADMIN_NO_SRP_AUTH, CUSTOM_AUTH_FLOW_ONLY, USER_PASSWORD_AUTH, ALLOW_ADMIN_USER_PASSWORD_AUTH, ALLOW_CUSTOM_AUTH, ALLOW_USER_PASSWORD_AUTH, ALLOW_USER_SRP_AUTH, ALLOW_REFRESH_TOKEN_AUTH).
	ExplicitAuthFlows pulumix.Input[[]string]
	// Should an application secret be generated.
	GenerateSecret pulumix.Input[*bool]
	// Time limit, between 5 minutes and 1 day, after which the ID token is no longer valid and cannot be used.
	// By default, the unit is hours.
	// The unit can be overridden by a value in `token_validity_units.id_token`.
	IdTokenValidity pulumix.Input[*int]
	// List of allowed logout URLs for the identity providers.
	LogoutUrls pulumix.Input[[]string]
	// Name of the application client.
	Name pulumix.Input[*string]
	// Choose which errors and responses are returned by Cognito APIs during authentication, account confirmation, and password recovery when the user does not exist in the user pool. When set to `ENABLED` and the user does not exist, authentication returns an error indicating either the username or password was incorrect, and account confirmation and password recovery return a response indicating a code was sent to a simulated destination. When set to `LEGACY`, those APIs will return a `UserNotFoundException` exception if the user does not exist in the user pool.
	PreventUserExistenceErrors pulumix.Input[*string]
	// List of user pool attributes the application client can read from.
	ReadAttributes pulumix.Input[[]string]
	// Time limit, between 60 minutes and 10 years, after which the refresh token is no longer valid and cannot be used.
	// By default, the unit is days.
	// The unit can be overridden by a value in `token_validity_units.refresh_token`.
	RefreshTokenValidity pulumix.Input[*int]
	// List of provider names for the identity providers that are supported on this client. Uses the `providerName` attribute of `cognito.IdentityProvider` resource(s), or the equivalent string(s).
	SupportedIdentityProviders pulumix.Input[[]string]
	// Configuration block for units in which the validity times are represented in. Detailed below.
	TokenValidityUnits pulumix.Input[*UserPoolClientTokenValidityUnitsArgs]
	// User pool the client belongs to.
	//
	// The following arguments are optional:
	UserPoolId pulumix.Input[string]
	// List of user pool attributes the application client can write to.
	WriteAttributes pulumix.Input[[]string]
}

func (UserPoolClientArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*userPoolClientArgs)(nil)).Elem()
}

type UserPoolClientOutput struct{ *pulumi.OutputState }

func (UserPoolClientOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolClient)(nil)).Elem()
}

func (o UserPoolClientOutput) ToUserPoolClientOutput() UserPoolClientOutput {
	return o
}

func (o UserPoolClientOutput) ToUserPoolClientOutputWithContext(ctx context.Context) UserPoolClientOutput {
	return o
}

func (o UserPoolClientOutput) ToOutput(ctx context.Context) pulumix.Output[UserPoolClient] {
	return pulumix.Output[UserPoolClient]{
		OutputState: o.OutputState,
	}
}

// Time limit, between 5 minutes and 1 day, after which the access token is no longer valid and cannot be used.
// By default, the unit is hours.
// The unit can be overridden by a value in `token_validity_units.access_token`.
func (o UserPoolClientOutput) AccessTokenValidity() pulumix.Output[int] {
	value := pulumix.Apply[UserPoolClient](o, func(v UserPoolClient) pulumix.Output[int] { return v.AccessTokenValidity })
	return pulumix.Flatten[int, pulumix.Output[int]](value)
}

// List of allowed OAuth flows (code, implicit, client_credentials).
func (o UserPoolClientOutput) AllowedOauthFlows() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[UserPoolClient](o, func(v UserPoolClient) pulumix.ArrayOutput[string] { return v.AllowedOauthFlows })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// Whether the client is allowed to follow the OAuth protocol when interacting with Cognito user pools.
func (o UserPoolClientOutput) AllowedOauthFlowsUserPoolClient() pulumix.Output[bool] {
	value := pulumix.Apply[UserPoolClient](o, func(v UserPoolClient) pulumix.Output[bool] { return v.AllowedOauthFlowsUserPoolClient })
	return pulumix.Flatten[bool, pulumix.Output[bool]](value)
}

// List of allowed OAuth scopes (phone, email, openid, profile, and aws.cognito.signin.user.admin).
func (o UserPoolClientOutput) AllowedOauthScopes() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[UserPoolClient](o, func(v UserPoolClient) pulumix.ArrayOutput[string] { return v.AllowedOauthScopes })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// Configuration block for Amazon Pinpoint analytics for collecting metrics for this user pool. Detailed below.
func (o UserPoolClientOutput) AnalyticsConfiguration() pulumix.GPtrOutput[UserPoolClientAnalyticsConfiguration, UserPoolClientAnalyticsConfigurationOutput] {
	value := pulumix.Apply[UserPoolClient](o, func(v UserPoolClient) pulumix.GPtrOutput[UserPoolClientAnalyticsConfiguration, UserPoolClientAnalyticsConfigurationOutput] {
		return v.AnalyticsConfiguration
	})
	unwrapped := pulumix.Flatten[*UserPoolClientAnalyticsConfiguration, pulumix.GPtrOutput[UserPoolClientAnalyticsConfiguration, UserPoolClientAnalyticsConfigurationOutput]](value)
	return pulumix.GPtrOutput[UserPoolClientAnalyticsConfiguration, UserPoolClientAnalyticsConfigurationOutput]{OutputState: unwrapped.OutputState}
}

// Amazon Cognito creates a session token for each API request in an authentication flow. AuthSessionValidity is the duration, in minutes, of that session token. Your user pool native user must respond to each authentication challenge before the session expires. Valid values between `3` and `15`. Default value is `3`.
func (o UserPoolClientOutput) AuthSessionValidity() pulumix.Output[int] {
	value := pulumix.Apply[UserPoolClient](o, func(v UserPoolClient) pulumix.Output[int] { return v.AuthSessionValidity })
	return pulumix.Flatten[int, pulumix.Output[int]](value)
}

// List of allowed callback URLs for the identity providers.
func (o UserPoolClientOutput) CallbackUrls() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[UserPoolClient](o, func(v UserPoolClient) pulumix.ArrayOutput[string] { return v.CallbackUrls })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// Client secret of the user pool client.
func (o UserPoolClientOutput) ClientSecret() pulumix.Output[string] {
	value := pulumix.Apply[UserPoolClient](o, func(v UserPoolClient) pulumix.Output[string] { return v.ClientSecret })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Default redirect URI. Must be in the list of callback URLs.
func (o UserPoolClientOutput) DefaultRedirectUri() pulumix.Output[string] {
	value := pulumix.Apply[UserPoolClient](o, func(v UserPoolClient) pulumix.Output[string] { return v.DefaultRedirectUri })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Activates the propagation of additional user context data.
func (o UserPoolClientOutput) EnablePropagateAdditionalUserContextData() pulumix.Output[bool] {
	value := pulumix.Apply[UserPoolClient](o, func(v UserPoolClient) pulumix.Output[bool] { return v.EnablePropagateAdditionalUserContextData })
	return pulumix.Flatten[bool, pulumix.Output[bool]](value)
}

// Enables or disables token revocation.
func (o UserPoolClientOutput) EnableTokenRevocation() pulumix.Output[bool] {
	value := pulumix.Apply[UserPoolClient](o, func(v UserPoolClient) pulumix.Output[bool] { return v.EnableTokenRevocation })
	return pulumix.Flatten[bool, pulumix.Output[bool]](value)
}

// List of authentication flows (ADMIN_NO_SRP_AUTH, CUSTOM_AUTH_FLOW_ONLY, USER_PASSWORD_AUTH, ALLOW_ADMIN_USER_PASSWORD_AUTH, ALLOW_CUSTOM_AUTH, ALLOW_USER_PASSWORD_AUTH, ALLOW_USER_SRP_AUTH, ALLOW_REFRESH_TOKEN_AUTH).
func (o UserPoolClientOutput) ExplicitAuthFlows() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[UserPoolClient](o, func(v UserPoolClient) pulumix.ArrayOutput[string] { return v.ExplicitAuthFlows })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// Should an application secret be generated.
func (o UserPoolClientOutput) GenerateSecret() pulumix.Output[*bool] {
	value := pulumix.Apply[UserPoolClient](o, func(v UserPoolClient) pulumix.Output[*bool] { return v.GenerateSecret })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// Time limit, between 5 minutes and 1 day, after which the ID token is no longer valid and cannot be used.
// By default, the unit is hours.
// The unit can be overridden by a value in `token_validity_units.id_token`.
func (o UserPoolClientOutput) IdTokenValidity() pulumix.Output[int] {
	value := pulumix.Apply[UserPoolClient](o, func(v UserPoolClient) pulumix.Output[int] { return v.IdTokenValidity })
	return pulumix.Flatten[int, pulumix.Output[int]](value)
}

// List of allowed logout URLs for the identity providers.
func (o UserPoolClientOutput) LogoutUrls() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[UserPoolClient](o, func(v UserPoolClient) pulumix.ArrayOutput[string] { return v.LogoutUrls })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// Name of the application client.
func (o UserPoolClientOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[UserPoolClient](o, func(v UserPoolClient) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Choose which errors and responses are returned by Cognito APIs during authentication, account confirmation, and password recovery when the user does not exist in the user pool. When set to `ENABLED` and the user does not exist, authentication returns an error indicating either the username or password was incorrect, and account confirmation and password recovery return a response indicating a code was sent to a simulated destination. When set to `LEGACY`, those APIs will return a `UserNotFoundException` exception if the user does not exist in the user pool.
func (o UserPoolClientOutput) PreventUserExistenceErrors() pulumix.Output[string] {
	value := pulumix.Apply[UserPoolClient](o, func(v UserPoolClient) pulumix.Output[string] { return v.PreventUserExistenceErrors })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// List of user pool attributes the application client can read from.
func (o UserPoolClientOutput) ReadAttributes() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[UserPoolClient](o, func(v UserPoolClient) pulumix.ArrayOutput[string] { return v.ReadAttributes })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// Time limit, between 60 minutes and 10 years, after which the refresh token is no longer valid and cannot be used.
// By default, the unit is days.
// The unit can be overridden by a value in `token_validity_units.refresh_token`.
func (o UserPoolClientOutput) RefreshTokenValidity() pulumix.Output[int] {
	value := pulumix.Apply[UserPoolClient](o, func(v UserPoolClient) pulumix.Output[int] { return v.RefreshTokenValidity })
	return pulumix.Flatten[int, pulumix.Output[int]](value)
}

// List of provider names for the identity providers that are supported on this client. Uses the `providerName` attribute of `cognito.IdentityProvider` resource(s), or the equivalent string(s).
func (o UserPoolClientOutput) SupportedIdentityProviders() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[UserPoolClient](o, func(v UserPoolClient) pulumix.ArrayOutput[string] { return v.SupportedIdentityProviders })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// Configuration block for units in which the validity times are represented in. Detailed below.
func (o UserPoolClientOutput) TokenValidityUnits() pulumix.GPtrOutput[UserPoolClientTokenValidityUnits, UserPoolClientTokenValidityUnitsOutput] {
	value := pulumix.Apply[UserPoolClient](o, func(v UserPoolClient) pulumix.GPtrOutput[UserPoolClientTokenValidityUnits, UserPoolClientTokenValidityUnitsOutput] {
		return v.TokenValidityUnits
	})
	unwrapped := pulumix.Flatten[*UserPoolClientTokenValidityUnits, pulumix.GPtrOutput[UserPoolClientTokenValidityUnits, UserPoolClientTokenValidityUnitsOutput]](value)
	return pulumix.GPtrOutput[UserPoolClientTokenValidityUnits, UserPoolClientTokenValidityUnitsOutput]{OutputState: unwrapped.OutputState}
}

// User pool the client belongs to.
//
// The following arguments are optional:
func (o UserPoolClientOutput) UserPoolId() pulumix.Output[string] {
	value := pulumix.Apply[UserPoolClient](o, func(v UserPoolClient) pulumix.Output[string] { return v.UserPoolId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// List of user pool attributes the application client can write to.
func (o UserPoolClientOutput) WriteAttributes() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[UserPoolClient](o, func(v UserPoolClient) pulumix.ArrayOutput[string] { return v.WriteAttributes })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(UserPoolClientOutput{})
}
