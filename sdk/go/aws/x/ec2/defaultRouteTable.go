// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a resource to manage a default route table of a VPC. This resource can manage the default route table of the default or a non-default VPC.
//
// > **NOTE:** This is an advanced resource with special caveats. Please read this document in its entirety before using this resource. The `ec2.DefaultRouteTable` resource behaves differently from normal resources. This provider does not _create_ this resource but instead attempts to "adopt" it into management. **Do not** use both `ec2.DefaultRouteTable` to manage a default route table **and** `ec2.MainRouteTableAssociation` with the same VPC due to possible route conflicts. See ec2.MainRouteTableAssociation documentation for more details.
//
// Every VPC has a default route table that can be managed but not destroyed. When the provider first adopts a default route table, it **immediately removes all defined routes**. It then proceeds to create any routes specified in the configuration. This step is required so that only the routes specified in the configuration exist in the default route table.
//
// For more information, see the Amazon VPC User Guide on [Route Tables](https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Route_Tables.html). For information about managing normal route tables in this provider, see `ec2.RouteTable`.
type DefaultRouteTable struct {
	pulumi.CustomResourceState

	// The ARN of the route table.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// ID of the default route table.
	//
	// The following arguments are optional:
	DefaultRouteTableId pulumix.Output[string] `pulumi:"defaultRouteTableId"`
	// ID of the AWS account that owns the route table.
	OwnerId pulumix.Output[string] `pulumi:"ownerId"`
	// List of virtual gateways for propagation.
	PropagatingVgws pulumix.ArrayOutput[string] `pulumi:"propagatingVgws"`
	// Set of objects. Detailed below
	Routes pulumix.GArrayOutput[DefaultRouteTableRoute, DefaultRouteTableRouteOutput] `pulumi:"routes"`
	// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// ID of the VPC.
	VpcId pulumix.Output[string] `pulumi:"vpcId"`
}

// NewDefaultRouteTable registers a new resource with the given unique name, arguments, and options.
func NewDefaultRouteTable(ctx *pulumi.Context,
	name string, args *DefaultRouteTableArgs, opts ...pulumi.ResourceOption) (*DefaultRouteTable, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DefaultRouteTableId == nil {
		return nil, errors.New("invalid value for required argument 'DefaultRouteTableId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DefaultRouteTable
	err := ctx.RegisterResource("aws:ec2/defaultRouteTable:DefaultRouteTable", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDefaultRouteTable gets an existing DefaultRouteTable resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDefaultRouteTable(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DefaultRouteTableState, opts ...pulumi.ResourceOption) (*DefaultRouteTable, error) {
	var resource DefaultRouteTable
	err := ctx.ReadResource("aws:ec2/defaultRouteTable:DefaultRouteTable", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DefaultRouteTable resources.
type defaultRouteTableState struct {
	// The ARN of the route table.
	Arn *string `pulumi:"arn"`
	// ID of the default route table.
	//
	// The following arguments are optional:
	DefaultRouteTableId *string `pulumi:"defaultRouteTableId"`
	// ID of the AWS account that owns the route table.
	OwnerId *string `pulumi:"ownerId"`
	// List of virtual gateways for propagation.
	PropagatingVgws []string `pulumi:"propagatingVgws"`
	// Set of objects. Detailed below
	Routes []DefaultRouteTableRoute `pulumi:"routes"`
	// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// ID of the VPC.
	VpcId *string `pulumi:"vpcId"`
}

type DefaultRouteTableState struct {
	// The ARN of the route table.
	Arn pulumix.Input[*string]
	// ID of the default route table.
	//
	// The following arguments are optional:
	DefaultRouteTableId pulumix.Input[*string]
	// ID of the AWS account that owns the route table.
	OwnerId pulumix.Input[*string]
	// List of virtual gateways for propagation.
	PropagatingVgws pulumix.Input[[]string]
	// Set of objects. Detailed below
	Routes pulumix.Input[[]*DefaultRouteTableRouteArgs]
	// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// ID of the VPC.
	VpcId pulumix.Input[*string]
}

func (DefaultRouteTableState) ElementType() reflect.Type {
	return reflect.TypeOf((*defaultRouteTableState)(nil)).Elem()
}

type defaultRouteTableArgs struct {
	// ID of the default route table.
	//
	// The following arguments are optional:
	DefaultRouteTableId string `pulumi:"defaultRouteTableId"`
	// List of virtual gateways for propagation.
	PropagatingVgws []string `pulumi:"propagatingVgws"`
	// Set of objects. Detailed below
	Routes []DefaultRouteTableRoute `pulumi:"routes"`
	// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a DefaultRouteTable resource.
type DefaultRouteTableArgs struct {
	// ID of the default route table.
	//
	// The following arguments are optional:
	DefaultRouteTableId pulumix.Input[string]
	// List of virtual gateways for propagation.
	PropagatingVgws pulumix.Input[[]string]
	// Set of objects. Detailed below
	Routes pulumix.Input[[]*DefaultRouteTableRouteArgs]
	// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (DefaultRouteTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*defaultRouteTableArgs)(nil)).Elem()
}

type DefaultRouteTableOutput struct{ *pulumi.OutputState }

func (DefaultRouteTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultRouteTable)(nil)).Elem()
}

func (o DefaultRouteTableOutput) ToDefaultRouteTableOutput() DefaultRouteTableOutput {
	return o
}

func (o DefaultRouteTableOutput) ToDefaultRouteTableOutputWithContext(ctx context.Context) DefaultRouteTableOutput {
	return o
}

func (o DefaultRouteTableOutput) ToOutput(ctx context.Context) pulumix.Output[DefaultRouteTable] {
	return pulumix.Output[DefaultRouteTable]{
		OutputState: o.OutputState,
	}
}

// The ARN of the route table.
func (o DefaultRouteTableOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[DefaultRouteTable](o, func(v DefaultRouteTable) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// ID of the default route table.
//
// The following arguments are optional:
func (o DefaultRouteTableOutput) DefaultRouteTableId() pulumix.Output[string] {
	value := pulumix.Apply[DefaultRouteTable](o, func(v DefaultRouteTable) pulumix.Output[string] { return v.DefaultRouteTableId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// ID of the AWS account that owns the route table.
func (o DefaultRouteTableOutput) OwnerId() pulumix.Output[string] {
	value := pulumix.Apply[DefaultRouteTable](o, func(v DefaultRouteTable) pulumix.Output[string] { return v.OwnerId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// List of virtual gateways for propagation.
func (o DefaultRouteTableOutput) PropagatingVgws() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[DefaultRouteTable](o, func(v DefaultRouteTable) pulumix.ArrayOutput[string] { return v.PropagatingVgws })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// Set of objects. Detailed below
func (o DefaultRouteTableOutput) Routes() pulumix.GArrayOutput[DefaultRouteTableRoute, DefaultRouteTableRouteOutput] {
	value := pulumix.Apply[DefaultRouteTable](o, func(v DefaultRouteTable) pulumix.GArrayOutput[DefaultRouteTableRoute, DefaultRouteTableRouteOutput] {
		return v.Routes
	})
	unwrapped := pulumix.Flatten[[]DefaultRouteTableRoute, pulumix.GArrayOutput[DefaultRouteTableRoute, DefaultRouteTableRouteOutput]](value)
	return pulumix.GArrayOutput[DefaultRouteTableRoute, DefaultRouteTableRouteOutput]{OutputState: unwrapped.OutputState}
}

// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o DefaultRouteTableOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[DefaultRouteTable](o, func(v DefaultRouteTable) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o DefaultRouteTableOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[DefaultRouteTable](o, func(v DefaultRouteTable) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// ID of the VPC.
func (o DefaultRouteTableOutput) VpcId() pulumix.Output[string] {
	value := pulumix.Apply[DefaultRouteTable](o, func(v DefaultRouteTable) pulumix.Output[string] { return v.VpcId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(DefaultRouteTableOutput{})
}
