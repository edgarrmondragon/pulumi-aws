// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package connect

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an Amazon Connect instance resource. For more information see
// [Amazon Connect: Getting Started](https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-get-started.html)
//
// !> **WARN:** Amazon Connect enforces a limit of [100 combined instance creation and deletions every 30 days](https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html#feature-limits).  For example, if you create 80 instances and delete 20 of them, you must wait 30 days to create or delete another instance.  Use care when creating or deleting instances.
type Instance struct {
	pulumi.CustomResourceState

	// Amazon Resource Name (ARN) of the instance.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// Specifies whether auto resolve best voices is enabled. Defaults to `true`.
	AutoResolveBestVoicesEnabled pulumix.Output[*bool] `pulumi:"autoResolveBestVoicesEnabled"`
	// Specifies whether contact flow logs are enabled. Defaults to `false`.
	ContactFlowLogsEnabled pulumix.Output[*bool] `pulumi:"contactFlowLogsEnabled"`
	// Specifies whether contact lens is enabled. Defaults to `true`.
	ContactLensEnabled pulumix.Output[*bool] `pulumi:"contactLensEnabled"`
	// When the instance was created.
	CreatedTime pulumix.Output[string] `pulumi:"createdTime"`
	// The identifier for the directory if identityManagementType is `EXISTING_DIRECTORY`.
	DirectoryId pulumix.Output[*string] `pulumi:"directoryId"`
	// Specifies whether early media for outbound calls is enabled . Defaults to `true` if outbound calls is enabled.
	EarlyMediaEnabled pulumix.Output[*bool] `pulumi:"earlyMediaEnabled"`
	// Specifies the identity management type attached to the instance. Allowed Values are: `SAML`, `CONNECT_MANAGED`, `EXISTING_DIRECTORY`.
	IdentityManagementType pulumix.Output[string] `pulumi:"identityManagementType"`
	// Specifies whether inbound calls are enabled.
	InboundCallsEnabled pulumix.Output[bool] `pulumi:"inboundCallsEnabled"`
	// Specifies the name of the instance. Required if `directoryId` not specified.
	InstanceAlias pulumix.Output[*string] `pulumi:"instanceAlias"`
	// Specifies whether multi-party calls/conference is enabled. Defaults to `false`.
	MultiPartyConferenceEnabled pulumix.Output[*bool] `pulumi:"multiPartyConferenceEnabled"`
	// Specifies whether outbound calls are enabled.
	// <!-- * `useCustomTtsVoices` - (Optional) Whether use custom tts voices is enabled. Defaults to `false` -->
	OutboundCallsEnabled pulumix.Output[bool] `pulumi:"outboundCallsEnabled"`
	// The service role of the instance.
	ServiceRole pulumix.Output[string] `pulumi:"serviceRole"`
	// The state of the instance.
	Status pulumix.Output[string] `pulumi:"status"`
}

// NewInstance registers a new resource with the given unique name, arguments, and options.
func NewInstance(ctx *pulumi.Context,
	name string, args *InstanceArgs, opts ...pulumi.ResourceOption) (*Instance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.IdentityManagementType == nil {
		return nil, errors.New("invalid value for required argument 'IdentityManagementType'")
	}
	if args.InboundCallsEnabled == nil {
		return nil, errors.New("invalid value for required argument 'InboundCallsEnabled'")
	}
	if args.OutboundCallsEnabled == nil {
		return nil, errors.New("invalid value for required argument 'OutboundCallsEnabled'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Instance
	err := ctx.RegisterResource("aws:connect/instance:Instance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInstance gets an existing Instance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InstanceState, opts ...pulumi.ResourceOption) (*Instance, error) {
	var resource Instance
	err := ctx.ReadResource("aws:connect/instance:Instance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Instance resources.
type instanceState struct {
	// Amazon Resource Name (ARN) of the instance.
	Arn *string `pulumi:"arn"`
	// Specifies whether auto resolve best voices is enabled. Defaults to `true`.
	AutoResolveBestVoicesEnabled *bool `pulumi:"autoResolveBestVoicesEnabled"`
	// Specifies whether contact flow logs are enabled. Defaults to `false`.
	ContactFlowLogsEnabled *bool `pulumi:"contactFlowLogsEnabled"`
	// Specifies whether contact lens is enabled. Defaults to `true`.
	ContactLensEnabled *bool `pulumi:"contactLensEnabled"`
	// When the instance was created.
	CreatedTime *string `pulumi:"createdTime"`
	// The identifier for the directory if identityManagementType is `EXISTING_DIRECTORY`.
	DirectoryId *string `pulumi:"directoryId"`
	// Specifies whether early media for outbound calls is enabled . Defaults to `true` if outbound calls is enabled.
	EarlyMediaEnabled *bool `pulumi:"earlyMediaEnabled"`
	// Specifies the identity management type attached to the instance. Allowed Values are: `SAML`, `CONNECT_MANAGED`, `EXISTING_DIRECTORY`.
	IdentityManagementType *string `pulumi:"identityManagementType"`
	// Specifies whether inbound calls are enabled.
	InboundCallsEnabled *bool `pulumi:"inboundCallsEnabled"`
	// Specifies the name of the instance. Required if `directoryId` not specified.
	InstanceAlias *string `pulumi:"instanceAlias"`
	// Specifies whether multi-party calls/conference is enabled. Defaults to `false`.
	MultiPartyConferenceEnabled *bool `pulumi:"multiPartyConferenceEnabled"`
	// Specifies whether outbound calls are enabled.
	// <!-- * `useCustomTtsVoices` - (Optional) Whether use custom tts voices is enabled. Defaults to `false` -->
	OutboundCallsEnabled *bool `pulumi:"outboundCallsEnabled"`
	// The service role of the instance.
	ServiceRole *string `pulumi:"serviceRole"`
	// The state of the instance.
	Status *string `pulumi:"status"`
}

type InstanceState struct {
	// Amazon Resource Name (ARN) of the instance.
	Arn pulumix.Input[*string]
	// Specifies whether auto resolve best voices is enabled. Defaults to `true`.
	AutoResolveBestVoicesEnabled pulumix.Input[*bool]
	// Specifies whether contact flow logs are enabled. Defaults to `false`.
	ContactFlowLogsEnabled pulumix.Input[*bool]
	// Specifies whether contact lens is enabled. Defaults to `true`.
	ContactLensEnabled pulumix.Input[*bool]
	// When the instance was created.
	CreatedTime pulumix.Input[*string]
	// The identifier for the directory if identityManagementType is `EXISTING_DIRECTORY`.
	DirectoryId pulumix.Input[*string]
	// Specifies whether early media for outbound calls is enabled . Defaults to `true` if outbound calls is enabled.
	EarlyMediaEnabled pulumix.Input[*bool]
	// Specifies the identity management type attached to the instance. Allowed Values are: `SAML`, `CONNECT_MANAGED`, `EXISTING_DIRECTORY`.
	IdentityManagementType pulumix.Input[*string]
	// Specifies whether inbound calls are enabled.
	InboundCallsEnabled pulumix.Input[*bool]
	// Specifies the name of the instance. Required if `directoryId` not specified.
	InstanceAlias pulumix.Input[*string]
	// Specifies whether multi-party calls/conference is enabled. Defaults to `false`.
	MultiPartyConferenceEnabled pulumix.Input[*bool]
	// Specifies whether outbound calls are enabled.
	// <!-- * `useCustomTtsVoices` - (Optional) Whether use custom tts voices is enabled. Defaults to `false` -->
	OutboundCallsEnabled pulumix.Input[*bool]
	// The service role of the instance.
	ServiceRole pulumix.Input[*string]
	// The state of the instance.
	Status pulumix.Input[*string]
}

func (InstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceState)(nil)).Elem()
}

type instanceArgs struct {
	// Specifies whether auto resolve best voices is enabled. Defaults to `true`.
	AutoResolveBestVoicesEnabled *bool `pulumi:"autoResolveBestVoicesEnabled"`
	// Specifies whether contact flow logs are enabled. Defaults to `false`.
	ContactFlowLogsEnabled *bool `pulumi:"contactFlowLogsEnabled"`
	// Specifies whether contact lens is enabled. Defaults to `true`.
	ContactLensEnabled *bool `pulumi:"contactLensEnabled"`
	// The identifier for the directory if identityManagementType is `EXISTING_DIRECTORY`.
	DirectoryId *string `pulumi:"directoryId"`
	// Specifies whether early media for outbound calls is enabled . Defaults to `true` if outbound calls is enabled.
	EarlyMediaEnabled *bool `pulumi:"earlyMediaEnabled"`
	// Specifies the identity management type attached to the instance. Allowed Values are: `SAML`, `CONNECT_MANAGED`, `EXISTING_DIRECTORY`.
	IdentityManagementType string `pulumi:"identityManagementType"`
	// Specifies whether inbound calls are enabled.
	InboundCallsEnabled bool `pulumi:"inboundCallsEnabled"`
	// Specifies the name of the instance. Required if `directoryId` not specified.
	InstanceAlias *string `pulumi:"instanceAlias"`
	// Specifies whether multi-party calls/conference is enabled. Defaults to `false`.
	MultiPartyConferenceEnabled *bool `pulumi:"multiPartyConferenceEnabled"`
	// Specifies whether outbound calls are enabled.
	// <!-- * `useCustomTtsVoices` - (Optional) Whether use custom tts voices is enabled. Defaults to `false` -->
	OutboundCallsEnabled bool `pulumi:"outboundCallsEnabled"`
}

// The set of arguments for constructing a Instance resource.
type InstanceArgs struct {
	// Specifies whether auto resolve best voices is enabled. Defaults to `true`.
	AutoResolveBestVoicesEnabled pulumix.Input[*bool]
	// Specifies whether contact flow logs are enabled. Defaults to `false`.
	ContactFlowLogsEnabled pulumix.Input[*bool]
	// Specifies whether contact lens is enabled. Defaults to `true`.
	ContactLensEnabled pulumix.Input[*bool]
	// The identifier for the directory if identityManagementType is `EXISTING_DIRECTORY`.
	DirectoryId pulumix.Input[*string]
	// Specifies whether early media for outbound calls is enabled . Defaults to `true` if outbound calls is enabled.
	EarlyMediaEnabled pulumix.Input[*bool]
	// Specifies the identity management type attached to the instance. Allowed Values are: `SAML`, `CONNECT_MANAGED`, `EXISTING_DIRECTORY`.
	IdentityManagementType pulumix.Input[string]
	// Specifies whether inbound calls are enabled.
	InboundCallsEnabled pulumix.Input[bool]
	// Specifies the name of the instance. Required if `directoryId` not specified.
	InstanceAlias pulumix.Input[*string]
	// Specifies whether multi-party calls/conference is enabled. Defaults to `false`.
	MultiPartyConferenceEnabled pulumix.Input[*bool]
	// Specifies whether outbound calls are enabled.
	// <!-- * `useCustomTtsVoices` - (Optional) Whether use custom tts voices is enabled. Defaults to `false` -->
	OutboundCallsEnabled pulumix.Input[bool]
}

func (InstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceArgs)(nil)).Elem()
}

type InstanceOutput struct{ *pulumi.OutputState }

func (InstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Instance)(nil)).Elem()
}

func (o InstanceOutput) ToInstanceOutput() InstanceOutput {
	return o
}

func (o InstanceOutput) ToInstanceOutputWithContext(ctx context.Context) InstanceOutput {
	return o
}

func (o InstanceOutput) ToOutput(ctx context.Context) pulumix.Output[Instance] {
	return pulumix.Output[Instance]{
		OutputState: o.OutputState,
	}
}

// Amazon Resource Name (ARN) of the instance.
func (o InstanceOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Specifies whether auto resolve best voices is enabled. Defaults to `true`.
func (o InstanceOutput) AutoResolveBestVoicesEnabled() pulumix.Output[*bool] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.Output[*bool] { return v.AutoResolveBestVoicesEnabled })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// Specifies whether contact flow logs are enabled. Defaults to `false`.
func (o InstanceOutput) ContactFlowLogsEnabled() pulumix.Output[*bool] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.Output[*bool] { return v.ContactFlowLogsEnabled })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// Specifies whether contact lens is enabled. Defaults to `true`.
func (o InstanceOutput) ContactLensEnabled() pulumix.Output[*bool] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.Output[*bool] { return v.ContactLensEnabled })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// When the instance was created.
func (o InstanceOutput) CreatedTime() pulumix.Output[string] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.Output[string] { return v.CreatedTime })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The identifier for the directory if identityManagementType is `EXISTING_DIRECTORY`.
func (o InstanceOutput) DirectoryId() pulumix.Output[*string] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.Output[*string] { return v.DirectoryId })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Specifies whether early media for outbound calls is enabled . Defaults to `true` if outbound calls is enabled.
func (o InstanceOutput) EarlyMediaEnabled() pulumix.Output[*bool] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.Output[*bool] { return v.EarlyMediaEnabled })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// Specifies the identity management type attached to the instance. Allowed Values are: `SAML`, `CONNECT_MANAGED`, `EXISTING_DIRECTORY`.
func (o InstanceOutput) IdentityManagementType() pulumix.Output[string] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.Output[string] { return v.IdentityManagementType })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Specifies whether inbound calls are enabled.
func (o InstanceOutput) InboundCallsEnabled() pulumix.Output[bool] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.Output[bool] { return v.InboundCallsEnabled })
	return pulumix.Flatten[bool, pulumix.Output[bool]](value)
}

// Specifies the name of the instance. Required if `directoryId` not specified.
func (o InstanceOutput) InstanceAlias() pulumix.Output[*string] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.Output[*string] { return v.InstanceAlias })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Specifies whether multi-party calls/conference is enabled. Defaults to `false`.
func (o InstanceOutput) MultiPartyConferenceEnabled() pulumix.Output[*bool] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.Output[*bool] { return v.MultiPartyConferenceEnabled })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// Specifies whether outbound calls are enabled.
// <!-- * `useCustomTtsVoices` - (Optional) Whether use custom tts voices is enabled. Defaults to `false` -->
func (o InstanceOutput) OutboundCallsEnabled() pulumix.Output[bool] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.Output[bool] { return v.OutboundCallsEnabled })
	return pulumix.Flatten[bool, pulumix.Output[bool]](value)
}

// The service role of the instance.
func (o InstanceOutput) ServiceRole() pulumix.Output[string] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.Output[string] { return v.ServiceRole })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The state of the instance.
func (o InstanceOutput) Status() pulumix.Output[string] {
	value := pulumix.Apply[Instance](o, func(v Instance) pulumix.Output[string] { return v.Status })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(InstanceOutput{})
}
