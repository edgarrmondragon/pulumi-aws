// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package resourceexplorer

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type IndexTimeouts struct {
	Create *string `pulumi:"create"`
	Delete *string `pulumi:"delete"`
	Update *string `pulumi:"update"`
}

type IndexTimeoutsArgs struct {
	Create pulumix.Input[*string] `pulumi:"create"`
	Delete pulumix.Input[*string] `pulumi:"delete"`
	Update pulumix.Input[*string] `pulumi:"update"`
}

func (IndexTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexTimeouts)(nil)).Elem()
}

func (i IndexTimeoutsArgs) ToIndexTimeoutsOutput() IndexTimeoutsOutput {
	return i.ToIndexTimeoutsOutputWithContext(context.Background())
}

func (i IndexTimeoutsArgs) ToIndexTimeoutsOutputWithContext(ctx context.Context) IndexTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexTimeoutsOutput)
}

func (i *IndexTimeoutsArgs) ToOutput(ctx context.Context) pulumix.Output[*IndexTimeoutsArgs] {
	return pulumix.Val(i)
}

type IndexTimeoutsOutput struct{ *pulumi.OutputState }

func (IndexTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexTimeouts)(nil)).Elem()
}

func (o IndexTimeoutsOutput) ToIndexTimeoutsOutput() IndexTimeoutsOutput {
	return o
}

func (o IndexTimeoutsOutput) ToIndexTimeoutsOutputWithContext(ctx context.Context) IndexTimeoutsOutput {
	return o
}

func (o IndexTimeoutsOutput) ToOutput(ctx context.Context) pulumix.Output[IndexTimeouts] {
	return pulumix.Output[IndexTimeouts]{
		OutputState: o.OutputState,
	}
}

func (o IndexTimeoutsOutput) Create() pulumix.Output[*string] {
	return pulumix.Apply[IndexTimeouts](o, func(v IndexTimeouts) *string { return v.Create })
}

func (o IndexTimeoutsOutput) Delete() pulumix.Output[*string] {
	return pulumix.Apply[IndexTimeouts](o, func(v IndexTimeouts) *string { return v.Delete })
}

func (o IndexTimeoutsOutput) Update() pulumix.Output[*string] {
	return pulumix.Apply[IndexTimeouts](o, func(v IndexTimeouts) *string { return v.Update })
}

type ViewFilters struct {
	// The string that contains the search keywords, prefixes, and operators to control the results that can be returned by a search operation. For more details, see [Search query syntax](https://docs.aws.amazon.com/resource-explorer/latest/userguide/using-search-query-syntax.html).
	FilterString string `pulumi:"filterString"`
}

type ViewFiltersArgs struct {
	// The string that contains the search keywords, prefixes, and operators to control the results that can be returned by a search operation. For more details, see [Search query syntax](https://docs.aws.amazon.com/resource-explorer/latest/userguide/using-search-query-syntax.html).
	FilterString pulumix.Input[string] `pulumi:"filterString"`
}

func (ViewFiltersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ViewFilters)(nil)).Elem()
}

func (i ViewFiltersArgs) ToViewFiltersOutput() ViewFiltersOutput {
	return i.ToViewFiltersOutputWithContext(context.Background())
}

func (i ViewFiltersArgs) ToViewFiltersOutputWithContext(ctx context.Context) ViewFiltersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ViewFiltersOutput)
}

func (i *ViewFiltersArgs) ToOutput(ctx context.Context) pulumix.Output[*ViewFiltersArgs] {
	return pulumix.Val(i)
}

type ViewFiltersOutput struct{ *pulumi.OutputState }

func (ViewFiltersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ViewFilters)(nil)).Elem()
}

func (o ViewFiltersOutput) ToViewFiltersOutput() ViewFiltersOutput {
	return o
}

func (o ViewFiltersOutput) ToViewFiltersOutputWithContext(ctx context.Context) ViewFiltersOutput {
	return o
}

func (o ViewFiltersOutput) ToOutput(ctx context.Context) pulumix.Output[ViewFilters] {
	return pulumix.Output[ViewFilters]{
		OutputState: o.OutputState,
	}
}

// The string that contains the search keywords, prefixes, and operators to control the results that can be returned by a search operation. For more details, see [Search query syntax](https://docs.aws.amazon.com/resource-explorer/latest/userguide/using-search-query-syntax.html).
func (o ViewFiltersOutput) FilterString() pulumix.Output[string] {
	return pulumix.Apply[ViewFilters](o, func(v ViewFilters) string { return v.FilterString })
}

type ViewIncludedProperty struct {
	// The name of the property that is included in this view. Valid values: `tags`.
	Name string `pulumi:"name"`
}

type ViewIncludedPropertyArgs struct {
	// The name of the property that is included in this view. Valid values: `tags`.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (ViewIncludedPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ViewIncludedProperty)(nil)).Elem()
}

func (i ViewIncludedPropertyArgs) ToViewIncludedPropertyOutput() ViewIncludedPropertyOutput {
	return i.ToViewIncludedPropertyOutputWithContext(context.Background())
}

func (i ViewIncludedPropertyArgs) ToViewIncludedPropertyOutputWithContext(ctx context.Context) ViewIncludedPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ViewIncludedPropertyOutput)
}

func (i *ViewIncludedPropertyArgs) ToOutput(ctx context.Context) pulumix.Output[*ViewIncludedPropertyArgs] {
	return pulumix.Val(i)
}

type ViewIncludedPropertyOutput struct{ *pulumi.OutputState }

func (ViewIncludedPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ViewIncludedProperty)(nil)).Elem()
}

func (o ViewIncludedPropertyOutput) ToViewIncludedPropertyOutput() ViewIncludedPropertyOutput {
	return o
}

func (o ViewIncludedPropertyOutput) ToViewIncludedPropertyOutputWithContext(ctx context.Context) ViewIncludedPropertyOutput {
	return o
}

func (o ViewIncludedPropertyOutput) ToOutput(ctx context.Context) pulumix.Output[ViewIncludedProperty] {
	return pulumix.Output[ViewIncludedProperty]{
		OutputState: o.OutputState,
	}
}

// The name of the property that is included in this view. Valid values: `tags`.
func (o ViewIncludedPropertyOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[ViewIncludedProperty](o, func(v ViewIncludedProperty) string { return v.Name })
}

func init() {
	pulumi.RegisterOutputType(IndexTimeoutsOutput{})
	pulumi.RegisterOutputType(ViewFiltersOutput{})
	pulumi.RegisterOutputType(ViewIncludedPropertyOutput{})
}
