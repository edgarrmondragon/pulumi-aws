// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package route53

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// `route53.Zone` provides details about a specific Route 53 Hosted Zone.
//
// This data source allows to find a Hosted Zone ID given Hosted Zone name and certain search criteria.
func LookupZone(ctx *pulumi.Context, args *LookupZoneArgs, opts ...pulumi.InvokeOption) (*LookupZoneResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupZoneResult
	err := ctx.Invoke("aws:route53/getZone:getZone", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getZone.
type LookupZoneArgs struct {
	// Hosted Zone name of the desired Hosted Zone.
	Name *string `pulumi:"name"`
	// Used with `name` field to get a private Hosted Zone.
	PrivateZone *bool `pulumi:"privateZone"`
	// The number of Record Set in the Hosted Zone.
	ResourceRecordSetCount *int `pulumi:"resourceRecordSetCount"`
	// Used with `name` field. A map of tags, each pair of which must exactly match a pair on the desired Hosted Zone.
	Tags map[string]string `pulumi:"tags"`
	// Used with `name` field to get a private Hosted Zone associated with the vpcId (in this case, privateZone is not mandatory).
	VpcId *string `pulumi:"vpcId"`
	// Hosted Zone id of the desired Hosted Zone.
	ZoneId *string `pulumi:"zoneId"`
}

// A collection of values returned by getZone.
type LookupZoneResult struct {
	// ARN of the Hosted Zone.
	Arn string `pulumi:"arn"`
	// Caller Reference of the Hosted Zone.
	CallerReference string `pulumi:"callerReference"`
	// Comment field of the Hosted Zone.
	Comment string `pulumi:"comment"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The description provided by the service that created the Hosted Zone (e.g., `arn:aws:servicediscovery:us-east-1:1234567890:namespace/ns-xxxxxxxxxxxxxxxx`).
	LinkedServiceDescription string `pulumi:"linkedServiceDescription"`
	// The service that created the Hosted Zone (e.g., `servicediscovery.amazonaws.com`).
	LinkedServicePrincipal string `pulumi:"linkedServicePrincipal"`
	Name                   string `pulumi:"name"`
	// List of DNS name servers for the Hosted Zone.
	NameServers []string `pulumi:"nameServers"`
	// The Route 53 name server that created the SOA record.
	PrimaryNameServer string `pulumi:"primaryNameServer"`
	PrivateZone       *bool  `pulumi:"privateZone"`
	// The number of Record Set in the Hosted Zone.
	ResourceRecordSetCount int               `pulumi:"resourceRecordSetCount"`
	Tags                   map[string]string `pulumi:"tags"`
	VpcId                  string            `pulumi:"vpcId"`
	ZoneId                 string            `pulumi:"zoneId"`
}

func LookupZoneOutput(ctx *pulumi.Context, args LookupZoneOutputArgs, opts ...pulumi.InvokeOption) LookupZoneResultOutput {
	outputResult := pulumix.ApplyErr[*LookupZoneArgs](args.ToOutput(), func(plainArgs *LookupZoneArgs) (*LookupZoneResult, error) {
		return LookupZone(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[LookupZoneResultOutput, *LookupZoneResult](outputResult)
}

// A collection of arguments for invoking getZone.
type LookupZoneOutputArgs struct {
	// Hosted Zone name of the desired Hosted Zone.
	Name pulumix.Input[*string] `pulumi:"name"`
	// Used with `name` field to get a private Hosted Zone.
	PrivateZone pulumix.Input[*bool] `pulumi:"privateZone"`
	// The number of Record Set in the Hosted Zone.
	ResourceRecordSetCount pulumix.Input[*int] `pulumi:"resourceRecordSetCount"`
	// Used with `name` field. A map of tags, each pair of which must exactly match a pair on the desired Hosted Zone.
	Tags pulumix.Input[map[string]string] `pulumi:"tags"`
	// Used with `name` field to get a private Hosted Zone associated with the vpcId (in this case, privateZone is not mandatory).
	VpcId pulumix.Input[*string] `pulumi:"vpcId"`
	// Hosted Zone id of the desired Hosted Zone.
	ZoneId pulumix.Input[*string] `pulumi:"zoneId"`
}

func (args LookupZoneOutputArgs) ToOutput() pulumix.Output[*LookupZoneArgs] {
	allArgs := pulumix.All(
		args.Name.ToOutput(context.Background()).AsAny(),
		args.PrivateZone.ToOutput(context.Background()).AsAny(),
		args.ResourceRecordSetCount.ToOutput(context.Background()).AsAny(),
		args.Tags.ToOutput(context.Background()).AsAny(),
		args.VpcId.ToOutput(context.Background()).AsAny(),
		args.ZoneId.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *LookupZoneArgs {
		return &LookupZoneArgs{
			Name:                   resolvedArgs[0].(*string),
			PrivateZone:            resolvedArgs[1].(*bool),
			ResourceRecordSetCount: resolvedArgs[2].(*int),
			Tags:                   resolvedArgs[3].(map[string]string),
			VpcId:                  resolvedArgs[4].(*string),
			ZoneId:                 resolvedArgs[5].(*string),
		}
	})
}

type LookupZoneResultOutput struct{ *pulumi.OutputState }

func (LookupZoneResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupZoneResult)(nil)).Elem()
}

func (o LookupZoneResultOutput) ToOutput(context.Context) pulumix.Output[*LookupZoneResult] {
	return pulumix.Output[*LookupZoneResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupZoneResultOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[*LookupZoneResult](o, func(v *LookupZoneResult) string { return v.Arn })
}

func (o LookupZoneResultOutput) CallerReference() pulumix.Output[string] {
	return pulumix.Apply[*LookupZoneResult](o, func(v *LookupZoneResult) string { return v.CallerReference })
}

func (o LookupZoneResultOutput) Comment() pulumix.Output[string] {
	return pulumix.Apply[*LookupZoneResult](o, func(v *LookupZoneResult) string { return v.Comment })
}

func (o LookupZoneResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*LookupZoneResult](o, func(v *LookupZoneResult) string { return v.Id })
}

func (o LookupZoneResultOutput) LinkedServiceDescription() pulumix.Output[string] {
	return pulumix.Apply[*LookupZoneResult](o, func(v *LookupZoneResult) string { return v.LinkedServiceDescription })
}

func (o LookupZoneResultOutput) LinkedServicePrincipal() pulumix.Output[string] {
	return pulumix.Apply[*LookupZoneResult](o, func(v *LookupZoneResult) string { return v.LinkedServicePrincipal })
}

func (o LookupZoneResultOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[*LookupZoneResult](o, func(v *LookupZoneResult) string { return v.Name })
}

func (o LookupZoneResultOutput) NameServers() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[*LookupZoneResult](o, func(v *LookupZoneResult) []string { return v.NameServers })
	return pulumix.ArrayOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o LookupZoneResultOutput) PrimaryNameServer() pulumix.Output[string] {
	return pulumix.Apply[*LookupZoneResult](o, func(v *LookupZoneResult) string { return v.PrimaryNameServer })
}

func (o LookupZoneResultOutput) PrivateZone() pulumix.Output[*bool] {
	return pulumix.Apply[*LookupZoneResult](o, func(v *LookupZoneResult) *bool { return v.PrivateZone })
}

func (o LookupZoneResultOutput) ResourceRecordSetCount() pulumix.Output[int] {
	return pulumix.Apply[*LookupZoneResult](o, func(v *LookupZoneResult) int { return v.ResourceRecordSetCount })
}

func (o LookupZoneResultOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[*LookupZoneResult](o, func(v *LookupZoneResult) map[string]string { return v.Tags })
	return pulumix.MapOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o LookupZoneResultOutput) VpcId() pulumix.Output[string] {
	return pulumix.Apply[*LookupZoneResult](o, func(v *LookupZoneResult) string { return v.VpcId })
}

func (o LookupZoneResultOutput) ZoneId() pulumix.Output[string] {
	return pulumix.Apply[*LookupZoneResult](o, func(v *LookupZoneResult) string { return v.ZoneId })
}
