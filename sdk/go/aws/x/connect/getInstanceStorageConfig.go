// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package connect

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides details about a specific Amazon Connect Instance Storage Config.
func LookupInstanceStorageConfig(ctx *pulumi.Context, args *LookupInstanceStorageConfigArgs, opts ...pulumi.InvokeOption) (*LookupInstanceStorageConfigResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupInstanceStorageConfigResult
	err := ctx.Invoke("aws:connect/getInstanceStorageConfig:getInstanceStorageConfig", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getInstanceStorageConfig.
type LookupInstanceStorageConfigArgs struct {
	// The existing association identifier that uniquely identifies the resource type and storage config for the given instance ID.
	AssociationId string `pulumi:"associationId"`
	// Reference to the hosting Amazon Connect Instance
	InstanceId string `pulumi:"instanceId"`
	// A valid resource type. Valid Values: `CHAT_TRANSCRIPTS` | `CALL_RECORDINGS` | `SCHEDULED_REPORTS` | `MEDIA_STREAMS` | `CONTACT_TRACE_RECORDS` | `AGENT_EVENTS` | `REAL_TIME_CONTACT_ANALYSIS_SEGMENTS`.
	ResourceType string `pulumi:"resourceType"`
}

// A collection of values returned by getInstanceStorageConfig.
type LookupInstanceStorageConfigResult struct {
	AssociationId string `pulumi:"associationId"`
	// The provider-assigned unique ID for this managed resource.
	Id           string `pulumi:"id"`
	InstanceId   string `pulumi:"instanceId"`
	ResourceType string `pulumi:"resourceType"`
	// Specifies the storage configuration options for the Connect Instance. Documented below.
	StorageConfigs []GetInstanceStorageConfigStorageConfig `pulumi:"storageConfigs"`
}

func LookupInstanceStorageConfigOutput(ctx *pulumi.Context, args LookupInstanceStorageConfigOutputArgs, opts ...pulumi.InvokeOption) LookupInstanceStorageConfigResultOutput {
	outputResult := pulumix.ApplyErr[*LookupInstanceStorageConfigArgs](args.ToOutput(), func(plainArgs *LookupInstanceStorageConfigArgs) (*LookupInstanceStorageConfigResult, error) {
		return LookupInstanceStorageConfig(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[LookupInstanceStorageConfigResultOutput, *LookupInstanceStorageConfigResult](outputResult)
}

// A collection of arguments for invoking getInstanceStorageConfig.
type LookupInstanceStorageConfigOutputArgs struct {
	// The existing association identifier that uniquely identifies the resource type and storage config for the given instance ID.
	AssociationId pulumix.Input[string] `pulumi:"associationId"`
	// Reference to the hosting Amazon Connect Instance
	InstanceId pulumix.Input[string] `pulumi:"instanceId"`
	// A valid resource type. Valid Values: `CHAT_TRANSCRIPTS` | `CALL_RECORDINGS` | `SCHEDULED_REPORTS` | `MEDIA_STREAMS` | `CONTACT_TRACE_RECORDS` | `AGENT_EVENTS` | `REAL_TIME_CONTACT_ANALYSIS_SEGMENTS`.
	ResourceType pulumix.Input[string] `pulumi:"resourceType"`
}

func (args LookupInstanceStorageConfigOutputArgs) ToOutput() pulumix.Output[*LookupInstanceStorageConfigArgs] {
	allArgs := pulumix.All(
		args.AssociationId.ToOutput(context.Background()).AsAny(),
		args.InstanceId.ToOutput(context.Background()).AsAny(),
		args.ResourceType.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *LookupInstanceStorageConfigArgs {
		return &LookupInstanceStorageConfigArgs{
			AssociationId: resolvedArgs[0].(string),
			InstanceId:    resolvedArgs[1].(string),
			ResourceType:  resolvedArgs[2].(string),
		}
	})
}

type LookupInstanceStorageConfigResultOutput struct{ *pulumi.OutputState }

func (LookupInstanceStorageConfigResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInstanceStorageConfigResult)(nil)).Elem()
}

func (o LookupInstanceStorageConfigResultOutput) ToOutput(context.Context) pulumix.Output[*LookupInstanceStorageConfigResult] {
	return pulumix.Output[*LookupInstanceStorageConfigResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupInstanceStorageConfigResultOutput) AssociationId() pulumix.Output[string] {
	return pulumix.Apply[*LookupInstanceStorageConfigResult](o, func(v *LookupInstanceStorageConfigResult) string { return v.AssociationId })
}

func (o LookupInstanceStorageConfigResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*LookupInstanceStorageConfigResult](o, func(v *LookupInstanceStorageConfigResult) string { return v.Id })
}

func (o LookupInstanceStorageConfigResultOutput) InstanceId() pulumix.Output[string] {
	return pulumix.Apply[*LookupInstanceStorageConfigResult](o, func(v *LookupInstanceStorageConfigResult) string { return v.InstanceId })
}

func (o LookupInstanceStorageConfigResultOutput) ResourceType() pulumix.Output[string] {
	return pulumix.Apply[*LookupInstanceStorageConfigResult](o, func(v *LookupInstanceStorageConfigResult) string { return v.ResourceType })
}

func (o LookupInstanceStorageConfigResultOutput) StorageConfigs() pulumix.GArrayOutput[GetInstanceStorageConfigStorageConfig, GetInstanceStorageConfigStorageConfigOutput] {
	value := pulumix.Apply[*LookupInstanceStorageConfigResult](o, func(v *LookupInstanceStorageConfigResult) []GetInstanceStorageConfigStorageConfig {
		return v.StorageConfigs
	})
	return pulumix.GArrayOutput[GetInstanceStorageConfigStorageConfig, GetInstanceStorageConfigStorageConfigOutput]{
		OutputState: value.OutputState,
	}
}
