// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a resource to manage the [default AWS VPC](http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/default-vpc.html)
// in the current AWS Region.
//
// If you created your AWS account after 2013-12-04 you have a default VPC in each AWS Region.
//
// **This is an advanced resource** and has special caveats to be aware of when using it. Please read this document in its entirety before using this resource.
//
// The `ec2.DefaultVpc` resource behaves differently from normal resources in that if a default VPC exists, this provider does not _create_ this resource, but instead "adopts" it into management.
// If no default VPC exists, the provider creates a new default VPC, which leads to the implicit creation of [other resources](https://docs.aws.amazon.com/vpc/latest/userguide/default-vpc.html#default-vpc-components).
// By default, `pulumi destroy` does not delete the default VPC but does remove the resource from the state.
// Set the `forceDestroy` argument to `true` to delete the default VPC.
type DefaultVpc struct {
	pulumi.CustomResourceState

	Arn                          pulumix.Output[string] `pulumi:"arn"`
	AssignGeneratedIpv6CidrBlock pulumix.Output[*bool]  `pulumi:"assignGeneratedIpv6CidrBlock"`
	// The primary IPv4 CIDR block for the VPC
	CidrBlock                        pulumix.Output[string] `pulumi:"cidrBlock"`
	DefaultNetworkAclId              pulumix.Output[string] `pulumi:"defaultNetworkAclId"`
	DefaultRouteTableId              pulumix.Output[string] `pulumi:"defaultRouteTableId"`
	DefaultSecurityGroupId           pulumix.Output[string] `pulumi:"defaultSecurityGroupId"`
	DhcpOptionsId                    pulumix.Output[string] `pulumi:"dhcpOptionsId"`
	EnableDnsHostnames               pulumix.Output[*bool]  `pulumi:"enableDnsHostnames"`
	EnableDnsSupport                 pulumix.Output[*bool]  `pulumi:"enableDnsSupport"`
	EnableNetworkAddressUsageMetrics pulumix.Output[bool]   `pulumi:"enableNetworkAddressUsageMetrics"`
	ExistingDefaultVpc               pulumix.Output[bool]   `pulumi:"existingDefaultVpc"`
	// Whether destroying the resource deletes the default VPC. Default: `false`
	ForceDestroy pulumix.Output[*bool] `pulumi:"forceDestroy"`
	// The allowed tenancy of instances launched into the VPC
	InstanceTenancy                 pulumix.Output[string]    `pulumi:"instanceTenancy"`
	Ipv6AssociationId               pulumix.Output[string]    `pulumi:"ipv6AssociationId"`
	Ipv6CidrBlock                   pulumix.Output[string]    `pulumi:"ipv6CidrBlock"`
	Ipv6CidrBlockNetworkBorderGroup pulumix.Output[string]    `pulumi:"ipv6CidrBlockNetworkBorderGroup"`
	Ipv6IpamPoolId                  pulumix.Output[*string]   `pulumi:"ipv6IpamPoolId"`
	Ipv6NetmaskLength               pulumix.Output[*int]      `pulumi:"ipv6NetmaskLength"`
	MainRouteTableId                pulumix.Output[string]    `pulumi:"mainRouteTableId"`
	OwnerId                         pulumix.Output[string]    `pulumi:"ownerId"`
	Tags                            pulumix.MapOutput[string] `pulumi:"tags"`
	TagsAll                         pulumix.MapOutput[string] `pulumi:"tagsAll"`
}

// NewDefaultVpc registers a new resource with the given unique name, arguments, and options.
func NewDefaultVpc(ctx *pulumi.Context,
	name string, args *DefaultVpcArgs, opts ...pulumi.ResourceOption) (*DefaultVpc, error) {
	if args == nil {
		args = &DefaultVpcArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DefaultVpc
	err := ctx.RegisterResource("aws:ec2/defaultVpc:DefaultVpc", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDefaultVpc gets an existing DefaultVpc resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDefaultVpc(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DefaultVpcState, opts ...pulumi.ResourceOption) (*DefaultVpc, error) {
	var resource DefaultVpc
	err := ctx.ReadResource("aws:ec2/defaultVpc:DefaultVpc", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DefaultVpc resources.
type defaultVpcState struct {
	Arn                          *string `pulumi:"arn"`
	AssignGeneratedIpv6CidrBlock *bool   `pulumi:"assignGeneratedIpv6CidrBlock"`
	// The primary IPv4 CIDR block for the VPC
	CidrBlock                        *string `pulumi:"cidrBlock"`
	DefaultNetworkAclId              *string `pulumi:"defaultNetworkAclId"`
	DefaultRouteTableId              *string `pulumi:"defaultRouteTableId"`
	DefaultSecurityGroupId           *string `pulumi:"defaultSecurityGroupId"`
	DhcpOptionsId                    *string `pulumi:"dhcpOptionsId"`
	EnableDnsHostnames               *bool   `pulumi:"enableDnsHostnames"`
	EnableDnsSupport                 *bool   `pulumi:"enableDnsSupport"`
	EnableNetworkAddressUsageMetrics *bool   `pulumi:"enableNetworkAddressUsageMetrics"`
	ExistingDefaultVpc               *bool   `pulumi:"existingDefaultVpc"`
	// Whether destroying the resource deletes the default VPC. Default: `false`
	ForceDestroy *bool `pulumi:"forceDestroy"`
	// The allowed tenancy of instances launched into the VPC
	InstanceTenancy                 *string           `pulumi:"instanceTenancy"`
	Ipv6AssociationId               *string           `pulumi:"ipv6AssociationId"`
	Ipv6CidrBlock                   *string           `pulumi:"ipv6CidrBlock"`
	Ipv6CidrBlockNetworkBorderGroup *string           `pulumi:"ipv6CidrBlockNetworkBorderGroup"`
	Ipv6IpamPoolId                  *string           `pulumi:"ipv6IpamPoolId"`
	Ipv6NetmaskLength               *int              `pulumi:"ipv6NetmaskLength"`
	MainRouteTableId                *string           `pulumi:"mainRouteTableId"`
	OwnerId                         *string           `pulumi:"ownerId"`
	Tags                            map[string]string `pulumi:"tags"`
	TagsAll                         map[string]string `pulumi:"tagsAll"`
}

type DefaultVpcState struct {
	Arn                          pulumix.Input[*string]
	AssignGeneratedIpv6CidrBlock pulumix.Input[*bool]
	// The primary IPv4 CIDR block for the VPC
	CidrBlock                        pulumix.Input[*string]
	DefaultNetworkAclId              pulumix.Input[*string]
	DefaultRouteTableId              pulumix.Input[*string]
	DefaultSecurityGroupId           pulumix.Input[*string]
	DhcpOptionsId                    pulumix.Input[*string]
	EnableDnsHostnames               pulumix.Input[*bool]
	EnableDnsSupport                 pulumix.Input[*bool]
	EnableNetworkAddressUsageMetrics pulumix.Input[*bool]
	ExistingDefaultVpc               pulumix.Input[*bool]
	// Whether destroying the resource deletes the default VPC. Default: `false`
	ForceDestroy pulumix.Input[*bool]
	// The allowed tenancy of instances launched into the VPC
	InstanceTenancy                 pulumix.Input[*string]
	Ipv6AssociationId               pulumix.Input[*string]
	Ipv6CidrBlock                   pulumix.Input[*string]
	Ipv6CidrBlockNetworkBorderGroup pulumix.Input[*string]
	Ipv6IpamPoolId                  pulumix.Input[*string]
	Ipv6NetmaskLength               pulumix.Input[*int]
	MainRouteTableId                pulumix.Input[*string]
	OwnerId                         pulumix.Input[*string]
	Tags                            pulumix.Input[map[string]string]
	TagsAll                         pulumix.Input[map[string]string]
}

func (DefaultVpcState) ElementType() reflect.Type {
	return reflect.TypeOf((*defaultVpcState)(nil)).Elem()
}

type defaultVpcArgs struct {
	AssignGeneratedIpv6CidrBlock     *bool `pulumi:"assignGeneratedIpv6CidrBlock"`
	EnableDnsHostnames               *bool `pulumi:"enableDnsHostnames"`
	EnableDnsSupport                 *bool `pulumi:"enableDnsSupport"`
	EnableNetworkAddressUsageMetrics *bool `pulumi:"enableNetworkAddressUsageMetrics"`
	// Whether destroying the resource deletes the default VPC. Default: `false`
	ForceDestroy                    *bool             `pulumi:"forceDestroy"`
	Ipv6CidrBlock                   *string           `pulumi:"ipv6CidrBlock"`
	Ipv6CidrBlockNetworkBorderGroup *string           `pulumi:"ipv6CidrBlockNetworkBorderGroup"`
	Ipv6IpamPoolId                  *string           `pulumi:"ipv6IpamPoolId"`
	Ipv6NetmaskLength               *int              `pulumi:"ipv6NetmaskLength"`
	Tags                            map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a DefaultVpc resource.
type DefaultVpcArgs struct {
	AssignGeneratedIpv6CidrBlock     pulumix.Input[*bool]
	EnableDnsHostnames               pulumix.Input[*bool]
	EnableDnsSupport                 pulumix.Input[*bool]
	EnableNetworkAddressUsageMetrics pulumix.Input[*bool]
	// Whether destroying the resource deletes the default VPC. Default: `false`
	ForceDestroy                    pulumix.Input[*bool]
	Ipv6CidrBlock                   pulumix.Input[*string]
	Ipv6CidrBlockNetworkBorderGroup pulumix.Input[*string]
	Ipv6IpamPoolId                  pulumix.Input[*string]
	Ipv6NetmaskLength               pulumix.Input[*int]
	Tags                            pulumix.Input[map[string]string]
}

func (DefaultVpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*defaultVpcArgs)(nil)).Elem()
}

type DefaultVpcOutput struct{ *pulumi.OutputState }

func (DefaultVpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultVpc)(nil)).Elem()
}

func (o DefaultVpcOutput) ToDefaultVpcOutput() DefaultVpcOutput {
	return o
}

func (o DefaultVpcOutput) ToDefaultVpcOutputWithContext(ctx context.Context) DefaultVpcOutput {
	return o
}

func (o DefaultVpcOutput) ToOutput(ctx context.Context) pulumix.Output[DefaultVpc] {
	return pulumix.Output[DefaultVpc]{
		OutputState: o.OutputState,
	}
}

func (o DefaultVpcOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[DefaultVpc](o, func(v DefaultVpc) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func (o DefaultVpcOutput) AssignGeneratedIpv6CidrBlock() pulumix.Output[*bool] {
	value := pulumix.Apply[DefaultVpc](o, func(v DefaultVpc) pulumix.Output[*bool] { return v.AssignGeneratedIpv6CidrBlock })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// The primary IPv4 CIDR block for the VPC
func (o DefaultVpcOutput) CidrBlock() pulumix.Output[string] {
	value := pulumix.Apply[DefaultVpc](o, func(v DefaultVpc) pulumix.Output[string] { return v.CidrBlock })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func (o DefaultVpcOutput) DefaultNetworkAclId() pulumix.Output[string] {
	value := pulumix.Apply[DefaultVpc](o, func(v DefaultVpc) pulumix.Output[string] { return v.DefaultNetworkAclId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func (o DefaultVpcOutput) DefaultRouteTableId() pulumix.Output[string] {
	value := pulumix.Apply[DefaultVpc](o, func(v DefaultVpc) pulumix.Output[string] { return v.DefaultRouteTableId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func (o DefaultVpcOutput) DefaultSecurityGroupId() pulumix.Output[string] {
	value := pulumix.Apply[DefaultVpc](o, func(v DefaultVpc) pulumix.Output[string] { return v.DefaultSecurityGroupId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func (o DefaultVpcOutput) DhcpOptionsId() pulumix.Output[string] {
	value := pulumix.Apply[DefaultVpc](o, func(v DefaultVpc) pulumix.Output[string] { return v.DhcpOptionsId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func (o DefaultVpcOutput) EnableDnsHostnames() pulumix.Output[*bool] {
	value := pulumix.Apply[DefaultVpc](o, func(v DefaultVpc) pulumix.Output[*bool] { return v.EnableDnsHostnames })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

func (o DefaultVpcOutput) EnableDnsSupport() pulumix.Output[*bool] {
	value := pulumix.Apply[DefaultVpc](o, func(v DefaultVpc) pulumix.Output[*bool] { return v.EnableDnsSupport })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

func (o DefaultVpcOutput) EnableNetworkAddressUsageMetrics() pulumix.Output[bool] {
	value := pulumix.Apply[DefaultVpc](o, func(v DefaultVpc) pulumix.Output[bool] { return v.EnableNetworkAddressUsageMetrics })
	return pulumix.Flatten[bool, pulumix.Output[bool]](value)
}

func (o DefaultVpcOutput) ExistingDefaultVpc() pulumix.Output[bool] {
	value := pulumix.Apply[DefaultVpc](o, func(v DefaultVpc) pulumix.Output[bool] { return v.ExistingDefaultVpc })
	return pulumix.Flatten[bool, pulumix.Output[bool]](value)
}

// Whether destroying the resource deletes the default VPC. Default: `false`
func (o DefaultVpcOutput) ForceDestroy() pulumix.Output[*bool] {
	value := pulumix.Apply[DefaultVpc](o, func(v DefaultVpc) pulumix.Output[*bool] { return v.ForceDestroy })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// The allowed tenancy of instances launched into the VPC
func (o DefaultVpcOutput) InstanceTenancy() pulumix.Output[string] {
	value := pulumix.Apply[DefaultVpc](o, func(v DefaultVpc) pulumix.Output[string] { return v.InstanceTenancy })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func (o DefaultVpcOutput) Ipv6AssociationId() pulumix.Output[string] {
	value := pulumix.Apply[DefaultVpc](o, func(v DefaultVpc) pulumix.Output[string] { return v.Ipv6AssociationId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func (o DefaultVpcOutput) Ipv6CidrBlock() pulumix.Output[string] {
	value := pulumix.Apply[DefaultVpc](o, func(v DefaultVpc) pulumix.Output[string] { return v.Ipv6CidrBlock })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func (o DefaultVpcOutput) Ipv6CidrBlockNetworkBorderGroup() pulumix.Output[string] {
	value := pulumix.Apply[DefaultVpc](o, func(v DefaultVpc) pulumix.Output[string] { return v.Ipv6CidrBlockNetworkBorderGroup })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func (o DefaultVpcOutput) Ipv6IpamPoolId() pulumix.Output[*string] {
	value := pulumix.Apply[DefaultVpc](o, func(v DefaultVpc) pulumix.Output[*string] { return v.Ipv6IpamPoolId })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

func (o DefaultVpcOutput) Ipv6NetmaskLength() pulumix.Output[*int] {
	value := pulumix.Apply[DefaultVpc](o, func(v DefaultVpc) pulumix.Output[*int] { return v.Ipv6NetmaskLength })
	return pulumix.Flatten[*int, pulumix.Output[*int]](value)
}

func (o DefaultVpcOutput) MainRouteTableId() pulumix.Output[string] {
	value := pulumix.Apply[DefaultVpc](o, func(v DefaultVpc) pulumix.Output[string] { return v.MainRouteTableId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func (o DefaultVpcOutput) OwnerId() pulumix.Output[string] {
	value := pulumix.Apply[DefaultVpc](o, func(v DefaultVpc) pulumix.Output[string] { return v.OwnerId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func (o DefaultVpcOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[DefaultVpc](o, func(v DefaultVpc) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func (o DefaultVpcOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[DefaultVpc](o, func(v DefaultVpc) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(DefaultVpcOutput{})
}
