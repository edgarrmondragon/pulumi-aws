// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package lex

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type BotAbortStatement struct {
	Messages []BotAbortStatementMessage `pulumi:"messages"`
	// The response card. Amazon Lex will substitute session attributes and
	// slot values into the response card. For more information, see
	// [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html).
	// slot values into the response card. For more information, see
	// [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html).
	ResponseCard *string `pulumi:"responseCard"`
}

type BotAbortStatementArgs struct {
	Messages pulumix.Input[[]*BotAbortStatementMessageArgs] `pulumi:"messages"`
	// The response card. Amazon Lex will substitute session attributes and
	// slot values into the response card. For more information, see
	// [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html).
	// slot values into the response card. For more information, see
	// [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html).
	ResponseCard pulumix.Input[*string] `pulumi:"responseCard"`
}

func (BotAbortStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BotAbortStatement)(nil)).Elem()
}

func (i BotAbortStatementArgs) ToBotAbortStatementOutput() BotAbortStatementOutput {
	return i.ToBotAbortStatementOutputWithContext(context.Background())
}

func (i BotAbortStatementArgs) ToBotAbortStatementOutputWithContext(ctx context.Context) BotAbortStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BotAbortStatementOutput)
}

func (i *BotAbortStatementArgs) ToOutput(ctx context.Context) pulumix.Output[*BotAbortStatementArgs] {
	return pulumix.Val(i)
}

type BotAbortStatementOutput struct{ *pulumi.OutputState }

func (BotAbortStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BotAbortStatement)(nil)).Elem()
}

func (o BotAbortStatementOutput) ToBotAbortStatementOutput() BotAbortStatementOutput {
	return o
}

func (o BotAbortStatementOutput) ToBotAbortStatementOutputWithContext(ctx context.Context) BotAbortStatementOutput {
	return o
}

func (o BotAbortStatementOutput) ToOutput(ctx context.Context) pulumix.Output[BotAbortStatement] {
	return pulumix.Output[BotAbortStatement]{
		OutputState: o.OutputState,
	}
}

func (o BotAbortStatementOutput) Messages() pulumix.GArrayOutput[BotAbortStatementMessage, BotAbortStatementMessageOutput] {
	value := pulumix.Apply[BotAbortStatement](o, func(v BotAbortStatement) []BotAbortStatementMessage { return v.Messages })
	return pulumix.GArrayOutput[BotAbortStatementMessage, BotAbortStatementMessageOutput]{OutputState: value.OutputState}
}

// The response card. Amazon Lex will substitute session attributes and
// slot values into the response card. For more information, see
// [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html).
// slot values into the response card. For more information, see
// [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html).
func (o BotAbortStatementOutput) ResponseCard() pulumix.Output[*string] {
	return pulumix.Apply[BotAbortStatement](o, func(v BotAbortStatement) *string { return v.ResponseCard })
}

type BotAbortStatementMessage struct {
	// The text of the message.
	Content string `pulumi:"content"`
	// The content type of the message string.
	ContentType string `pulumi:"contentType"`
	// Identifies the message group that the message belongs to. When a group
	// is assigned to a message, Amazon Lex returns one message from each group in the response.
	GroupNumber *int `pulumi:"groupNumber"`
}

type BotAbortStatementMessageArgs struct {
	// The text of the message.
	Content pulumix.Input[string] `pulumi:"content"`
	// The content type of the message string.
	ContentType pulumix.Input[string] `pulumi:"contentType"`
	// Identifies the message group that the message belongs to. When a group
	// is assigned to a message, Amazon Lex returns one message from each group in the response.
	GroupNumber pulumix.Input[*int] `pulumi:"groupNumber"`
}

func (BotAbortStatementMessageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BotAbortStatementMessage)(nil)).Elem()
}

func (i BotAbortStatementMessageArgs) ToBotAbortStatementMessageOutput() BotAbortStatementMessageOutput {
	return i.ToBotAbortStatementMessageOutputWithContext(context.Background())
}

func (i BotAbortStatementMessageArgs) ToBotAbortStatementMessageOutputWithContext(ctx context.Context) BotAbortStatementMessageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BotAbortStatementMessageOutput)
}

func (i *BotAbortStatementMessageArgs) ToOutput(ctx context.Context) pulumix.Output[*BotAbortStatementMessageArgs] {
	return pulumix.Val(i)
}

type BotAbortStatementMessageOutput struct{ *pulumi.OutputState }

func (BotAbortStatementMessageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BotAbortStatementMessage)(nil)).Elem()
}

func (o BotAbortStatementMessageOutput) ToBotAbortStatementMessageOutput() BotAbortStatementMessageOutput {
	return o
}

func (o BotAbortStatementMessageOutput) ToBotAbortStatementMessageOutputWithContext(ctx context.Context) BotAbortStatementMessageOutput {
	return o
}

func (o BotAbortStatementMessageOutput) ToOutput(ctx context.Context) pulumix.Output[BotAbortStatementMessage] {
	return pulumix.Output[BotAbortStatementMessage]{
		OutputState: o.OutputState,
	}
}

// The text of the message.
func (o BotAbortStatementMessageOutput) Content() pulumix.Output[string] {
	return pulumix.Apply[BotAbortStatementMessage](o, func(v BotAbortStatementMessage) string { return v.Content })
}

// The content type of the message string.
func (o BotAbortStatementMessageOutput) ContentType() pulumix.Output[string] {
	return pulumix.Apply[BotAbortStatementMessage](o, func(v BotAbortStatementMessage) string { return v.ContentType })
}

// Identifies the message group that the message belongs to. When a group
// is assigned to a message, Amazon Lex returns one message from each group in the response.
func (o BotAbortStatementMessageOutput) GroupNumber() pulumix.Output[*int] {
	return pulumix.Apply[BotAbortStatementMessage](o, func(v BotAbortStatementMessage) *int { return v.GroupNumber })
}

type BotAliasConversationLogs struct {
	// The Amazon Resource Name (ARN) of the IAM role used to write your logs to CloudWatch Logs or an S3 bucket. Must be between 20 and 2048 characters in length.
	IamRoleArn string `pulumi:"iamRoleArn"`
	// The settings for your conversation logs. You can log text, audio, or both. Attributes are documented under log_settings.
	LogSettings []BotAliasConversationLogsLogSetting `pulumi:"logSettings"`
}

type BotAliasConversationLogsArgs struct {
	// The Amazon Resource Name (ARN) of the IAM role used to write your logs to CloudWatch Logs or an S3 bucket. Must be between 20 and 2048 characters in length.
	IamRoleArn pulumix.Input[string] `pulumi:"iamRoleArn"`
	// The settings for your conversation logs. You can log text, audio, or both. Attributes are documented under log_settings.
	LogSettings pulumix.Input[[]*BotAliasConversationLogsLogSettingArgs] `pulumi:"logSettings"`
}

func (BotAliasConversationLogsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BotAliasConversationLogs)(nil)).Elem()
}

func (i BotAliasConversationLogsArgs) ToBotAliasConversationLogsOutput() BotAliasConversationLogsOutput {
	return i.ToBotAliasConversationLogsOutputWithContext(context.Background())
}

func (i BotAliasConversationLogsArgs) ToBotAliasConversationLogsOutputWithContext(ctx context.Context) BotAliasConversationLogsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BotAliasConversationLogsOutput)
}

func (i *BotAliasConversationLogsArgs) ToOutput(ctx context.Context) pulumix.Output[*BotAliasConversationLogsArgs] {
	return pulumix.Val(i)
}

type BotAliasConversationLogsOutput struct{ *pulumi.OutputState }

func (BotAliasConversationLogsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BotAliasConversationLogs)(nil)).Elem()
}

func (o BotAliasConversationLogsOutput) ToBotAliasConversationLogsOutput() BotAliasConversationLogsOutput {
	return o
}

func (o BotAliasConversationLogsOutput) ToBotAliasConversationLogsOutputWithContext(ctx context.Context) BotAliasConversationLogsOutput {
	return o
}

func (o BotAliasConversationLogsOutput) ToOutput(ctx context.Context) pulumix.Output[BotAliasConversationLogs] {
	return pulumix.Output[BotAliasConversationLogs]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) of the IAM role used to write your logs to CloudWatch Logs or an S3 bucket. Must be between 20 and 2048 characters in length.
func (o BotAliasConversationLogsOutput) IamRoleArn() pulumix.Output[string] {
	return pulumix.Apply[BotAliasConversationLogs](o, func(v BotAliasConversationLogs) string { return v.IamRoleArn })
}

// The settings for your conversation logs. You can log text, audio, or both. Attributes are documented under log_settings.
func (o BotAliasConversationLogsOutput) LogSettings() pulumix.GArrayOutput[BotAliasConversationLogsLogSetting, BotAliasConversationLogsLogSettingOutput] {
	value := pulumix.Apply[BotAliasConversationLogs](o, func(v BotAliasConversationLogs) []BotAliasConversationLogsLogSetting { return v.LogSettings })
	return pulumix.GArrayOutput[BotAliasConversationLogsLogSetting, BotAliasConversationLogsLogSettingOutput]{OutputState: value.OutputState}
}

type BotAliasConversationLogsLogSetting struct {
	// The destination where logs are delivered. Options are `CLOUDWATCH_LOGS` or `S3`.
	Destination string `pulumi:"destination"`
	// The Amazon Resource Name (ARN) of the key used to encrypt audio logs in an S3 bucket. This can only be specified when `destination` is set to `S3`. Must be between 20 and 2048 characters in length.
	KmsKeyArn *string `pulumi:"kmsKeyArn"`
	// The type of logging that is enabled. Options are `AUDIO` or `TEXT`.
	LogType string `pulumi:"logType"`
	// The Amazon Resource Name (ARN) of the CloudWatch Logs log group or S3 bucket where the logs are delivered. Must be less than or equal to 2048 characters in length.
	ResourceArn string `pulumi:"resourceArn"`
	// The prefix of the S3 object key for `AUDIO` logs or the log stream name for `TEXT` logs.
	ResourcePrefix *string `pulumi:"resourcePrefix"`
}

type BotAliasConversationLogsLogSettingArgs struct {
	// The destination where logs are delivered. Options are `CLOUDWATCH_LOGS` or `S3`.
	Destination pulumix.Input[string] `pulumi:"destination"`
	// The Amazon Resource Name (ARN) of the key used to encrypt audio logs in an S3 bucket. This can only be specified when `destination` is set to `S3`. Must be between 20 and 2048 characters in length.
	KmsKeyArn pulumix.Input[*string] `pulumi:"kmsKeyArn"`
	// The type of logging that is enabled. Options are `AUDIO` or `TEXT`.
	LogType pulumix.Input[string] `pulumi:"logType"`
	// The Amazon Resource Name (ARN) of the CloudWatch Logs log group or S3 bucket where the logs are delivered. Must be less than or equal to 2048 characters in length.
	ResourceArn pulumix.Input[string] `pulumi:"resourceArn"`
	// The prefix of the S3 object key for `AUDIO` logs or the log stream name for `TEXT` logs.
	ResourcePrefix pulumix.Input[*string] `pulumi:"resourcePrefix"`
}

func (BotAliasConversationLogsLogSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BotAliasConversationLogsLogSetting)(nil)).Elem()
}

func (i BotAliasConversationLogsLogSettingArgs) ToBotAliasConversationLogsLogSettingOutput() BotAliasConversationLogsLogSettingOutput {
	return i.ToBotAliasConversationLogsLogSettingOutputWithContext(context.Background())
}

func (i BotAliasConversationLogsLogSettingArgs) ToBotAliasConversationLogsLogSettingOutputWithContext(ctx context.Context) BotAliasConversationLogsLogSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BotAliasConversationLogsLogSettingOutput)
}

func (i *BotAliasConversationLogsLogSettingArgs) ToOutput(ctx context.Context) pulumix.Output[*BotAliasConversationLogsLogSettingArgs] {
	return pulumix.Val(i)
}

type BotAliasConversationLogsLogSettingOutput struct{ *pulumi.OutputState }

func (BotAliasConversationLogsLogSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BotAliasConversationLogsLogSetting)(nil)).Elem()
}

func (o BotAliasConversationLogsLogSettingOutput) ToBotAliasConversationLogsLogSettingOutput() BotAliasConversationLogsLogSettingOutput {
	return o
}

func (o BotAliasConversationLogsLogSettingOutput) ToBotAliasConversationLogsLogSettingOutputWithContext(ctx context.Context) BotAliasConversationLogsLogSettingOutput {
	return o
}

func (o BotAliasConversationLogsLogSettingOutput) ToOutput(ctx context.Context) pulumix.Output[BotAliasConversationLogsLogSetting] {
	return pulumix.Output[BotAliasConversationLogsLogSetting]{
		OutputState: o.OutputState,
	}
}

// The destination where logs are delivered. Options are `CLOUDWATCH_LOGS` or `S3`.
func (o BotAliasConversationLogsLogSettingOutput) Destination() pulumix.Output[string] {
	return pulumix.Apply[BotAliasConversationLogsLogSetting](o, func(v BotAliasConversationLogsLogSetting) string { return v.Destination })
}

// The Amazon Resource Name (ARN) of the key used to encrypt audio logs in an S3 bucket. This can only be specified when `destination` is set to `S3`. Must be between 20 and 2048 characters in length.
func (o BotAliasConversationLogsLogSettingOutput) KmsKeyArn() pulumix.Output[*string] {
	return pulumix.Apply[BotAliasConversationLogsLogSetting](o, func(v BotAliasConversationLogsLogSetting) *string { return v.KmsKeyArn })
}

// The type of logging that is enabled. Options are `AUDIO` or `TEXT`.
func (o BotAliasConversationLogsLogSettingOutput) LogType() pulumix.Output[string] {
	return pulumix.Apply[BotAliasConversationLogsLogSetting](o, func(v BotAliasConversationLogsLogSetting) string { return v.LogType })
}

// The Amazon Resource Name (ARN) of the CloudWatch Logs log group or S3 bucket where the logs are delivered. Must be less than or equal to 2048 characters in length.
func (o BotAliasConversationLogsLogSettingOutput) ResourceArn() pulumix.Output[string] {
	return pulumix.Apply[BotAliasConversationLogsLogSetting](o, func(v BotAliasConversationLogsLogSetting) string { return v.ResourceArn })
}

// The prefix of the S3 object key for `AUDIO` logs or the log stream name for `TEXT` logs.
func (o BotAliasConversationLogsLogSettingOutput) ResourcePrefix() pulumix.Output[*string] {
	return pulumix.Apply[BotAliasConversationLogsLogSetting](o, func(v BotAliasConversationLogsLogSetting) *string { return v.ResourcePrefix })
}

type BotClarificationPrompt struct {
	// The number of times to prompt the user for information.
	MaxAttempts int                             `pulumi:"maxAttempts"`
	Messages    []BotClarificationPromptMessage `pulumi:"messages"`
	// The response card. Amazon Lex will substitute session attributes and
	// slot values into the response card. For more information, see
	// [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html).
	// slot values into the response card. For more information, see
	// [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html).
	ResponseCard *string `pulumi:"responseCard"`
}

type BotClarificationPromptArgs struct {
	// The number of times to prompt the user for information.
	MaxAttempts pulumix.Input[int]                                  `pulumi:"maxAttempts"`
	Messages    pulumix.Input[[]*BotClarificationPromptMessageArgs] `pulumi:"messages"`
	// The response card. Amazon Lex will substitute session attributes and
	// slot values into the response card. For more information, see
	// [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html).
	// slot values into the response card. For more information, see
	// [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html).
	ResponseCard pulumix.Input[*string] `pulumi:"responseCard"`
}

func (BotClarificationPromptArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BotClarificationPrompt)(nil)).Elem()
}

func (i BotClarificationPromptArgs) ToBotClarificationPromptOutput() BotClarificationPromptOutput {
	return i.ToBotClarificationPromptOutputWithContext(context.Background())
}

func (i BotClarificationPromptArgs) ToBotClarificationPromptOutputWithContext(ctx context.Context) BotClarificationPromptOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BotClarificationPromptOutput)
}

func (i *BotClarificationPromptArgs) ToOutput(ctx context.Context) pulumix.Output[*BotClarificationPromptArgs] {
	return pulumix.Val(i)
}

type BotClarificationPromptOutput struct{ *pulumi.OutputState }

func (BotClarificationPromptOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BotClarificationPrompt)(nil)).Elem()
}

func (o BotClarificationPromptOutput) ToBotClarificationPromptOutput() BotClarificationPromptOutput {
	return o
}

func (o BotClarificationPromptOutput) ToBotClarificationPromptOutputWithContext(ctx context.Context) BotClarificationPromptOutput {
	return o
}

func (o BotClarificationPromptOutput) ToOutput(ctx context.Context) pulumix.Output[BotClarificationPrompt] {
	return pulumix.Output[BotClarificationPrompt]{
		OutputState: o.OutputState,
	}
}

// The number of times to prompt the user for information.
func (o BotClarificationPromptOutput) MaxAttempts() pulumix.Output[int] {
	return pulumix.Apply[BotClarificationPrompt](o, func(v BotClarificationPrompt) int { return v.MaxAttempts })
}

func (o BotClarificationPromptOutput) Messages() pulumix.GArrayOutput[BotClarificationPromptMessage, BotClarificationPromptMessageOutput] {
	value := pulumix.Apply[BotClarificationPrompt](o, func(v BotClarificationPrompt) []BotClarificationPromptMessage { return v.Messages })
	return pulumix.GArrayOutput[BotClarificationPromptMessage, BotClarificationPromptMessageOutput]{OutputState: value.OutputState}
}

// The response card. Amazon Lex will substitute session attributes and
// slot values into the response card. For more information, see
// [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html).
// slot values into the response card. For more information, see
// [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html).
func (o BotClarificationPromptOutput) ResponseCard() pulumix.Output[*string] {
	return pulumix.Apply[BotClarificationPrompt](o, func(v BotClarificationPrompt) *string { return v.ResponseCard })
}

type BotClarificationPromptMessage struct {
	// The text of the message.
	Content string `pulumi:"content"`
	// The content type of the message string.
	ContentType string `pulumi:"contentType"`
	// Identifies the message group that the message belongs to. When a group
	// is assigned to a message, Amazon Lex returns one message from each group in the response.
	GroupNumber *int `pulumi:"groupNumber"`
}

type BotClarificationPromptMessageArgs struct {
	// The text of the message.
	Content pulumix.Input[string] `pulumi:"content"`
	// The content type of the message string.
	ContentType pulumix.Input[string] `pulumi:"contentType"`
	// Identifies the message group that the message belongs to. When a group
	// is assigned to a message, Amazon Lex returns one message from each group in the response.
	GroupNumber pulumix.Input[*int] `pulumi:"groupNumber"`
}

func (BotClarificationPromptMessageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BotClarificationPromptMessage)(nil)).Elem()
}

func (i BotClarificationPromptMessageArgs) ToBotClarificationPromptMessageOutput() BotClarificationPromptMessageOutput {
	return i.ToBotClarificationPromptMessageOutputWithContext(context.Background())
}

func (i BotClarificationPromptMessageArgs) ToBotClarificationPromptMessageOutputWithContext(ctx context.Context) BotClarificationPromptMessageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BotClarificationPromptMessageOutput)
}

func (i *BotClarificationPromptMessageArgs) ToOutput(ctx context.Context) pulumix.Output[*BotClarificationPromptMessageArgs] {
	return pulumix.Val(i)
}

type BotClarificationPromptMessageOutput struct{ *pulumi.OutputState }

func (BotClarificationPromptMessageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BotClarificationPromptMessage)(nil)).Elem()
}

func (o BotClarificationPromptMessageOutput) ToBotClarificationPromptMessageOutput() BotClarificationPromptMessageOutput {
	return o
}

func (o BotClarificationPromptMessageOutput) ToBotClarificationPromptMessageOutputWithContext(ctx context.Context) BotClarificationPromptMessageOutput {
	return o
}

func (o BotClarificationPromptMessageOutput) ToOutput(ctx context.Context) pulumix.Output[BotClarificationPromptMessage] {
	return pulumix.Output[BotClarificationPromptMessage]{
		OutputState: o.OutputState,
	}
}

// The text of the message.
func (o BotClarificationPromptMessageOutput) Content() pulumix.Output[string] {
	return pulumix.Apply[BotClarificationPromptMessage](o, func(v BotClarificationPromptMessage) string { return v.Content })
}

// The content type of the message string.
func (o BotClarificationPromptMessageOutput) ContentType() pulumix.Output[string] {
	return pulumix.Apply[BotClarificationPromptMessage](o, func(v BotClarificationPromptMessage) string { return v.ContentType })
}

// Identifies the message group that the message belongs to. When a group
// is assigned to a message, Amazon Lex returns one message from each group in the response.
func (o BotClarificationPromptMessageOutput) GroupNumber() pulumix.Output[*int] {
	return pulumix.Apply[BotClarificationPromptMessage](o, func(v BotClarificationPromptMessage) *int { return v.GroupNumber })
}

type BotIntent struct {
	// The name of the intent. Must be less than or equal to 100 characters in length.
	IntentName string `pulumi:"intentName"`
	// The version of the intent. Must be less than or equal to 64 characters in length.
	IntentVersion string `pulumi:"intentVersion"`
}

type BotIntentArgs struct {
	// The name of the intent. Must be less than or equal to 100 characters in length.
	IntentName pulumix.Input[string] `pulumi:"intentName"`
	// The version of the intent. Must be less than or equal to 64 characters in length.
	IntentVersion pulumix.Input[string] `pulumi:"intentVersion"`
}

func (BotIntentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BotIntent)(nil)).Elem()
}

func (i BotIntentArgs) ToBotIntentOutput() BotIntentOutput {
	return i.ToBotIntentOutputWithContext(context.Background())
}

func (i BotIntentArgs) ToBotIntentOutputWithContext(ctx context.Context) BotIntentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BotIntentOutput)
}

func (i *BotIntentArgs) ToOutput(ctx context.Context) pulumix.Output[*BotIntentArgs] {
	return pulumix.Val(i)
}

type BotIntentOutput struct{ *pulumi.OutputState }

func (BotIntentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BotIntent)(nil)).Elem()
}

func (o BotIntentOutput) ToBotIntentOutput() BotIntentOutput {
	return o
}

func (o BotIntentOutput) ToBotIntentOutputWithContext(ctx context.Context) BotIntentOutput {
	return o
}

func (o BotIntentOutput) ToOutput(ctx context.Context) pulumix.Output[BotIntent] {
	return pulumix.Output[BotIntent]{
		OutputState: o.OutputState,
	}
}

// The name of the intent. Must be less than or equal to 100 characters in length.
func (o BotIntentOutput) IntentName() pulumix.Output[string] {
	return pulumix.Apply[BotIntent](o, func(v BotIntent) string { return v.IntentName })
}

// The version of the intent. Must be less than or equal to 64 characters in length.
func (o BotIntentOutput) IntentVersion() pulumix.Output[string] {
	return pulumix.Apply[BotIntent](o, func(v BotIntent) string { return v.IntentVersion })
}

type IntentConclusionStatement struct {
	Messages []IntentConclusionStatementMessage `pulumi:"messages"`
	// The response card. Amazon Lex will substitute session attributes and
	// slot values into the response card. For more information, see
	// [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html). Must be less than or equal to 50000 characters in length.
	// slot values into the response card. For more information, see
	// [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html). Must be less than or equal to 50000 characters in length.
	// slot values into the response card. For more information, see
	// [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html). Must be less than or equal to 50000 characters in length.
	ResponseCard *string `pulumi:"responseCard"`
}

type IntentConclusionStatementArgs struct {
	Messages pulumix.Input[[]*IntentConclusionStatementMessageArgs] `pulumi:"messages"`
	// The response card. Amazon Lex will substitute session attributes and
	// slot values into the response card. For more information, see
	// [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html). Must be less than or equal to 50000 characters in length.
	// slot values into the response card. For more information, see
	// [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html). Must be less than or equal to 50000 characters in length.
	// slot values into the response card. For more information, see
	// [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html). Must be less than or equal to 50000 characters in length.
	ResponseCard pulumix.Input[*string] `pulumi:"responseCard"`
}

func (IntentConclusionStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntentConclusionStatement)(nil)).Elem()
}

func (i IntentConclusionStatementArgs) ToIntentConclusionStatementOutput() IntentConclusionStatementOutput {
	return i.ToIntentConclusionStatementOutputWithContext(context.Background())
}

func (i IntentConclusionStatementArgs) ToIntentConclusionStatementOutputWithContext(ctx context.Context) IntentConclusionStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntentConclusionStatementOutput)
}

func (i *IntentConclusionStatementArgs) ToOutput(ctx context.Context) pulumix.Output[*IntentConclusionStatementArgs] {
	return pulumix.Val(i)
}

type IntentConclusionStatementOutput struct{ *pulumi.OutputState }

func (IntentConclusionStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntentConclusionStatement)(nil)).Elem()
}

func (o IntentConclusionStatementOutput) ToIntentConclusionStatementOutput() IntentConclusionStatementOutput {
	return o
}

func (o IntentConclusionStatementOutput) ToIntentConclusionStatementOutputWithContext(ctx context.Context) IntentConclusionStatementOutput {
	return o
}

func (o IntentConclusionStatementOutput) ToOutput(ctx context.Context) pulumix.Output[IntentConclusionStatement] {
	return pulumix.Output[IntentConclusionStatement]{
		OutputState: o.OutputState,
	}
}

func (o IntentConclusionStatementOutput) Messages() pulumix.GArrayOutput[IntentConclusionStatementMessage, IntentConclusionStatementMessageOutput] {
	value := pulumix.Apply[IntentConclusionStatement](o, func(v IntentConclusionStatement) []IntentConclusionStatementMessage { return v.Messages })
	return pulumix.GArrayOutput[IntentConclusionStatementMessage, IntentConclusionStatementMessageOutput]{OutputState: value.OutputState}
}

// The response card. Amazon Lex will substitute session attributes and
// slot values into the response card. For more information, see
// [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html). Must be less than or equal to 50000 characters in length.
// slot values into the response card. For more information, see
// [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html). Must be less than or equal to 50000 characters in length.
// slot values into the response card. For more information, see
// [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html). Must be less than or equal to 50000 characters in length.
func (o IntentConclusionStatementOutput) ResponseCard() pulumix.Output[*string] {
	return pulumix.Apply[IntentConclusionStatement](o, func(v IntentConclusionStatement) *string { return v.ResponseCard })
}

type IntentConclusionStatementMessage struct {
	// The text of the message. Must be less than or equal to 1000 characters in length.
	Content string `pulumi:"content"`
	// The content type of the message string.
	ContentType string `pulumi:"contentType"`
	// Identifies the message group that the message belongs to. When a group
	// is assigned to a message, Amazon Lex returns one message from each group in the response. Must be a number between 1 and 5 (inclusive).
	GroupNumber *int `pulumi:"groupNumber"`
}

type IntentConclusionStatementMessageArgs struct {
	// The text of the message. Must be less than or equal to 1000 characters in length.
	Content pulumix.Input[string] `pulumi:"content"`
	// The content type of the message string.
	ContentType pulumix.Input[string] `pulumi:"contentType"`
	// Identifies the message group that the message belongs to. When a group
	// is assigned to a message, Amazon Lex returns one message from each group in the response. Must be a number between 1 and 5 (inclusive).
	GroupNumber pulumix.Input[*int] `pulumi:"groupNumber"`
}

func (IntentConclusionStatementMessageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntentConclusionStatementMessage)(nil)).Elem()
}

func (i IntentConclusionStatementMessageArgs) ToIntentConclusionStatementMessageOutput() IntentConclusionStatementMessageOutput {
	return i.ToIntentConclusionStatementMessageOutputWithContext(context.Background())
}

func (i IntentConclusionStatementMessageArgs) ToIntentConclusionStatementMessageOutputWithContext(ctx context.Context) IntentConclusionStatementMessageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntentConclusionStatementMessageOutput)
}

func (i *IntentConclusionStatementMessageArgs) ToOutput(ctx context.Context) pulumix.Output[*IntentConclusionStatementMessageArgs] {
	return pulumix.Val(i)
}

type IntentConclusionStatementMessageOutput struct{ *pulumi.OutputState }

func (IntentConclusionStatementMessageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntentConclusionStatementMessage)(nil)).Elem()
}

func (o IntentConclusionStatementMessageOutput) ToIntentConclusionStatementMessageOutput() IntentConclusionStatementMessageOutput {
	return o
}

func (o IntentConclusionStatementMessageOutput) ToIntentConclusionStatementMessageOutputWithContext(ctx context.Context) IntentConclusionStatementMessageOutput {
	return o
}

func (o IntentConclusionStatementMessageOutput) ToOutput(ctx context.Context) pulumix.Output[IntentConclusionStatementMessage] {
	return pulumix.Output[IntentConclusionStatementMessage]{
		OutputState: o.OutputState,
	}
}

// The text of the message. Must be less than or equal to 1000 characters in length.
func (o IntentConclusionStatementMessageOutput) Content() pulumix.Output[string] {
	return pulumix.Apply[IntentConclusionStatementMessage](o, func(v IntentConclusionStatementMessage) string { return v.Content })
}

// The content type of the message string.
func (o IntentConclusionStatementMessageOutput) ContentType() pulumix.Output[string] {
	return pulumix.Apply[IntentConclusionStatementMessage](o, func(v IntentConclusionStatementMessage) string { return v.ContentType })
}

// Identifies the message group that the message belongs to. When a group
// is assigned to a message, Amazon Lex returns one message from each group in the response. Must be a number between 1 and 5 (inclusive).
func (o IntentConclusionStatementMessageOutput) GroupNumber() pulumix.Output[*int] {
	return pulumix.Apply[IntentConclusionStatementMessage](o, func(v IntentConclusionStatementMessage) *int { return v.GroupNumber })
}

type IntentConfirmationPrompt struct {
	// The number of times to prompt the user for information. Must be a number between 1 and 5 (inclusive).
	MaxAttempts int                               `pulumi:"maxAttempts"`
	Messages    []IntentConfirmationPromptMessage `pulumi:"messages"`
	// The response card. Amazon Lex will substitute session attributes and
	// slot values into the response card. For more information, see
	// [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html). Must be less than or equal to 50000 characters in length.
	// slot values into the response card. For more information, see
	// [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html). Must be less than or equal to 50000 characters in length.
	// slot values into the response card. For more information, see
	// [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html). Must be less than or equal to 50000 characters in length.
	ResponseCard *string `pulumi:"responseCard"`
}

type IntentConfirmationPromptArgs struct {
	// The number of times to prompt the user for information. Must be a number between 1 and 5 (inclusive).
	MaxAttempts pulumix.Input[int]                                    `pulumi:"maxAttempts"`
	Messages    pulumix.Input[[]*IntentConfirmationPromptMessageArgs] `pulumi:"messages"`
	// The response card. Amazon Lex will substitute session attributes and
	// slot values into the response card. For more information, see
	// [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html). Must be less than or equal to 50000 characters in length.
	// slot values into the response card. For more information, see
	// [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html). Must be less than or equal to 50000 characters in length.
	// slot values into the response card. For more information, see
	// [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html). Must be less than or equal to 50000 characters in length.
	ResponseCard pulumix.Input[*string] `pulumi:"responseCard"`
}

func (IntentConfirmationPromptArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntentConfirmationPrompt)(nil)).Elem()
}

func (i IntentConfirmationPromptArgs) ToIntentConfirmationPromptOutput() IntentConfirmationPromptOutput {
	return i.ToIntentConfirmationPromptOutputWithContext(context.Background())
}

func (i IntentConfirmationPromptArgs) ToIntentConfirmationPromptOutputWithContext(ctx context.Context) IntentConfirmationPromptOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntentConfirmationPromptOutput)
}

func (i *IntentConfirmationPromptArgs) ToOutput(ctx context.Context) pulumix.Output[*IntentConfirmationPromptArgs] {
	return pulumix.Val(i)
}

type IntentConfirmationPromptOutput struct{ *pulumi.OutputState }

func (IntentConfirmationPromptOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntentConfirmationPrompt)(nil)).Elem()
}

func (o IntentConfirmationPromptOutput) ToIntentConfirmationPromptOutput() IntentConfirmationPromptOutput {
	return o
}

func (o IntentConfirmationPromptOutput) ToIntentConfirmationPromptOutputWithContext(ctx context.Context) IntentConfirmationPromptOutput {
	return o
}

func (o IntentConfirmationPromptOutput) ToOutput(ctx context.Context) pulumix.Output[IntentConfirmationPrompt] {
	return pulumix.Output[IntentConfirmationPrompt]{
		OutputState: o.OutputState,
	}
}

// The number of times to prompt the user for information. Must be a number between 1 and 5 (inclusive).
func (o IntentConfirmationPromptOutput) MaxAttempts() pulumix.Output[int] {
	return pulumix.Apply[IntentConfirmationPrompt](o, func(v IntentConfirmationPrompt) int { return v.MaxAttempts })
}

func (o IntentConfirmationPromptOutput) Messages() pulumix.GArrayOutput[IntentConfirmationPromptMessage, IntentConfirmationPromptMessageOutput] {
	value := pulumix.Apply[IntentConfirmationPrompt](o, func(v IntentConfirmationPrompt) []IntentConfirmationPromptMessage { return v.Messages })
	return pulumix.GArrayOutput[IntentConfirmationPromptMessage, IntentConfirmationPromptMessageOutput]{OutputState: value.OutputState}
}

// The response card. Amazon Lex will substitute session attributes and
// slot values into the response card. For more information, see
// [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html). Must be less than or equal to 50000 characters in length.
// slot values into the response card. For more information, see
// [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html). Must be less than or equal to 50000 characters in length.
// slot values into the response card. For more information, see
// [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html). Must be less than or equal to 50000 characters in length.
func (o IntentConfirmationPromptOutput) ResponseCard() pulumix.Output[*string] {
	return pulumix.Apply[IntentConfirmationPrompt](o, func(v IntentConfirmationPrompt) *string { return v.ResponseCard })
}

type IntentConfirmationPromptMessage struct {
	// The text of the message. Must be less than or equal to 1000 characters in length.
	Content string `pulumi:"content"`
	// The content type of the message string.
	ContentType string `pulumi:"contentType"`
	// Identifies the message group that the message belongs to. When a group
	// is assigned to a message, Amazon Lex returns one message from each group in the response. Must be a number between 1 and 5 (inclusive).
	GroupNumber *int `pulumi:"groupNumber"`
}

type IntentConfirmationPromptMessageArgs struct {
	// The text of the message. Must be less than or equal to 1000 characters in length.
	Content pulumix.Input[string] `pulumi:"content"`
	// The content type of the message string.
	ContentType pulumix.Input[string] `pulumi:"contentType"`
	// Identifies the message group that the message belongs to. When a group
	// is assigned to a message, Amazon Lex returns one message from each group in the response. Must be a number between 1 and 5 (inclusive).
	GroupNumber pulumix.Input[*int] `pulumi:"groupNumber"`
}

func (IntentConfirmationPromptMessageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntentConfirmationPromptMessage)(nil)).Elem()
}

func (i IntentConfirmationPromptMessageArgs) ToIntentConfirmationPromptMessageOutput() IntentConfirmationPromptMessageOutput {
	return i.ToIntentConfirmationPromptMessageOutputWithContext(context.Background())
}

func (i IntentConfirmationPromptMessageArgs) ToIntentConfirmationPromptMessageOutputWithContext(ctx context.Context) IntentConfirmationPromptMessageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntentConfirmationPromptMessageOutput)
}

func (i *IntentConfirmationPromptMessageArgs) ToOutput(ctx context.Context) pulumix.Output[*IntentConfirmationPromptMessageArgs] {
	return pulumix.Val(i)
}

type IntentConfirmationPromptMessageOutput struct{ *pulumi.OutputState }

func (IntentConfirmationPromptMessageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntentConfirmationPromptMessage)(nil)).Elem()
}

func (o IntentConfirmationPromptMessageOutput) ToIntentConfirmationPromptMessageOutput() IntentConfirmationPromptMessageOutput {
	return o
}

func (o IntentConfirmationPromptMessageOutput) ToIntentConfirmationPromptMessageOutputWithContext(ctx context.Context) IntentConfirmationPromptMessageOutput {
	return o
}

func (o IntentConfirmationPromptMessageOutput) ToOutput(ctx context.Context) pulumix.Output[IntentConfirmationPromptMessage] {
	return pulumix.Output[IntentConfirmationPromptMessage]{
		OutputState: o.OutputState,
	}
}

// The text of the message. Must be less than or equal to 1000 characters in length.
func (o IntentConfirmationPromptMessageOutput) Content() pulumix.Output[string] {
	return pulumix.Apply[IntentConfirmationPromptMessage](o, func(v IntentConfirmationPromptMessage) string { return v.Content })
}

// The content type of the message string.
func (o IntentConfirmationPromptMessageOutput) ContentType() pulumix.Output[string] {
	return pulumix.Apply[IntentConfirmationPromptMessage](o, func(v IntentConfirmationPromptMessage) string { return v.ContentType })
}

// Identifies the message group that the message belongs to. When a group
// is assigned to a message, Amazon Lex returns one message from each group in the response. Must be a number between 1 and 5 (inclusive).
func (o IntentConfirmationPromptMessageOutput) GroupNumber() pulumix.Output[*int] {
	return pulumix.Apply[IntentConfirmationPromptMessage](o, func(v IntentConfirmationPromptMessage) *int { return v.GroupNumber })
}

type IntentDialogCodeHook struct {
	// The version of the request-response that you want Amazon Lex to use
	// to invoke your Lambda function. For more information, see
	// [Using Lambda Functions](https://docs.aws.amazon.com/lex/latest/dg/using-lambda.html). Must be less than or equal to 5 characters in length.
	MessageVersion string `pulumi:"messageVersion"`
	// The Amazon Resource Name (ARN) of the Lambda function.
	Uri string `pulumi:"uri"`
}

type IntentDialogCodeHookArgs struct {
	// The version of the request-response that you want Amazon Lex to use
	// to invoke your Lambda function. For more information, see
	// [Using Lambda Functions](https://docs.aws.amazon.com/lex/latest/dg/using-lambda.html). Must be less than or equal to 5 characters in length.
	MessageVersion pulumix.Input[string] `pulumi:"messageVersion"`
	// The Amazon Resource Name (ARN) of the Lambda function.
	Uri pulumix.Input[string] `pulumi:"uri"`
}

func (IntentDialogCodeHookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntentDialogCodeHook)(nil)).Elem()
}

func (i IntentDialogCodeHookArgs) ToIntentDialogCodeHookOutput() IntentDialogCodeHookOutput {
	return i.ToIntentDialogCodeHookOutputWithContext(context.Background())
}

func (i IntentDialogCodeHookArgs) ToIntentDialogCodeHookOutputWithContext(ctx context.Context) IntentDialogCodeHookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntentDialogCodeHookOutput)
}

func (i *IntentDialogCodeHookArgs) ToOutput(ctx context.Context) pulumix.Output[*IntentDialogCodeHookArgs] {
	return pulumix.Val(i)
}

type IntentDialogCodeHookOutput struct{ *pulumi.OutputState }

func (IntentDialogCodeHookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntentDialogCodeHook)(nil)).Elem()
}

func (o IntentDialogCodeHookOutput) ToIntentDialogCodeHookOutput() IntentDialogCodeHookOutput {
	return o
}

func (o IntentDialogCodeHookOutput) ToIntentDialogCodeHookOutputWithContext(ctx context.Context) IntentDialogCodeHookOutput {
	return o
}

func (o IntentDialogCodeHookOutput) ToOutput(ctx context.Context) pulumix.Output[IntentDialogCodeHook] {
	return pulumix.Output[IntentDialogCodeHook]{
		OutputState: o.OutputState,
	}
}

// The version of the request-response that you want Amazon Lex to use
// to invoke your Lambda function. For more information, see
// [Using Lambda Functions](https://docs.aws.amazon.com/lex/latest/dg/using-lambda.html). Must be less than or equal to 5 characters in length.
func (o IntentDialogCodeHookOutput) MessageVersion() pulumix.Output[string] {
	return pulumix.Apply[IntentDialogCodeHook](o, func(v IntentDialogCodeHook) string { return v.MessageVersion })
}

// The Amazon Resource Name (ARN) of the Lambda function.
func (o IntentDialogCodeHookOutput) Uri() pulumix.Output[string] {
	return pulumix.Apply[IntentDialogCodeHook](o, func(v IntentDialogCodeHook) string { return v.Uri })
}

type IntentFollowUpPrompt struct {
	// Prompts for information from the user. Attributes are documented under prompt.
	Prompt IntentFollowUpPromptPrompt `pulumi:"prompt"`
	// If the user answers "no" to the question defined in the prompt field,
	// Amazon Lex responds with this statement to acknowledge that the intent was canceled. Attributes are
	// documented below under statement.
	RejectionStatement IntentFollowUpPromptRejectionStatement `pulumi:"rejectionStatement"`
}

type IntentFollowUpPromptArgs struct {
	// Prompts for information from the user. Attributes are documented under prompt.
	Prompt pulumix.Input[*IntentFollowUpPromptPromptArgs] `pulumi:"prompt"`
	// If the user answers "no" to the question defined in the prompt field,
	// Amazon Lex responds with this statement to acknowledge that the intent was canceled. Attributes are
	// documented below under statement.
	RejectionStatement pulumix.Input[*IntentFollowUpPromptRejectionStatementArgs] `pulumi:"rejectionStatement"`
}

func (IntentFollowUpPromptArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntentFollowUpPrompt)(nil)).Elem()
}

func (i IntentFollowUpPromptArgs) ToIntentFollowUpPromptOutput() IntentFollowUpPromptOutput {
	return i.ToIntentFollowUpPromptOutputWithContext(context.Background())
}

func (i IntentFollowUpPromptArgs) ToIntentFollowUpPromptOutputWithContext(ctx context.Context) IntentFollowUpPromptOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntentFollowUpPromptOutput)
}

func (i *IntentFollowUpPromptArgs) ToOutput(ctx context.Context) pulumix.Output[*IntentFollowUpPromptArgs] {
	return pulumix.Val(i)
}

type IntentFollowUpPromptOutput struct{ *pulumi.OutputState }

func (IntentFollowUpPromptOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntentFollowUpPrompt)(nil)).Elem()
}

func (o IntentFollowUpPromptOutput) ToIntentFollowUpPromptOutput() IntentFollowUpPromptOutput {
	return o
}

func (o IntentFollowUpPromptOutput) ToIntentFollowUpPromptOutputWithContext(ctx context.Context) IntentFollowUpPromptOutput {
	return o
}

func (o IntentFollowUpPromptOutput) ToOutput(ctx context.Context) pulumix.Output[IntentFollowUpPrompt] {
	return pulumix.Output[IntentFollowUpPrompt]{
		OutputState: o.OutputState,
	}
}

// Prompts for information from the user. Attributes are documented under prompt.
func (o IntentFollowUpPromptOutput) Prompt() pulumix.GPtrOutput[IntentFollowUpPromptPrompt, IntentFollowUpPromptPromptOutput] {
	value := pulumix.Apply[IntentFollowUpPrompt](o, func(v IntentFollowUpPrompt) IntentFollowUpPromptPrompt { return v.Prompt })
	return pulumix.GPtrOutput[IntentFollowUpPromptPrompt, IntentFollowUpPromptPromptOutput]{OutputState: value.OutputState}
}

// If the user answers "no" to the question defined in the prompt field,
// Amazon Lex responds with this statement to acknowledge that the intent was canceled. Attributes are
// documented below under statement.
func (o IntentFollowUpPromptOutput) RejectionStatement() pulumix.GPtrOutput[IntentFollowUpPromptRejectionStatement, IntentFollowUpPromptRejectionStatementOutput] {
	value := pulumix.Apply[IntentFollowUpPrompt](o, func(v IntentFollowUpPrompt) IntentFollowUpPromptRejectionStatement { return v.RejectionStatement })
	return pulumix.GPtrOutput[IntentFollowUpPromptRejectionStatement, IntentFollowUpPromptRejectionStatementOutput]{OutputState: value.OutputState}
}

type IntentFollowUpPromptPrompt struct {
	// The number of times to prompt the user for information. Must be a number between 1 and 5 (inclusive).
	MaxAttempts int `pulumi:"maxAttempts"`
	// A set of messages, each of which provides a message string and its type.
	// You can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).
	// Attributes are documented under message. Must contain between 1 and 15 messages.
	Messages []IntentFollowUpPromptPromptMessage `pulumi:"messages"`
	// The response card. Amazon Lex will substitute session attributes and
	// slot values into the response card. For more information, see
	// [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html). Must be less than or equal to 50000 characters in length.
	ResponseCard *string `pulumi:"responseCard"`
}

type IntentFollowUpPromptPromptArgs struct {
	// The number of times to prompt the user for information. Must be a number between 1 and 5 (inclusive).
	MaxAttempts pulumix.Input[int] `pulumi:"maxAttempts"`
	// A set of messages, each of which provides a message string and its type.
	// You can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).
	// Attributes are documented under message. Must contain between 1 and 15 messages.
	Messages pulumix.Input[[]*IntentFollowUpPromptPromptMessageArgs] `pulumi:"messages"`
	// The response card. Amazon Lex will substitute session attributes and
	// slot values into the response card. For more information, see
	// [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html). Must be less than or equal to 50000 characters in length.
	ResponseCard pulumix.Input[*string] `pulumi:"responseCard"`
}

func (IntentFollowUpPromptPromptArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntentFollowUpPromptPrompt)(nil)).Elem()
}

func (i IntentFollowUpPromptPromptArgs) ToIntentFollowUpPromptPromptOutput() IntentFollowUpPromptPromptOutput {
	return i.ToIntentFollowUpPromptPromptOutputWithContext(context.Background())
}

func (i IntentFollowUpPromptPromptArgs) ToIntentFollowUpPromptPromptOutputWithContext(ctx context.Context) IntentFollowUpPromptPromptOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntentFollowUpPromptPromptOutput)
}

func (i *IntentFollowUpPromptPromptArgs) ToOutput(ctx context.Context) pulumix.Output[*IntentFollowUpPromptPromptArgs] {
	return pulumix.Val(i)
}

type IntentFollowUpPromptPromptOutput struct{ *pulumi.OutputState }

func (IntentFollowUpPromptPromptOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntentFollowUpPromptPrompt)(nil)).Elem()
}

func (o IntentFollowUpPromptPromptOutput) ToIntentFollowUpPromptPromptOutput() IntentFollowUpPromptPromptOutput {
	return o
}

func (o IntentFollowUpPromptPromptOutput) ToIntentFollowUpPromptPromptOutputWithContext(ctx context.Context) IntentFollowUpPromptPromptOutput {
	return o
}

func (o IntentFollowUpPromptPromptOutput) ToOutput(ctx context.Context) pulumix.Output[IntentFollowUpPromptPrompt] {
	return pulumix.Output[IntentFollowUpPromptPrompt]{
		OutputState: o.OutputState,
	}
}

// The number of times to prompt the user for information. Must be a number between 1 and 5 (inclusive).
func (o IntentFollowUpPromptPromptOutput) MaxAttempts() pulumix.Output[int] {
	return pulumix.Apply[IntentFollowUpPromptPrompt](o, func(v IntentFollowUpPromptPrompt) int { return v.MaxAttempts })
}

// A set of messages, each of which provides a message string and its type.
// You can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).
// Attributes are documented under message. Must contain between 1 and 15 messages.
func (o IntentFollowUpPromptPromptOutput) Messages() pulumix.GArrayOutput[IntentFollowUpPromptPromptMessage, IntentFollowUpPromptPromptMessageOutput] {
	value := pulumix.Apply[IntentFollowUpPromptPrompt](o, func(v IntentFollowUpPromptPrompt) []IntentFollowUpPromptPromptMessage { return v.Messages })
	return pulumix.GArrayOutput[IntentFollowUpPromptPromptMessage, IntentFollowUpPromptPromptMessageOutput]{OutputState: value.OutputState}
}

// The response card. Amazon Lex will substitute session attributes and
// slot values into the response card. For more information, see
// [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html). Must be less than or equal to 50000 characters in length.
func (o IntentFollowUpPromptPromptOutput) ResponseCard() pulumix.Output[*string] {
	return pulumix.Apply[IntentFollowUpPromptPrompt](o, func(v IntentFollowUpPromptPrompt) *string { return v.ResponseCard })
}

type IntentFollowUpPromptPromptMessage struct {
	// The text of the message. Must be less than or equal to 1000 characters in length.
	Content string `pulumi:"content"`
	// The content type of the message string.
	ContentType string `pulumi:"contentType"`
	// Identifies the message group that the message belongs to. When a group
	// is assigned to a message, Amazon Lex returns one message from each group in the response. Must be a number between 1 and 5 (inclusive).
	GroupNumber *int `pulumi:"groupNumber"`
}

type IntentFollowUpPromptPromptMessageArgs struct {
	// The text of the message. Must be less than or equal to 1000 characters in length.
	Content pulumix.Input[string] `pulumi:"content"`
	// The content type of the message string.
	ContentType pulumix.Input[string] `pulumi:"contentType"`
	// Identifies the message group that the message belongs to. When a group
	// is assigned to a message, Amazon Lex returns one message from each group in the response. Must be a number between 1 and 5 (inclusive).
	GroupNumber pulumix.Input[*int] `pulumi:"groupNumber"`
}

func (IntentFollowUpPromptPromptMessageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntentFollowUpPromptPromptMessage)(nil)).Elem()
}

func (i IntentFollowUpPromptPromptMessageArgs) ToIntentFollowUpPromptPromptMessageOutput() IntentFollowUpPromptPromptMessageOutput {
	return i.ToIntentFollowUpPromptPromptMessageOutputWithContext(context.Background())
}

func (i IntentFollowUpPromptPromptMessageArgs) ToIntentFollowUpPromptPromptMessageOutputWithContext(ctx context.Context) IntentFollowUpPromptPromptMessageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntentFollowUpPromptPromptMessageOutput)
}

func (i *IntentFollowUpPromptPromptMessageArgs) ToOutput(ctx context.Context) pulumix.Output[*IntentFollowUpPromptPromptMessageArgs] {
	return pulumix.Val(i)
}

type IntentFollowUpPromptPromptMessageOutput struct{ *pulumi.OutputState }

func (IntentFollowUpPromptPromptMessageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntentFollowUpPromptPromptMessage)(nil)).Elem()
}

func (o IntentFollowUpPromptPromptMessageOutput) ToIntentFollowUpPromptPromptMessageOutput() IntentFollowUpPromptPromptMessageOutput {
	return o
}

func (o IntentFollowUpPromptPromptMessageOutput) ToIntentFollowUpPromptPromptMessageOutputWithContext(ctx context.Context) IntentFollowUpPromptPromptMessageOutput {
	return o
}

func (o IntentFollowUpPromptPromptMessageOutput) ToOutput(ctx context.Context) pulumix.Output[IntentFollowUpPromptPromptMessage] {
	return pulumix.Output[IntentFollowUpPromptPromptMessage]{
		OutputState: o.OutputState,
	}
}

// The text of the message. Must be less than or equal to 1000 characters in length.
func (o IntentFollowUpPromptPromptMessageOutput) Content() pulumix.Output[string] {
	return pulumix.Apply[IntentFollowUpPromptPromptMessage](o, func(v IntentFollowUpPromptPromptMessage) string { return v.Content })
}

// The content type of the message string.
func (o IntentFollowUpPromptPromptMessageOutput) ContentType() pulumix.Output[string] {
	return pulumix.Apply[IntentFollowUpPromptPromptMessage](o, func(v IntentFollowUpPromptPromptMessage) string { return v.ContentType })
}

// Identifies the message group that the message belongs to. When a group
// is assigned to a message, Amazon Lex returns one message from each group in the response. Must be a number between 1 and 5 (inclusive).
func (o IntentFollowUpPromptPromptMessageOutput) GroupNumber() pulumix.Output[*int] {
	return pulumix.Apply[IntentFollowUpPromptPromptMessage](o, func(v IntentFollowUpPromptPromptMessage) *int { return v.GroupNumber })
}

type IntentFollowUpPromptRejectionStatement struct {
	Messages []IntentFollowUpPromptRejectionStatementMessage `pulumi:"messages"`
	// The response card. Amazon Lex will substitute session attributes and
	// slot values into the response card. For more information, see
	// [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html). Must be less than or equal to 50000 characters in length.
	// slot values into the response card. For more information, see
	// [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html). Must be less than or equal to 50000 characters in length.
	// slot values into the response card. For more information, see
	// [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html). Must be less than or equal to 50000 characters in length.
	ResponseCard *string `pulumi:"responseCard"`
}

type IntentFollowUpPromptRejectionStatementArgs struct {
	Messages pulumix.Input[[]*IntentFollowUpPromptRejectionStatementMessageArgs] `pulumi:"messages"`
	// The response card. Amazon Lex will substitute session attributes and
	// slot values into the response card. For more information, see
	// [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html). Must be less than or equal to 50000 characters in length.
	// slot values into the response card. For more information, see
	// [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html). Must be less than or equal to 50000 characters in length.
	// slot values into the response card. For more information, see
	// [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html). Must be less than or equal to 50000 characters in length.
	ResponseCard pulumix.Input[*string] `pulumi:"responseCard"`
}

func (IntentFollowUpPromptRejectionStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntentFollowUpPromptRejectionStatement)(nil)).Elem()
}

func (i IntentFollowUpPromptRejectionStatementArgs) ToIntentFollowUpPromptRejectionStatementOutput() IntentFollowUpPromptRejectionStatementOutput {
	return i.ToIntentFollowUpPromptRejectionStatementOutputWithContext(context.Background())
}

func (i IntentFollowUpPromptRejectionStatementArgs) ToIntentFollowUpPromptRejectionStatementOutputWithContext(ctx context.Context) IntentFollowUpPromptRejectionStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntentFollowUpPromptRejectionStatementOutput)
}

func (i *IntentFollowUpPromptRejectionStatementArgs) ToOutput(ctx context.Context) pulumix.Output[*IntentFollowUpPromptRejectionStatementArgs] {
	return pulumix.Val(i)
}

type IntentFollowUpPromptRejectionStatementOutput struct{ *pulumi.OutputState }

func (IntentFollowUpPromptRejectionStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntentFollowUpPromptRejectionStatement)(nil)).Elem()
}

func (o IntentFollowUpPromptRejectionStatementOutput) ToIntentFollowUpPromptRejectionStatementOutput() IntentFollowUpPromptRejectionStatementOutput {
	return o
}

func (o IntentFollowUpPromptRejectionStatementOutput) ToIntentFollowUpPromptRejectionStatementOutputWithContext(ctx context.Context) IntentFollowUpPromptRejectionStatementOutput {
	return o
}

func (o IntentFollowUpPromptRejectionStatementOutput) ToOutput(ctx context.Context) pulumix.Output[IntentFollowUpPromptRejectionStatement] {
	return pulumix.Output[IntentFollowUpPromptRejectionStatement]{
		OutputState: o.OutputState,
	}
}

func (o IntentFollowUpPromptRejectionStatementOutput) Messages() pulumix.GArrayOutput[IntentFollowUpPromptRejectionStatementMessage, IntentFollowUpPromptRejectionStatementMessageOutput] {
	value := pulumix.Apply[IntentFollowUpPromptRejectionStatement](o, func(v IntentFollowUpPromptRejectionStatement) []IntentFollowUpPromptRejectionStatementMessage {
		return v.Messages
	})
	return pulumix.GArrayOutput[IntentFollowUpPromptRejectionStatementMessage, IntentFollowUpPromptRejectionStatementMessageOutput]{OutputState: value.OutputState}
}

// The response card. Amazon Lex will substitute session attributes and
// slot values into the response card. For more information, see
// [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html). Must be less than or equal to 50000 characters in length.
// slot values into the response card. For more information, see
// [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html). Must be less than or equal to 50000 characters in length.
// slot values into the response card. For more information, see
// [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html). Must be less than or equal to 50000 characters in length.
func (o IntentFollowUpPromptRejectionStatementOutput) ResponseCard() pulumix.Output[*string] {
	return pulumix.Apply[IntentFollowUpPromptRejectionStatement](o, func(v IntentFollowUpPromptRejectionStatement) *string { return v.ResponseCard })
}

type IntentFollowUpPromptRejectionStatementMessage struct {
	// The text of the message. Must be less than or equal to 1000 characters in length.
	Content string `pulumi:"content"`
	// The content type of the message string.
	ContentType string `pulumi:"contentType"`
	// Identifies the message group that the message belongs to. When a group
	// is assigned to a message, Amazon Lex returns one message from each group in the response. Must be a number between 1 and 5 (inclusive).
	GroupNumber *int `pulumi:"groupNumber"`
}

type IntentFollowUpPromptRejectionStatementMessageArgs struct {
	// The text of the message. Must be less than or equal to 1000 characters in length.
	Content pulumix.Input[string] `pulumi:"content"`
	// The content type of the message string.
	ContentType pulumix.Input[string] `pulumi:"contentType"`
	// Identifies the message group that the message belongs to. When a group
	// is assigned to a message, Amazon Lex returns one message from each group in the response. Must be a number between 1 and 5 (inclusive).
	GroupNumber pulumix.Input[*int] `pulumi:"groupNumber"`
}

func (IntentFollowUpPromptRejectionStatementMessageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntentFollowUpPromptRejectionStatementMessage)(nil)).Elem()
}

func (i IntentFollowUpPromptRejectionStatementMessageArgs) ToIntentFollowUpPromptRejectionStatementMessageOutput() IntentFollowUpPromptRejectionStatementMessageOutput {
	return i.ToIntentFollowUpPromptRejectionStatementMessageOutputWithContext(context.Background())
}

func (i IntentFollowUpPromptRejectionStatementMessageArgs) ToIntentFollowUpPromptRejectionStatementMessageOutputWithContext(ctx context.Context) IntentFollowUpPromptRejectionStatementMessageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntentFollowUpPromptRejectionStatementMessageOutput)
}

func (i *IntentFollowUpPromptRejectionStatementMessageArgs) ToOutput(ctx context.Context) pulumix.Output[*IntentFollowUpPromptRejectionStatementMessageArgs] {
	return pulumix.Val(i)
}

type IntentFollowUpPromptRejectionStatementMessageOutput struct{ *pulumi.OutputState }

func (IntentFollowUpPromptRejectionStatementMessageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntentFollowUpPromptRejectionStatementMessage)(nil)).Elem()
}

func (o IntentFollowUpPromptRejectionStatementMessageOutput) ToIntentFollowUpPromptRejectionStatementMessageOutput() IntentFollowUpPromptRejectionStatementMessageOutput {
	return o
}

func (o IntentFollowUpPromptRejectionStatementMessageOutput) ToIntentFollowUpPromptRejectionStatementMessageOutputWithContext(ctx context.Context) IntentFollowUpPromptRejectionStatementMessageOutput {
	return o
}

func (o IntentFollowUpPromptRejectionStatementMessageOutput) ToOutput(ctx context.Context) pulumix.Output[IntentFollowUpPromptRejectionStatementMessage] {
	return pulumix.Output[IntentFollowUpPromptRejectionStatementMessage]{
		OutputState: o.OutputState,
	}
}

// The text of the message. Must be less than or equal to 1000 characters in length.
func (o IntentFollowUpPromptRejectionStatementMessageOutput) Content() pulumix.Output[string] {
	return pulumix.Apply[IntentFollowUpPromptRejectionStatementMessage](o, func(v IntentFollowUpPromptRejectionStatementMessage) string { return v.Content })
}

// The content type of the message string.
func (o IntentFollowUpPromptRejectionStatementMessageOutput) ContentType() pulumix.Output[string] {
	return pulumix.Apply[IntentFollowUpPromptRejectionStatementMessage](o, func(v IntentFollowUpPromptRejectionStatementMessage) string { return v.ContentType })
}

// Identifies the message group that the message belongs to. When a group
// is assigned to a message, Amazon Lex returns one message from each group in the response. Must be a number between 1 and 5 (inclusive).
func (o IntentFollowUpPromptRejectionStatementMessageOutput) GroupNumber() pulumix.Output[*int] {
	return pulumix.Apply[IntentFollowUpPromptRejectionStatementMessage](o, func(v IntentFollowUpPromptRejectionStatementMessage) *int { return v.GroupNumber })
}

type IntentFulfillmentActivity struct {
	// A description of the Lambda function that is run to fulfill the intent.
	// Required if type is CodeHook. Attributes are documented under code_hook.
	CodeHook *IntentFulfillmentActivityCodeHook `pulumi:"codeHook"`
	// How the intent should be fulfilled, either by running a Lambda function or by
	// returning the slot data to the client application. Type can be either `ReturnIntent` or `CodeHook`, as documented [here](https://docs.aws.amazon.com/lex/latest/dg/API_FulfillmentActivity.html).
	Type string `pulumi:"type"`
}

type IntentFulfillmentActivityArgs struct {
	// A description of the Lambda function that is run to fulfill the intent.
	// Required if type is CodeHook. Attributes are documented under code_hook.
	CodeHook pulumix.Input[*IntentFulfillmentActivityCodeHookArgs] `pulumi:"codeHook"`
	// How the intent should be fulfilled, either by running a Lambda function or by
	// returning the slot data to the client application. Type can be either `ReturnIntent` or `CodeHook`, as documented [here](https://docs.aws.amazon.com/lex/latest/dg/API_FulfillmentActivity.html).
	Type pulumix.Input[string] `pulumi:"type"`
}

func (IntentFulfillmentActivityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntentFulfillmentActivity)(nil)).Elem()
}

func (i IntentFulfillmentActivityArgs) ToIntentFulfillmentActivityOutput() IntentFulfillmentActivityOutput {
	return i.ToIntentFulfillmentActivityOutputWithContext(context.Background())
}

func (i IntentFulfillmentActivityArgs) ToIntentFulfillmentActivityOutputWithContext(ctx context.Context) IntentFulfillmentActivityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntentFulfillmentActivityOutput)
}

func (i *IntentFulfillmentActivityArgs) ToOutput(ctx context.Context) pulumix.Output[*IntentFulfillmentActivityArgs] {
	return pulumix.Val(i)
}

type IntentFulfillmentActivityOutput struct{ *pulumi.OutputState }

func (IntentFulfillmentActivityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntentFulfillmentActivity)(nil)).Elem()
}

func (o IntentFulfillmentActivityOutput) ToIntentFulfillmentActivityOutput() IntentFulfillmentActivityOutput {
	return o
}

func (o IntentFulfillmentActivityOutput) ToIntentFulfillmentActivityOutputWithContext(ctx context.Context) IntentFulfillmentActivityOutput {
	return o
}

func (o IntentFulfillmentActivityOutput) ToOutput(ctx context.Context) pulumix.Output[IntentFulfillmentActivity] {
	return pulumix.Output[IntentFulfillmentActivity]{
		OutputState: o.OutputState,
	}
}

// A description of the Lambda function that is run to fulfill the intent.
// Required if type is CodeHook. Attributes are documented under code_hook.
func (o IntentFulfillmentActivityOutput) CodeHook() pulumix.GPtrOutput[IntentFulfillmentActivityCodeHook, IntentFulfillmentActivityCodeHookOutput] {
	value := pulumix.Apply[IntentFulfillmentActivity](o, func(v IntentFulfillmentActivity) *IntentFulfillmentActivityCodeHook { return v.CodeHook })
	return pulumix.GPtrOutput[IntentFulfillmentActivityCodeHook, IntentFulfillmentActivityCodeHookOutput]{OutputState: value.OutputState}
}

// How the intent should be fulfilled, either by running a Lambda function or by
// returning the slot data to the client application. Type can be either `ReturnIntent` or `CodeHook`, as documented [here](https://docs.aws.amazon.com/lex/latest/dg/API_FulfillmentActivity.html).
func (o IntentFulfillmentActivityOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[IntentFulfillmentActivity](o, func(v IntentFulfillmentActivity) string { return v.Type })
}

type IntentFulfillmentActivityCodeHook struct {
	// The version of the request-response that you want Amazon Lex to use
	// to invoke your Lambda function. For more information, see
	// [Using Lambda Functions](https://docs.aws.amazon.com/lex/latest/dg/using-lambda.html). Must be less than or equal to 5 characters in length.
	MessageVersion string `pulumi:"messageVersion"`
	// The Amazon Resource Name (ARN) of the Lambda function.
	Uri string `pulumi:"uri"`
}

type IntentFulfillmentActivityCodeHookArgs struct {
	// The version of the request-response that you want Amazon Lex to use
	// to invoke your Lambda function. For more information, see
	// [Using Lambda Functions](https://docs.aws.amazon.com/lex/latest/dg/using-lambda.html). Must be less than or equal to 5 characters in length.
	MessageVersion pulumix.Input[string] `pulumi:"messageVersion"`
	// The Amazon Resource Name (ARN) of the Lambda function.
	Uri pulumix.Input[string] `pulumi:"uri"`
}

func (IntentFulfillmentActivityCodeHookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntentFulfillmentActivityCodeHook)(nil)).Elem()
}

func (i IntentFulfillmentActivityCodeHookArgs) ToIntentFulfillmentActivityCodeHookOutput() IntentFulfillmentActivityCodeHookOutput {
	return i.ToIntentFulfillmentActivityCodeHookOutputWithContext(context.Background())
}

func (i IntentFulfillmentActivityCodeHookArgs) ToIntentFulfillmentActivityCodeHookOutputWithContext(ctx context.Context) IntentFulfillmentActivityCodeHookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntentFulfillmentActivityCodeHookOutput)
}

func (i *IntentFulfillmentActivityCodeHookArgs) ToOutput(ctx context.Context) pulumix.Output[*IntentFulfillmentActivityCodeHookArgs] {
	return pulumix.Val(i)
}

type IntentFulfillmentActivityCodeHookOutput struct{ *pulumi.OutputState }

func (IntentFulfillmentActivityCodeHookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntentFulfillmentActivityCodeHook)(nil)).Elem()
}

func (o IntentFulfillmentActivityCodeHookOutput) ToIntentFulfillmentActivityCodeHookOutput() IntentFulfillmentActivityCodeHookOutput {
	return o
}

func (o IntentFulfillmentActivityCodeHookOutput) ToIntentFulfillmentActivityCodeHookOutputWithContext(ctx context.Context) IntentFulfillmentActivityCodeHookOutput {
	return o
}

func (o IntentFulfillmentActivityCodeHookOutput) ToOutput(ctx context.Context) pulumix.Output[IntentFulfillmentActivityCodeHook] {
	return pulumix.Output[IntentFulfillmentActivityCodeHook]{
		OutputState: o.OutputState,
	}
}

// The version of the request-response that you want Amazon Lex to use
// to invoke your Lambda function. For more information, see
// [Using Lambda Functions](https://docs.aws.amazon.com/lex/latest/dg/using-lambda.html). Must be less than or equal to 5 characters in length.
func (o IntentFulfillmentActivityCodeHookOutput) MessageVersion() pulumix.Output[string] {
	return pulumix.Apply[IntentFulfillmentActivityCodeHook](o, func(v IntentFulfillmentActivityCodeHook) string { return v.MessageVersion })
}

// The Amazon Resource Name (ARN) of the Lambda function.
func (o IntentFulfillmentActivityCodeHookOutput) Uri() pulumix.Output[string] {
	return pulumix.Apply[IntentFulfillmentActivityCodeHook](o, func(v IntentFulfillmentActivityCodeHook) string { return v.Uri })
}

type IntentRejectionStatement struct {
	Messages []IntentRejectionStatementMessage `pulumi:"messages"`
	// The response card. Amazon Lex will substitute session attributes and
	// slot values into the response card. For more information, see
	// [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html). Must be less than or equal to 50000 characters in length.
	// slot values into the response card. For more information, see
	// [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html). Must be less than or equal to 50000 characters in length.
	// slot values into the response card. For more information, see
	// [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html). Must be less than or equal to 50000 characters in length.
	ResponseCard *string `pulumi:"responseCard"`
}

type IntentRejectionStatementArgs struct {
	Messages pulumix.Input[[]*IntentRejectionStatementMessageArgs] `pulumi:"messages"`
	// The response card. Amazon Lex will substitute session attributes and
	// slot values into the response card. For more information, see
	// [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html). Must be less than or equal to 50000 characters in length.
	// slot values into the response card. For more information, see
	// [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html). Must be less than or equal to 50000 characters in length.
	// slot values into the response card. For more information, see
	// [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html). Must be less than or equal to 50000 characters in length.
	ResponseCard pulumix.Input[*string] `pulumi:"responseCard"`
}

func (IntentRejectionStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntentRejectionStatement)(nil)).Elem()
}

func (i IntentRejectionStatementArgs) ToIntentRejectionStatementOutput() IntentRejectionStatementOutput {
	return i.ToIntentRejectionStatementOutputWithContext(context.Background())
}

func (i IntentRejectionStatementArgs) ToIntentRejectionStatementOutputWithContext(ctx context.Context) IntentRejectionStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntentRejectionStatementOutput)
}

func (i *IntentRejectionStatementArgs) ToOutput(ctx context.Context) pulumix.Output[*IntentRejectionStatementArgs] {
	return pulumix.Val(i)
}

type IntentRejectionStatementOutput struct{ *pulumi.OutputState }

func (IntentRejectionStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntentRejectionStatement)(nil)).Elem()
}

func (o IntentRejectionStatementOutput) ToIntentRejectionStatementOutput() IntentRejectionStatementOutput {
	return o
}

func (o IntentRejectionStatementOutput) ToIntentRejectionStatementOutputWithContext(ctx context.Context) IntentRejectionStatementOutput {
	return o
}

func (o IntentRejectionStatementOutput) ToOutput(ctx context.Context) pulumix.Output[IntentRejectionStatement] {
	return pulumix.Output[IntentRejectionStatement]{
		OutputState: o.OutputState,
	}
}

func (o IntentRejectionStatementOutput) Messages() pulumix.GArrayOutput[IntentRejectionStatementMessage, IntentRejectionStatementMessageOutput] {
	value := pulumix.Apply[IntentRejectionStatement](o, func(v IntentRejectionStatement) []IntentRejectionStatementMessage { return v.Messages })
	return pulumix.GArrayOutput[IntentRejectionStatementMessage, IntentRejectionStatementMessageOutput]{OutputState: value.OutputState}
}

// The response card. Amazon Lex will substitute session attributes and
// slot values into the response card. For more information, see
// [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html). Must be less than or equal to 50000 characters in length.
// slot values into the response card. For more information, see
// [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html). Must be less than or equal to 50000 characters in length.
// slot values into the response card. For more information, see
// [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html). Must be less than or equal to 50000 characters in length.
func (o IntentRejectionStatementOutput) ResponseCard() pulumix.Output[*string] {
	return pulumix.Apply[IntentRejectionStatement](o, func(v IntentRejectionStatement) *string { return v.ResponseCard })
}

type IntentRejectionStatementMessage struct {
	// The text of the message. Must be less than or equal to 1000 characters in length.
	Content string `pulumi:"content"`
	// The content type of the message string.
	ContentType string `pulumi:"contentType"`
	// Identifies the message group that the message belongs to. When a group
	// is assigned to a message, Amazon Lex returns one message from each group in the response. Must be a number between 1 and 5 (inclusive).
	GroupNumber *int `pulumi:"groupNumber"`
}

type IntentRejectionStatementMessageArgs struct {
	// The text of the message. Must be less than or equal to 1000 characters in length.
	Content pulumix.Input[string] `pulumi:"content"`
	// The content type of the message string.
	ContentType pulumix.Input[string] `pulumi:"contentType"`
	// Identifies the message group that the message belongs to. When a group
	// is assigned to a message, Amazon Lex returns one message from each group in the response. Must be a number between 1 and 5 (inclusive).
	GroupNumber pulumix.Input[*int] `pulumi:"groupNumber"`
}

func (IntentRejectionStatementMessageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntentRejectionStatementMessage)(nil)).Elem()
}

func (i IntentRejectionStatementMessageArgs) ToIntentRejectionStatementMessageOutput() IntentRejectionStatementMessageOutput {
	return i.ToIntentRejectionStatementMessageOutputWithContext(context.Background())
}

func (i IntentRejectionStatementMessageArgs) ToIntentRejectionStatementMessageOutputWithContext(ctx context.Context) IntentRejectionStatementMessageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntentRejectionStatementMessageOutput)
}

func (i *IntentRejectionStatementMessageArgs) ToOutput(ctx context.Context) pulumix.Output[*IntentRejectionStatementMessageArgs] {
	return pulumix.Val(i)
}

type IntentRejectionStatementMessageOutput struct{ *pulumi.OutputState }

func (IntentRejectionStatementMessageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntentRejectionStatementMessage)(nil)).Elem()
}

func (o IntentRejectionStatementMessageOutput) ToIntentRejectionStatementMessageOutput() IntentRejectionStatementMessageOutput {
	return o
}

func (o IntentRejectionStatementMessageOutput) ToIntentRejectionStatementMessageOutputWithContext(ctx context.Context) IntentRejectionStatementMessageOutput {
	return o
}

func (o IntentRejectionStatementMessageOutput) ToOutput(ctx context.Context) pulumix.Output[IntentRejectionStatementMessage] {
	return pulumix.Output[IntentRejectionStatementMessage]{
		OutputState: o.OutputState,
	}
}

// The text of the message. Must be less than or equal to 1000 characters in length.
func (o IntentRejectionStatementMessageOutput) Content() pulumix.Output[string] {
	return pulumix.Apply[IntentRejectionStatementMessage](o, func(v IntentRejectionStatementMessage) string { return v.Content })
}

// The content type of the message string.
func (o IntentRejectionStatementMessageOutput) ContentType() pulumix.Output[string] {
	return pulumix.Apply[IntentRejectionStatementMessage](o, func(v IntentRejectionStatementMessage) string { return v.ContentType })
}

// Identifies the message group that the message belongs to. When a group
// is assigned to a message, Amazon Lex returns one message from each group in the response. Must be a number between 1 and 5 (inclusive).
func (o IntentRejectionStatementMessageOutput) GroupNumber() pulumix.Output[*int] {
	return pulumix.Apply[IntentRejectionStatementMessage](o, func(v IntentRejectionStatementMessage) *int { return v.GroupNumber })
}

type IntentSlot struct {
	// A description of the bot. Must be less than or equal to 200 characters in length.
	Description *string `pulumi:"description"`
	// The name of the intent slot that you want to create. The name is case sensitive. Must be less than or equal to 100 characters in length.
	Name string `pulumi:"name"`
	// Directs Lex the order in which to elicit this slot value from the user.
	// For example, if the intent has two slots with priorities 1 and 2, AWS Lex first elicits a value for
	// the slot with priority 1. If multiple slots share the same priority, the order in which Lex elicits
	// values is arbitrary. Must be between 1 and 100.
	Priority *int `pulumi:"priority"`
	// The response card. Amazon Lex will substitute session attributes and
	// slot values into the response card. For more information, see
	// [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html). Must be less than or equal to 50000 characters in length.
	ResponseCard *string `pulumi:"responseCard"`
	// If you know a specific pattern with which users might respond to
	// an Amazon Lex request for a slot value, you can provide those utterances to improve accuracy. This
	// is optional. In most cases, Amazon Lex is capable of understanding user utterances. Must have between 1 and 10 items in the list, and each item must be less than or equal to 200 characters in length.
	SampleUtterances []string `pulumi:"sampleUtterances"`
	// Specifies whether the slot is required or optional.
	SlotConstraint string `pulumi:"slotConstraint"`
	// The type of the slot, either a custom slot type that you defined or one of
	// the built-in slot types. Must be less than or equal to 100 characters in length.
	SlotType string `pulumi:"slotType"`
	// The version of the slot type. Must be less than or equal to 64 characters in length.
	SlotTypeVersion *string `pulumi:"slotTypeVersion"`
	// The prompt that Amazon Lex uses to elicit the slot value
	// from the user. Attributes are documented under prompt.
	ValueElicitationPrompt *IntentSlotValueElicitationPrompt `pulumi:"valueElicitationPrompt"`
}

type IntentSlotArgs struct {
	// A description of the bot. Must be less than or equal to 200 characters in length.
	Description pulumix.Input[*string] `pulumi:"description"`
	// The name of the intent slot that you want to create. The name is case sensitive. Must be less than or equal to 100 characters in length.
	Name pulumix.Input[string] `pulumi:"name"`
	// Directs Lex the order in which to elicit this slot value from the user.
	// For example, if the intent has two slots with priorities 1 and 2, AWS Lex first elicits a value for
	// the slot with priority 1. If multiple slots share the same priority, the order in which Lex elicits
	// values is arbitrary. Must be between 1 and 100.
	Priority pulumix.Input[*int] `pulumi:"priority"`
	// The response card. Amazon Lex will substitute session attributes and
	// slot values into the response card. For more information, see
	// [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html). Must be less than or equal to 50000 characters in length.
	ResponseCard pulumix.Input[*string] `pulumi:"responseCard"`
	// If you know a specific pattern with which users might respond to
	// an Amazon Lex request for a slot value, you can provide those utterances to improve accuracy. This
	// is optional. In most cases, Amazon Lex is capable of understanding user utterances. Must have between 1 and 10 items in the list, and each item must be less than or equal to 200 characters in length.
	SampleUtterances pulumix.Input[[]string] `pulumi:"sampleUtterances"`
	// Specifies whether the slot is required or optional.
	SlotConstraint pulumix.Input[string] `pulumi:"slotConstraint"`
	// The type of the slot, either a custom slot type that you defined or one of
	// the built-in slot types. Must be less than or equal to 100 characters in length.
	SlotType pulumix.Input[string] `pulumi:"slotType"`
	// The version of the slot type. Must be less than or equal to 64 characters in length.
	SlotTypeVersion pulumix.Input[*string] `pulumi:"slotTypeVersion"`
	// The prompt that Amazon Lex uses to elicit the slot value
	// from the user. Attributes are documented under prompt.
	ValueElicitationPrompt pulumix.Input[*IntentSlotValueElicitationPromptArgs] `pulumi:"valueElicitationPrompt"`
}

func (IntentSlotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntentSlot)(nil)).Elem()
}

func (i IntentSlotArgs) ToIntentSlotOutput() IntentSlotOutput {
	return i.ToIntentSlotOutputWithContext(context.Background())
}

func (i IntentSlotArgs) ToIntentSlotOutputWithContext(ctx context.Context) IntentSlotOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntentSlotOutput)
}

func (i *IntentSlotArgs) ToOutput(ctx context.Context) pulumix.Output[*IntentSlotArgs] {
	return pulumix.Val(i)
}

type IntentSlotOutput struct{ *pulumi.OutputState }

func (IntentSlotOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntentSlot)(nil)).Elem()
}

func (o IntentSlotOutput) ToIntentSlotOutput() IntentSlotOutput {
	return o
}

func (o IntentSlotOutput) ToIntentSlotOutputWithContext(ctx context.Context) IntentSlotOutput {
	return o
}

func (o IntentSlotOutput) ToOutput(ctx context.Context) pulumix.Output[IntentSlot] {
	return pulumix.Output[IntentSlot]{
		OutputState: o.OutputState,
	}
}

// A description of the bot. Must be less than or equal to 200 characters in length.
func (o IntentSlotOutput) Description() pulumix.Output[*string] {
	return pulumix.Apply[IntentSlot](o, func(v IntentSlot) *string { return v.Description })
}

// The name of the intent slot that you want to create. The name is case sensitive. Must be less than or equal to 100 characters in length.
func (o IntentSlotOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[IntentSlot](o, func(v IntentSlot) string { return v.Name })
}

// Directs Lex the order in which to elicit this slot value from the user.
// For example, if the intent has two slots with priorities 1 and 2, AWS Lex first elicits a value for
// the slot with priority 1. If multiple slots share the same priority, the order in which Lex elicits
// values is arbitrary. Must be between 1 and 100.
func (o IntentSlotOutput) Priority() pulumix.Output[*int] {
	return pulumix.Apply[IntentSlot](o, func(v IntentSlot) *int { return v.Priority })
}

// The response card. Amazon Lex will substitute session attributes and
// slot values into the response card. For more information, see
// [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html). Must be less than or equal to 50000 characters in length.
func (o IntentSlotOutput) ResponseCard() pulumix.Output[*string] {
	return pulumix.Apply[IntentSlot](o, func(v IntentSlot) *string { return v.ResponseCard })
}

// If you know a specific pattern with which users might respond to
// an Amazon Lex request for a slot value, you can provide those utterances to improve accuracy. This
// is optional. In most cases, Amazon Lex is capable of understanding user utterances. Must have between 1 and 10 items in the list, and each item must be less than or equal to 200 characters in length.
func (o IntentSlotOutput) SampleUtterances() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[IntentSlot](o, func(v IntentSlot) []string { return v.SampleUtterances })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// Specifies whether the slot is required or optional.
func (o IntentSlotOutput) SlotConstraint() pulumix.Output[string] {
	return pulumix.Apply[IntentSlot](o, func(v IntentSlot) string { return v.SlotConstraint })
}

// The type of the slot, either a custom slot type that you defined or one of
// the built-in slot types. Must be less than or equal to 100 characters in length.
func (o IntentSlotOutput) SlotType() pulumix.Output[string] {
	return pulumix.Apply[IntentSlot](o, func(v IntentSlot) string { return v.SlotType })
}

// The version of the slot type. Must be less than or equal to 64 characters in length.
func (o IntentSlotOutput) SlotTypeVersion() pulumix.Output[*string] {
	return pulumix.Apply[IntentSlot](o, func(v IntentSlot) *string { return v.SlotTypeVersion })
}

// The prompt that Amazon Lex uses to elicit the slot value
// from the user. Attributes are documented under prompt.
func (o IntentSlotOutput) ValueElicitationPrompt() pulumix.GPtrOutput[IntentSlotValueElicitationPrompt, IntentSlotValueElicitationPromptOutput] {
	value := pulumix.Apply[IntentSlot](o, func(v IntentSlot) *IntentSlotValueElicitationPrompt { return v.ValueElicitationPrompt })
	return pulumix.GPtrOutput[IntentSlotValueElicitationPrompt, IntentSlotValueElicitationPromptOutput]{OutputState: value.OutputState}
}

type IntentSlotValueElicitationPrompt struct {
	// The number of times to prompt the user for information. Must be a number between 1 and 5 (inclusive).
	MaxAttempts int                                       `pulumi:"maxAttempts"`
	Messages    []IntentSlotValueElicitationPromptMessage `pulumi:"messages"`
	// The response card. Amazon Lex will substitute session attributes and
	// slot values into the response card. For more information, see
	// [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html). Must be less than or equal to 50000 characters in length.
	// slot values into the response card. For more information, see
	// [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html). Must be less than or equal to 50000 characters in length.
	// slot values into the response card. For more information, see
	// [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html). Must be less than or equal to 50000 characters in length.
	ResponseCard *string `pulumi:"responseCard"`
}

type IntentSlotValueElicitationPromptArgs struct {
	// The number of times to prompt the user for information. Must be a number between 1 and 5 (inclusive).
	MaxAttempts pulumix.Input[int]                                            `pulumi:"maxAttempts"`
	Messages    pulumix.Input[[]*IntentSlotValueElicitationPromptMessageArgs] `pulumi:"messages"`
	// The response card. Amazon Lex will substitute session attributes and
	// slot values into the response card. For more information, see
	// [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html). Must be less than or equal to 50000 characters in length.
	// slot values into the response card. For more information, see
	// [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html). Must be less than or equal to 50000 characters in length.
	// slot values into the response card. For more information, see
	// [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html). Must be less than or equal to 50000 characters in length.
	ResponseCard pulumix.Input[*string] `pulumi:"responseCard"`
}

func (IntentSlotValueElicitationPromptArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntentSlotValueElicitationPrompt)(nil)).Elem()
}

func (i IntentSlotValueElicitationPromptArgs) ToIntentSlotValueElicitationPromptOutput() IntentSlotValueElicitationPromptOutput {
	return i.ToIntentSlotValueElicitationPromptOutputWithContext(context.Background())
}

func (i IntentSlotValueElicitationPromptArgs) ToIntentSlotValueElicitationPromptOutputWithContext(ctx context.Context) IntentSlotValueElicitationPromptOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntentSlotValueElicitationPromptOutput)
}

func (i *IntentSlotValueElicitationPromptArgs) ToOutput(ctx context.Context) pulumix.Output[*IntentSlotValueElicitationPromptArgs] {
	return pulumix.Val(i)
}

type IntentSlotValueElicitationPromptOutput struct{ *pulumi.OutputState }

func (IntentSlotValueElicitationPromptOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntentSlotValueElicitationPrompt)(nil)).Elem()
}

func (o IntentSlotValueElicitationPromptOutput) ToIntentSlotValueElicitationPromptOutput() IntentSlotValueElicitationPromptOutput {
	return o
}

func (o IntentSlotValueElicitationPromptOutput) ToIntentSlotValueElicitationPromptOutputWithContext(ctx context.Context) IntentSlotValueElicitationPromptOutput {
	return o
}

func (o IntentSlotValueElicitationPromptOutput) ToOutput(ctx context.Context) pulumix.Output[IntentSlotValueElicitationPrompt] {
	return pulumix.Output[IntentSlotValueElicitationPrompt]{
		OutputState: o.OutputState,
	}
}

// The number of times to prompt the user for information. Must be a number between 1 and 5 (inclusive).
func (o IntentSlotValueElicitationPromptOutput) MaxAttempts() pulumix.Output[int] {
	return pulumix.Apply[IntentSlotValueElicitationPrompt](o, func(v IntentSlotValueElicitationPrompt) int { return v.MaxAttempts })
}

func (o IntentSlotValueElicitationPromptOutput) Messages() pulumix.GArrayOutput[IntentSlotValueElicitationPromptMessage, IntentSlotValueElicitationPromptMessageOutput] {
	value := pulumix.Apply[IntentSlotValueElicitationPrompt](o, func(v IntentSlotValueElicitationPrompt) []IntentSlotValueElicitationPromptMessage { return v.Messages })
	return pulumix.GArrayOutput[IntentSlotValueElicitationPromptMessage, IntentSlotValueElicitationPromptMessageOutput]{OutputState: value.OutputState}
}

// The response card. Amazon Lex will substitute session attributes and
// slot values into the response card. For more information, see
// [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html). Must be less than or equal to 50000 characters in length.
// slot values into the response card. For more information, see
// [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html). Must be less than or equal to 50000 characters in length.
// slot values into the response card. For more information, see
// [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html). Must be less than or equal to 50000 characters in length.
func (o IntentSlotValueElicitationPromptOutput) ResponseCard() pulumix.Output[*string] {
	return pulumix.Apply[IntentSlotValueElicitationPrompt](o, func(v IntentSlotValueElicitationPrompt) *string { return v.ResponseCard })
}

type IntentSlotValueElicitationPromptMessage struct {
	// The text of the message. Must be less than or equal to 1000 characters in length.
	Content string `pulumi:"content"`
	// The content type of the message string.
	ContentType string `pulumi:"contentType"`
	// Identifies the message group that the message belongs to. When a group
	// is assigned to a message, Amazon Lex returns one message from each group in the response. Must be a number between 1 and 5 (inclusive).
	GroupNumber *int `pulumi:"groupNumber"`
}

type IntentSlotValueElicitationPromptMessageArgs struct {
	// The text of the message. Must be less than or equal to 1000 characters in length.
	Content pulumix.Input[string] `pulumi:"content"`
	// The content type of the message string.
	ContentType pulumix.Input[string] `pulumi:"contentType"`
	// Identifies the message group that the message belongs to. When a group
	// is assigned to a message, Amazon Lex returns one message from each group in the response. Must be a number between 1 and 5 (inclusive).
	GroupNumber pulumix.Input[*int] `pulumi:"groupNumber"`
}

func (IntentSlotValueElicitationPromptMessageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntentSlotValueElicitationPromptMessage)(nil)).Elem()
}

func (i IntentSlotValueElicitationPromptMessageArgs) ToIntentSlotValueElicitationPromptMessageOutput() IntentSlotValueElicitationPromptMessageOutput {
	return i.ToIntentSlotValueElicitationPromptMessageOutputWithContext(context.Background())
}

func (i IntentSlotValueElicitationPromptMessageArgs) ToIntentSlotValueElicitationPromptMessageOutputWithContext(ctx context.Context) IntentSlotValueElicitationPromptMessageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntentSlotValueElicitationPromptMessageOutput)
}

func (i *IntentSlotValueElicitationPromptMessageArgs) ToOutput(ctx context.Context) pulumix.Output[*IntentSlotValueElicitationPromptMessageArgs] {
	return pulumix.Val(i)
}

type IntentSlotValueElicitationPromptMessageOutput struct{ *pulumi.OutputState }

func (IntentSlotValueElicitationPromptMessageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntentSlotValueElicitationPromptMessage)(nil)).Elem()
}

func (o IntentSlotValueElicitationPromptMessageOutput) ToIntentSlotValueElicitationPromptMessageOutput() IntentSlotValueElicitationPromptMessageOutput {
	return o
}

func (o IntentSlotValueElicitationPromptMessageOutput) ToIntentSlotValueElicitationPromptMessageOutputWithContext(ctx context.Context) IntentSlotValueElicitationPromptMessageOutput {
	return o
}

func (o IntentSlotValueElicitationPromptMessageOutput) ToOutput(ctx context.Context) pulumix.Output[IntentSlotValueElicitationPromptMessage] {
	return pulumix.Output[IntentSlotValueElicitationPromptMessage]{
		OutputState: o.OutputState,
	}
}

// The text of the message. Must be less than or equal to 1000 characters in length.
func (o IntentSlotValueElicitationPromptMessageOutput) Content() pulumix.Output[string] {
	return pulumix.Apply[IntentSlotValueElicitationPromptMessage](o, func(v IntentSlotValueElicitationPromptMessage) string { return v.Content })
}

// The content type of the message string.
func (o IntentSlotValueElicitationPromptMessageOutput) ContentType() pulumix.Output[string] {
	return pulumix.Apply[IntentSlotValueElicitationPromptMessage](o, func(v IntentSlotValueElicitationPromptMessage) string { return v.ContentType })
}

// Identifies the message group that the message belongs to. When a group
// is assigned to a message, Amazon Lex returns one message from each group in the response. Must be a number between 1 and 5 (inclusive).
func (o IntentSlotValueElicitationPromptMessageOutput) GroupNumber() pulumix.Output[*int] {
	return pulumix.Apply[IntentSlotValueElicitationPromptMessage](o, func(v IntentSlotValueElicitationPromptMessage) *int { return v.GroupNumber })
}

type SlotTypeEnumerationValue struct {
	// Additional values related to the slot type value. Each item must be less than or equal to 140 characters in length.
	Synonyms []string `pulumi:"synonyms"`
	// The value of the slot type. Must be less than or equal to 140 characters in length.
	Value string `pulumi:"value"`
}

type SlotTypeEnumerationValueArgs struct {
	// Additional values related to the slot type value. Each item must be less than or equal to 140 characters in length.
	Synonyms pulumix.Input[[]string] `pulumi:"synonyms"`
	// The value of the slot type. Must be less than or equal to 140 characters in length.
	Value pulumix.Input[string] `pulumi:"value"`
}

func (SlotTypeEnumerationValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SlotTypeEnumerationValue)(nil)).Elem()
}

func (i SlotTypeEnumerationValueArgs) ToSlotTypeEnumerationValueOutput() SlotTypeEnumerationValueOutput {
	return i.ToSlotTypeEnumerationValueOutputWithContext(context.Background())
}

func (i SlotTypeEnumerationValueArgs) ToSlotTypeEnumerationValueOutputWithContext(ctx context.Context) SlotTypeEnumerationValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlotTypeEnumerationValueOutput)
}

func (i *SlotTypeEnumerationValueArgs) ToOutput(ctx context.Context) pulumix.Output[*SlotTypeEnumerationValueArgs] {
	return pulumix.Val(i)
}

type SlotTypeEnumerationValueOutput struct{ *pulumi.OutputState }

func (SlotTypeEnumerationValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SlotTypeEnumerationValue)(nil)).Elem()
}

func (o SlotTypeEnumerationValueOutput) ToSlotTypeEnumerationValueOutput() SlotTypeEnumerationValueOutput {
	return o
}

func (o SlotTypeEnumerationValueOutput) ToSlotTypeEnumerationValueOutputWithContext(ctx context.Context) SlotTypeEnumerationValueOutput {
	return o
}

func (o SlotTypeEnumerationValueOutput) ToOutput(ctx context.Context) pulumix.Output[SlotTypeEnumerationValue] {
	return pulumix.Output[SlotTypeEnumerationValue]{
		OutputState: o.OutputState,
	}
}

// Additional values related to the slot type value. Each item must be less than or equal to 140 characters in length.
func (o SlotTypeEnumerationValueOutput) Synonyms() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[SlotTypeEnumerationValue](o, func(v SlotTypeEnumerationValue) []string { return v.Synonyms })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// The value of the slot type. Must be less than or equal to 140 characters in length.
func (o SlotTypeEnumerationValueOutput) Value() pulumix.Output[string] {
	return pulumix.Apply[SlotTypeEnumerationValue](o, func(v SlotTypeEnumerationValue) string { return v.Value })
}

type GetSlotTypeEnumerationValue struct {
	Synonyms []string `pulumi:"synonyms"`
	Value    string   `pulumi:"value"`
}

type GetSlotTypeEnumerationValueArgs struct {
	Synonyms pulumix.Input[[]string] `pulumi:"synonyms"`
	Value    pulumix.Input[string]   `pulumi:"value"`
}

func (GetSlotTypeEnumerationValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSlotTypeEnumerationValue)(nil)).Elem()
}

func (i GetSlotTypeEnumerationValueArgs) ToGetSlotTypeEnumerationValueOutput() GetSlotTypeEnumerationValueOutput {
	return i.ToGetSlotTypeEnumerationValueOutputWithContext(context.Background())
}

func (i GetSlotTypeEnumerationValueArgs) ToGetSlotTypeEnumerationValueOutputWithContext(ctx context.Context) GetSlotTypeEnumerationValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSlotTypeEnumerationValueOutput)
}

func (i *GetSlotTypeEnumerationValueArgs) ToOutput(ctx context.Context) pulumix.Output[*GetSlotTypeEnumerationValueArgs] {
	return pulumix.Val(i)
}

type GetSlotTypeEnumerationValueOutput struct{ *pulumi.OutputState }

func (GetSlotTypeEnumerationValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSlotTypeEnumerationValue)(nil)).Elem()
}

func (o GetSlotTypeEnumerationValueOutput) ToGetSlotTypeEnumerationValueOutput() GetSlotTypeEnumerationValueOutput {
	return o
}

func (o GetSlotTypeEnumerationValueOutput) ToGetSlotTypeEnumerationValueOutputWithContext(ctx context.Context) GetSlotTypeEnumerationValueOutput {
	return o
}

func (o GetSlotTypeEnumerationValueOutput) ToOutput(ctx context.Context) pulumix.Output[GetSlotTypeEnumerationValue] {
	return pulumix.Output[GetSlotTypeEnumerationValue]{
		OutputState: o.OutputState,
	}
}

func (o GetSlotTypeEnumerationValueOutput) Synonyms() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[GetSlotTypeEnumerationValue](o, func(v GetSlotTypeEnumerationValue) []string { return v.Synonyms })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func (o GetSlotTypeEnumerationValueOutput) Value() pulumix.Output[string] {
	return pulumix.Apply[GetSlotTypeEnumerationValue](o, func(v GetSlotTypeEnumerationValue) string { return v.Value })
}

func init() {
	pulumi.RegisterOutputType(BotAbortStatementOutput{})
	pulumi.RegisterOutputType(BotAbortStatementMessageOutput{})
	pulumi.RegisterOutputType(BotAliasConversationLogsOutput{})
	pulumi.RegisterOutputType(BotAliasConversationLogsLogSettingOutput{})
	pulumi.RegisterOutputType(BotClarificationPromptOutput{})
	pulumi.RegisterOutputType(BotClarificationPromptMessageOutput{})
	pulumi.RegisterOutputType(BotIntentOutput{})
	pulumi.RegisterOutputType(IntentConclusionStatementOutput{})
	pulumi.RegisterOutputType(IntentConclusionStatementMessageOutput{})
	pulumi.RegisterOutputType(IntentConfirmationPromptOutput{})
	pulumi.RegisterOutputType(IntentConfirmationPromptMessageOutput{})
	pulumi.RegisterOutputType(IntentDialogCodeHookOutput{})
	pulumi.RegisterOutputType(IntentFollowUpPromptOutput{})
	pulumi.RegisterOutputType(IntentFollowUpPromptPromptOutput{})
	pulumi.RegisterOutputType(IntentFollowUpPromptPromptMessageOutput{})
	pulumi.RegisterOutputType(IntentFollowUpPromptRejectionStatementOutput{})
	pulumi.RegisterOutputType(IntentFollowUpPromptRejectionStatementMessageOutput{})
	pulumi.RegisterOutputType(IntentFulfillmentActivityOutput{})
	pulumi.RegisterOutputType(IntentFulfillmentActivityCodeHookOutput{})
	pulumi.RegisterOutputType(IntentRejectionStatementOutput{})
	pulumi.RegisterOutputType(IntentRejectionStatementMessageOutput{})
	pulumi.RegisterOutputType(IntentSlotOutput{})
	pulumi.RegisterOutputType(IntentSlotValueElicitationPromptOutput{})
	pulumi.RegisterOutputType(IntentSlotValueElicitationPromptMessageOutput{})
	pulumi.RegisterOutputType(SlotTypeEnumerationValueOutput{})
	pulumi.RegisterOutputType(GetSlotTypeEnumerationValueOutput{})
}
