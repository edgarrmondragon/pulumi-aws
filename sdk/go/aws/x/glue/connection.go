// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package glue

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a Glue Connection resource.
type Connection struct {
	pulumi.CustomResourceState

	// The ARN of the Glue Connection.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The ID of the Data Catalog in which to create the connection. If none is supplied, the AWS account ID is used by default.
	CatalogId pulumix.Output[string] `pulumi:"catalogId"`
	// A map of key-value pairs used as parameters for this connection.
	ConnectionProperties pulumix.MapOutput[string] `pulumi:"connectionProperties"`
	// The type of the connection. Supported are: `CUSTOM`, `JDBC`, `KAFKA`, `MARKETPLACE`, `MONGODB`, and `NETWORK`. Defaults to `JBDC`.
	ConnectionType pulumix.Output[*string] `pulumi:"connectionType"`
	// Description of the connection.
	Description pulumix.Output[*string] `pulumi:"description"`
	// A list of criteria that can be used in selecting this connection.
	MatchCriterias pulumix.ArrayOutput[string] `pulumi:"matchCriterias"`
	// The name of the connection.
	Name pulumix.Output[string] `pulumi:"name"`
	// A map of physical connection requirements, such as VPC and SecurityGroup. Defined below.
	PhysicalConnectionRequirements pulumix.GPtrOutput[ConnectionPhysicalConnectionRequirements, ConnectionPhysicalConnectionRequirementsOutput] `pulumi:"physicalConnectionRequirements"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
}

// NewConnection registers a new resource with the given unique name, arguments, and options.
func NewConnection(ctx *pulumi.Context,
	name string, args *ConnectionArgs, opts ...pulumi.ResourceOption) (*Connection, error) {
	if args == nil {
		args = &ConnectionArgs{}
	}

	if args.ConnectionProperties != nil {
		untypedSecretValue := pulumi.ToSecret(args.ConnectionProperties.ToOutput(ctx.Context()).Untyped())
		args.ConnectionProperties = pulumix.MustConvertTyped[map[string]string](untypedSecretValue)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"connectionProperties",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Connection
	err := ctx.RegisterResource("aws:glue/connection:Connection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetConnection gets an existing Connection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetConnection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ConnectionState, opts ...pulumi.ResourceOption) (*Connection, error) {
	var resource Connection
	err := ctx.ReadResource("aws:glue/connection:Connection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Connection resources.
type connectionState struct {
	// The ARN of the Glue Connection.
	Arn *string `pulumi:"arn"`
	// The ID of the Data Catalog in which to create the connection. If none is supplied, the AWS account ID is used by default.
	CatalogId *string `pulumi:"catalogId"`
	// A map of key-value pairs used as parameters for this connection.
	ConnectionProperties map[string]string `pulumi:"connectionProperties"`
	// The type of the connection. Supported are: `CUSTOM`, `JDBC`, `KAFKA`, `MARKETPLACE`, `MONGODB`, and `NETWORK`. Defaults to `JBDC`.
	ConnectionType *string `pulumi:"connectionType"`
	// Description of the connection.
	Description *string `pulumi:"description"`
	// A list of criteria that can be used in selecting this connection.
	MatchCriterias []string `pulumi:"matchCriterias"`
	// The name of the connection.
	Name *string `pulumi:"name"`
	// A map of physical connection requirements, such as VPC and SecurityGroup. Defined below.
	PhysicalConnectionRequirements *ConnectionPhysicalConnectionRequirements `pulumi:"physicalConnectionRequirements"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type ConnectionState struct {
	// The ARN of the Glue Connection.
	Arn pulumix.Input[*string]
	// The ID of the Data Catalog in which to create the connection. If none is supplied, the AWS account ID is used by default.
	CatalogId pulumix.Input[*string]
	// A map of key-value pairs used as parameters for this connection.
	ConnectionProperties pulumix.Input[map[string]string]
	// The type of the connection. Supported are: `CUSTOM`, `JDBC`, `KAFKA`, `MARKETPLACE`, `MONGODB`, and `NETWORK`. Defaults to `JBDC`.
	ConnectionType pulumix.Input[*string]
	// Description of the connection.
	Description pulumix.Input[*string]
	// A list of criteria that can be used in selecting this connection.
	MatchCriterias pulumix.Input[[]string]
	// The name of the connection.
	Name pulumix.Input[*string]
	// A map of physical connection requirements, such as VPC and SecurityGroup. Defined below.
	PhysicalConnectionRequirements pulumix.Input[*ConnectionPhysicalConnectionRequirementsArgs]
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
}

func (ConnectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*connectionState)(nil)).Elem()
}

type connectionArgs struct {
	// The ID of the Data Catalog in which to create the connection. If none is supplied, the AWS account ID is used by default.
	CatalogId *string `pulumi:"catalogId"`
	// A map of key-value pairs used as parameters for this connection.
	ConnectionProperties map[string]string `pulumi:"connectionProperties"`
	// The type of the connection. Supported are: `CUSTOM`, `JDBC`, `KAFKA`, `MARKETPLACE`, `MONGODB`, and `NETWORK`. Defaults to `JBDC`.
	ConnectionType *string `pulumi:"connectionType"`
	// Description of the connection.
	Description *string `pulumi:"description"`
	// A list of criteria that can be used in selecting this connection.
	MatchCriterias []string `pulumi:"matchCriterias"`
	// The name of the connection.
	Name *string `pulumi:"name"`
	// A map of physical connection requirements, such as VPC and SecurityGroup. Defined below.
	PhysicalConnectionRequirements *ConnectionPhysicalConnectionRequirements `pulumi:"physicalConnectionRequirements"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Connection resource.
type ConnectionArgs struct {
	// The ID of the Data Catalog in which to create the connection. If none is supplied, the AWS account ID is used by default.
	CatalogId pulumix.Input[*string]
	// A map of key-value pairs used as parameters for this connection.
	ConnectionProperties pulumix.Input[map[string]string]
	// The type of the connection. Supported are: `CUSTOM`, `JDBC`, `KAFKA`, `MARKETPLACE`, `MONGODB`, and `NETWORK`. Defaults to `JBDC`.
	ConnectionType pulumix.Input[*string]
	// Description of the connection.
	Description pulumix.Input[*string]
	// A list of criteria that can be used in selecting this connection.
	MatchCriterias pulumix.Input[[]string]
	// The name of the connection.
	Name pulumix.Input[*string]
	// A map of physical connection requirements, such as VPC and SecurityGroup. Defined below.
	PhysicalConnectionRequirements pulumix.Input[*ConnectionPhysicalConnectionRequirementsArgs]
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (ConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*connectionArgs)(nil)).Elem()
}

type ConnectionOutput struct{ *pulumi.OutputState }

func (ConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Connection)(nil)).Elem()
}

func (o ConnectionOutput) ToConnectionOutput() ConnectionOutput {
	return o
}

func (o ConnectionOutput) ToConnectionOutputWithContext(ctx context.Context) ConnectionOutput {
	return o
}

func (o ConnectionOutput) ToOutput(ctx context.Context) pulumix.Output[Connection] {
	return pulumix.Output[Connection]{
		OutputState: o.OutputState,
	}
}

// The ARN of the Glue Connection.
func (o ConnectionOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Connection](o, func(v Connection) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The ID of the Data Catalog in which to create the connection. If none is supplied, the AWS account ID is used by default.
func (o ConnectionOutput) CatalogId() pulumix.Output[string] {
	value := pulumix.Apply[Connection](o, func(v Connection) pulumix.Output[string] { return v.CatalogId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A map of key-value pairs used as parameters for this connection.
func (o ConnectionOutput) ConnectionProperties() pulumix.MapOutput[string] {
	value := pulumix.Apply[Connection](o, func(v Connection) pulumix.MapOutput[string] { return v.ConnectionProperties })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// The type of the connection. Supported are: `CUSTOM`, `JDBC`, `KAFKA`, `MARKETPLACE`, `MONGODB`, and `NETWORK`. Defaults to `JBDC`.
func (o ConnectionOutput) ConnectionType() pulumix.Output[*string] {
	value := pulumix.Apply[Connection](o, func(v Connection) pulumix.Output[*string] { return v.ConnectionType })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Description of the connection.
func (o ConnectionOutput) Description() pulumix.Output[*string] {
	value := pulumix.Apply[Connection](o, func(v Connection) pulumix.Output[*string] { return v.Description })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// A list of criteria that can be used in selecting this connection.
func (o ConnectionOutput) MatchCriterias() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[Connection](o, func(v Connection) pulumix.ArrayOutput[string] { return v.MatchCriterias })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// The name of the connection.
func (o ConnectionOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[Connection](o, func(v Connection) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A map of physical connection requirements, such as VPC and SecurityGroup. Defined below.
func (o ConnectionOutput) PhysicalConnectionRequirements() pulumix.GPtrOutput[ConnectionPhysicalConnectionRequirements, ConnectionPhysicalConnectionRequirementsOutput] {
	value := pulumix.Apply[Connection](o, func(v Connection) pulumix.GPtrOutput[ConnectionPhysicalConnectionRequirements, ConnectionPhysicalConnectionRequirementsOutput] {
		return v.PhysicalConnectionRequirements
	})
	unwrapped := pulumix.Flatten[*ConnectionPhysicalConnectionRequirements, pulumix.GPtrOutput[ConnectionPhysicalConnectionRequirements, ConnectionPhysicalConnectionRequirementsOutput]](value)
	return pulumix.GPtrOutput[ConnectionPhysicalConnectionRequirements, ConnectionPhysicalConnectionRequirementsOutput]{OutputState: unwrapped.OutputState}
}

// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o ConnectionOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Connection](o, func(v Connection) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o ConnectionOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[Connection](o, func(v Connection) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(ConnectionOutput{})
}
