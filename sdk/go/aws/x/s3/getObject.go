// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package s3

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// The S3 object data source allows access to the metadata and
// _optionally_ (see below) content of an object stored inside S3 bucket.
//
// > **Note:** The content of an object (`body` field) is available only for objects which have a human-readable `Content-Type` (`text/*` and `application/json`). This is to prevent printing unsafe characters and potentially downloading large amount of data which would be thrown away in favour of metadata.
func GetObject(ctx *pulumi.Context, args *GetObjectArgs, opts ...pulumi.InvokeOption) (*GetObjectResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetObjectResult
	err := ctx.Invoke("aws:s3/getObject:getObject", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getObject.
type GetObjectArgs struct {
	// Name of the bucket to read the object from. Alternatively, an [S3 access point](https://docs.aws.amazon.com/AmazonS3/latest/dev/using-access-points.html) ARN can be specified
	Bucket string `pulumi:"bucket"`
	// Full path to the object inside the bucket
	Key   string  `pulumi:"key"`
	Range *string `pulumi:"range"`
	// Map of tags assigned to the object.
	Tags map[string]string `pulumi:"tags"`
	// Specific version ID of the object returned (defaults to latest version)
	VersionId *string `pulumi:"versionId"`
}

// A collection of values returned by getObject.
type GetObjectResult struct {
	// Object data (see **limitations above** to understand cases in which this field is actually available)
	Body   string `pulumi:"body"`
	Bucket string `pulumi:"bucket"`
	// (Optional) Whether or not to use [Amazon S3 Bucket Keys](https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-key.html) for SSE-KMS.
	BucketKeyEnabled bool `pulumi:"bucketKeyEnabled"`
	// Caching behavior along the request/reply chain.
	CacheControl string `pulumi:"cacheControl"`
	// Presentational information for the object.
	ContentDisposition string `pulumi:"contentDisposition"`
	// What content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field.
	ContentEncoding string `pulumi:"contentEncoding"`
	// Language the content is in.
	ContentLanguage string `pulumi:"contentLanguage"`
	// Size of the body in bytes.
	ContentLength int `pulumi:"contentLength"`
	// Standard MIME type describing the format of the object data.
	ContentType string `pulumi:"contentType"`
	// [ETag](https://en.wikipedia.org/wiki/HTTP_ETag) generated for the object (an MD5 sum of the object content in case it's not encrypted)
	Etag string `pulumi:"etag"`
	// If the object expiration is configured (see [object lifecycle management](http://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html)), the field includes this header. It includes the expiry-date and rule-id key value pairs providing object expiration information. The value of the rule-id is URL encoded.
	Expiration string `pulumi:"expiration"`
	// Date and time at which the object is no longer cacheable.
	Expires string `pulumi:"expires"`
	// The provider-assigned unique ID for this managed resource.
	Id  string `pulumi:"id"`
	Key string `pulumi:"key"`
	// Last modified date of the object in RFC1123 format (e.g., `Mon, 02 Jan 2006 15:04:05 MST`)
	LastModified string `pulumi:"lastModified"`
	// Map of metadata stored with the object in S3
	Metadata map[string]string `pulumi:"metadata"`
	// Indicates whether this object has an active [legal hold](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock-overview.html#object-lock-legal-holds). This field is only returned if you have permission to view an object's legal hold status.
	ObjectLockLegalHoldStatus string `pulumi:"objectLockLegalHoldStatus"`
	// Object lock [retention mode](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock-overview.html#object-lock-retention-modes) currently in place for this object.
	ObjectLockMode string `pulumi:"objectLockMode"`
	// The date and time when this object's object lock will expire.
	ObjectLockRetainUntilDate string  `pulumi:"objectLockRetainUntilDate"`
	Range                     *string `pulumi:"range"`
	// If the object is stored using server-side encryption (KMS or Amazon S3-managed encryption key), this field includes the chosen encryption and algorithm used.
	ServerSideEncryption string `pulumi:"serverSideEncryption"`
	// If present, specifies the ID of the Key Management Service (KMS) master encryption key that was used for the object.
	SseKmsKeyId string `pulumi:"sseKmsKeyId"`
	// [Storage class](http://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html) information of the object. Available for all objects except for `Standard` storage class objects.
	StorageClass string `pulumi:"storageClass"`
	// Map of tags assigned to the object.
	Tags map[string]string `pulumi:"tags"`
	// Latest version ID of the object returned.
	VersionId string `pulumi:"versionId"`
	// If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL. Amazon S3 stores the value of this header in the object metadata.
	WebsiteRedirectLocation string `pulumi:"websiteRedirectLocation"`
}

func GetObjectOutput(ctx *pulumi.Context, args GetObjectOutputArgs, opts ...pulumi.InvokeOption) GetObjectResultOutput {
	outputResult := pulumix.ApplyErr[*GetObjectArgs](args.ToOutput(), func(plainArgs *GetObjectArgs) (*GetObjectResult, error) {
		return GetObject(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[GetObjectResultOutput, *GetObjectResult](outputResult)
}

// A collection of arguments for invoking getObject.
type GetObjectOutputArgs struct {
	// Name of the bucket to read the object from. Alternatively, an [S3 access point](https://docs.aws.amazon.com/AmazonS3/latest/dev/using-access-points.html) ARN can be specified
	Bucket pulumix.Input[string] `pulumi:"bucket"`
	// Full path to the object inside the bucket
	Key   pulumix.Input[string]  `pulumi:"key"`
	Range pulumix.Input[*string] `pulumi:"range"`
	// Map of tags assigned to the object.
	Tags pulumix.Input[map[string]string] `pulumi:"tags"`
	// Specific version ID of the object returned (defaults to latest version)
	VersionId pulumix.Input[*string] `pulumi:"versionId"`
}

func (args GetObjectOutputArgs) ToOutput() pulumix.Output[*GetObjectArgs] {
	allArgs := pulumix.All(
		args.Bucket.ToOutput(context.Background()).AsAny(),
		args.Key.ToOutput(context.Background()).AsAny(),
		args.Range.ToOutput(context.Background()).AsAny(),
		args.Tags.ToOutput(context.Background()).AsAny(),
		args.VersionId.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *GetObjectArgs {
		return &GetObjectArgs{
			Bucket:    resolvedArgs[0].(string),
			Key:       resolvedArgs[1].(string),
			Range:     resolvedArgs[2].(*string),
			Tags:      resolvedArgs[3].(map[string]string),
			VersionId: resolvedArgs[4].(*string),
		}
	})
}

type GetObjectResultOutput struct{ *pulumi.OutputState }

func (GetObjectResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetObjectResult)(nil)).Elem()
}

func (o GetObjectResultOutput) ToOutput(context.Context) pulumix.Output[*GetObjectResult] {
	return pulumix.Output[*GetObjectResult]{
		OutputState: o.OutputState,
	}
}

func (o GetObjectResultOutput) Body() pulumix.Output[string] {
	return pulumix.Apply[*GetObjectResult](o, func(v *GetObjectResult) string { return v.Body })
}

func (o GetObjectResultOutput) Bucket() pulumix.Output[string] {
	return pulumix.Apply[*GetObjectResult](o, func(v *GetObjectResult) string { return v.Bucket })
}

func (o GetObjectResultOutput) BucketKeyEnabled() pulumix.Output[bool] {
	return pulumix.Apply[*GetObjectResult](o, func(v *GetObjectResult) bool { return v.BucketKeyEnabled })
}

func (o GetObjectResultOutput) CacheControl() pulumix.Output[string] {
	return pulumix.Apply[*GetObjectResult](o, func(v *GetObjectResult) string { return v.CacheControl })
}

func (o GetObjectResultOutput) ContentDisposition() pulumix.Output[string] {
	return pulumix.Apply[*GetObjectResult](o, func(v *GetObjectResult) string { return v.ContentDisposition })
}

func (o GetObjectResultOutput) ContentEncoding() pulumix.Output[string] {
	return pulumix.Apply[*GetObjectResult](o, func(v *GetObjectResult) string { return v.ContentEncoding })
}

func (o GetObjectResultOutput) ContentLanguage() pulumix.Output[string] {
	return pulumix.Apply[*GetObjectResult](o, func(v *GetObjectResult) string { return v.ContentLanguage })
}

func (o GetObjectResultOutput) ContentLength() pulumix.Output[int] {
	return pulumix.Apply[*GetObjectResult](o, func(v *GetObjectResult) int { return v.ContentLength })
}

func (o GetObjectResultOutput) ContentType() pulumix.Output[string] {
	return pulumix.Apply[*GetObjectResult](o, func(v *GetObjectResult) string { return v.ContentType })
}

func (o GetObjectResultOutput) Etag() pulumix.Output[string] {
	return pulumix.Apply[*GetObjectResult](o, func(v *GetObjectResult) string { return v.Etag })
}

func (o GetObjectResultOutput) Expiration() pulumix.Output[string] {
	return pulumix.Apply[*GetObjectResult](o, func(v *GetObjectResult) string { return v.Expiration })
}

func (o GetObjectResultOutput) Expires() pulumix.Output[string] {
	return pulumix.Apply[*GetObjectResult](o, func(v *GetObjectResult) string { return v.Expires })
}

func (o GetObjectResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*GetObjectResult](o, func(v *GetObjectResult) string { return v.Id })
}

func (o GetObjectResultOutput) Key() pulumix.Output[string] {
	return pulumix.Apply[*GetObjectResult](o, func(v *GetObjectResult) string { return v.Key })
}

func (o GetObjectResultOutput) LastModified() pulumix.Output[string] {
	return pulumix.Apply[*GetObjectResult](o, func(v *GetObjectResult) string { return v.LastModified })
}

func (o GetObjectResultOutput) Metadata() pulumix.MapOutput[string] {
	value := pulumix.Apply[*GetObjectResult](o, func(v *GetObjectResult) map[string]string { return v.Metadata })
	return pulumix.MapOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o GetObjectResultOutput) ObjectLockLegalHoldStatus() pulumix.Output[string] {
	return pulumix.Apply[*GetObjectResult](o, func(v *GetObjectResult) string { return v.ObjectLockLegalHoldStatus })
}

func (o GetObjectResultOutput) ObjectLockMode() pulumix.Output[string] {
	return pulumix.Apply[*GetObjectResult](o, func(v *GetObjectResult) string { return v.ObjectLockMode })
}

func (o GetObjectResultOutput) ObjectLockRetainUntilDate() pulumix.Output[string] {
	return pulumix.Apply[*GetObjectResult](o, func(v *GetObjectResult) string { return v.ObjectLockRetainUntilDate })
}

func (o GetObjectResultOutput) Range() pulumix.Output[*string] {
	return pulumix.Apply[*GetObjectResult](o, func(v *GetObjectResult) *string { return v.Range })
}

func (o GetObjectResultOutput) ServerSideEncryption() pulumix.Output[string] {
	return pulumix.Apply[*GetObjectResult](o, func(v *GetObjectResult) string { return v.ServerSideEncryption })
}

func (o GetObjectResultOutput) SseKmsKeyId() pulumix.Output[string] {
	return pulumix.Apply[*GetObjectResult](o, func(v *GetObjectResult) string { return v.SseKmsKeyId })
}

func (o GetObjectResultOutput) StorageClass() pulumix.Output[string] {
	return pulumix.Apply[*GetObjectResult](o, func(v *GetObjectResult) string { return v.StorageClass })
}

func (o GetObjectResultOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[*GetObjectResult](o, func(v *GetObjectResult) map[string]string { return v.Tags })
	return pulumix.MapOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o GetObjectResultOutput) VersionId() pulumix.Output[string] {
	return pulumix.Apply[*GetObjectResult](o, func(v *GetObjectResult) string { return v.VersionId })
}

func (o GetObjectResultOutput) WebsiteRedirectLocation() pulumix.Output[string] {
	return pulumix.Apply[*GetObjectResult](o, func(v *GetObjectResult) string { return v.WebsiteRedirectLocation })
}
