// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ses

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an SES domain MAIL FROM resource.
//
// > **NOTE:** For the MAIL FROM domain to be fully usable, this resource should be paired with the ses.DomainIdentity resource. To validate the MAIL FROM domain, a DNS MX record is required. To pass SPF checks, a DNS TXT record may also be required. See the [Amazon SES MAIL FROM documentation](https://docs.aws.amazon.com/ses/latest/dg/mail-from.html) for more information.
type MailFrom struct {
	pulumi.CustomResourceState

	// The action that you want Amazon SES to take if it cannot successfully read the required MX record when you send an email. Defaults to `UseDefaultValue`. See the [SES API documentation](https://docs.aws.amazon.com/ses/latest/APIReference/API_SetIdentityMailFromDomain.html) for more information.
	BehaviorOnMxFailure pulumix.Output[*string] `pulumi:"behaviorOnMxFailure"`
	// Verified domain name or email identity to generate DKIM tokens for.
	Domain pulumix.Output[string] `pulumi:"domain"`
	// Subdomain (of above domain) which is to be used as MAIL FROM address (Required for DMARC validation)
	//
	// The following arguments are optional:
	MailFromDomain pulumix.Output[string] `pulumi:"mailFromDomain"`
}

// NewMailFrom registers a new resource with the given unique name, arguments, and options.
func NewMailFrom(ctx *pulumi.Context,
	name string, args *MailFromArgs, opts ...pulumi.ResourceOption) (*MailFrom, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Domain == nil {
		return nil, errors.New("invalid value for required argument 'Domain'")
	}
	if args.MailFromDomain == nil {
		return nil, errors.New("invalid value for required argument 'MailFromDomain'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource MailFrom
	err := ctx.RegisterResource("aws:ses/mailFrom:MailFrom", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMailFrom gets an existing MailFrom resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMailFrom(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MailFromState, opts ...pulumi.ResourceOption) (*MailFrom, error) {
	var resource MailFrom
	err := ctx.ReadResource("aws:ses/mailFrom:MailFrom", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MailFrom resources.
type mailFromState struct {
	// The action that you want Amazon SES to take if it cannot successfully read the required MX record when you send an email. Defaults to `UseDefaultValue`. See the [SES API documentation](https://docs.aws.amazon.com/ses/latest/APIReference/API_SetIdentityMailFromDomain.html) for more information.
	BehaviorOnMxFailure *string `pulumi:"behaviorOnMxFailure"`
	// Verified domain name or email identity to generate DKIM tokens for.
	Domain *string `pulumi:"domain"`
	// Subdomain (of above domain) which is to be used as MAIL FROM address (Required for DMARC validation)
	//
	// The following arguments are optional:
	MailFromDomain *string `pulumi:"mailFromDomain"`
}

type MailFromState struct {
	// The action that you want Amazon SES to take if it cannot successfully read the required MX record when you send an email. Defaults to `UseDefaultValue`. See the [SES API documentation](https://docs.aws.amazon.com/ses/latest/APIReference/API_SetIdentityMailFromDomain.html) for more information.
	BehaviorOnMxFailure pulumix.Input[*string]
	// Verified domain name or email identity to generate DKIM tokens for.
	Domain pulumix.Input[*string]
	// Subdomain (of above domain) which is to be used as MAIL FROM address (Required for DMARC validation)
	//
	// The following arguments are optional:
	MailFromDomain pulumix.Input[*string]
}

func (MailFromState) ElementType() reflect.Type {
	return reflect.TypeOf((*mailFromState)(nil)).Elem()
}

type mailFromArgs struct {
	// The action that you want Amazon SES to take if it cannot successfully read the required MX record when you send an email. Defaults to `UseDefaultValue`. See the [SES API documentation](https://docs.aws.amazon.com/ses/latest/APIReference/API_SetIdentityMailFromDomain.html) for more information.
	BehaviorOnMxFailure *string `pulumi:"behaviorOnMxFailure"`
	// Verified domain name or email identity to generate DKIM tokens for.
	Domain string `pulumi:"domain"`
	// Subdomain (of above domain) which is to be used as MAIL FROM address (Required for DMARC validation)
	//
	// The following arguments are optional:
	MailFromDomain string `pulumi:"mailFromDomain"`
}

// The set of arguments for constructing a MailFrom resource.
type MailFromArgs struct {
	// The action that you want Amazon SES to take if it cannot successfully read the required MX record when you send an email. Defaults to `UseDefaultValue`. See the [SES API documentation](https://docs.aws.amazon.com/ses/latest/APIReference/API_SetIdentityMailFromDomain.html) for more information.
	BehaviorOnMxFailure pulumix.Input[*string]
	// Verified domain name or email identity to generate DKIM tokens for.
	Domain pulumix.Input[string]
	// Subdomain (of above domain) which is to be used as MAIL FROM address (Required for DMARC validation)
	//
	// The following arguments are optional:
	MailFromDomain pulumix.Input[string]
}

func (MailFromArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*mailFromArgs)(nil)).Elem()
}

type MailFromOutput struct{ *pulumi.OutputState }

func (MailFromOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MailFrom)(nil)).Elem()
}

func (o MailFromOutput) ToMailFromOutput() MailFromOutput {
	return o
}

func (o MailFromOutput) ToMailFromOutputWithContext(ctx context.Context) MailFromOutput {
	return o
}

func (o MailFromOutput) ToOutput(ctx context.Context) pulumix.Output[MailFrom] {
	return pulumix.Output[MailFrom]{
		OutputState: o.OutputState,
	}
}

// The action that you want Amazon SES to take if it cannot successfully read the required MX record when you send an email. Defaults to `UseDefaultValue`. See the [SES API documentation](https://docs.aws.amazon.com/ses/latest/APIReference/API_SetIdentityMailFromDomain.html) for more information.
func (o MailFromOutput) BehaviorOnMxFailure() pulumix.Output[*string] {
	value := pulumix.Apply[MailFrom](o, func(v MailFrom) pulumix.Output[*string] { return v.BehaviorOnMxFailure })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Verified domain name or email identity to generate DKIM tokens for.
func (o MailFromOutput) Domain() pulumix.Output[string] {
	value := pulumix.Apply[MailFrom](o, func(v MailFrom) pulumix.Output[string] { return v.Domain })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Subdomain (of above domain) which is to be used as MAIL FROM address (Required for DMARC validation)
//
// The following arguments are optional:
func (o MailFromOutput) MailFromDomain() pulumix.Output[string] {
	value := pulumix.Apply[MailFrom](o, func(v MailFrom) pulumix.Output[string] { return v.MailFromDomain })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(MailFromOutput{})
}
