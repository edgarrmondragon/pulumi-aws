// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package organizations

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a resource to create an organizational unit.
type OrganizationalUnit struct {
	pulumi.CustomResourceState

	// List of child accounts for this Organizational Unit. Does not return account information for child Organizational Units. All elements have these attributes:
	Accounts pulumix.GArrayOutput[OrganizationalUnitAccount, OrganizationalUnitAccountOutput] `pulumi:"accounts"`
	// ARN of the organizational unit
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The name for the organizational unit
	Name pulumix.Output[string] `pulumi:"name"`
	// ID of the parent organizational unit, which may be the root
	ParentId pulumix.Output[string] `pulumi:"parentId"`
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
}

// NewOrganizationalUnit registers a new resource with the given unique name, arguments, and options.
func NewOrganizationalUnit(ctx *pulumi.Context,
	name string, args *OrganizationalUnitArgs, opts ...pulumi.ResourceOption) (*OrganizationalUnit, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ParentId == nil {
		return nil, errors.New("invalid value for required argument 'ParentId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource OrganizationalUnit
	err := ctx.RegisterResource("aws:organizations/organizationalUnit:OrganizationalUnit", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOrganizationalUnit gets an existing OrganizationalUnit resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOrganizationalUnit(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OrganizationalUnitState, opts ...pulumi.ResourceOption) (*OrganizationalUnit, error) {
	var resource OrganizationalUnit
	err := ctx.ReadResource("aws:organizations/organizationalUnit:OrganizationalUnit", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OrganizationalUnit resources.
type organizationalUnitState struct {
	// List of child accounts for this Organizational Unit. Does not return account information for child Organizational Units. All elements have these attributes:
	Accounts []OrganizationalUnitAccount `pulumi:"accounts"`
	// ARN of the organizational unit
	Arn *string `pulumi:"arn"`
	// The name for the organizational unit
	Name *string `pulumi:"name"`
	// ID of the parent organizational unit, which may be the root
	ParentId *string `pulumi:"parentId"`
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type OrganizationalUnitState struct {
	// List of child accounts for this Organizational Unit. Does not return account information for child Organizational Units. All elements have these attributes:
	Accounts pulumix.Input[[]*OrganizationalUnitAccountArgs]
	// ARN of the organizational unit
	Arn pulumix.Input[*string]
	// The name for the organizational unit
	Name pulumix.Input[*string]
	// ID of the parent organizational unit, which may be the root
	ParentId pulumix.Input[*string]
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
}

func (OrganizationalUnitState) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationalUnitState)(nil)).Elem()
}

type organizationalUnitArgs struct {
	// The name for the organizational unit
	Name *string `pulumi:"name"`
	// ID of the parent organizational unit, which may be the root
	ParentId string `pulumi:"parentId"`
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a OrganizationalUnit resource.
type OrganizationalUnitArgs struct {
	// The name for the organizational unit
	Name pulumix.Input[*string]
	// ID of the parent organizational unit, which may be the root
	ParentId pulumix.Input[string]
	// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (OrganizationalUnitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationalUnitArgs)(nil)).Elem()
}

type OrganizationalUnitOutput struct{ *pulumi.OutputState }

func (OrganizationalUnitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationalUnit)(nil)).Elem()
}

func (o OrganizationalUnitOutput) ToOrganizationalUnitOutput() OrganizationalUnitOutput {
	return o
}

func (o OrganizationalUnitOutput) ToOrganizationalUnitOutputWithContext(ctx context.Context) OrganizationalUnitOutput {
	return o
}

func (o OrganizationalUnitOutput) ToOutput(ctx context.Context) pulumix.Output[OrganizationalUnit] {
	return pulumix.Output[OrganizationalUnit]{
		OutputState: o.OutputState,
	}
}

// List of child accounts for this Organizational Unit. Does not return account information for child Organizational Units. All elements have these attributes:
func (o OrganizationalUnitOutput) Accounts() pulumix.GArrayOutput[OrganizationalUnitAccount, OrganizationalUnitAccountOutput] {
	value := pulumix.Apply[OrganizationalUnit](o, func(v OrganizationalUnit) pulumix.GArrayOutput[OrganizationalUnitAccount, OrganizationalUnitAccountOutput] {
		return v.Accounts
	})
	unwrapped := pulumix.Flatten[[]OrganizationalUnitAccount, pulumix.GArrayOutput[OrganizationalUnitAccount, OrganizationalUnitAccountOutput]](value)
	return pulumix.GArrayOutput[OrganizationalUnitAccount, OrganizationalUnitAccountOutput]{OutputState: unwrapped.OutputState}
}

// ARN of the organizational unit
func (o OrganizationalUnitOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[OrganizationalUnit](o, func(v OrganizationalUnit) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The name for the organizational unit
func (o OrganizationalUnitOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[OrganizationalUnit](o, func(v OrganizationalUnit) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// ID of the parent organizational unit, which may be the root
func (o OrganizationalUnitOutput) ParentId() pulumix.Output[string] {
	value := pulumix.Apply[OrganizationalUnit](o, func(v OrganizationalUnit) pulumix.Output[string] { return v.ParentId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Key-value map of resource tags. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o OrganizationalUnitOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[OrganizationalUnit](o, func(v OrganizationalUnit) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o OrganizationalUnitOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[OrganizationalUnit](o, func(v OrganizationalUnit) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(OrganizationalUnitOutput{})
}
