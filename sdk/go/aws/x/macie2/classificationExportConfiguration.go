// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package macie2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a resource to manage an [Amazon Macie Classification Export Configuration](https://docs.aws.amazon.com/macie/latest/APIReference/classification-export-configuration.html).
type ClassificationExportConfiguration struct {
	pulumi.CustomResourceState

	// Configuration block for a S3 Destination. Defined below
	S3Destination pulumix.GPtrOutput[ClassificationExportConfigurationS3Destination, ClassificationExportConfigurationS3DestinationOutput] `pulumi:"s3Destination"`
}

// NewClassificationExportConfiguration registers a new resource with the given unique name, arguments, and options.
func NewClassificationExportConfiguration(ctx *pulumi.Context,
	name string, args *ClassificationExportConfigurationArgs, opts ...pulumi.ResourceOption) (*ClassificationExportConfiguration, error) {
	if args == nil {
		args = &ClassificationExportConfigurationArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ClassificationExportConfiguration
	err := ctx.RegisterResource("aws:macie2/classificationExportConfiguration:ClassificationExportConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetClassificationExportConfiguration gets an existing ClassificationExportConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetClassificationExportConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ClassificationExportConfigurationState, opts ...pulumi.ResourceOption) (*ClassificationExportConfiguration, error) {
	var resource ClassificationExportConfiguration
	err := ctx.ReadResource("aws:macie2/classificationExportConfiguration:ClassificationExportConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ClassificationExportConfiguration resources.
type classificationExportConfigurationState struct {
	// Configuration block for a S3 Destination. Defined below
	S3Destination *ClassificationExportConfigurationS3Destination `pulumi:"s3Destination"`
}

type ClassificationExportConfigurationState struct {
	// Configuration block for a S3 Destination. Defined below
	S3Destination pulumix.Input[*ClassificationExportConfigurationS3DestinationArgs]
}

func (ClassificationExportConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*classificationExportConfigurationState)(nil)).Elem()
}

type classificationExportConfigurationArgs struct {
	// Configuration block for a S3 Destination. Defined below
	S3Destination *ClassificationExportConfigurationS3Destination `pulumi:"s3Destination"`
}

// The set of arguments for constructing a ClassificationExportConfiguration resource.
type ClassificationExportConfigurationArgs struct {
	// Configuration block for a S3 Destination. Defined below
	S3Destination pulumix.Input[*ClassificationExportConfigurationS3DestinationArgs]
}

func (ClassificationExportConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*classificationExportConfigurationArgs)(nil)).Elem()
}

type ClassificationExportConfigurationOutput struct{ *pulumi.OutputState }

func (ClassificationExportConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClassificationExportConfiguration)(nil)).Elem()
}

func (o ClassificationExportConfigurationOutput) ToClassificationExportConfigurationOutput() ClassificationExportConfigurationOutput {
	return o
}

func (o ClassificationExportConfigurationOutput) ToClassificationExportConfigurationOutputWithContext(ctx context.Context) ClassificationExportConfigurationOutput {
	return o
}

func (o ClassificationExportConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[ClassificationExportConfiguration] {
	return pulumix.Output[ClassificationExportConfiguration]{
		OutputState: o.OutputState,
	}
}

// Configuration block for a S3 Destination. Defined below
func (o ClassificationExportConfigurationOutput) S3Destination() pulumix.GPtrOutput[ClassificationExportConfigurationS3Destination, ClassificationExportConfigurationS3DestinationOutput] {
	value := pulumix.Apply[ClassificationExportConfiguration](o, func(v ClassificationExportConfiguration) pulumix.GPtrOutput[ClassificationExportConfigurationS3Destination, ClassificationExportConfigurationS3DestinationOutput] {
		return v.S3Destination
	})
	unwrapped := pulumix.Flatten[*ClassificationExportConfigurationS3Destination, pulumix.GPtrOutput[ClassificationExportConfigurationS3Destination, ClassificationExportConfigurationS3DestinationOutput]](value)
	return pulumix.GPtrOutput[ClassificationExportConfigurationS3Destination, ClassificationExportConfigurationS3DestinationOutput]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(ClassificationExportConfigurationOutput{})
}
