// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudwatch

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a CloudWatch Log Stream resource.
type LogStream struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) specifying the log stream.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The name of the log group under which the log stream is to be created.
	LogGroupName pulumix.Output[string] `pulumi:"logGroupName"`
	// The name of the log stream. Must not be longer than 512 characters and must not contain `:`
	Name pulumix.Output[string] `pulumi:"name"`
}

// NewLogStream registers a new resource with the given unique name, arguments, and options.
func NewLogStream(ctx *pulumi.Context,
	name string, args *LogStreamArgs, opts ...pulumi.ResourceOption) (*LogStream, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.LogGroupName == nil {
		return nil, errors.New("invalid value for required argument 'LogGroupName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource LogStream
	err := ctx.RegisterResource("aws:cloudwatch/logStream:LogStream", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLogStream gets an existing LogStream resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLogStream(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LogStreamState, opts ...pulumi.ResourceOption) (*LogStream, error) {
	var resource LogStream
	err := ctx.ReadResource("aws:cloudwatch/logStream:LogStream", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LogStream resources.
type logStreamState struct {
	// The Amazon Resource Name (ARN) specifying the log stream.
	Arn *string `pulumi:"arn"`
	// The name of the log group under which the log stream is to be created.
	LogGroupName *string `pulumi:"logGroupName"`
	// The name of the log stream. Must not be longer than 512 characters and must not contain `:`
	Name *string `pulumi:"name"`
}

type LogStreamState struct {
	// The Amazon Resource Name (ARN) specifying the log stream.
	Arn pulumix.Input[*string]
	// The name of the log group under which the log stream is to be created.
	LogGroupName pulumix.Input[*string]
	// The name of the log stream. Must not be longer than 512 characters and must not contain `:`
	Name pulumix.Input[*string]
}

func (LogStreamState) ElementType() reflect.Type {
	return reflect.TypeOf((*logStreamState)(nil)).Elem()
}

type logStreamArgs struct {
	// The name of the log group under which the log stream is to be created.
	LogGroupName string `pulumi:"logGroupName"`
	// The name of the log stream. Must not be longer than 512 characters and must not contain `:`
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a LogStream resource.
type LogStreamArgs struct {
	// The name of the log group under which the log stream is to be created.
	LogGroupName pulumix.Input[string]
	// The name of the log stream. Must not be longer than 512 characters and must not contain `:`
	Name pulumix.Input[*string]
}

func (LogStreamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*logStreamArgs)(nil)).Elem()
}

type LogStreamOutput struct{ *pulumi.OutputState }

func (LogStreamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogStream)(nil)).Elem()
}

func (o LogStreamOutput) ToLogStreamOutput() LogStreamOutput {
	return o
}

func (o LogStreamOutput) ToLogStreamOutputWithContext(ctx context.Context) LogStreamOutput {
	return o
}

func (o LogStreamOutput) ToOutput(ctx context.Context) pulumix.Output[LogStream] {
	return pulumix.Output[LogStream]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) specifying the log stream.
func (o LogStreamOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[LogStream](o, func(v LogStream) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The name of the log group under which the log stream is to be created.
func (o LogStreamOutput) LogGroupName() pulumix.Output[string] {
	value := pulumix.Apply[LogStream](o, func(v LogStream) pulumix.Output[string] { return v.LogGroupName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The name of the log stream. Must not be longer than 512 characters and must not contain `:`
func (o LogStreamOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[LogStream](o, func(v LogStream) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(LogStreamOutput{})
}
