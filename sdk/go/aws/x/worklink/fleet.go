// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package worklink

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type Fleet struct {
	pulumi.CustomResourceState

	// The ARN of the created WorkLink Fleet.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The ARN of the Amazon Kinesis data stream that receives the audit events. Kinesis data stream name must begin with `"AmazonWorkLink-"`.
	AuditStreamArn pulumix.Output[*string] `pulumi:"auditStreamArn"`
	// The identifier used by users to sign in to the Amazon WorkLink app.
	CompanyCode pulumix.Output[string] `pulumi:"companyCode"`
	// The time that the fleet was created.
	CreatedTime pulumix.Output[string] `pulumi:"createdTime"`
	// The certificate chain, including intermediate certificates and the root certificate authority certificate used to issue device certificates.
	DeviceCaCertificate pulumix.Output[*string] `pulumi:"deviceCaCertificate"`
	// The name of the fleet.
	DisplayName pulumix.Output[*string] `pulumi:"displayName"`
	// Provide this to allow manage the identity provider configuration for the fleet. Fields documented below.
	IdentityProvider pulumix.GPtrOutput[FleetIdentityProvider, FleetIdentityProviderOutput] `pulumi:"identityProvider"`
	// The time that the fleet was last updated.
	LastUpdatedTime pulumix.Output[string] `pulumi:"lastUpdatedTime"`
	// A region-unique name for the AMI.
	Name pulumix.Output[string] `pulumi:"name"`
	// Provide this to allow manage the company network configuration for the fleet. Fields documented below.
	Network pulumix.GPtrOutput[FleetNetwork, FleetNetworkOutput] `pulumi:"network"`
	// The option to optimize for better performance by routing traffic through the closest AWS Region to users, which may be outside of your home Region. Defaults to `true`.
	//
	// **network** requires the following:
	//
	// > **NOTE:** `network` is cannot removed without force recreating.
	OptimizeForEndUserLocation pulumix.Output[*bool] `pulumi:"optimizeForEndUserLocation"`
}

// NewFleet registers a new resource with the given unique name, arguments, and options.
func NewFleet(ctx *pulumi.Context,
	name string, args *FleetArgs, opts ...pulumi.ResourceOption) (*Fleet, error) {
	if args == nil {
		args = &FleetArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Fleet
	err := ctx.RegisterResource("aws:worklink/fleet:Fleet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFleet gets an existing Fleet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFleet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FleetState, opts ...pulumi.ResourceOption) (*Fleet, error) {
	var resource Fleet
	err := ctx.ReadResource("aws:worklink/fleet:Fleet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Fleet resources.
type fleetState struct {
	// The ARN of the created WorkLink Fleet.
	Arn *string `pulumi:"arn"`
	// The ARN of the Amazon Kinesis data stream that receives the audit events. Kinesis data stream name must begin with `"AmazonWorkLink-"`.
	AuditStreamArn *string `pulumi:"auditStreamArn"`
	// The identifier used by users to sign in to the Amazon WorkLink app.
	CompanyCode *string `pulumi:"companyCode"`
	// The time that the fleet was created.
	CreatedTime *string `pulumi:"createdTime"`
	// The certificate chain, including intermediate certificates and the root certificate authority certificate used to issue device certificates.
	DeviceCaCertificate *string `pulumi:"deviceCaCertificate"`
	// The name of the fleet.
	DisplayName *string `pulumi:"displayName"`
	// Provide this to allow manage the identity provider configuration for the fleet. Fields documented below.
	IdentityProvider *FleetIdentityProvider `pulumi:"identityProvider"`
	// The time that the fleet was last updated.
	LastUpdatedTime *string `pulumi:"lastUpdatedTime"`
	// A region-unique name for the AMI.
	Name *string `pulumi:"name"`
	// Provide this to allow manage the company network configuration for the fleet. Fields documented below.
	Network *FleetNetwork `pulumi:"network"`
	// The option to optimize for better performance by routing traffic through the closest AWS Region to users, which may be outside of your home Region. Defaults to `true`.
	//
	// **network** requires the following:
	//
	// > **NOTE:** `network` is cannot removed without force recreating.
	OptimizeForEndUserLocation *bool `pulumi:"optimizeForEndUserLocation"`
}

type FleetState struct {
	// The ARN of the created WorkLink Fleet.
	Arn pulumix.Input[*string]
	// The ARN of the Amazon Kinesis data stream that receives the audit events. Kinesis data stream name must begin with `"AmazonWorkLink-"`.
	AuditStreamArn pulumix.Input[*string]
	// The identifier used by users to sign in to the Amazon WorkLink app.
	CompanyCode pulumix.Input[*string]
	// The time that the fleet was created.
	CreatedTime pulumix.Input[*string]
	// The certificate chain, including intermediate certificates and the root certificate authority certificate used to issue device certificates.
	DeviceCaCertificate pulumix.Input[*string]
	// The name of the fleet.
	DisplayName pulumix.Input[*string]
	// Provide this to allow manage the identity provider configuration for the fleet. Fields documented below.
	IdentityProvider pulumix.Input[*FleetIdentityProviderArgs]
	// The time that the fleet was last updated.
	LastUpdatedTime pulumix.Input[*string]
	// A region-unique name for the AMI.
	Name pulumix.Input[*string]
	// Provide this to allow manage the company network configuration for the fleet. Fields documented below.
	Network pulumix.Input[*FleetNetworkArgs]
	// The option to optimize for better performance by routing traffic through the closest AWS Region to users, which may be outside of your home Region. Defaults to `true`.
	//
	// **network** requires the following:
	//
	// > **NOTE:** `network` is cannot removed without force recreating.
	OptimizeForEndUserLocation pulumix.Input[*bool]
}

func (FleetState) ElementType() reflect.Type {
	return reflect.TypeOf((*fleetState)(nil)).Elem()
}

type fleetArgs struct {
	// The ARN of the Amazon Kinesis data stream that receives the audit events. Kinesis data stream name must begin with `"AmazonWorkLink-"`.
	AuditStreamArn *string `pulumi:"auditStreamArn"`
	// The certificate chain, including intermediate certificates and the root certificate authority certificate used to issue device certificates.
	DeviceCaCertificate *string `pulumi:"deviceCaCertificate"`
	// The name of the fleet.
	DisplayName *string `pulumi:"displayName"`
	// Provide this to allow manage the identity provider configuration for the fleet. Fields documented below.
	IdentityProvider *FleetIdentityProvider `pulumi:"identityProvider"`
	// A region-unique name for the AMI.
	Name *string `pulumi:"name"`
	// Provide this to allow manage the company network configuration for the fleet. Fields documented below.
	Network *FleetNetwork `pulumi:"network"`
	// The option to optimize for better performance by routing traffic through the closest AWS Region to users, which may be outside of your home Region. Defaults to `true`.
	//
	// **network** requires the following:
	//
	// > **NOTE:** `network` is cannot removed without force recreating.
	OptimizeForEndUserLocation *bool `pulumi:"optimizeForEndUserLocation"`
}

// The set of arguments for constructing a Fleet resource.
type FleetArgs struct {
	// The ARN of the Amazon Kinesis data stream that receives the audit events. Kinesis data stream name must begin with `"AmazonWorkLink-"`.
	AuditStreamArn pulumix.Input[*string]
	// The certificate chain, including intermediate certificates and the root certificate authority certificate used to issue device certificates.
	DeviceCaCertificate pulumix.Input[*string]
	// The name of the fleet.
	DisplayName pulumix.Input[*string]
	// Provide this to allow manage the identity provider configuration for the fleet. Fields documented below.
	IdentityProvider pulumix.Input[*FleetIdentityProviderArgs]
	// A region-unique name for the AMI.
	Name pulumix.Input[*string]
	// Provide this to allow manage the company network configuration for the fleet. Fields documented below.
	Network pulumix.Input[*FleetNetworkArgs]
	// The option to optimize for better performance by routing traffic through the closest AWS Region to users, which may be outside of your home Region. Defaults to `true`.
	//
	// **network** requires the following:
	//
	// > **NOTE:** `network` is cannot removed without force recreating.
	OptimizeForEndUserLocation pulumix.Input[*bool]
}

func (FleetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*fleetArgs)(nil)).Elem()
}

type FleetOutput struct{ *pulumi.OutputState }

func (FleetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Fleet)(nil)).Elem()
}

func (o FleetOutput) ToFleetOutput() FleetOutput {
	return o
}

func (o FleetOutput) ToFleetOutputWithContext(ctx context.Context) FleetOutput {
	return o
}

func (o FleetOutput) ToOutput(ctx context.Context) pulumix.Output[Fleet] {
	return pulumix.Output[Fleet]{
		OutputState: o.OutputState,
	}
}

// The ARN of the created WorkLink Fleet.
func (o FleetOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Fleet](o, func(v Fleet) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The ARN of the Amazon Kinesis data stream that receives the audit events. Kinesis data stream name must begin with `"AmazonWorkLink-"`.
func (o FleetOutput) AuditStreamArn() pulumix.Output[*string] {
	value := pulumix.Apply[Fleet](o, func(v Fleet) pulumix.Output[*string] { return v.AuditStreamArn })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The identifier used by users to sign in to the Amazon WorkLink app.
func (o FleetOutput) CompanyCode() pulumix.Output[string] {
	value := pulumix.Apply[Fleet](o, func(v Fleet) pulumix.Output[string] { return v.CompanyCode })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The time that the fleet was created.
func (o FleetOutput) CreatedTime() pulumix.Output[string] {
	value := pulumix.Apply[Fleet](o, func(v Fleet) pulumix.Output[string] { return v.CreatedTime })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The certificate chain, including intermediate certificates and the root certificate authority certificate used to issue device certificates.
func (o FleetOutput) DeviceCaCertificate() pulumix.Output[*string] {
	value := pulumix.Apply[Fleet](o, func(v Fleet) pulumix.Output[*string] { return v.DeviceCaCertificate })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The name of the fleet.
func (o FleetOutput) DisplayName() pulumix.Output[*string] {
	value := pulumix.Apply[Fleet](o, func(v Fleet) pulumix.Output[*string] { return v.DisplayName })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Provide this to allow manage the identity provider configuration for the fleet. Fields documented below.
func (o FleetOutput) IdentityProvider() pulumix.GPtrOutput[FleetIdentityProvider, FleetIdentityProviderOutput] {
	value := pulumix.Apply[Fleet](o, func(v Fleet) pulumix.GPtrOutput[FleetIdentityProvider, FleetIdentityProviderOutput] {
		return v.IdentityProvider
	})
	unwrapped := pulumix.Flatten[*FleetIdentityProvider, pulumix.GPtrOutput[FleetIdentityProvider, FleetIdentityProviderOutput]](value)
	return pulumix.GPtrOutput[FleetIdentityProvider, FleetIdentityProviderOutput]{OutputState: unwrapped.OutputState}
}

// The time that the fleet was last updated.
func (o FleetOutput) LastUpdatedTime() pulumix.Output[string] {
	value := pulumix.Apply[Fleet](o, func(v Fleet) pulumix.Output[string] { return v.LastUpdatedTime })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A region-unique name for the AMI.
func (o FleetOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[Fleet](o, func(v Fleet) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Provide this to allow manage the company network configuration for the fleet. Fields documented below.
func (o FleetOutput) Network() pulumix.GPtrOutput[FleetNetwork, FleetNetworkOutput] {
	value := pulumix.Apply[Fleet](o, func(v Fleet) pulumix.GPtrOutput[FleetNetwork, FleetNetworkOutput] { return v.Network })
	unwrapped := pulumix.Flatten[*FleetNetwork, pulumix.GPtrOutput[FleetNetwork, FleetNetworkOutput]](value)
	return pulumix.GPtrOutput[FleetNetwork, FleetNetworkOutput]{OutputState: unwrapped.OutputState}
}

// The option to optimize for better performance by routing traffic through the closest AWS Region to users, which may be outside of your home Region. Defaults to `true`.
//
// **network** requires the following:
//
// > **NOTE:** `network` is cannot removed without force recreating.
func (o FleetOutput) OptimizeForEndUserLocation() pulumix.Output[*bool] {
	value := pulumix.Apply[Fleet](o, func(v Fleet) pulumix.Output[*bool] { return v.OptimizeForEndUserLocation })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

func init() {
	pulumi.RegisterOutputType(FleetOutput{})
}
