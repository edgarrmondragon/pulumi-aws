// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mediapackage

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type ChannelHlsIngest struct {
	// A list of the ingest endpoints
	IngestEndpoints []ChannelHlsIngestIngestEndpoint `pulumi:"ingestEndpoints"`
}

type ChannelHlsIngestArgs struct {
	// A list of the ingest endpoints
	IngestEndpoints pulumix.Input[[]*ChannelHlsIngestIngestEndpointArgs] `pulumi:"ingestEndpoints"`
}

func (ChannelHlsIngestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelHlsIngest)(nil)).Elem()
}

func (i ChannelHlsIngestArgs) ToChannelHlsIngestOutput() ChannelHlsIngestOutput {
	return i.ToChannelHlsIngestOutputWithContext(context.Background())
}

func (i ChannelHlsIngestArgs) ToChannelHlsIngestOutputWithContext(ctx context.Context) ChannelHlsIngestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelHlsIngestOutput)
}

func (i *ChannelHlsIngestArgs) ToOutput(ctx context.Context) pulumix.Output[*ChannelHlsIngestArgs] {
	return pulumix.Val(i)
}

type ChannelHlsIngestOutput struct{ *pulumi.OutputState }

func (ChannelHlsIngestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelHlsIngest)(nil)).Elem()
}

func (o ChannelHlsIngestOutput) ToChannelHlsIngestOutput() ChannelHlsIngestOutput {
	return o
}

func (o ChannelHlsIngestOutput) ToChannelHlsIngestOutputWithContext(ctx context.Context) ChannelHlsIngestOutput {
	return o
}

func (o ChannelHlsIngestOutput) ToOutput(ctx context.Context) pulumix.Output[ChannelHlsIngest] {
	return pulumix.Output[ChannelHlsIngest]{
		OutputState: o.OutputState,
	}
}

// A list of the ingest endpoints
func (o ChannelHlsIngestOutput) IngestEndpoints() pulumix.GArrayOutput[ChannelHlsIngestIngestEndpoint, ChannelHlsIngestIngestEndpointOutput] {
	value := pulumix.Apply[ChannelHlsIngest](o, func(v ChannelHlsIngest) []ChannelHlsIngestIngestEndpoint { return v.IngestEndpoints })
	return pulumix.GArrayOutput[ChannelHlsIngestIngestEndpoint, ChannelHlsIngestIngestEndpointOutput]{OutputState: value.OutputState}
}

type ChannelHlsIngestIngestEndpoint struct {
	// The password
	Password *string `pulumi:"password"`
	// The URL
	Url *string `pulumi:"url"`
	// The username
	Username *string `pulumi:"username"`
}

type ChannelHlsIngestIngestEndpointArgs struct {
	// The password
	Password pulumix.Input[*string] `pulumi:"password"`
	// The URL
	Url pulumix.Input[*string] `pulumi:"url"`
	// The username
	Username pulumix.Input[*string] `pulumi:"username"`
}

func (ChannelHlsIngestIngestEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelHlsIngestIngestEndpoint)(nil)).Elem()
}

func (i ChannelHlsIngestIngestEndpointArgs) ToChannelHlsIngestIngestEndpointOutput() ChannelHlsIngestIngestEndpointOutput {
	return i.ToChannelHlsIngestIngestEndpointOutputWithContext(context.Background())
}

func (i ChannelHlsIngestIngestEndpointArgs) ToChannelHlsIngestIngestEndpointOutputWithContext(ctx context.Context) ChannelHlsIngestIngestEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelHlsIngestIngestEndpointOutput)
}

func (i *ChannelHlsIngestIngestEndpointArgs) ToOutput(ctx context.Context) pulumix.Output[*ChannelHlsIngestIngestEndpointArgs] {
	return pulumix.Val(i)
}

type ChannelHlsIngestIngestEndpointOutput struct{ *pulumi.OutputState }

func (ChannelHlsIngestIngestEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelHlsIngestIngestEndpoint)(nil)).Elem()
}

func (o ChannelHlsIngestIngestEndpointOutput) ToChannelHlsIngestIngestEndpointOutput() ChannelHlsIngestIngestEndpointOutput {
	return o
}

func (o ChannelHlsIngestIngestEndpointOutput) ToChannelHlsIngestIngestEndpointOutputWithContext(ctx context.Context) ChannelHlsIngestIngestEndpointOutput {
	return o
}

func (o ChannelHlsIngestIngestEndpointOutput) ToOutput(ctx context.Context) pulumix.Output[ChannelHlsIngestIngestEndpoint] {
	return pulumix.Output[ChannelHlsIngestIngestEndpoint]{
		OutputState: o.OutputState,
	}
}

// The password
func (o ChannelHlsIngestIngestEndpointOutput) Password() pulumix.Output[*string] {
	return pulumix.Apply[ChannelHlsIngestIngestEndpoint](o, func(v ChannelHlsIngestIngestEndpoint) *string { return v.Password })
}

// The URL
func (o ChannelHlsIngestIngestEndpointOutput) Url() pulumix.Output[*string] {
	return pulumix.Apply[ChannelHlsIngestIngestEndpoint](o, func(v ChannelHlsIngestIngestEndpoint) *string { return v.Url })
}

// The username
func (o ChannelHlsIngestIngestEndpointOutput) Username() pulumix.Output[*string] {
	return pulumix.Apply[ChannelHlsIngestIngestEndpoint](o, func(v ChannelHlsIngestIngestEndpoint) *string { return v.Username })
}

func init() {
	pulumi.RegisterOutputType(ChannelHlsIngestOutput{})
	pulumi.RegisterOutputType(ChannelHlsIngestIngestEndpointOutput{})
}
