// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudwatch

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a resource to manage a CloudWatch log resource policy.
type LogResourcePolicy struct {
	pulumi.CustomResourceState

	// Details of the resource policy, including the identity of the principal that is enabled to put logs to this account. This is formatted as a JSON string. Maximum length of 5120 characters.
	PolicyDocument pulumix.Output[string] `pulumi:"policyDocument"`
	// Name of the resource policy.
	PolicyName pulumix.Output[string] `pulumi:"policyName"`
}

// NewLogResourcePolicy registers a new resource with the given unique name, arguments, and options.
func NewLogResourcePolicy(ctx *pulumi.Context,
	name string, args *LogResourcePolicyArgs, opts ...pulumi.ResourceOption) (*LogResourcePolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PolicyDocument == nil {
		return nil, errors.New("invalid value for required argument 'PolicyDocument'")
	}
	if args.PolicyName == nil {
		return nil, errors.New("invalid value for required argument 'PolicyName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource LogResourcePolicy
	err := ctx.RegisterResource("aws:cloudwatch/logResourcePolicy:LogResourcePolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLogResourcePolicy gets an existing LogResourcePolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLogResourcePolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LogResourcePolicyState, opts ...pulumi.ResourceOption) (*LogResourcePolicy, error) {
	var resource LogResourcePolicy
	err := ctx.ReadResource("aws:cloudwatch/logResourcePolicy:LogResourcePolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LogResourcePolicy resources.
type logResourcePolicyState struct {
	// Details of the resource policy, including the identity of the principal that is enabled to put logs to this account. This is formatted as a JSON string. Maximum length of 5120 characters.
	PolicyDocument *string `pulumi:"policyDocument"`
	// Name of the resource policy.
	PolicyName *string `pulumi:"policyName"`
}

type LogResourcePolicyState struct {
	// Details of the resource policy, including the identity of the principal that is enabled to put logs to this account. This is formatted as a JSON string. Maximum length of 5120 characters.
	PolicyDocument pulumix.Input[*string]
	// Name of the resource policy.
	PolicyName pulumix.Input[*string]
}

func (LogResourcePolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*logResourcePolicyState)(nil)).Elem()
}

type logResourcePolicyArgs struct {
	// Details of the resource policy, including the identity of the principal that is enabled to put logs to this account. This is formatted as a JSON string. Maximum length of 5120 characters.
	PolicyDocument string `pulumi:"policyDocument"`
	// Name of the resource policy.
	PolicyName string `pulumi:"policyName"`
}

// The set of arguments for constructing a LogResourcePolicy resource.
type LogResourcePolicyArgs struct {
	// Details of the resource policy, including the identity of the principal that is enabled to put logs to this account. This is formatted as a JSON string. Maximum length of 5120 characters.
	PolicyDocument pulumix.Input[string]
	// Name of the resource policy.
	PolicyName pulumix.Input[string]
}

func (LogResourcePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*logResourcePolicyArgs)(nil)).Elem()
}

type LogResourcePolicyOutput struct{ *pulumi.OutputState }

func (LogResourcePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogResourcePolicy)(nil)).Elem()
}

func (o LogResourcePolicyOutput) ToLogResourcePolicyOutput() LogResourcePolicyOutput {
	return o
}

func (o LogResourcePolicyOutput) ToLogResourcePolicyOutputWithContext(ctx context.Context) LogResourcePolicyOutput {
	return o
}

func (o LogResourcePolicyOutput) ToOutput(ctx context.Context) pulumix.Output[LogResourcePolicy] {
	return pulumix.Output[LogResourcePolicy]{
		OutputState: o.OutputState,
	}
}

// Details of the resource policy, including the identity of the principal that is enabled to put logs to this account. This is formatted as a JSON string. Maximum length of 5120 characters.
func (o LogResourcePolicyOutput) PolicyDocument() pulumix.Output[string] {
	value := pulumix.Apply[LogResourcePolicy](o, func(v LogResourcePolicy) pulumix.Output[string] { return v.PolicyDocument })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Name of the resource policy.
func (o LogResourcePolicyOutput) PolicyName() pulumix.Output[string] {
	value := pulumix.Apply[LogResourcePolicy](o, func(v LogResourcePolicy) pulumix.Output[string] { return v.PolicyName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(LogResourcePolicyOutput{})
}
