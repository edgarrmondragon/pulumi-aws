// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynamodb

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a DynamoDB table replica resource for [DynamoDB Global Tables V2 (version 2019.11.21)](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/globaltables.V2.html).
//
// > **Note:** Use `lifecycle` `ignoreChanges` for `replica` in the associated dynamodb.Table configuration.
//
// > **Note:** Do not use the `replica` configuration block of dynamodb.Table together with this resource as the two configuration options are mutually exclusive.
type TableReplica struct {
	pulumi.CustomResourceState

	// ARN of the table replica.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// ARN of the _main_ or global table which this resource will replicate.
	//
	// Optional arguments:
	GlobalTableArn pulumix.Output[string] `pulumi:"globalTableArn"`
	// ARN of the CMK that should be used for the AWS KMS encryption. This argument should only be used if the key is different from the default KMS-managed DynamoDB key, `alias/aws/dynamodb`. **Note:** This attribute will _not_ be populated with the ARN of _default_ keys.
	KmsKeyArn pulumix.Output[string] `pulumi:"kmsKeyArn"`
	// Whether to enable Point In Time Recovery for the replica. Default is `false`.
	PointInTimeRecovery pulumix.Output[*bool] `pulumi:"pointInTimeRecovery"`
	// Storage class of the table replica. Valid values are `STANDARD` and `STANDARD_INFREQUENT_ACCESS`. If not used, the table replica will use the same class as the global table.
	TableClassOverride pulumix.Output[*string] `pulumi:"tableClassOverride"`
	// Map of tags to populate on the created table. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
}

// NewTableReplica registers a new resource with the given unique name, arguments, and options.
func NewTableReplica(ctx *pulumi.Context,
	name string, args *TableReplicaArgs, opts ...pulumi.ResourceOption) (*TableReplica, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.GlobalTableArn == nil {
		return nil, errors.New("invalid value for required argument 'GlobalTableArn'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TableReplica
	err := ctx.RegisterResource("aws:dynamodb/tableReplica:TableReplica", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTableReplica gets an existing TableReplica resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTableReplica(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TableReplicaState, opts ...pulumi.ResourceOption) (*TableReplica, error) {
	var resource TableReplica
	err := ctx.ReadResource("aws:dynamodb/tableReplica:TableReplica", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TableReplica resources.
type tableReplicaState struct {
	// ARN of the table replica.
	Arn *string `pulumi:"arn"`
	// ARN of the _main_ or global table which this resource will replicate.
	//
	// Optional arguments:
	GlobalTableArn *string `pulumi:"globalTableArn"`
	// ARN of the CMK that should be used for the AWS KMS encryption. This argument should only be used if the key is different from the default KMS-managed DynamoDB key, `alias/aws/dynamodb`. **Note:** This attribute will _not_ be populated with the ARN of _default_ keys.
	KmsKeyArn *string `pulumi:"kmsKeyArn"`
	// Whether to enable Point In Time Recovery for the replica. Default is `false`.
	PointInTimeRecovery *bool `pulumi:"pointInTimeRecovery"`
	// Storage class of the table replica. Valid values are `STANDARD` and `STANDARD_INFREQUENT_ACCESS`. If not used, the table replica will use the same class as the global table.
	TableClassOverride *string `pulumi:"tableClassOverride"`
	// Map of tags to populate on the created table. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type TableReplicaState struct {
	// ARN of the table replica.
	Arn pulumix.Input[*string]
	// ARN of the _main_ or global table which this resource will replicate.
	//
	// Optional arguments:
	GlobalTableArn pulumix.Input[*string]
	// ARN of the CMK that should be used for the AWS KMS encryption. This argument should only be used if the key is different from the default KMS-managed DynamoDB key, `alias/aws/dynamodb`. **Note:** This attribute will _not_ be populated with the ARN of _default_ keys.
	KmsKeyArn pulumix.Input[*string]
	// Whether to enable Point In Time Recovery for the replica. Default is `false`.
	PointInTimeRecovery pulumix.Input[*bool]
	// Storage class of the table replica. Valid values are `STANDARD` and `STANDARD_INFREQUENT_ACCESS`. If not used, the table replica will use the same class as the global table.
	TableClassOverride pulumix.Input[*string]
	// Map of tags to populate on the created table. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
}

func (TableReplicaState) ElementType() reflect.Type {
	return reflect.TypeOf((*tableReplicaState)(nil)).Elem()
}

type tableReplicaArgs struct {
	// ARN of the _main_ or global table which this resource will replicate.
	//
	// Optional arguments:
	GlobalTableArn string `pulumi:"globalTableArn"`
	// ARN of the CMK that should be used for the AWS KMS encryption. This argument should only be used if the key is different from the default KMS-managed DynamoDB key, `alias/aws/dynamodb`. **Note:** This attribute will _not_ be populated with the ARN of _default_ keys.
	KmsKeyArn *string `pulumi:"kmsKeyArn"`
	// Whether to enable Point In Time Recovery for the replica. Default is `false`.
	PointInTimeRecovery *bool `pulumi:"pointInTimeRecovery"`
	// Storage class of the table replica. Valid values are `STANDARD` and `STANDARD_INFREQUENT_ACCESS`. If not used, the table replica will use the same class as the global table.
	TableClassOverride *string `pulumi:"tableClassOverride"`
	// Map of tags to populate on the created table. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a TableReplica resource.
type TableReplicaArgs struct {
	// ARN of the _main_ or global table which this resource will replicate.
	//
	// Optional arguments:
	GlobalTableArn pulumix.Input[string]
	// ARN of the CMK that should be used for the AWS KMS encryption. This argument should only be used if the key is different from the default KMS-managed DynamoDB key, `alias/aws/dynamodb`. **Note:** This attribute will _not_ be populated with the ARN of _default_ keys.
	KmsKeyArn pulumix.Input[*string]
	// Whether to enable Point In Time Recovery for the replica. Default is `false`.
	PointInTimeRecovery pulumix.Input[*bool]
	// Storage class of the table replica. Valid values are `STANDARD` and `STANDARD_INFREQUENT_ACCESS`. If not used, the table replica will use the same class as the global table.
	TableClassOverride pulumix.Input[*string]
	// Map of tags to populate on the created table. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (TableReplicaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*tableReplicaArgs)(nil)).Elem()
}

type TableReplicaOutput struct{ *pulumi.OutputState }

func (TableReplicaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TableReplica)(nil)).Elem()
}

func (o TableReplicaOutput) ToTableReplicaOutput() TableReplicaOutput {
	return o
}

func (o TableReplicaOutput) ToTableReplicaOutputWithContext(ctx context.Context) TableReplicaOutput {
	return o
}

func (o TableReplicaOutput) ToOutput(ctx context.Context) pulumix.Output[TableReplica] {
	return pulumix.Output[TableReplica]{
		OutputState: o.OutputState,
	}
}

// ARN of the table replica.
func (o TableReplicaOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[TableReplica](o, func(v TableReplica) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// ARN of the _main_ or global table which this resource will replicate.
//
// Optional arguments:
func (o TableReplicaOutput) GlobalTableArn() pulumix.Output[string] {
	value := pulumix.Apply[TableReplica](o, func(v TableReplica) pulumix.Output[string] { return v.GlobalTableArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// ARN of the CMK that should be used for the AWS KMS encryption. This argument should only be used if the key is different from the default KMS-managed DynamoDB key, `alias/aws/dynamodb`. **Note:** This attribute will _not_ be populated with the ARN of _default_ keys.
func (o TableReplicaOutput) KmsKeyArn() pulumix.Output[string] {
	value := pulumix.Apply[TableReplica](o, func(v TableReplica) pulumix.Output[string] { return v.KmsKeyArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Whether to enable Point In Time Recovery for the replica. Default is `false`.
func (o TableReplicaOutput) PointInTimeRecovery() pulumix.Output[*bool] {
	value := pulumix.Apply[TableReplica](o, func(v TableReplica) pulumix.Output[*bool] { return v.PointInTimeRecovery })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// Storage class of the table replica. Valid values are `STANDARD` and `STANDARD_INFREQUENT_ACCESS`. If not used, the table replica will use the same class as the global table.
func (o TableReplicaOutput) TableClassOverride() pulumix.Output[*string] {
	value := pulumix.Apply[TableReplica](o, func(v TableReplica) pulumix.Output[*string] { return v.TableClassOverride })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Map of tags to populate on the created table. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o TableReplicaOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[TableReplica](o, func(v TableReplica) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o TableReplicaOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[TableReplica](o, func(v TableReplica) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(TableReplicaOutput{})
}
