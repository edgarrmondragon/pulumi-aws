// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides information for multiple EC2 Local Gateway Route Tables, such as their identifiers.
func GetLocalGatewayRouteTables(ctx *pulumi.Context, args *GetLocalGatewayRouteTablesArgs, opts ...pulumi.InvokeOption) (*GetLocalGatewayRouteTablesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetLocalGatewayRouteTablesResult
	err := ctx.Invoke("aws:ec2/getLocalGatewayRouteTables:getLocalGatewayRouteTables", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLocalGatewayRouteTables.
type GetLocalGatewayRouteTablesArgs struct {
	// Custom filter block as described below.
	//
	// More complex filters can be expressed using one or more `filter` sub-blocks,
	// which take the following arguments:
	Filters []GetLocalGatewayRouteTablesFilter `pulumi:"filters"`
	// Mapping of tags, each pair of which must exactly match
	// a pair on the desired local gateway route table.
	Tags map[string]string `pulumi:"tags"`
}

// A collection of values returned by getLocalGatewayRouteTables.
type GetLocalGatewayRouteTablesResult struct {
	Filters []GetLocalGatewayRouteTablesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Set of Local Gateway Route Table identifiers
	Ids  []string          `pulumi:"ids"`
	Tags map[string]string `pulumi:"tags"`
}

func GetLocalGatewayRouteTablesOutput(ctx *pulumi.Context, args GetLocalGatewayRouteTablesOutputArgs, opts ...pulumi.InvokeOption) GetLocalGatewayRouteTablesResultOutput {
	outputResult := pulumix.ApplyErr[*GetLocalGatewayRouteTablesArgs](args.ToOutput(), func(plainArgs *GetLocalGatewayRouteTablesArgs) (*GetLocalGatewayRouteTablesResult, error) {
		return GetLocalGatewayRouteTables(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[GetLocalGatewayRouteTablesResultOutput, *GetLocalGatewayRouteTablesResult](outputResult)
}

// A collection of arguments for invoking getLocalGatewayRouteTables.
type GetLocalGatewayRouteTablesOutputArgs struct {
	// Custom filter block as described below.
	//
	// More complex filters can be expressed using one or more `filter` sub-blocks,
	// which take the following arguments:
	Filters pulumix.Input[[]*GetLocalGatewayRouteTablesFilterArgs] `pulumi:"filters"`
	// Mapping of tags, each pair of which must exactly match
	// a pair on the desired local gateway route table.
	Tags pulumix.Input[map[string]string] `pulumi:"tags"`
}

func (args GetLocalGatewayRouteTablesOutputArgs) ToOutput() pulumix.Output[*GetLocalGatewayRouteTablesArgs] {
	allArgs := pulumix.All(
		args.Filters.ToOutput(context.Background()).AsAny(),
		args.Tags.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *GetLocalGatewayRouteTablesArgs {
		return &GetLocalGatewayRouteTablesArgs{
			Filters: resolvedArgs[0].([]GetLocalGatewayRouteTablesFilter),
			Tags:    resolvedArgs[1].(map[string]string),
		}
	})
}

type GetLocalGatewayRouteTablesResultOutput struct{ *pulumi.OutputState }

func (GetLocalGatewayRouteTablesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocalGatewayRouteTablesResult)(nil)).Elem()
}

func (o GetLocalGatewayRouteTablesResultOutput) ToOutput(context.Context) pulumix.Output[*GetLocalGatewayRouteTablesResult] {
	return pulumix.Output[*GetLocalGatewayRouteTablesResult]{
		OutputState: o.OutputState,
	}
}

func (o GetLocalGatewayRouteTablesResultOutput) Filters() pulumix.GArrayOutput[GetLocalGatewayRouteTablesFilter, GetLocalGatewayRouteTablesFilterOutput] {
	value := pulumix.Apply[*GetLocalGatewayRouteTablesResult](o, func(v *GetLocalGatewayRouteTablesResult) []GetLocalGatewayRouteTablesFilter { return v.Filters })
	return pulumix.GArrayOutput[GetLocalGatewayRouteTablesFilter, GetLocalGatewayRouteTablesFilterOutput]{
		OutputState: value.OutputState,
	}
}

func (o GetLocalGatewayRouteTablesResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*GetLocalGatewayRouteTablesResult](o, func(v *GetLocalGatewayRouteTablesResult) string { return v.Id })
}

func (o GetLocalGatewayRouteTablesResultOutput) Ids() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[*GetLocalGatewayRouteTablesResult](o, func(v *GetLocalGatewayRouteTablesResult) []string { return v.Ids })
	return pulumix.ArrayOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o GetLocalGatewayRouteTablesResultOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[*GetLocalGatewayRouteTablesResult](o, func(v *GetLocalGatewayRouteTablesResult) map[string]string { return v.Tags })
	return pulumix.MapOutput[string]{
		OutputState: value.OutputState,
	}
}
