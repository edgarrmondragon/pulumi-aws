// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apigatewayv2

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manages an Amazon API Gateway Version 2 stage.
// More information can be found in the [Amazon API Gateway Developer Guide](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api.html).
type Stage struct {
	pulumi.CustomResourceState

	// Settings for logging access in this stage.
	// Use the `apigateway.Account` resource to configure [permissions for CloudWatch Logging](https://docs.aws.amazon.com/apigateway/latest/developerguide/set-up-logging.html#set-up-access-logging-permissions).
	AccessLogSettings pulumix.GPtrOutput[StageAccessLogSettings, StageAccessLogSettingsOutput] `pulumi:"accessLogSettings"`
	// API identifier.
	ApiId pulumix.Output[string] `pulumi:"apiId"`
	// ARN of the stage.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// Whether updates to an API automatically trigger a new deployment. Defaults to `false`. Applicable for HTTP APIs.
	AutoDeploy pulumix.Output[*bool] `pulumi:"autoDeploy"`
	// Identifier of a client certificate for the stage. Use the `apigateway.ClientCertificate` resource to configure a client certificate.
	// Supported only for WebSocket APIs.
	ClientCertificateId pulumix.Output[*string] `pulumi:"clientCertificateId"`
	// Default route settings for the stage.
	DefaultRouteSettings pulumix.GPtrOutput[StageDefaultRouteSettings, StageDefaultRouteSettingsOutput] `pulumi:"defaultRouteSettings"`
	// Deployment identifier of the stage. Use the `apigatewayv2.Deployment` resource to configure a deployment.
	DeploymentId pulumix.Output[string] `pulumi:"deploymentId"`
	// Description for the stage. Must be less than or equal to 1024 characters in length.
	Description pulumix.Output[*string] `pulumi:"description"`
	// ARN prefix to be used in an `lambda.Permission`'s `sourceArn` attribute.
	// For WebSocket APIs this attribute can additionally be used in an `iam.Policy` to authorize access to the [`@connections` API](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-how-to-call-websocket-api-connections.html).
	// See the [Amazon API Gateway Developer Guide](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-control-access-iam.html) for details.
	ExecutionArn pulumix.Output[string] `pulumi:"executionArn"`
	// URL to invoke the API pointing to the stage,
	// e.g., `wss://z4675bid1j.execute-api.eu-west-2.amazonaws.com/example-stage`, or `https://z4675bid1j.execute-api.eu-west-2.amazonaws.com/`
	InvokeUrl pulumix.Output[string] `pulumi:"invokeUrl"`
	// Name of the stage. Must be between 1 and 128 characters in length.
	//
	// The following arguments are optional:
	Name pulumix.Output[string] `pulumi:"name"`
	// Route settings for the stage.
	RouteSettings pulumix.GArrayOutput[StageRouteSetting, StageRouteSettingOutput] `pulumi:"routeSettings"`
	// Map that defines the stage variables for the stage.
	StageVariables pulumix.MapOutput[string] `pulumi:"stageVariables"`
	// Map of tags to assign to the stage. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
}

// NewStage registers a new resource with the given unique name, arguments, and options.
func NewStage(ctx *pulumi.Context,
	name string, args *StageArgs, opts ...pulumi.ResourceOption) (*Stage, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApiId == nil {
		return nil, errors.New("invalid value for required argument 'ApiId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Stage
	err := ctx.RegisterResource("aws:apigatewayv2/stage:Stage", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStage gets an existing Stage resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStage(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *StageState, opts ...pulumi.ResourceOption) (*Stage, error) {
	var resource Stage
	err := ctx.ReadResource("aws:apigatewayv2/stage:Stage", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Stage resources.
type stageState struct {
	// Settings for logging access in this stage.
	// Use the `apigateway.Account` resource to configure [permissions for CloudWatch Logging](https://docs.aws.amazon.com/apigateway/latest/developerguide/set-up-logging.html#set-up-access-logging-permissions).
	AccessLogSettings *StageAccessLogSettings `pulumi:"accessLogSettings"`
	// API identifier.
	ApiId *string `pulumi:"apiId"`
	// ARN of the stage.
	Arn *string `pulumi:"arn"`
	// Whether updates to an API automatically trigger a new deployment. Defaults to `false`. Applicable for HTTP APIs.
	AutoDeploy *bool `pulumi:"autoDeploy"`
	// Identifier of a client certificate for the stage. Use the `apigateway.ClientCertificate` resource to configure a client certificate.
	// Supported only for WebSocket APIs.
	ClientCertificateId *string `pulumi:"clientCertificateId"`
	// Default route settings for the stage.
	DefaultRouteSettings *StageDefaultRouteSettings `pulumi:"defaultRouteSettings"`
	// Deployment identifier of the stage. Use the `apigatewayv2.Deployment` resource to configure a deployment.
	DeploymentId *string `pulumi:"deploymentId"`
	// Description for the stage. Must be less than or equal to 1024 characters in length.
	Description *string `pulumi:"description"`
	// ARN prefix to be used in an `lambda.Permission`'s `sourceArn` attribute.
	// For WebSocket APIs this attribute can additionally be used in an `iam.Policy` to authorize access to the [`@connections` API](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-how-to-call-websocket-api-connections.html).
	// See the [Amazon API Gateway Developer Guide](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-control-access-iam.html) for details.
	ExecutionArn *string `pulumi:"executionArn"`
	// URL to invoke the API pointing to the stage,
	// e.g., `wss://z4675bid1j.execute-api.eu-west-2.amazonaws.com/example-stage`, or `https://z4675bid1j.execute-api.eu-west-2.amazonaws.com/`
	InvokeUrl *string `pulumi:"invokeUrl"`
	// Name of the stage. Must be between 1 and 128 characters in length.
	//
	// The following arguments are optional:
	Name *string `pulumi:"name"`
	// Route settings for the stage.
	RouteSettings []StageRouteSetting `pulumi:"routeSettings"`
	// Map that defines the stage variables for the stage.
	StageVariables map[string]string `pulumi:"stageVariables"`
	// Map of tags to assign to the stage. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type StageState struct {
	// Settings for logging access in this stage.
	// Use the `apigateway.Account` resource to configure [permissions for CloudWatch Logging](https://docs.aws.amazon.com/apigateway/latest/developerguide/set-up-logging.html#set-up-access-logging-permissions).
	AccessLogSettings pulumix.Input[*StageAccessLogSettingsArgs]
	// API identifier.
	ApiId pulumix.Input[*string]
	// ARN of the stage.
	Arn pulumix.Input[*string]
	// Whether updates to an API automatically trigger a new deployment. Defaults to `false`. Applicable for HTTP APIs.
	AutoDeploy pulumix.Input[*bool]
	// Identifier of a client certificate for the stage. Use the `apigateway.ClientCertificate` resource to configure a client certificate.
	// Supported only for WebSocket APIs.
	ClientCertificateId pulumix.Input[*string]
	// Default route settings for the stage.
	DefaultRouteSettings pulumix.Input[*StageDefaultRouteSettingsArgs]
	// Deployment identifier of the stage. Use the `apigatewayv2.Deployment` resource to configure a deployment.
	DeploymentId pulumix.Input[*string]
	// Description for the stage. Must be less than or equal to 1024 characters in length.
	Description pulumix.Input[*string]
	// ARN prefix to be used in an `lambda.Permission`'s `sourceArn` attribute.
	// For WebSocket APIs this attribute can additionally be used in an `iam.Policy` to authorize access to the [`@connections` API](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-how-to-call-websocket-api-connections.html).
	// See the [Amazon API Gateway Developer Guide](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-control-access-iam.html) for details.
	ExecutionArn pulumix.Input[*string]
	// URL to invoke the API pointing to the stage,
	// e.g., `wss://z4675bid1j.execute-api.eu-west-2.amazonaws.com/example-stage`, or `https://z4675bid1j.execute-api.eu-west-2.amazonaws.com/`
	InvokeUrl pulumix.Input[*string]
	// Name of the stage. Must be between 1 and 128 characters in length.
	//
	// The following arguments are optional:
	Name pulumix.Input[*string]
	// Route settings for the stage.
	RouteSettings pulumix.Input[[]*StageRouteSettingArgs]
	// Map that defines the stage variables for the stage.
	StageVariables pulumix.Input[map[string]string]
	// Map of tags to assign to the stage. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
}

func (StageState) ElementType() reflect.Type {
	return reflect.TypeOf((*stageState)(nil)).Elem()
}

type stageArgs struct {
	// Settings for logging access in this stage.
	// Use the `apigateway.Account` resource to configure [permissions for CloudWatch Logging](https://docs.aws.amazon.com/apigateway/latest/developerguide/set-up-logging.html#set-up-access-logging-permissions).
	AccessLogSettings *StageAccessLogSettings `pulumi:"accessLogSettings"`
	// API identifier.
	ApiId string `pulumi:"apiId"`
	// Whether updates to an API automatically trigger a new deployment. Defaults to `false`. Applicable for HTTP APIs.
	AutoDeploy *bool `pulumi:"autoDeploy"`
	// Identifier of a client certificate for the stage. Use the `apigateway.ClientCertificate` resource to configure a client certificate.
	// Supported only for WebSocket APIs.
	ClientCertificateId *string `pulumi:"clientCertificateId"`
	// Default route settings for the stage.
	DefaultRouteSettings *StageDefaultRouteSettings `pulumi:"defaultRouteSettings"`
	// Deployment identifier of the stage. Use the `apigatewayv2.Deployment` resource to configure a deployment.
	DeploymentId *string `pulumi:"deploymentId"`
	// Description for the stage. Must be less than or equal to 1024 characters in length.
	Description *string `pulumi:"description"`
	// Name of the stage. Must be between 1 and 128 characters in length.
	//
	// The following arguments are optional:
	Name *string `pulumi:"name"`
	// Route settings for the stage.
	RouteSettings []StageRouteSetting `pulumi:"routeSettings"`
	// Map that defines the stage variables for the stage.
	StageVariables map[string]string `pulumi:"stageVariables"`
	// Map of tags to assign to the stage. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Stage resource.
type StageArgs struct {
	// Settings for logging access in this stage.
	// Use the `apigateway.Account` resource to configure [permissions for CloudWatch Logging](https://docs.aws.amazon.com/apigateway/latest/developerguide/set-up-logging.html#set-up-access-logging-permissions).
	AccessLogSettings pulumix.Input[*StageAccessLogSettingsArgs]
	// API identifier.
	ApiId pulumix.Input[string]
	// Whether updates to an API automatically trigger a new deployment. Defaults to `false`. Applicable for HTTP APIs.
	AutoDeploy pulumix.Input[*bool]
	// Identifier of a client certificate for the stage. Use the `apigateway.ClientCertificate` resource to configure a client certificate.
	// Supported only for WebSocket APIs.
	ClientCertificateId pulumix.Input[*string]
	// Default route settings for the stage.
	DefaultRouteSettings pulumix.Input[*StageDefaultRouteSettingsArgs]
	// Deployment identifier of the stage. Use the `apigatewayv2.Deployment` resource to configure a deployment.
	DeploymentId pulumix.Input[*string]
	// Description for the stage. Must be less than or equal to 1024 characters in length.
	Description pulumix.Input[*string]
	// Name of the stage. Must be between 1 and 128 characters in length.
	//
	// The following arguments are optional:
	Name pulumix.Input[*string]
	// Route settings for the stage.
	RouteSettings pulumix.Input[[]*StageRouteSettingArgs]
	// Map that defines the stage variables for the stage.
	StageVariables pulumix.Input[map[string]string]
	// Map of tags to assign to the stage. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (StageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*stageArgs)(nil)).Elem()
}

type StageOutput struct{ *pulumi.OutputState }

func (StageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Stage)(nil)).Elem()
}

func (o StageOutput) ToStageOutput() StageOutput {
	return o
}

func (o StageOutput) ToStageOutputWithContext(ctx context.Context) StageOutput {
	return o
}

func (o StageOutput) ToOutput(ctx context.Context) pulumix.Output[Stage] {
	return pulumix.Output[Stage]{
		OutputState: o.OutputState,
	}
}

// Settings for logging access in this stage.
// Use the `apigateway.Account` resource to configure [permissions for CloudWatch Logging](https://docs.aws.amazon.com/apigateway/latest/developerguide/set-up-logging.html#set-up-access-logging-permissions).
func (o StageOutput) AccessLogSettings() pulumix.GPtrOutput[StageAccessLogSettings, StageAccessLogSettingsOutput] {
	value := pulumix.Apply[Stage](o, func(v Stage) pulumix.GPtrOutput[StageAccessLogSettings, StageAccessLogSettingsOutput] {
		return v.AccessLogSettings
	})
	unwrapped := pulumix.Flatten[*StageAccessLogSettings, pulumix.GPtrOutput[StageAccessLogSettings, StageAccessLogSettingsOutput]](value)
	return pulumix.GPtrOutput[StageAccessLogSettings, StageAccessLogSettingsOutput]{OutputState: unwrapped.OutputState}
}

// API identifier.
func (o StageOutput) ApiId() pulumix.Output[string] {
	value := pulumix.Apply[Stage](o, func(v Stage) pulumix.Output[string] { return v.ApiId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// ARN of the stage.
func (o StageOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Stage](o, func(v Stage) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Whether updates to an API automatically trigger a new deployment. Defaults to `false`. Applicable for HTTP APIs.
func (o StageOutput) AutoDeploy() pulumix.Output[*bool] {
	value := pulumix.Apply[Stage](o, func(v Stage) pulumix.Output[*bool] { return v.AutoDeploy })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// Identifier of a client certificate for the stage. Use the `apigateway.ClientCertificate` resource to configure a client certificate.
// Supported only for WebSocket APIs.
func (o StageOutput) ClientCertificateId() pulumix.Output[*string] {
	value := pulumix.Apply[Stage](o, func(v Stage) pulumix.Output[*string] { return v.ClientCertificateId })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Default route settings for the stage.
func (o StageOutput) DefaultRouteSettings() pulumix.GPtrOutput[StageDefaultRouteSettings, StageDefaultRouteSettingsOutput] {
	value := pulumix.Apply[Stage](o, func(v Stage) pulumix.GPtrOutput[StageDefaultRouteSettings, StageDefaultRouteSettingsOutput] {
		return v.DefaultRouteSettings
	})
	unwrapped := pulumix.Flatten[*StageDefaultRouteSettings, pulumix.GPtrOutput[StageDefaultRouteSettings, StageDefaultRouteSettingsOutput]](value)
	return pulumix.GPtrOutput[StageDefaultRouteSettings, StageDefaultRouteSettingsOutput]{OutputState: unwrapped.OutputState}
}

// Deployment identifier of the stage. Use the `apigatewayv2.Deployment` resource to configure a deployment.
func (o StageOutput) DeploymentId() pulumix.Output[string] {
	value := pulumix.Apply[Stage](o, func(v Stage) pulumix.Output[string] { return v.DeploymentId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Description for the stage. Must be less than or equal to 1024 characters in length.
func (o StageOutput) Description() pulumix.Output[*string] {
	value := pulumix.Apply[Stage](o, func(v Stage) pulumix.Output[*string] { return v.Description })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// ARN prefix to be used in an `lambda.Permission`'s `sourceArn` attribute.
// For WebSocket APIs this attribute can additionally be used in an `iam.Policy` to authorize access to the [`@connections` API](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-how-to-call-websocket-api-connections.html).
// See the [Amazon API Gateway Developer Guide](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-control-access-iam.html) for details.
func (o StageOutput) ExecutionArn() pulumix.Output[string] {
	value := pulumix.Apply[Stage](o, func(v Stage) pulumix.Output[string] { return v.ExecutionArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// URL to invoke the API pointing to the stage,
// e.g., `wss://z4675bid1j.execute-api.eu-west-2.amazonaws.com/example-stage`, or `https://z4675bid1j.execute-api.eu-west-2.amazonaws.com/`
func (o StageOutput) InvokeUrl() pulumix.Output[string] {
	value := pulumix.Apply[Stage](o, func(v Stage) pulumix.Output[string] { return v.InvokeUrl })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Name of the stage. Must be between 1 and 128 characters in length.
//
// The following arguments are optional:
func (o StageOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[Stage](o, func(v Stage) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Route settings for the stage.
func (o StageOutput) RouteSettings() pulumix.GArrayOutput[StageRouteSetting, StageRouteSettingOutput] {
	value := pulumix.Apply[Stage](o, func(v Stage) pulumix.GArrayOutput[StageRouteSetting, StageRouteSettingOutput] { return v.RouteSettings })
	unwrapped := pulumix.Flatten[[]StageRouteSetting, pulumix.GArrayOutput[StageRouteSetting, StageRouteSettingOutput]](value)
	return pulumix.GArrayOutput[StageRouteSetting, StageRouteSettingOutput]{OutputState: unwrapped.OutputState}
}

// Map that defines the stage variables for the stage.
func (o StageOutput) StageVariables() pulumix.MapOutput[string] {
	value := pulumix.Apply[Stage](o, func(v Stage) pulumix.MapOutput[string] { return v.StageVariables })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Map of tags to assign to the stage. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o StageOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Stage](o, func(v Stage) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o StageOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[Stage](o, func(v Stage) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(StageOutput{})
}
