// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package directconnect

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a Direct Connect Gateway.
type Gateway struct {
	pulumi.CustomResourceState

	// The ASN to be configured on the Amazon side of the connection. The ASN must be in the private range of 64,512 to 65,534 or 4,200,000,000 to 4,294,967,294.
	AmazonSideAsn pulumix.Output[string] `pulumi:"amazonSideAsn"`
	// The name of the connection.
	Name pulumix.Output[string] `pulumi:"name"`
	// AWS Account ID of the gateway.
	OwnerAccountId pulumix.Output[string] `pulumi:"ownerAccountId"`
}

// NewGateway registers a new resource with the given unique name, arguments, and options.
func NewGateway(ctx *pulumi.Context,
	name string, args *GatewayArgs, opts ...pulumi.ResourceOption) (*Gateway, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AmazonSideAsn == nil {
		return nil, errors.New("invalid value for required argument 'AmazonSideAsn'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Gateway
	err := ctx.RegisterResource("aws:directconnect/gateway:Gateway", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGateway gets an existing Gateway resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGateway(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GatewayState, opts ...pulumi.ResourceOption) (*Gateway, error) {
	var resource Gateway
	err := ctx.ReadResource("aws:directconnect/gateway:Gateway", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Gateway resources.
type gatewayState struct {
	// The ASN to be configured on the Amazon side of the connection. The ASN must be in the private range of 64,512 to 65,534 or 4,200,000,000 to 4,294,967,294.
	AmazonSideAsn *string `pulumi:"amazonSideAsn"`
	// The name of the connection.
	Name *string `pulumi:"name"`
	// AWS Account ID of the gateway.
	OwnerAccountId *string `pulumi:"ownerAccountId"`
}

type GatewayState struct {
	// The ASN to be configured on the Amazon side of the connection. The ASN must be in the private range of 64,512 to 65,534 or 4,200,000,000 to 4,294,967,294.
	AmazonSideAsn pulumix.Input[*string]
	// The name of the connection.
	Name pulumix.Input[*string]
	// AWS Account ID of the gateway.
	OwnerAccountId pulumix.Input[*string]
}

func (GatewayState) ElementType() reflect.Type {
	return reflect.TypeOf((*gatewayState)(nil)).Elem()
}

type gatewayArgs struct {
	// The ASN to be configured on the Amazon side of the connection. The ASN must be in the private range of 64,512 to 65,534 or 4,200,000,000 to 4,294,967,294.
	AmazonSideAsn string `pulumi:"amazonSideAsn"`
	// The name of the connection.
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a Gateway resource.
type GatewayArgs struct {
	// The ASN to be configured on the Amazon side of the connection. The ASN must be in the private range of 64,512 to 65,534 or 4,200,000,000 to 4,294,967,294.
	AmazonSideAsn pulumix.Input[string]
	// The name of the connection.
	Name pulumix.Input[*string]
}

func (GatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*gatewayArgs)(nil)).Elem()
}

type GatewayOutput struct{ *pulumi.OutputState }

func (GatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Gateway)(nil)).Elem()
}

func (o GatewayOutput) ToGatewayOutput() GatewayOutput {
	return o
}

func (o GatewayOutput) ToGatewayOutputWithContext(ctx context.Context) GatewayOutput {
	return o
}

func (o GatewayOutput) ToOutput(ctx context.Context) pulumix.Output[Gateway] {
	return pulumix.Output[Gateway]{
		OutputState: o.OutputState,
	}
}

// The ASN to be configured on the Amazon side of the connection. The ASN must be in the private range of 64,512 to 65,534 or 4,200,000,000 to 4,294,967,294.
func (o GatewayOutput) AmazonSideAsn() pulumix.Output[string] {
	value := pulumix.Apply[Gateway](o, func(v Gateway) pulumix.Output[string] { return v.AmazonSideAsn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The name of the connection.
func (o GatewayOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[Gateway](o, func(v Gateway) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// AWS Account ID of the gateway.
func (o GatewayOutput) OwnerAccountId() pulumix.Output[string] {
	value := pulumix.Apply[Gateway](o, func(v Gateway) pulumix.Output[string] { return v.OwnerAccountId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(GatewayOutput{})
}
