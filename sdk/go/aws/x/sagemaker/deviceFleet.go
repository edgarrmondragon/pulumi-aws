// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sagemaker

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a SageMaker Device Fleet resource.
type DeviceFleet struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) assigned by AWS to this Device Fleet.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// A description of the fleet.
	Description pulumix.Output[*string] `pulumi:"description"`
	// The name of the Device Fleet (must be unique).
	DeviceFleetName pulumix.Output[string] `pulumi:"deviceFleetName"`
	// Whether to create an AWS IoT Role Alias during device fleet creation. The name of the role alias generated will match this pattern: "SageMakerEdge-{DeviceFleetName}".
	EnableIotRoleAlias pulumix.Output[*bool]  `pulumi:"enableIotRoleAlias"`
	IotRoleAlias       pulumix.Output[string] `pulumi:"iotRoleAlias"`
	// Specifies details about the repository. see Output Config details below.
	OutputConfig pulumix.GPtrOutput[DeviceFleetOutputConfig, DeviceFleetOutputConfigOutput] `pulumi:"outputConfig"`
	// The Amazon Resource Name (ARN) that has access to AWS Internet of Things (IoT).
	RoleArn pulumix.Output[string] `pulumi:"roleArn"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
}

// NewDeviceFleet registers a new resource with the given unique name, arguments, and options.
func NewDeviceFleet(ctx *pulumi.Context,
	name string, args *DeviceFleetArgs, opts ...pulumi.ResourceOption) (*DeviceFleet, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DeviceFleetName == nil {
		return nil, errors.New("invalid value for required argument 'DeviceFleetName'")
	}
	if args.OutputConfig == nil {
		return nil, errors.New("invalid value for required argument 'OutputConfig'")
	}
	if args.RoleArn == nil {
		return nil, errors.New("invalid value for required argument 'RoleArn'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DeviceFleet
	err := ctx.RegisterResource("aws:sagemaker/deviceFleet:DeviceFleet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDeviceFleet gets an existing DeviceFleet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDeviceFleet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DeviceFleetState, opts ...pulumi.ResourceOption) (*DeviceFleet, error) {
	var resource DeviceFleet
	err := ctx.ReadResource("aws:sagemaker/deviceFleet:DeviceFleet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DeviceFleet resources.
type deviceFleetState struct {
	// The Amazon Resource Name (ARN) assigned by AWS to this Device Fleet.
	Arn *string `pulumi:"arn"`
	// A description of the fleet.
	Description *string `pulumi:"description"`
	// The name of the Device Fleet (must be unique).
	DeviceFleetName *string `pulumi:"deviceFleetName"`
	// Whether to create an AWS IoT Role Alias during device fleet creation. The name of the role alias generated will match this pattern: "SageMakerEdge-{DeviceFleetName}".
	EnableIotRoleAlias *bool   `pulumi:"enableIotRoleAlias"`
	IotRoleAlias       *string `pulumi:"iotRoleAlias"`
	// Specifies details about the repository. see Output Config details below.
	OutputConfig *DeviceFleetOutputConfig `pulumi:"outputConfig"`
	// The Amazon Resource Name (ARN) that has access to AWS Internet of Things (IoT).
	RoleArn *string `pulumi:"roleArn"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type DeviceFleetState struct {
	// The Amazon Resource Name (ARN) assigned by AWS to this Device Fleet.
	Arn pulumix.Input[*string]
	// A description of the fleet.
	Description pulumix.Input[*string]
	// The name of the Device Fleet (must be unique).
	DeviceFleetName pulumix.Input[*string]
	// Whether to create an AWS IoT Role Alias during device fleet creation. The name of the role alias generated will match this pattern: "SageMakerEdge-{DeviceFleetName}".
	EnableIotRoleAlias pulumix.Input[*bool]
	IotRoleAlias       pulumix.Input[*string]
	// Specifies details about the repository. see Output Config details below.
	OutputConfig pulumix.Input[*DeviceFleetOutputConfigArgs]
	// The Amazon Resource Name (ARN) that has access to AWS Internet of Things (IoT).
	RoleArn pulumix.Input[*string]
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
}

func (DeviceFleetState) ElementType() reflect.Type {
	return reflect.TypeOf((*deviceFleetState)(nil)).Elem()
}

type deviceFleetArgs struct {
	// A description of the fleet.
	Description *string `pulumi:"description"`
	// The name of the Device Fleet (must be unique).
	DeviceFleetName string `pulumi:"deviceFleetName"`
	// Whether to create an AWS IoT Role Alias during device fleet creation. The name of the role alias generated will match this pattern: "SageMakerEdge-{DeviceFleetName}".
	EnableIotRoleAlias *bool `pulumi:"enableIotRoleAlias"`
	// Specifies details about the repository. see Output Config details below.
	OutputConfig DeviceFleetOutputConfig `pulumi:"outputConfig"`
	// The Amazon Resource Name (ARN) that has access to AWS Internet of Things (IoT).
	RoleArn string `pulumi:"roleArn"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a DeviceFleet resource.
type DeviceFleetArgs struct {
	// A description of the fleet.
	Description pulumix.Input[*string]
	// The name of the Device Fleet (must be unique).
	DeviceFleetName pulumix.Input[string]
	// Whether to create an AWS IoT Role Alias during device fleet creation. The name of the role alias generated will match this pattern: "SageMakerEdge-{DeviceFleetName}".
	EnableIotRoleAlias pulumix.Input[*bool]
	// Specifies details about the repository. see Output Config details below.
	OutputConfig pulumix.Input[*DeviceFleetOutputConfigArgs]
	// The Amazon Resource Name (ARN) that has access to AWS Internet of Things (IoT).
	RoleArn pulumix.Input[string]
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (DeviceFleetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*deviceFleetArgs)(nil)).Elem()
}

type DeviceFleetOutput struct{ *pulumi.OutputState }

func (DeviceFleetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceFleet)(nil)).Elem()
}

func (o DeviceFleetOutput) ToDeviceFleetOutput() DeviceFleetOutput {
	return o
}

func (o DeviceFleetOutput) ToDeviceFleetOutputWithContext(ctx context.Context) DeviceFleetOutput {
	return o
}

func (o DeviceFleetOutput) ToOutput(ctx context.Context) pulumix.Output[DeviceFleet] {
	return pulumix.Output[DeviceFleet]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) assigned by AWS to this Device Fleet.
func (o DeviceFleetOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[DeviceFleet](o, func(v DeviceFleet) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A description of the fleet.
func (o DeviceFleetOutput) Description() pulumix.Output[*string] {
	value := pulumix.Apply[DeviceFleet](o, func(v DeviceFleet) pulumix.Output[*string] { return v.Description })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The name of the Device Fleet (must be unique).
func (o DeviceFleetOutput) DeviceFleetName() pulumix.Output[string] {
	value := pulumix.Apply[DeviceFleet](o, func(v DeviceFleet) pulumix.Output[string] { return v.DeviceFleetName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Whether to create an AWS IoT Role Alias during device fleet creation. The name of the role alias generated will match this pattern: "SageMakerEdge-{DeviceFleetName}".
func (o DeviceFleetOutput) EnableIotRoleAlias() pulumix.Output[*bool] {
	value := pulumix.Apply[DeviceFleet](o, func(v DeviceFleet) pulumix.Output[*bool] { return v.EnableIotRoleAlias })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

func (o DeviceFleetOutput) IotRoleAlias() pulumix.Output[string] {
	value := pulumix.Apply[DeviceFleet](o, func(v DeviceFleet) pulumix.Output[string] { return v.IotRoleAlias })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Specifies details about the repository. see Output Config details below.
func (o DeviceFleetOutput) OutputConfig() pulumix.GPtrOutput[DeviceFleetOutputConfig, DeviceFleetOutputConfigOutput] {
	value := pulumix.Apply[DeviceFleet](o, func(v DeviceFleet) pulumix.GPtrOutput[DeviceFleetOutputConfig, DeviceFleetOutputConfigOutput] {
		return v.OutputConfig
	})
	unwrapped := pulumix.Flatten[*DeviceFleetOutputConfig, pulumix.GPtrOutput[DeviceFleetOutputConfig, DeviceFleetOutputConfigOutput]](value)
	return pulumix.GPtrOutput[DeviceFleetOutputConfig, DeviceFleetOutputConfigOutput]{OutputState: unwrapped.OutputState}
}

// The Amazon Resource Name (ARN) that has access to AWS Internet of Things (IoT).
func (o DeviceFleetOutput) RoleArn() pulumix.Output[string] {
	value := pulumix.Apply[DeviceFleet](o, func(v DeviceFleet) pulumix.Output[string] { return v.RoleArn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o DeviceFleetOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[DeviceFleet](o, func(v DeviceFleet) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o DeviceFleetOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[DeviceFleet](o, func(v DeviceFleet) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(DeviceFleetOutput{})
}
