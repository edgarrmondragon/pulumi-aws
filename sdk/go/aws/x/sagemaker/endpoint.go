// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sagemaker

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a SageMaker Endpoint resource.
type Endpoint struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) assigned by AWS to this endpoint.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The deployment configuration for an endpoint, which contains the desired deployment strategy and rollback configurations. See Deployment Config.
	DeploymentConfig pulumix.GPtrOutput[EndpointDeploymentConfig, EndpointDeploymentConfigOutput] `pulumi:"deploymentConfig"`
	// The name of the endpoint configuration to use.
	EndpointConfigName pulumix.Output[string] `pulumi:"endpointConfigName"`
	// The name of the endpoint. If omitted, the provider will assign a random, unique name.
	Name pulumix.Output[string] `pulumi:"name"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
}

// NewEndpoint registers a new resource with the given unique name, arguments, and options.
func NewEndpoint(ctx *pulumi.Context,
	name string, args *EndpointArgs, opts ...pulumi.ResourceOption) (*Endpoint, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EndpointConfigName == nil {
		return nil, errors.New("invalid value for required argument 'EndpointConfigName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Endpoint
	err := ctx.RegisterResource("aws:sagemaker/endpoint:Endpoint", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEndpoint gets an existing Endpoint resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEndpoint(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EndpointState, opts ...pulumi.ResourceOption) (*Endpoint, error) {
	var resource Endpoint
	err := ctx.ReadResource("aws:sagemaker/endpoint:Endpoint", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Endpoint resources.
type endpointState struct {
	// The Amazon Resource Name (ARN) assigned by AWS to this endpoint.
	Arn *string `pulumi:"arn"`
	// The deployment configuration for an endpoint, which contains the desired deployment strategy and rollback configurations. See Deployment Config.
	DeploymentConfig *EndpointDeploymentConfig `pulumi:"deploymentConfig"`
	// The name of the endpoint configuration to use.
	EndpointConfigName *string `pulumi:"endpointConfigName"`
	// The name of the endpoint. If omitted, the provider will assign a random, unique name.
	Name *string `pulumi:"name"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type EndpointState struct {
	// The Amazon Resource Name (ARN) assigned by AWS to this endpoint.
	Arn pulumix.Input[*string]
	// The deployment configuration for an endpoint, which contains the desired deployment strategy and rollback configurations. See Deployment Config.
	DeploymentConfig pulumix.Input[*EndpointDeploymentConfigArgs]
	// The name of the endpoint configuration to use.
	EndpointConfigName pulumix.Input[*string]
	// The name of the endpoint. If omitted, the provider will assign a random, unique name.
	Name pulumix.Input[*string]
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
}

func (EndpointState) ElementType() reflect.Type {
	return reflect.TypeOf((*endpointState)(nil)).Elem()
}

type endpointArgs struct {
	// The deployment configuration for an endpoint, which contains the desired deployment strategy and rollback configurations. See Deployment Config.
	DeploymentConfig *EndpointDeploymentConfig `pulumi:"deploymentConfig"`
	// The name of the endpoint configuration to use.
	EndpointConfigName string `pulumi:"endpointConfigName"`
	// The name of the endpoint. If omitted, the provider will assign a random, unique name.
	Name *string `pulumi:"name"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Endpoint resource.
type EndpointArgs struct {
	// The deployment configuration for an endpoint, which contains the desired deployment strategy and rollback configurations. See Deployment Config.
	DeploymentConfig pulumix.Input[*EndpointDeploymentConfigArgs]
	// The name of the endpoint configuration to use.
	EndpointConfigName pulumix.Input[string]
	// The name of the endpoint. If omitted, the provider will assign a random, unique name.
	Name pulumix.Input[*string]
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (EndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*endpointArgs)(nil)).Elem()
}

type EndpointOutput struct{ *pulumi.OutputState }

func (EndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Endpoint)(nil)).Elem()
}

func (o EndpointOutput) ToEndpointOutput() EndpointOutput {
	return o
}

func (o EndpointOutput) ToEndpointOutputWithContext(ctx context.Context) EndpointOutput {
	return o
}

func (o EndpointOutput) ToOutput(ctx context.Context) pulumix.Output[Endpoint] {
	return pulumix.Output[Endpoint]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) assigned by AWS to this endpoint.
func (o EndpointOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Endpoint](o, func(v Endpoint) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The deployment configuration for an endpoint, which contains the desired deployment strategy and rollback configurations. See Deployment Config.
func (o EndpointOutput) DeploymentConfig() pulumix.GPtrOutput[EndpointDeploymentConfig, EndpointDeploymentConfigOutput] {
	value := pulumix.Apply[Endpoint](o, func(v Endpoint) pulumix.GPtrOutput[EndpointDeploymentConfig, EndpointDeploymentConfigOutput] {
		return v.DeploymentConfig
	})
	unwrapped := pulumix.Flatten[*EndpointDeploymentConfig, pulumix.GPtrOutput[EndpointDeploymentConfig, EndpointDeploymentConfigOutput]](value)
	return pulumix.GPtrOutput[EndpointDeploymentConfig, EndpointDeploymentConfigOutput]{OutputState: unwrapped.OutputState}
}

// The name of the endpoint configuration to use.
func (o EndpointOutput) EndpointConfigName() pulumix.Output[string] {
	value := pulumix.Apply[Endpoint](o, func(v Endpoint) pulumix.Output[string] { return v.EndpointConfigName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The name of the endpoint. If omitted, the provider will assign a random, unique name.
func (o EndpointOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[Endpoint](o, func(v Endpoint) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o EndpointOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Endpoint](o, func(v Endpoint) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o EndpointOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[Endpoint](o, func(v Endpoint) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(EndpointOutput{})
}
