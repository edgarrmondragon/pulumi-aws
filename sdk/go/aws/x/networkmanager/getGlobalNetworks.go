// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networkmanager

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Retrieve information about global networks.
func GetGlobalNetworks(ctx *pulumi.Context, args *GetGlobalNetworksArgs, opts ...pulumi.InvokeOption) (*GetGlobalNetworksResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetGlobalNetworksResult
	err := ctx.Invoke("aws:networkmanager/getGlobalNetworks:getGlobalNetworks", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getGlobalNetworks.
type GetGlobalNetworksArgs struct {
	// Restricts the list to the global networks with these tags.
	Tags map[string]string `pulumi:"tags"`
}

// A collection of values returned by getGlobalNetworks.
type GetGlobalNetworksResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// IDs of the global networks.
	Ids  []string          `pulumi:"ids"`
	Tags map[string]string `pulumi:"tags"`
}

func GetGlobalNetworksOutput(ctx *pulumi.Context, args GetGlobalNetworksOutputArgs, opts ...pulumi.InvokeOption) GetGlobalNetworksResultOutput {
	outputResult := pulumix.ApplyErr[*GetGlobalNetworksArgs](args.ToOutput(), func(plainArgs *GetGlobalNetworksArgs) (*GetGlobalNetworksResult, error) {
		return GetGlobalNetworks(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[GetGlobalNetworksResultOutput, *GetGlobalNetworksResult](outputResult)
}

// A collection of arguments for invoking getGlobalNetworks.
type GetGlobalNetworksOutputArgs struct {
	// Restricts the list to the global networks with these tags.
	Tags pulumix.Input[map[string]string] `pulumi:"tags"`
}

func (args GetGlobalNetworksOutputArgs) ToOutput() pulumix.Output[*GetGlobalNetworksArgs] {
	allArgs := pulumix.All(
		args.Tags.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *GetGlobalNetworksArgs {
		return &GetGlobalNetworksArgs{
			Tags: resolvedArgs[0].(map[string]string),
		}
	})
}

type GetGlobalNetworksResultOutput struct{ *pulumi.OutputState }

func (GetGlobalNetworksResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalNetworksResult)(nil)).Elem()
}

func (o GetGlobalNetworksResultOutput) ToOutput(context.Context) pulumix.Output[*GetGlobalNetworksResult] {
	return pulumix.Output[*GetGlobalNetworksResult]{
		OutputState: o.OutputState,
	}
}

func (o GetGlobalNetworksResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*GetGlobalNetworksResult](o, func(v *GetGlobalNetworksResult) string { return v.Id })
}

func (o GetGlobalNetworksResultOutput) Ids() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[*GetGlobalNetworksResult](o, func(v *GetGlobalNetworksResult) []string { return v.Ids })
	return pulumix.ArrayOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o GetGlobalNetworksResultOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[*GetGlobalNetworksResult](o, func(v *GetGlobalNetworksResult) map[string]string { return v.Tags })
	return pulumix.MapOutput[string]{
		OutputState: value.OutputState,
	}
}
