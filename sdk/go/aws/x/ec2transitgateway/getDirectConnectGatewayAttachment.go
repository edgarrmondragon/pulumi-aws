// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2transitgateway

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Get information on an EC2 Transit Gateway's attachment to a Direct Connect Gateway.
func GetDirectConnectGatewayAttachment(ctx *pulumi.Context, args *GetDirectConnectGatewayAttachmentArgs, opts ...pulumi.InvokeOption) (*GetDirectConnectGatewayAttachmentResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDirectConnectGatewayAttachmentResult
	err := ctx.Invoke("aws:ec2transitgateway/getDirectConnectGatewayAttachment:getDirectConnectGatewayAttachment", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDirectConnectGatewayAttachment.
type GetDirectConnectGatewayAttachmentArgs struct {
	// Identifier of the Direct Connect Gateway.
	DxGatewayId *string `pulumi:"dxGatewayId"`
	// Configuration block(s) for filtering. Detailed below.
	Filters []GetDirectConnectGatewayAttachmentFilter `pulumi:"filters"`
	// Map of tags, each pair of which must exactly match a pair on the desired Transit Gateway Direct Connect Gateway Attachment.
	Tags map[string]string `pulumi:"tags"`
	// Identifier of the EC2 Transit Gateway.
	TransitGatewayId *string `pulumi:"transitGatewayId"`
}

// A collection of values returned by getDirectConnectGatewayAttachment.
type GetDirectConnectGatewayAttachmentResult struct {
	DxGatewayId *string                                   `pulumi:"dxGatewayId"`
	Filters     []GetDirectConnectGatewayAttachmentFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Key-value tags for the EC2 Transit Gateway Attachment
	Tags             map[string]string `pulumi:"tags"`
	TransitGatewayId *string           `pulumi:"transitGatewayId"`
}

func GetDirectConnectGatewayAttachmentOutput(ctx *pulumi.Context, args GetDirectConnectGatewayAttachmentOutputArgs, opts ...pulumi.InvokeOption) GetDirectConnectGatewayAttachmentResultOutput {
	outputResult := pulumix.ApplyErr[*GetDirectConnectGatewayAttachmentArgs](args.ToOutput(), func(plainArgs *GetDirectConnectGatewayAttachmentArgs) (*GetDirectConnectGatewayAttachmentResult, error) {
		return GetDirectConnectGatewayAttachment(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[GetDirectConnectGatewayAttachmentResultOutput, *GetDirectConnectGatewayAttachmentResult](outputResult)
}

// A collection of arguments for invoking getDirectConnectGatewayAttachment.
type GetDirectConnectGatewayAttachmentOutputArgs struct {
	// Identifier of the Direct Connect Gateway.
	DxGatewayId pulumix.Input[*string] `pulumi:"dxGatewayId"`
	// Configuration block(s) for filtering. Detailed below.
	Filters pulumix.Input[[]*GetDirectConnectGatewayAttachmentFilterArgs] `pulumi:"filters"`
	// Map of tags, each pair of which must exactly match a pair on the desired Transit Gateway Direct Connect Gateway Attachment.
	Tags pulumix.Input[map[string]string] `pulumi:"tags"`
	// Identifier of the EC2 Transit Gateway.
	TransitGatewayId pulumix.Input[*string] `pulumi:"transitGatewayId"`
}

func (args GetDirectConnectGatewayAttachmentOutputArgs) ToOutput() pulumix.Output[*GetDirectConnectGatewayAttachmentArgs] {
	allArgs := pulumix.All(
		args.DxGatewayId.ToOutput(context.Background()).AsAny(),
		args.Filters.ToOutput(context.Background()).AsAny(),
		args.Tags.ToOutput(context.Background()).AsAny(),
		args.TransitGatewayId.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *GetDirectConnectGatewayAttachmentArgs {
		return &GetDirectConnectGatewayAttachmentArgs{
			DxGatewayId:      resolvedArgs[0].(*string),
			Filters:          resolvedArgs[1].([]GetDirectConnectGatewayAttachmentFilter),
			Tags:             resolvedArgs[2].(map[string]string),
			TransitGatewayId: resolvedArgs[3].(*string),
		}
	})
}

type GetDirectConnectGatewayAttachmentResultOutput struct{ *pulumi.OutputState }

func (GetDirectConnectGatewayAttachmentResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDirectConnectGatewayAttachmentResult)(nil)).Elem()
}

func (o GetDirectConnectGatewayAttachmentResultOutput) ToOutput(context.Context) pulumix.Output[*GetDirectConnectGatewayAttachmentResult] {
	return pulumix.Output[*GetDirectConnectGatewayAttachmentResult]{
		OutputState: o.OutputState,
	}
}

func (o GetDirectConnectGatewayAttachmentResultOutput) DxGatewayId() pulumix.Output[*string] {
	return pulumix.Apply[*GetDirectConnectGatewayAttachmentResult](o, func(v *GetDirectConnectGatewayAttachmentResult) *string { return v.DxGatewayId })
}

func (o GetDirectConnectGatewayAttachmentResultOutput) Filters() pulumix.GArrayOutput[GetDirectConnectGatewayAttachmentFilter, GetDirectConnectGatewayAttachmentFilterOutput] {
	value := pulumix.Apply[*GetDirectConnectGatewayAttachmentResult](o, func(v *GetDirectConnectGatewayAttachmentResult) []GetDirectConnectGatewayAttachmentFilter {
		return v.Filters
	})
	return pulumix.GArrayOutput[GetDirectConnectGatewayAttachmentFilter, GetDirectConnectGatewayAttachmentFilterOutput]{
		OutputState: value.OutputState,
	}
}

func (o GetDirectConnectGatewayAttachmentResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*GetDirectConnectGatewayAttachmentResult](o, func(v *GetDirectConnectGatewayAttachmentResult) string { return v.Id })
}

func (o GetDirectConnectGatewayAttachmentResultOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[*GetDirectConnectGatewayAttachmentResult](o, func(v *GetDirectConnectGatewayAttachmentResult) map[string]string { return v.Tags })
	return pulumix.MapOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o GetDirectConnectGatewayAttachmentResultOutput) TransitGatewayId() pulumix.Output[*string] {
	return pulumix.Apply[*GetDirectConnectGatewayAttachmentResult](o, func(v *GetDirectConnectGatewayAttachmentResult) *string { return v.TransitGatewayId })
}
