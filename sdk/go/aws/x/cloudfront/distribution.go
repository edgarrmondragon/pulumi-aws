// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudfront

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Creates an Amazon CloudFront web distribution.
//
// For information about CloudFront distributions, see the [Amazon CloudFront Developer Guide](http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Introduction.html). For specific information about creating CloudFront web distributions, see the [POST Distribution](https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_CreateDistribution.html) page in the Amazon CloudFront API Reference.
//
// > **NOTE:** CloudFront distributions take about 15 minutes to reach a deployed state after creation or modification. During this time, deletes to resources will be blocked. If you need to delete a distribution that is enabled and you do not want to wait, you need to use the `retainOnDelete` flag.
type Distribution struct {
	pulumi.CustomResourceState

	// Extra CNAMEs (alternate domain names), if any, for this distribution.
	Aliases pulumix.ArrayOutput[string] `pulumi:"aliases"`
	// ARN for the distribution. For example: `arn:aws:cloudfront::123456789012:distribution/EDFDVBD632BHDS5`, where `123456789012` is your AWS account ID.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// Internal value used by CloudFront to allow future updates to the distribution configuration.
	CallerReference pulumix.Output[string] `pulumi:"callerReference"`
	// Any comments you want to include about the distribution.
	Comment pulumix.Output[*string] `pulumi:"comment"`
	// Identifier of a continuous deployment policy. This argument should only be set on a production distribution. See the `cloudfront.ContinuousDeploymentPolicy` resource for additional details.
	ContinuousDeploymentPolicyId pulumix.Output[*string] `pulumi:"continuousDeploymentPolicyId"`
	// One or more custom error response elements (multiples allowed).
	CustomErrorResponses pulumix.GArrayOutput[DistributionCustomErrorResponse, DistributionCustomErrorResponseOutput] `pulumi:"customErrorResponses"`
	// Default cache behavior for this distribution (maximum one). Requires either `cachePolicyId` (preferred) or `forwardedValues` (deprecated) be set.
	DefaultCacheBehavior pulumix.GPtrOutput[DistributionDefaultCacheBehavior, DistributionDefaultCacheBehaviorOutput] `pulumi:"defaultCacheBehavior"`
	// Object that you want CloudFront to return (for example, index.html) when an end user requests the root URL.
	DefaultRootObject pulumix.Output[*string] `pulumi:"defaultRootObject"`
	// DNS domain name of either the S3 bucket, or web site of your custom origin.
	DomainName pulumix.Output[string] `pulumi:"domainName"`
	// Whether the distribution is enabled to accept end user requests for content.
	Enabled pulumix.Output[bool] `pulumi:"enabled"`
	// Current version of the distribution's information. For example: `E2QWRUHAPOMQZL`.
	Etag pulumix.Output[string] `pulumi:"etag"`
	// CloudFront Route 53 zone ID that can be used to route an [Alias Resource Record Set](http://docs.aws.amazon.com/Route53/latest/APIReference/CreateAliasRRSAPI.html) to. This attribute is simply an alias for the zone ID `Z2FDTNDATAQYW2`.
	HostedZoneId pulumix.Output[string] `pulumi:"hostedZoneId"`
	// Maximum HTTP version to support on the distribution. Allowed values are `http1.1`, `http2`, `http2and3` and `http3`. The default is `http2`.
	HttpVersion pulumix.Output[*string] `pulumi:"httpVersion"`
	// Number of invalidation batches currently in progress.
	InProgressValidationBatches pulumix.Output[int] `pulumi:"inProgressValidationBatches"`
	// Whether the IPv6 is enabled for the distribution.
	IsIpv6Enabled pulumix.Output[*bool] `pulumi:"isIpv6Enabled"`
	// Date and time the distribution was last modified.
	LastModifiedTime pulumix.Output[string] `pulumi:"lastModifiedTime"`
	// The logging configuration that controls how logs are written to your distribution (maximum one).
	LoggingConfig pulumix.GPtrOutput[DistributionLoggingConfig, DistributionLoggingConfigOutput] `pulumi:"loggingConfig"`
	// Ordered list of cache behaviors resource for this distribution. List from top to bottom in order of precedence. The topmost cache behavior will have precedence 0.
	OrderedCacheBehaviors pulumix.GArrayOutput[DistributionOrderedCacheBehavior, DistributionOrderedCacheBehaviorOutput] `pulumi:"orderedCacheBehaviors"`
	// One or more originGroup for this distribution (multiples allowed).
	OriginGroups pulumix.GArrayOutput[DistributionOriginGroup, DistributionOriginGroupOutput] `pulumi:"originGroups"`
	// One or more origins for this distribution (multiples allowed).
	Origins pulumix.GArrayOutput[DistributionOrigin, DistributionOriginOutput] `pulumi:"origins"`
	// Price class for this distribution. One of `PriceClass_All`, `PriceClass_200`, `PriceClass_100`.
	PriceClass pulumix.Output[*string] `pulumi:"priceClass"`
	// The restriction configuration for this distribution (maximum one).
	Restrictions pulumix.GPtrOutput[DistributionRestrictions, DistributionRestrictionsOutput] `pulumi:"restrictions"`
	// Disables the distribution instead of deleting it when destroying the resource through the provider. If this is set, the distribution needs to be deleted manually afterwards. Default: `false`.
	RetainOnDelete pulumix.Output[*bool] `pulumi:"retainOnDelete"`
	// A Boolean that indicates whether this is a staging distribution. Defaults to `false`.
	Staging pulumix.Output[*bool] `pulumi:"staging"`
	// Current status of the distribution. `Deployed` if the distribution's information is fully propagated throughout the Amazon CloudFront system.
	Status pulumix.Output[string] `pulumi:"status"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// List of key group IDs that CloudFront can use to validate signed URLs or signed cookies. See the [CloudFront User Guide](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-trusted-signers.html) for more information about this feature.
	TrustedKeyGroups pulumix.GArrayOutput[DistributionTrustedKeyGroup, DistributionTrustedKeyGroupOutput] `pulumi:"trustedKeyGroups"`
	// List of AWS account IDs (or `self`) that you want to allow to create signed URLs for private content. See the [CloudFront User Guide](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-trusted-signers.html) for more information about this feature.
	TrustedSigners pulumix.GArrayOutput[DistributionTrustedSigner, DistributionTrustedSignerOutput] `pulumi:"trustedSigners"`
	// The SSL configuration for this distribution (maximum one).
	ViewerCertificate pulumix.GPtrOutput[DistributionViewerCertificate, DistributionViewerCertificateOutput] `pulumi:"viewerCertificate"`
	// If enabled, the resource will wait for the distribution status to change from `InProgress` to `Deployed`. Setting this to`false` will skip the process. Default: `true`.
	WaitForDeployment pulumix.Output[*bool] `pulumi:"waitForDeployment"`
	// Unique identifier that specifies the AWS WAF web ACL, if any, to associate with this distribution. To specify a web ACL created using the latest version of AWS WAF (WAFv2), use the ACL ARN, for example `aws_wafv2_web_acl.example.arn`. To specify a web ACL created using AWS WAF Classic, use the ACL ID, for example `aws_waf_web_acl.example.id`. The WAF Web ACL must exist in the WAF Global (CloudFront) region and the credentials configuring this argument must have `waf:GetWebACL` permissions assigned.
	WebAclId pulumix.Output[*string] `pulumi:"webAclId"`
}

// NewDistribution registers a new resource with the given unique name, arguments, and options.
func NewDistribution(ctx *pulumi.Context,
	name string, args *DistributionArgs, opts ...pulumi.ResourceOption) (*Distribution, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DefaultCacheBehavior == nil {
		return nil, errors.New("invalid value for required argument 'DefaultCacheBehavior'")
	}
	if args.Enabled == nil {
		return nil, errors.New("invalid value for required argument 'Enabled'")
	}
	if args.Origins == nil {
		return nil, errors.New("invalid value for required argument 'Origins'")
	}
	if args.Restrictions == nil {
		return nil, errors.New("invalid value for required argument 'Restrictions'")
	}
	if args.ViewerCertificate == nil {
		return nil, errors.New("invalid value for required argument 'ViewerCertificate'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Distribution
	err := ctx.RegisterResource("aws:cloudfront/distribution:Distribution", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDistribution gets an existing Distribution resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDistribution(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DistributionState, opts ...pulumi.ResourceOption) (*Distribution, error) {
	var resource Distribution
	err := ctx.ReadResource("aws:cloudfront/distribution:Distribution", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Distribution resources.
type distributionState struct {
	// Extra CNAMEs (alternate domain names), if any, for this distribution.
	Aliases []string `pulumi:"aliases"`
	// ARN for the distribution. For example: `arn:aws:cloudfront::123456789012:distribution/EDFDVBD632BHDS5`, where `123456789012` is your AWS account ID.
	Arn *string `pulumi:"arn"`
	// Internal value used by CloudFront to allow future updates to the distribution configuration.
	CallerReference *string `pulumi:"callerReference"`
	// Any comments you want to include about the distribution.
	Comment *string `pulumi:"comment"`
	// Identifier of a continuous deployment policy. This argument should only be set on a production distribution. See the `cloudfront.ContinuousDeploymentPolicy` resource for additional details.
	ContinuousDeploymentPolicyId *string `pulumi:"continuousDeploymentPolicyId"`
	// One or more custom error response elements (multiples allowed).
	CustomErrorResponses []DistributionCustomErrorResponse `pulumi:"customErrorResponses"`
	// Default cache behavior for this distribution (maximum one). Requires either `cachePolicyId` (preferred) or `forwardedValues` (deprecated) be set.
	DefaultCacheBehavior *DistributionDefaultCacheBehavior `pulumi:"defaultCacheBehavior"`
	// Object that you want CloudFront to return (for example, index.html) when an end user requests the root URL.
	DefaultRootObject *string `pulumi:"defaultRootObject"`
	// DNS domain name of either the S3 bucket, or web site of your custom origin.
	DomainName *string `pulumi:"domainName"`
	// Whether the distribution is enabled to accept end user requests for content.
	Enabled *bool `pulumi:"enabled"`
	// Current version of the distribution's information. For example: `E2QWRUHAPOMQZL`.
	Etag *string `pulumi:"etag"`
	// CloudFront Route 53 zone ID that can be used to route an [Alias Resource Record Set](http://docs.aws.amazon.com/Route53/latest/APIReference/CreateAliasRRSAPI.html) to. This attribute is simply an alias for the zone ID `Z2FDTNDATAQYW2`.
	HostedZoneId *string `pulumi:"hostedZoneId"`
	// Maximum HTTP version to support on the distribution. Allowed values are `http1.1`, `http2`, `http2and3` and `http3`. The default is `http2`.
	HttpVersion *string `pulumi:"httpVersion"`
	// Number of invalidation batches currently in progress.
	InProgressValidationBatches *int `pulumi:"inProgressValidationBatches"`
	// Whether the IPv6 is enabled for the distribution.
	IsIpv6Enabled *bool `pulumi:"isIpv6Enabled"`
	// Date and time the distribution was last modified.
	LastModifiedTime *string `pulumi:"lastModifiedTime"`
	// The logging configuration that controls how logs are written to your distribution (maximum one).
	LoggingConfig *DistributionLoggingConfig `pulumi:"loggingConfig"`
	// Ordered list of cache behaviors resource for this distribution. List from top to bottom in order of precedence. The topmost cache behavior will have precedence 0.
	OrderedCacheBehaviors []DistributionOrderedCacheBehavior `pulumi:"orderedCacheBehaviors"`
	// One or more originGroup for this distribution (multiples allowed).
	OriginGroups []DistributionOriginGroup `pulumi:"originGroups"`
	// One or more origins for this distribution (multiples allowed).
	Origins []DistributionOrigin `pulumi:"origins"`
	// Price class for this distribution. One of `PriceClass_All`, `PriceClass_200`, `PriceClass_100`.
	PriceClass *string `pulumi:"priceClass"`
	// The restriction configuration for this distribution (maximum one).
	Restrictions *DistributionRestrictions `pulumi:"restrictions"`
	// Disables the distribution instead of deleting it when destroying the resource through the provider. If this is set, the distribution needs to be deleted manually afterwards. Default: `false`.
	RetainOnDelete *bool `pulumi:"retainOnDelete"`
	// A Boolean that indicates whether this is a staging distribution. Defaults to `false`.
	Staging *bool `pulumi:"staging"`
	// Current status of the distribution. `Deployed` if the distribution's information is fully propagated throughout the Amazon CloudFront system.
	Status *string `pulumi:"status"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// List of key group IDs that CloudFront can use to validate signed URLs or signed cookies. See the [CloudFront User Guide](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-trusted-signers.html) for more information about this feature.
	TrustedKeyGroups []DistributionTrustedKeyGroup `pulumi:"trustedKeyGroups"`
	// List of AWS account IDs (or `self`) that you want to allow to create signed URLs for private content. See the [CloudFront User Guide](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-trusted-signers.html) for more information about this feature.
	TrustedSigners []DistributionTrustedSigner `pulumi:"trustedSigners"`
	// The SSL configuration for this distribution (maximum one).
	ViewerCertificate *DistributionViewerCertificate `pulumi:"viewerCertificate"`
	// If enabled, the resource will wait for the distribution status to change from `InProgress` to `Deployed`. Setting this to`false` will skip the process. Default: `true`.
	WaitForDeployment *bool `pulumi:"waitForDeployment"`
	// Unique identifier that specifies the AWS WAF web ACL, if any, to associate with this distribution. To specify a web ACL created using the latest version of AWS WAF (WAFv2), use the ACL ARN, for example `aws_wafv2_web_acl.example.arn`. To specify a web ACL created using AWS WAF Classic, use the ACL ID, for example `aws_waf_web_acl.example.id`. The WAF Web ACL must exist in the WAF Global (CloudFront) region and the credentials configuring this argument must have `waf:GetWebACL` permissions assigned.
	WebAclId *string `pulumi:"webAclId"`
}

type DistributionState struct {
	// Extra CNAMEs (alternate domain names), if any, for this distribution.
	Aliases pulumix.Input[[]string]
	// ARN for the distribution. For example: `arn:aws:cloudfront::123456789012:distribution/EDFDVBD632BHDS5`, where `123456789012` is your AWS account ID.
	Arn pulumix.Input[*string]
	// Internal value used by CloudFront to allow future updates to the distribution configuration.
	CallerReference pulumix.Input[*string]
	// Any comments you want to include about the distribution.
	Comment pulumix.Input[*string]
	// Identifier of a continuous deployment policy. This argument should only be set on a production distribution. See the `cloudfront.ContinuousDeploymentPolicy` resource for additional details.
	ContinuousDeploymentPolicyId pulumix.Input[*string]
	// One or more custom error response elements (multiples allowed).
	CustomErrorResponses pulumix.Input[[]*DistributionCustomErrorResponseArgs]
	// Default cache behavior for this distribution (maximum one). Requires either `cachePolicyId` (preferred) or `forwardedValues` (deprecated) be set.
	DefaultCacheBehavior pulumix.Input[*DistributionDefaultCacheBehaviorArgs]
	// Object that you want CloudFront to return (for example, index.html) when an end user requests the root URL.
	DefaultRootObject pulumix.Input[*string]
	// DNS domain name of either the S3 bucket, or web site of your custom origin.
	DomainName pulumix.Input[*string]
	// Whether the distribution is enabled to accept end user requests for content.
	Enabled pulumix.Input[*bool]
	// Current version of the distribution's information. For example: `E2QWRUHAPOMQZL`.
	Etag pulumix.Input[*string]
	// CloudFront Route 53 zone ID that can be used to route an [Alias Resource Record Set](http://docs.aws.amazon.com/Route53/latest/APIReference/CreateAliasRRSAPI.html) to. This attribute is simply an alias for the zone ID `Z2FDTNDATAQYW2`.
	HostedZoneId pulumix.Input[*string]
	// Maximum HTTP version to support on the distribution. Allowed values are `http1.1`, `http2`, `http2and3` and `http3`. The default is `http2`.
	HttpVersion pulumix.Input[*string]
	// Number of invalidation batches currently in progress.
	InProgressValidationBatches pulumix.Input[*int]
	// Whether the IPv6 is enabled for the distribution.
	IsIpv6Enabled pulumix.Input[*bool]
	// Date and time the distribution was last modified.
	LastModifiedTime pulumix.Input[*string]
	// The logging configuration that controls how logs are written to your distribution (maximum one).
	LoggingConfig pulumix.Input[*DistributionLoggingConfigArgs]
	// Ordered list of cache behaviors resource for this distribution. List from top to bottom in order of precedence. The topmost cache behavior will have precedence 0.
	OrderedCacheBehaviors pulumix.Input[[]*DistributionOrderedCacheBehaviorArgs]
	// One or more originGroup for this distribution (multiples allowed).
	OriginGroups pulumix.Input[[]*DistributionOriginGroupArgs]
	// One or more origins for this distribution (multiples allowed).
	Origins pulumix.Input[[]*DistributionOriginArgs]
	// Price class for this distribution. One of `PriceClass_All`, `PriceClass_200`, `PriceClass_100`.
	PriceClass pulumix.Input[*string]
	// The restriction configuration for this distribution (maximum one).
	Restrictions pulumix.Input[*DistributionRestrictionsArgs]
	// Disables the distribution instead of deleting it when destroying the resource through the provider. If this is set, the distribution needs to be deleted manually afterwards. Default: `false`.
	RetainOnDelete pulumix.Input[*bool]
	// A Boolean that indicates whether this is a staging distribution. Defaults to `false`.
	Staging pulumix.Input[*bool]
	// Current status of the distribution. `Deployed` if the distribution's information is fully propagated throughout the Amazon CloudFront system.
	Status pulumix.Input[*string]
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// List of key group IDs that CloudFront can use to validate signed URLs or signed cookies. See the [CloudFront User Guide](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-trusted-signers.html) for more information about this feature.
	TrustedKeyGroups pulumix.Input[[]*DistributionTrustedKeyGroupArgs]
	// List of AWS account IDs (or `self`) that you want to allow to create signed URLs for private content. See the [CloudFront User Guide](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-trusted-signers.html) for more information about this feature.
	TrustedSigners pulumix.Input[[]*DistributionTrustedSignerArgs]
	// The SSL configuration for this distribution (maximum one).
	ViewerCertificate pulumix.Input[*DistributionViewerCertificateArgs]
	// If enabled, the resource will wait for the distribution status to change from `InProgress` to `Deployed`. Setting this to`false` will skip the process. Default: `true`.
	WaitForDeployment pulumix.Input[*bool]
	// Unique identifier that specifies the AWS WAF web ACL, if any, to associate with this distribution. To specify a web ACL created using the latest version of AWS WAF (WAFv2), use the ACL ARN, for example `aws_wafv2_web_acl.example.arn`. To specify a web ACL created using AWS WAF Classic, use the ACL ID, for example `aws_waf_web_acl.example.id`. The WAF Web ACL must exist in the WAF Global (CloudFront) region and the credentials configuring this argument must have `waf:GetWebACL` permissions assigned.
	WebAclId pulumix.Input[*string]
}

func (DistributionState) ElementType() reflect.Type {
	return reflect.TypeOf((*distributionState)(nil)).Elem()
}

type distributionArgs struct {
	// Extra CNAMEs (alternate domain names), if any, for this distribution.
	Aliases []string `pulumi:"aliases"`
	// Any comments you want to include about the distribution.
	Comment *string `pulumi:"comment"`
	// Identifier of a continuous deployment policy. This argument should only be set on a production distribution. See the `cloudfront.ContinuousDeploymentPolicy` resource for additional details.
	ContinuousDeploymentPolicyId *string `pulumi:"continuousDeploymentPolicyId"`
	// One or more custom error response elements (multiples allowed).
	CustomErrorResponses []DistributionCustomErrorResponse `pulumi:"customErrorResponses"`
	// Default cache behavior for this distribution (maximum one). Requires either `cachePolicyId` (preferred) or `forwardedValues` (deprecated) be set.
	DefaultCacheBehavior DistributionDefaultCacheBehavior `pulumi:"defaultCacheBehavior"`
	// Object that you want CloudFront to return (for example, index.html) when an end user requests the root URL.
	DefaultRootObject *string `pulumi:"defaultRootObject"`
	// Whether the distribution is enabled to accept end user requests for content.
	Enabled bool `pulumi:"enabled"`
	// Maximum HTTP version to support on the distribution. Allowed values are `http1.1`, `http2`, `http2and3` and `http3`. The default is `http2`.
	HttpVersion *string `pulumi:"httpVersion"`
	// Whether the IPv6 is enabled for the distribution.
	IsIpv6Enabled *bool `pulumi:"isIpv6Enabled"`
	// The logging configuration that controls how logs are written to your distribution (maximum one).
	LoggingConfig *DistributionLoggingConfig `pulumi:"loggingConfig"`
	// Ordered list of cache behaviors resource for this distribution. List from top to bottom in order of precedence. The topmost cache behavior will have precedence 0.
	OrderedCacheBehaviors []DistributionOrderedCacheBehavior `pulumi:"orderedCacheBehaviors"`
	// One or more originGroup for this distribution (multiples allowed).
	OriginGroups []DistributionOriginGroup `pulumi:"originGroups"`
	// One or more origins for this distribution (multiples allowed).
	Origins []DistributionOrigin `pulumi:"origins"`
	// Price class for this distribution. One of `PriceClass_All`, `PriceClass_200`, `PriceClass_100`.
	PriceClass *string `pulumi:"priceClass"`
	// The restriction configuration for this distribution (maximum one).
	Restrictions DistributionRestrictions `pulumi:"restrictions"`
	// Disables the distribution instead of deleting it when destroying the resource through the provider. If this is set, the distribution needs to be deleted manually afterwards. Default: `false`.
	RetainOnDelete *bool `pulumi:"retainOnDelete"`
	// A Boolean that indicates whether this is a staging distribution. Defaults to `false`.
	Staging *bool `pulumi:"staging"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// The SSL configuration for this distribution (maximum one).
	ViewerCertificate DistributionViewerCertificate `pulumi:"viewerCertificate"`
	// If enabled, the resource will wait for the distribution status to change from `InProgress` to `Deployed`. Setting this to`false` will skip the process. Default: `true`.
	WaitForDeployment *bool `pulumi:"waitForDeployment"`
	// Unique identifier that specifies the AWS WAF web ACL, if any, to associate with this distribution. To specify a web ACL created using the latest version of AWS WAF (WAFv2), use the ACL ARN, for example `aws_wafv2_web_acl.example.arn`. To specify a web ACL created using AWS WAF Classic, use the ACL ID, for example `aws_waf_web_acl.example.id`. The WAF Web ACL must exist in the WAF Global (CloudFront) region and the credentials configuring this argument must have `waf:GetWebACL` permissions assigned.
	WebAclId *string `pulumi:"webAclId"`
}

// The set of arguments for constructing a Distribution resource.
type DistributionArgs struct {
	// Extra CNAMEs (alternate domain names), if any, for this distribution.
	Aliases pulumix.Input[[]string]
	// Any comments you want to include about the distribution.
	Comment pulumix.Input[*string]
	// Identifier of a continuous deployment policy. This argument should only be set on a production distribution. See the `cloudfront.ContinuousDeploymentPolicy` resource for additional details.
	ContinuousDeploymentPolicyId pulumix.Input[*string]
	// One or more custom error response elements (multiples allowed).
	CustomErrorResponses pulumix.Input[[]*DistributionCustomErrorResponseArgs]
	// Default cache behavior for this distribution (maximum one). Requires either `cachePolicyId` (preferred) or `forwardedValues` (deprecated) be set.
	DefaultCacheBehavior pulumix.Input[*DistributionDefaultCacheBehaviorArgs]
	// Object that you want CloudFront to return (for example, index.html) when an end user requests the root URL.
	DefaultRootObject pulumix.Input[*string]
	// Whether the distribution is enabled to accept end user requests for content.
	Enabled pulumix.Input[bool]
	// Maximum HTTP version to support on the distribution. Allowed values are `http1.1`, `http2`, `http2and3` and `http3`. The default is `http2`.
	HttpVersion pulumix.Input[*string]
	// Whether the IPv6 is enabled for the distribution.
	IsIpv6Enabled pulumix.Input[*bool]
	// The logging configuration that controls how logs are written to your distribution (maximum one).
	LoggingConfig pulumix.Input[*DistributionLoggingConfigArgs]
	// Ordered list of cache behaviors resource for this distribution. List from top to bottom in order of precedence. The topmost cache behavior will have precedence 0.
	OrderedCacheBehaviors pulumix.Input[[]*DistributionOrderedCacheBehaviorArgs]
	// One or more originGroup for this distribution (multiples allowed).
	OriginGroups pulumix.Input[[]*DistributionOriginGroupArgs]
	// One or more origins for this distribution (multiples allowed).
	Origins pulumix.Input[[]*DistributionOriginArgs]
	// Price class for this distribution. One of `PriceClass_All`, `PriceClass_200`, `PriceClass_100`.
	PriceClass pulumix.Input[*string]
	// The restriction configuration for this distribution (maximum one).
	Restrictions pulumix.Input[*DistributionRestrictionsArgs]
	// Disables the distribution instead of deleting it when destroying the resource through the provider. If this is set, the distribution needs to be deleted manually afterwards. Default: `false`.
	RetainOnDelete pulumix.Input[*bool]
	// A Boolean that indicates whether this is a staging distribution. Defaults to `false`.
	Staging pulumix.Input[*bool]
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// The SSL configuration for this distribution (maximum one).
	ViewerCertificate pulumix.Input[*DistributionViewerCertificateArgs]
	// If enabled, the resource will wait for the distribution status to change from `InProgress` to `Deployed`. Setting this to`false` will skip the process. Default: `true`.
	WaitForDeployment pulumix.Input[*bool]
	// Unique identifier that specifies the AWS WAF web ACL, if any, to associate with this distribution. To specify a web ACL created using the latest version of AWS WAF (WAFv2), use the ACL ARN, for example `aws_wafv2_web_acl.example.arn`. To specify a web ACL created using AWS WAF Classic, use the ACL ID, for example `aws_waf_web_acl.example.id`. The WAF Web ACL must exist in the WAF Global (CloudFront) region and the credentials configuring this argument must have `waf:GetWebACL` permissions assigned.
	WebAclId pulumix.Input[*string]
}

func (DistributionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*distributionArgs)(nil)).Elem()
}

type DistributionOutput struct{ *pulumi.OutputState }

func (DistributionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Distribution)(nil)).Elem()
}

func (o DistributionOutput) ToDistributionOutput() DistributionOutput {
	return o
}

func (o DistributionOutput) ToDistributionOutputWithContext(ctx context.Context) DistributionOutput {
	return o
}

func (o DistributionOutput) ToOutput(ctx context.Context) pulumix.Output[Distribution] {
	return pulumix.Output[Distribution]{
		OutputState: o.OutputState,
	}
}

// Extra CNAMEs (alternate domain names), if any, for this distribution.
func (o DistributionOutput) Aliases() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[Distribution](o, func(v Distribution) pulumix.ArrayOutput[string] { return v.Aliases })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// ARN for the distribution. For example: `arn:aws:cloudfront::123456789012:distribution/EDFDVBD632BHDS5`, where `123456789012` is your AWS account ID.
func (o DistributionOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Distribution](o, func(v Distribution) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Internal value used by CloudFront to allow future updates to the distribution configuration.
func (o DistributionOutput) CallerReference() pulumix.Output[string] {
	value := pulumix.Apply[Distribution](o, func(v Distribution) pulumix.Output[string] { return v.CallerReference })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Any comments you want to include about the distribution.
func (o DistributionOutput) Comment() pulumix.Output[*string] {
	value := pulumix.Apply[Distribution](o, func(v Distribution) pulumix.Output[*string] { return v.Comment })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Identifier of a continuous deployment policy. This argument should only be set on a production distribution. See the `cloudfront.ContinuousDeploymentPolicy` resource for additional details.
func (o DistributionOutput) ContinuousDeploymentPolicyId() pulumix.Output[*string] {
	value := pulumix.Apply[Distribution](o, func(v Distribution) pulumix.Output[*string] { return v.ContinuousDeploymentPolicyId })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// One or more custom error response elements (multiples allowed).
func (o DistributionOutput) CustomErrorResponses() pulumix.GArrayOutput[DistributionCustomErrorResponse, DistributionCustomErrorResponseOutput] {
	value := pulumix.Apply[Distribution](o, func(v Distribution) pulumix.GArrayOutput[DistributionCustomErrorResponse, DistributionCustomErrorResponseOutput] {
		return v.CustomErrorResponses
	})
	unwrapped := pulumix.Flatten[[]DistributionCustomErrorResponse, pulumix.GArrayOutput[DistributionCustomErrorResponse, DistributionCustomErrorResponseOutput]](value)
	return pulumix.GArrayOutput[DistributionCustomErrorResponse, DistributionCustomErrorResponseOutput]{OutputState: unwrapped.OutputState}
}

// Default cache behavior for this distribution (maximum one). Requires either `cachePolicyId` (preferred) or `forwardedValues` (deprecated) be set.
func (o DistributionOutput) DefaultCacheBehavior() pulumix.GPtrOutput[DistributionDefaultCacheBehavior, DistributionDefaultCacheBehaviorOutput] {
	value := pulumix.Apply[Distribution](o, func(v Distribution) pulumix.GPtrOutput[DistributionDefaultCacheBehavior, DistributionDefaultCacheBehaviorOutput] {
		return v.DefaultCacheBehavior
	})
	unwrapped := pulumix.Flatten[*DistributionDefaultCacheBehavior, pulumix.GPtrOutput[DistributionDefaultCacheBehavior, DistributionDefaultCacheBehaviorOutput]](value)
	return pulumix.GPtrOutput[DistributionDefaultCacheBehavior, DistributionDefaultCacheBehaviorOutput]{OutputState: unwrapped.OutputState}
}

// Object that you want CloudFront to return (for example, index.html) when an end user requests the root URL.
func (o DistributionOutput) DefaultRootObject() pulumix.Output[*string] {
	value := pulumix.Apply[Distribution](o, func(v Distribution) pulumix.Output[*string] { return v.DefaultRootObject })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// DNS domain name of either the S3 bucket, or web site of your custom origin.
func (o DistributionOutput) DomainName() pulumix.Output[string] {
	value := pulumix.Apply[Distribution](o, func(v Distribution) pulumix.Output[string] { return v.DomainName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Whether the distribution is enabled to accept end user requests for content.
func (o DistributionOutput) Enabled() pulumix.Output[bool] {
	value := pulumix.Apply[Distribution](o, func(v Distribution) pulumix.Output[bool] { return v.Enabled })
	return pulumix.Flatten[bool, pulumix.Output[bool]](value)
}

// Current version of the distribution's information. For example: `E2QWRUHAPOMQZL`.
func (o DistributionOutput) Etag() pulumix.Output[string] {
	value := pulumix.Apply[Distribution](o, func(v Distribution) pulumix.Output[string] { return v.Etag })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// CloudFront Route 53 zone ID that can be used to route an [Alias Resource Record Set](http://docs.aws.amazon.com/Route53/latest/APIReference/CreateAliasRRSAPI.html) to. This attribute is simply an alias for the zone ID `Z2FDTNDATAQYW2`.
func (o DistributionOutput) HostedZoneId() pulumix.Output[string] {
	value := pulumix.Apply[Distribution](o, func(v Distribution) pulumix.Output[string] { return v.HostedZoneId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Maximum HTTP version to support on the distribution. Allowed values are `http1.1`, `http2`, `http2and3` and `http3`. The default is `http2`.
func (o DistributionOutput) HttpVersion() pulumix.Output[*string] {
	value := pulumix.Apply[Distribution](o, func(v Distribution) pulumix.Output[*string] { return v.HttpVersion })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Number of invalidation batches currently in progress.
func (o DistributionOutput) InProgressValidationBatches() pulumix.Output[int] {
	value := pulumix.Apply[Distribution](o, func(v Distribution) pulumix.Output[int] { return v.InProgressValidationBatches })
	return pulumix.Flatten[int, pulumix.Output[int]](value)
}

// Whether the IPv6 is enabled for the distribution.
func (o DistributionOutput) IsIpv6Enabled() pulumix.Output[*bool] {
	value := pulumix.Apply[Distribution](o, func(v Distribution) pulumix.Output[*bool] { return v.IsIpv6Enabled })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// Date and time the distribution was last modified.
func (o DistributionOutput) LastModifiedTime() pulumix.Output[string] {
	value := pulumix.Apply[Distribution](o, func(v Distribution) pulumix.Output[string] { return v.LastModifiedTime })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The logging configuration that controls how logs are written to your distribution (maximum one).
func (o DistributionOutput) LoggingConfig() pulumix.GPtrOutput[DistributionLoggingConfig, DistributionLoggingConfigOutput] {
	value := pulumix.Apply[Distribution](o, func(v Distribution) pulumix.GPtrOutput[DistributionLoggingConfig, DistributionLoggingConfigOutput] {
		return v.LoggingConfig
	})
	unwrapped := pulumix.Flatten[*DistributionLoggingConfig, pulumix.GPtrOutput[DistributionLoggingConfig, DistributionLoggingConfigOutput]](value)
	return pulumix.GPtrOutput[DistributionLoggingConfig, DistributionLoggingConfigOutput]{OutputState: unwrapped.OutputState}
}

// Ordered list of cache behaviors resource for this distribution. List from top to bottom in order of precedence. The topmost cache behavior will have precedence 0.
func (o DistributionOutput) OrderedCacheBehaviors() pulumix.GArrayOutput[DistributionOrderedCacheBehavior, DistributionOrderedCacheBehaviorOutput] {
	value := pulumix.Apply[Distribution](o, func(v Distribution) pulumix.GArrayOutput[DistributionOrderedCacheBehavior, DistributionOrderedCacheBehaviorOutput] {
		return v.OrderedCacheBehaviors
	})
	unwrapped := pulumix.Flatten[[]DistributionOrderedCacheBehavior, pulumix.GArrayOutput[DistributionOrderedCacheBehavior, DistributionOrderedCacheBehaviorOutput]](value)
	return pulumix.GArrayOutput[DistributionOrderedCacheBehavior, DistributionOrderedCacheBehaviorOutput]{OutputState: unwrapped.OutputState}
}

// One or more originGroup for this distribution (multiples allowed).
func (o DistributionOutput) OriginGroups() pulumix.GArrayOutput[DistributionOriginGroup, DistributionOriginGroupOutput] {
	value := pulumix.Apply[Distribution](o, func(v Distribution) pulumix.GArrayOutput[DistributionOriginGroup, DistributionOriginGroupOutput] {
		return v.OriginGroups
	})
	unwrapped := pulumix.Flatten[[]DistributionOriginGroup, pulumix.GArrayOutput[DistributionOriginGroup, DistributionOriginGroupOutput]](value)
	return pulumix.GArrayOutput[DistributionOriginGroup, DistributionOriginGroupOutput]{OutputState: unwrapped.OutputState}
}

// One or more origins for this distribution (multiples allowed).
func (o DistributionOutput) Origins() pulumix.GArrayOutput[DistributionOrigin, DistributionOriginOutput] {
	value := pulumix.Apply[Distribution](o, func(v Distribution) pulumix.GArrayOutput[DistributionOrigin, DistributionOriginOutput] {
		return v.Origins
	})
	unwrapped := pulumix.Flatten[[]DistributionOrigin, pulumix.GArrayOutput[DistributionOrigin, DistributionOriginOutput]](value)
	return pulumix.GArrayOutput[DistributionOrigin, DistributionOriginOutput]{OutputState: unwrapped.OutputState}
}

// Price class for this distribution. One of `PriceClass_All`, `PriceClass_200`, `PriceClass_100`.
func (o DistributionOutput) PriceClass() pulumix.Output[*string] {
	value := pulumix.Apply[Distribution](o, func(v Distribution) pulumix.Output[*string] { return v.PriceClass })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The restriction configuration for this distribution (maximum one).
func (o DistributionOutput) Restrictions() pulumix.GPtrOutput[DistributionRestrictions, DistributionRestrictionsOutput] {
	value := pulumix.Apply[Distribution](o, func(v Distribution) pulumix.GPtrOutput[DistributionRestrictions, DistributionRestrictionsOutput] {
		return v.Restrictions
	})
	unwrapped := pulumix.Flatten[*DistributionRestrictions, pulumix.GPtrOutput[DistributionRestrictions, DistributionRestrictionsOutput]](value)
	return pulumix.GPtrOutput[DistributionRestrictions, DistributionRestrictionsOutput]{OutputState: unwrapped.OutputState}
}

// Disables the distribution instead of deleting it when destroying the resource through the provider. If this is set, the distribution needs to be deleted manually afterwards. Default: `false`.
func (o DistributionOutput) RetainOnDelete() pulumix.Output[*bool] {
	value := pulumix.Apply[Distribution](o, func(v Distribution) pulumix.Output[*bool] { return v.RetainOnDelete })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// A Boolean that indicates whether this is a staging distribution. Defaults to `false`.
func (o DistributionOutput) Staging() pulumix.Output[*bool] {
	value := pulumix.Apply[Distribution](o, func(v Distribution) pulumix.Output[*bool] { return v.Staging })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// Current status of the distribution. `Deployed` if the distribution's information is fully propagated throughout the Amazon CloudFront system.
func (o DistributionOutput) Status() pulumix.Output[string] {
	value := pulumix.Apply[Distribution](o, func(v Distribution) pulumix.Output[string] { return v.Status })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o DistributionOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Distribution](o, func(v Distribution) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o DistributionOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[Distribution](o, func(v Distribution) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// List of key group IDs that CloudFront can use to validate signed URLs or signed cookies. See the [CloudFront User Guide](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-trusted-signers.html) for more information about this feature.
func (o DistributionOutput) TrustedKeyGroups() pulumix.GArrayOutput[DistributionTrustedKeyGroup, DistributionTrustedKeyGroupOutput] {
	value := pulumix.Apply[Distribution](o, func(v Distribution) pulumix.GArrayOutput[DistributionTrustedKeyGroup, DistributionTrustedKeyGroupOutput] {
		return v.TrustedKeyGroups
	})
	unwrapped := pulumix.Flatten[[]DistributionTrustedKeyGroup, pulumix.GArrayOutput[DistributionTrustedKeyGroup, DistributionTrustedKeyGroupOutput]](value)
	return pulumix.GArrayOutput[DistributionTrustedKeyGroup, DistributionTrustedKeyGroupOutput]{OutputState: unwrapped.OutputState}
}

// List of AWS account IDs (or `self`) that you want to allow to create signed URLs for private content. See the [CloudFront User Guide](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-trusted-signers.html) for more information about this feature.
func (o DistributionOutput) TrustedSigners() pulumix.GArrayOutput[DistributionTrustedSigner, DistributionTrustedSignerOutput] {
	value := pulumix.Apply[Distribution](o, func(v Distribution) pulumix.GArrayOutput[DistributionTrustedSigner, DistributionTrustedSignerOutput] {
		return v.TrustedSigners
	})
	unwrapped := pulumix.Flatten[[]DistributionTrustedSigner, pulumix.GArrayOutput[DistributionTrustedSigner, DistributionTrustedSignerOutput]](value)
	return pulumix.GArrayOutput[DistributionTrustedSigner, DistributionTrustedSignerOutput]{OutputState: unwrapped.OutputState}
}

// The SSL configuration for this distribution (maximum one).
func (o DistributionOutput) ViewerCertificate() pulumix.GPtrOutput[DistributionViewerCertificate, DistributionViewerCertificateOutput] {
	value := pulumix.Apply[Distribution](o, func(v Distribution) pulumix.GPtrOutput[DistributionViewerCertificate, DistributionViewerCertificateOutput] {
		return v.ViewerCertificate
	})
	unwrapped := pulumix.Flatten[*DistributionViewerCertificate, pulumix.GPtrOutput[DistributionViewerCertificate, DistributionViewerCertificateOutput]](value)
	return pulumix.GPtrOutput[DistributionViewerCertificate, DistributionViewerCertificateOutput]{OutputState: unwrapped.OutputState}
}

// If enabled, the resource will wait for the distribution status to change from `InProgress` to `Deployed`. Setting this to`false` will skip the process. Default: `true`.
func (o DistributionOutput) WaitForDeployment() pulumix.Output[*bool] {
	value := pulumix.Apply[Distribution](o, func(v Distribution) pulumix.Output[*bool] { return v.WaitForDeployment })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// Unique identifier that specifies the AWS WAF web ACL, if any, to associate with this distribution. To specify a web ACL created using the latest version of AWS WAF (WAFv2), use the ACL ARN, for example `aws_wafv2_web_acl.example.arn`. To specify a web ACL created using AWS WAF Classic, use the ACL ID, for example `aws_waf_web_acl.example.id`. The WAF Web ACL must exist in the WAF Global (CloudFront) region and the credentials configuring this argument must have `waf:GetWebACL` permissions assigned.
func (o DistributionOutput) WebAclId() pulumix.Output[*string] {
	value := pulumix.Apply[Distribution](o, func(v Distribution) pulumix.Output[*string] { return v.WebAclId })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

func init() {
	pulumi.RegisterOutputType(DistributionOutput{})
}
