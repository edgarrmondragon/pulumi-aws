// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package glue

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a Glue User Defined Function Resource.
type UserDefinedFunction struct {
	pulumi.CustomResourceState

	// The ARN of the Glue User Defined Function.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// ID of the Glue Catalog to create the function in. If omitted, this defaults to the AWS Account ID.
	CatalogId pulumix.Output[*string] `pulumi:"catalogId"`
	// The Java class that contains the function code.
	ClassName pulumix.Output[string] `pulumi:"className"`
	// The time at which the function was created.
	CreateTime pulumix.Output[string] `pulumi:"createTime"`
	// The name of the Database to create the Function.
	DatabaseName pulumix.Output[string] `pulumi:"databaseName"`
	// The name of the function.
	Name pulumix.Output[string] `pulumi:"name"`
	// The owner of the function.
	OwnerName pulumix.Output[string] `pulumi:"ownerName"`
	// The owner type. can be one of `USER`, `ROLE`, and `GROUP`.
	OwnerType pulumix.Output[string] `pulumi:"ownerType"`
	// The configuration block for Resource URIs. See resource uris below for more details.
	ResourceUris pulumix.GArrayOutput[UserDefinedFunctionResourceUri, UserDefinedFunctionResourceUriOutput] `pulumi:"resourceUris"`
}

// NewUserDefinedFunction registers a new resource with the given unique name, arguments, and options.
func NewUserDefinedFunction(ctx *pulumi.Context,
	name string, args *UserDefinedFunctionArgs, opts ...pulumi.ResourceOption) (*UserDefinedFunction, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClassName == nil {
		return nil, errors.New("invalid value for required argument 'ClassName'")
	}
	if args.DatabaseName == nil {
		return nil, errors.New("invalid value for required argument 'DatabaseName'")
	}
	if args.OwnerName == nil {
		return nil, errors.New("invalid value for required argument 'OwnerName'")
	}
	if args.OwnerType == nil {
		return nil, errors.New("invalid value for required argument 'OwnerType'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource UserDefinedFunction
	err := ctx.RegisterResource("aws:glue/userDefinedFunction:UserDefinedFunction", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetUserDefinedFunction gets an existing UserDefinedFunction resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetUserDefinedFunction(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *UserDefinedFunctionState, opts ...pulumi.ResourceOption) (*UserDefinedFunction, error) {
	var resource UserDefinedFunction
	err := ctx.ReadResource("aws:glue/userDefinedFunction:UserDefinedFunction", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering UserDefinedFunction resources.
type userDefinedFunctionState struct {
	// The ARN of the Glue User Defined Function.
	Arn *string `pulumi:"arn"`
	// ID of the Glue Catalog to create the function in. If omitted, this defaults to the AWS Account ID.
	CatalogId *string `pulumi:"catalogId"`
	// The Java class that contains the function code.
	ClassName *string `pulumi:"className"`
	// The time at which the function was created.
	CreateTime *string `pulumi:"createTime"`
	// The name of the Database to create the Function.
	DatabaseName *string `pulumi:"databaseName"`
	// The name of the function.
	Name *string `pulumi:"name"`
	// The owner of the function.
	OwnerName *string `pulumi:"ownerName"`
	// The owner type. can be one of `USER`, `ROLE`, and `GROUP`.
	OwnerType *string `pulumi:"ownerType"`
	// The configuration block for Resource URIs. See resource uris below for more details.
	ResourceUris []UserDefinedFunctionResourceUri `pulumi:"resourceUris"`
}

type UserDefinedFunctionState struct {
	// The ARN of the Glue User Defined Function.
	Arn pulumix.Input[*string]
	// ID of the Glue Catalog to create the function in. If omitted, this defaults to the AWS Account ID.
	CatalogId pulumix.Input[*string]
	// The Java class that contains the function code.
	ClassName pulumix.Input[*string]
	// The time at which the function was created.
	CreateTime pulumix.Input[*string]
	// The name of the Database to create the Function.
	DatabaseName pulumix.Input[*string]
	// The name of the function.
	Name pulumix.Input[*string]
	// The owner of the function.
	OwnerName pulumix.Input[*string]
	// The owner type. can be one of `USER`, `ROLE`, and `GROUP`.
	OwnerType pulumix.Input[*string]
	// The configuration block for Resource URIs. See resource uris below for more details.
	ResourceUris pulumix.Input[[]*UserDefinedFunctionResourceUriArgs]
}

func (UserDefinedFunctionState) ElementType() reflect.Type {
	return reflect.TypeOf((*userDefinedFunctionState)(nil)).Elem()
}

type userDefinedFunctionArgs struct {
	// ID of the Glue Catalog to create the function in. If omitted, this defaults to the AWS Account ID.
	CatalogId *string `pulumi:"catalogId"`
	// The Java class that contains the function code.
	ClassName string `pulumi:"className"`
	// The name of the Database to create the Function.
	DatabaseName string `pulumi:"databaseName"`
	// The name of the function.
	Name *string `pulumi:"name"`
	// The owner of the function.
	OwnerName string `pulumi:"ownerName"`
	// The owner type. can be one of `USER`, `ROLE`, and `GROUP`.
	OwnerType string `pulumi:"ownerType"`
	// The configuration block for Resource URIs. See resource uris below for more details.
	ResourceUris []UserDefinedFunctionResourceUri `pulumi:"resourceUris"`
}

// The set of arguments for constructing a UserDefinedFunction resource.
type UserDefinedFunctionArgs struct {
	// ID of the Glue Catalog to create the function in. If omitted, this defaults to the AWS Account ID.
	CatalogId pulumix.Input[*string]
	// The Java class that contains the function code.
	ClassName pulumix.Input[string]
	// The name of the Database to create the Function.
	DatabaseName pulumix.Input[string]
	// The name of the function.
	Name pulumix.Input[*string]
	// The owner of the function.
	OwnerName pulumix.Input[string]
	// The owner type. can be one of `USER`, `ROLE`, and `GROUP`.
	OwnerType pulumix.Input[string]
	// The configuration block for Resource URIs. See resource uris below for more details.
	ResourceUris pulumix.Input[[]*UserDefinedFunctionResourceUriArgs]
}

func (UserDefinedFunctionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*userDefinedFunctionArgs)(nil)).Elem()
}

type UserDefinedFunctionOutput struct{ *pulumi.OutputState }

func (UserDefinedFunctionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserDefinedFunction)(nil)).Elem()
}

func (o UserDefinedFunctionOutput) ToUserDefinedFunctionOutput() UserDefinedFunctionOutput {
	return o
}

func (o UserDefinedFunctionOutput) ToUserDefinedFunctionOutputWithContext(ctx context.Context) UserDefinedFunctionOutput {
	return o
}

func (o UserDefinedFunctionOutput) ToOutput(ctx context.Context) pulumix.Output[UserDefinedFunction] {
	return pulumix.Output[UserDefinedFunction]{
		OutputState: o.OutputState,
	}
}

// The ARN of the Glue User Defined Function.
func (o UserDefinedFunctionOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[UserDefinedFunction](o, func(v UserDefinedFunction) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// ID of the Glue Catalog to create the function in. If omitted, this defaults to the AWS Account ID.
func (o UserDefinedFunctionOutput) CatalogId() pulumix.Output[*string] {
	value := pulumix.Apply[UserDefinedFunction](o, func(v UserDefinedFunction) pulumix.Output[*string] { return v.CatalogId })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The Java class that contains the function code.
func (o UserDefinedFunctionOutput) ClassName() pulumix.Output[string] {
	value := pulumix.Apply[UserDefinedFunction](o, func(v UserDefinedFunction) pulumix.Output[string] { return v.ClassName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The time at which the function was created.
func (o UserDefinedFunctionOutput) CreateTime() pulumix.Output[string] {
	value := pulumix.Apply[UserDefinedFunction](o, func(v UserDefinedFunction) pulumix.Output[string] { return v.CreateTime })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The name of the Database to create the Function.
func (o UserDefinedFunctionOutput) DatabaseName() pulumix.Output[string] {
	value := pulumix.Apply[UserDefinedFunction](o, func(v UserDefinedFunction) pulumix.Output[string] { return v.DatabaseName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The name of the function.
func (o UserDefinedFunctionOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[UserDefinedFunction](o, func(v UserDefinedFunction) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The owner of the function.
func (o UserDefinedFunctionOutput) OwnerName() pulumix.Output[string] {
	value := pulumix.Apply[UserDefinedFunction](o, func(v UserDefinedFunction) pulumix.Output[string] { return v.OwnerName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The owner type. can be one of `USER`, `ROLE`, and `GROUP`.
func (o UserDefinedFunctionOutput) OwnerType() pulumix.Output[string] {
	value := pulumix.Apply[UserDefinedFunction](o, func(v UserDefinedFunction) pulumix.Output[string] { return v.OwnerType })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The configuration block for Resource URIs. See resource uris below for more details.
func (o UserDefinedFunctionOutput) ResourceUris() pulumix.GArrayOutput[UserDefinedFunctionResourceUri, UserDefinedFunctionResourceUriOutput] {
	value := pulumix.Apply[UserDefinedFunction](o, func(v UserDefinedFunction) pulumix.GArrayOutput[UserDefinedFunctionResourceUri, UserDefinedFunctionResourceUriOutput] {
		return v.ResourceUris
	})
	unwrapped := pulumix.Flatten[[]UserDefinedFunctionResourceUri, pulumix.GArrayOutput[UserDefinedFunctionResourceUri, UserDefinedFunctionResourceUriOutput]](value)
	return pulumix.GArrayOutput[UserDefinedFunctionResourceUri, UserDefinedFunctionResourceUriOutput]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(UserDefinedFunctionOutput{})
}
