// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package opensearch

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Use this data source to get information about an AWS OpenSearch Serverless Security Policy.
func LookupServerlessSecurityPolicy(ctx *pulumi.Context, args *LookupServerlessSecurityPolicyArgs, opts ...pulumi.InvokeOption) (*LookupServerlessSecurityPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupServerlessSecurityPolicyResult
	err := ctx.Invoke("aws:opensearch/getServerlessSecurityPolicy:getServerlessSecurityPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getServerlessSecurityPolicy.
type LookupServerlessSecurityPolicyArgs struct {
	// Name of the policy
	Name string `pulumi:"name"`
	// Type of security policy. One of `encryption` or `network`.
	Type string `pulumi:"type"`
}

// A collection of values returned by getServerlessSecurityPolicy.
type LookupServerlessSecurityPolicyResult struct {
	// The date the security policy was created.
	CreatedDate string `pulumi:"createdDate"`
	// Description of the security policy.
	Description string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The date the security policy was last modified.
	LastModifiedDate string `pulumi:"lastModifiedDate"`
	Name             string `pulumi:"name"`
	// The JSON policy document without any whitespaces.
	Policy string `pulumi:"policy"`
	// Version of the policy.
	PolicyVersion string `pulumi:"policyVersion"`
	Type          string `pulumi:"type"`
}

func LookupServerlessSecurityPolicyOutput(ctx *pulumi.Context, args LookupServerlessSecurityPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupServerlessSecurityPolicyResultOutput {
	outputResult := pulumix.ApplyErr[*LookupServerlessSecurityPolicyArgs](args.ToOutput(), func(plainArgs *LookupServerlessSecurityPolicyArgs) (*LookupServerlessSecurityPolicyResult, error) {
		return LookupServerlessSecurityPolicy(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[LookupServerlessSecurityPolicyResultOutput, *LookupServerlessSecurityPolicyResult](outputResult)
}

// A collection of arguments for invoking getServerlessSecurityPolicy.
type LookupServerlessSecurityPolicyOutputArgs struct {
	// Name of the policy
	Name pulumix.Input[string] `pulumi:"name"`
	// Type of security policy. One of `encryption` or `network`.
	Type pulumix.Input[string] `pulumi:"type"`
}

func (args LookupServerlessSecurityPolicyOutputArgs) ToOutput() pulumix.Output[*LookupServerlessSecurityPolicyArgs] {
	allArgs := pulumix.All(
		args.Name.ToOutput(context.Background()).AsAny(),
		args.Type.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *LookupServerlessSecurityPolicyArgs {
		return &LookupServerlessSecurityPolicyArgs{
			Name: resolvedArgs[0].(string),
			Type: resolvedArgs[1].(string),
		}
	})
}

type LookupServerlessSecurityPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupServerlessSecurityPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServerlessSecurityPolicyResult)(nil)).Elem()
}

func (o LookupServerlessSecurityPolicyResultOutput) ToOutput(context.Context) pulumix.Output[*LookupServerlessSecurityPolicyResult] {
	return pulumix.Output[*LookupServerlessSecurityPolicyResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupServerlessSecurityPolicyResultOutput) CreatedDate() pulumix.Output[string] {
	return pulumix.Apply[*LookupServerlessSecurityPolicyResult](o, func(v *LookupServerlessSecurityPolicyResult) string { return v.CreatedDate })
}

func (o LookupServerlessSecurityPolicyResultOutput) Description() pulumix.Output[string] {
	return pulumix.Apply[*LookupServerlessSecurityPolicyResult](o, func(v *LookupServerlessSecurityPolicyResult) string { return v.Description })
}

func (o LookupServerlessSecurityPolicyResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*LookupServerlessSecurityPolicyResult](o, func(v *LookupServerlessSecurityPolicyResult) string { return v.Id })
}

func (o LookupServerlessSecurityPolicyResultOutput) LastModifiedDate() pulumix.Output[string] {
	return pulumix.Apply[*LookupServerlessSecurityPolicyResult](o, func(v *LookupServerlessSecurityPolicyResult) string { return v.LastModifiedDate })
}

func (o LookupServerlessSecurityPolicyResultOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[*LookupServerlessSecurityPolicyResult](o, func(v *LookupServerlessSecurityPolicyResult) string { return v.Name })
}

func (o LookupServerlessSecurityPolicyResultOutput) Policy() pulumix.Output[string] {
	return pulumix.Apply[*LookupServerlessSecurityPolicyResult](o, func(v *LookupServerlessSecurityPolicyResult) string { return v.Policy })
}

func (o LookupServerlessSecurityPolicyResultOutput) PolicyVersion() pulumix.Output[string] {
	return pulumix.Apply[*LookupServerlessSecurityPolicyResult](o, func(v *LookupServerlessSecurityPolicyResult) string { return v.PolicyVersion })
}

func (o LookupServerlessSecurityPolicyResultOutput) Type() pulumix.Output[string] {
	return pulumix.Apply[*LookupServerlessSecurityPolicyResult](o, func(v *LookupServerlessSecurityPolicyResult) string { return v.Type })
}
