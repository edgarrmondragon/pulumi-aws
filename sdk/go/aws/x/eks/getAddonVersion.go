// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package eks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Retrieve information about a specific EKS add-on version compatible with an EKS cluster version.
func GetAddonVersion(ctx *pulumi.Context, args *GetAddonVersionArgs, opts ...pulumi.InvokeOption) (*GetAddonVersionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetAddonVersionResult
	err := ctx.Invoke("aws:eks/getAddonVersion:getAddonVersion", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAddonVersion.
type GetAddonVersionArgs struct {
	// Name of the EKS add-on. The name must match one of
	// the names returned by [list-addon](https://docs.aws.amazon.com/cli/latest/reference/eks/list-addons.html).
	AddonName string `pulumi:"addonName"`
	// Version of the EKS Cluster. Must be between 1-100 characters in length. Must begin with an alphanumeric character, and must only contain alphanumeric characters, dashes and underscores (`^[0-9A-Za-z][A-Za-z0-9\-_]+$`).
	KubernetesVersion string `pulumi:"kubernetesVersion"`
	// Determines if the most recent or default version of the addon should be returned.
	MostRecent *bool `pulumi:"mostRecent"`
}

// A collection of values returned by getAddonVersion.
type GetAddonVersionResult struct {
	AddonName string `pulumi:"addonName"`
	// The provider-assigned unique ID for this managed resource.
	Id                string `pulumi:"id"`
	KubernetesVersion string `pulumi:"kubernetesVersion"`
	MostRecent        *bool  `pulumi:"mostRecent"`
	// Version of the EKS add-on.
	Version string `pulumi:"version"`
}

func GetAddonVersionOutput(ctx *pulumi.Context, args GetAddonVersionOutputArgs, opts ...pulumi.InvokeOption) GetAddonVersionResultOutput {
	outputResult := pulumix.ApplyErr[*GetAddonVersionArgs](args.ToOutput(), func(plainArgs *GetAddonVersionArgs) (*GetAddonVersionResult, error) {
		return GetAddonVersion(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[GetAddonVersionResultOutput, *GetAddonVersionResult](outputResult)
}

// A collection of arguments for invoking getAddonVersion.
type GetAddonVersionOutputArgs struct {
	// Name of the EKS add-on. The name must match one of
	// the names returned by [list-addon](https://docs.aws.amazon.com/cli/latest/reference/eks/list-addons.html).
	AddonName pulumix.Input[string] `pulumi:"addonName"`
	// Version of the EKS Cluster. Must be between 1-100 characters in length. Must begin with an alphanumeric character, and must only contain alphanumeric characters, dashes and underscores (`^[0-9A-Za-z][A-Za-z0-9\-_]+$`).
	KubernetesVersion pulumix.Input[string] `pulumi:"kubernetesVersion"`
	// Determines if the most recent or default version of the addon should be returned.
	MostRecent pulumix.Input[*bool] `pulumi:"mostRecent"`
}

func (args GetAddonVersionOutputArgs) ToOutput() pulumix.Output[*GetAddonVersionArgs] {
	allArgs := pulumix.All(
		args.AddonName.ToOutput(context.Background()).AsAny(),
		args.KubernetesVersion.ToOutput(context.Background()).AsAny(),
		args.MostRecent.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *GetAddonVersionArgs {
		return &GetAddonVersionArgs{
			AddonName:         resolvedArgs[0].(string),
			KubernetesVersion: resolvedArgs[1].(string),
			MostRecent:        resolvedArgs[2].(*bool),
		}
	})
}

type GetAddonVersionResultOutput struct{ *pulumi.OutputState }

func (GetAddonVersionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAddonVersionResult)(nil)).Elem()
}

func (o GetAddonVersionResultOutput) ToOutput(context.Context) pulumix.Output[*GetAddonVersionResult] {
	return pulumix.Output[*GetAddonVersionResult]{
		OutputState: o.OutputState,
	}
}

func (o GetAddonVersionResultOutput) AddonName() pulumix.Output[string] {
	return pulumix.Apply[*GetAddonVersionResult](o, func(v *GetAddonVersionResult) string { return v.AddonName })
}

func (o GetAddonVersionResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*GetAddonVersionResult](o, func(v *GetAddonVersionResult) string { return v.Id })
}

func (o GetAddonVersionResultOutput) KubernetesVersion() pulumix.Output[string] {
	return pulumix.Apply[*GetAddonVersionResult](o, func(v *GetAddonVersionResult) string { return v.KubernetesVersion })
}

func (o GetAddonVersionResultOutput) MostRecent() pulumix.Output[*bool] {
	return pulumix.Apply[*GetAddonVersionResult](o, func(v *GetAddonVersionResult) *bool { return v.MostRecent })
}

func (o GetAddonVersionResultOutput) Version() pulumix.Output[string] {
	return pulumix.Apply[*GetAddonVersionResult](o, func(v *GetAddonVersionResult) string { return v.Version })
}
