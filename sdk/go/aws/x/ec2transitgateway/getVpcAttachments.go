// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2transitgateway

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Get information on EC2 Transit Gateway VPC Attachments.
func GetVpcAttachments(ctx *pulumi.Context, args *GetVpcAttachmentsArgs, opts ...pulumi.InvokeOption) (*GetVpcAttachmentsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetVpcAttachmentsResult
	err := ctx.Invoke("aws:ec2transitgateway/getVpcAttachments:getVpcAttachments", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVpcAttachments.
type GetVpcAttachmentsArgs struct {
	// One or more configuration blocks containing name-values filters. Detailed below.
	Filters []GetVpcAttachmentsFilter `pulumi:"filters"`
}

// A collection of values returned by getVpcAttachments.
type GetVpcAttachmentsResult struct {
	Filters []GetVpcAttachmentsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A list of all attachments ids matching the filter. You can retrieve more information about the attachment using the [ec2transitgateway.VpcAttachment][2] data source, searching by identifier.
	Ids []string `pulumi:"ids"`
}

func GetVpcAttachmentsOutput(ctx *pulumi.Context, args GetVpcAttachmentsOutputArgs, opts ...pulumi.InvokeOption) GetVpcAttachmentsResultOutput {
	outputResult := pulumix.ApplyErr[*GetVpcAttachmentsArgs](args.ToOutput(), func(plainArgs *GetVpcAttachmentsArgs) (*GetVpcAttachmentsResult, error) {
		return GetVpcAttachments(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[GetVpcAttachmentsResultOutput, *GetVpcAttachmentsResult](outputResult)
}

// A collection of arguments for invoking getVpcAttachments.
type GetVpcAttachmentsOutputArgs struct {
	// One or more configuration blocks containing name-values filters. Detailed below.
	Filters pulumix.Input[[]*GetVpcAttachmentsFilterArgs] `pulumi:"filters"`
}

func (args GetVpcAttachmentsOutputArgs) ToOutput() pulumix.Output[*GetVpcAttachmentsArgs] {
	allArgs := pulumix.All(
		args.Filters.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *GetVpcAttachmentsArgs {
		return &GetVpcAttachmentsArgs{
			Filters: resolvedArgs[0].([]GetVpcAttachmentsFilter),
		}
	})
}

type GetVpcAttachmentsResultOutput struct{ *pulumi.OutputState }

func (GetVpcAttachmentsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcAttachmentsResult)(nil)).Elem()
}

func (o GetVpcAttachmentsResultOutput) ToOutput(context.Context) pulumix.Output[*GetVpcAttachmentsResult] {
	return pulumix.Output[*GetVpcAttachmentsResult]{
		OutputState: o.OutputState,
	}
}

func (o GetVpcAttachmentsResultOutput) Filters() pulumix.GArrayOutput[GetVpcAttachmentsFilter, GetVpcAttachmentsFilterOutput] {
	value := pulumix.Apply[*GetVpcAttachmentsResult](o, func(v *GetVpcAttachmentsResult) []GetVpcAttachmentsFilter { return v.Filters })
	return pulumix.GArrayOutput[GetVpcAttachmentsFilter, GetVpcAttachmentsFilterOutput]{
		OutputState: value.OutputState,
	}
}

func (o GetVpcAttachmentsResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*GetVpcAttachmentsResult](o, func(v *GetVpcAttachmentsResult) string { return v.Id })
}

func (o GetVpcAttachmentsResultOutput) Ids() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[*GetVpcAttachmentsResult](o, func(v *GetVpcAttachmentsResult) []string { return v.Ids })
	return pulumix.ArrayOutput[string]{
		OutputState: value.OutputState,
	}
}
