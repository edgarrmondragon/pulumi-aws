// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package imagebuilder

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manages an Image Builder Distribution Configuration.
type DistributionConfiguration struct {
	pulumi.CustomResourceState

	// (Required) Amazon Resource Name (ARN) of the distribution configuration.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// Date the distribution configuration was created.
	DateCreated pulumix.Output[string] `pulumi:"dateCreated"`
	// Date the distribution configuration was updated.
	DateUpdated pulumix.Output[string] `pulumi:"dateUpdated"`
	// Description of the distribution configuration.
	Description pulumix.Output[*string] `pulumi:"description"`
	// One or more configuration blocks with distribution settings. Detailed below.
	//
	// The following arguments are optional:
	Distributions pulumix.GArrayOutput[DistributionConfigurationDistribution, DistributionConfigurationDistributionOutput] `pulumi:"distributions"`
	// Name of the distribution configuration.
	Name pulumix.Output[string] `pulumi:"name"`
	// Key-value map of resource tags for the distribution configuration. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
}

// NewDistributionConfiguration registers a new resource with the given unique name, arguments, and options.
func NewDistributionConfiguration(ctx *pulumi.Context,
	name string, args *DistributionConfigurationArgs, opts ...pulumi.ResourceOption) (*DistributionConfiguration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Distributions == nil {
		return nil, errors.New("invalid value for required argument 'Distributions'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DistributionConfiguration
	err := ctx.RegisterResource("aws:imagebuilder/distributionConfiguration:DistributionConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDistributionConfiguration gets an existing DistributionConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDistributionConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DistributionConfigurationState, opts ...pulumi.ResourceOption) (*DistributionConfiguration, error) {
	var resource DistributionConfiguration
	err := ctx.ReadResource("aws:imagebuilder/distributionConfiguration:DistributionConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DistributionConfiguration resources.
type distributionConfigurationState struct {
	// (Required) Amazon Resource Name (ARN) of the distribution configuration.
	Arn *string `pulumi:"arn"`
	// Date the distribution configuration was created.
	DateCreated *string `pulumi:"dateCreated"`
	// Date the distribution configuration was updated.
	DateUpdated *string `pulumi:"dateUpdated"`
	// Description of the distribution configuration.
	Description *string `pulumi:"description"`
	// One or more configuration blocks with distribution settings. Detailed below.
	//
	// The following arguments are optional:
	Distributions []DistributionConfigurationDistribution `pulumi:"distributions"`
	// Name of the distribution configuration.
	Name *string `pulumi:"name"`
	// Key-value map of resource tags for the distribution configuration. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type DistributionConfigurationState struct {
	// (Required) Amazon Resource Name (ARN) of the distribution configuration.
	Arn pulumix.Input[*string]
	// Date the distribution configuration was created.
	DateCreated pulumix.Input[*string]
	// Date the distribution configuration was updated.
	DateUpdated pulumix.Input[*string]
	// Description of the distribution configuration.
	Description pulumix.Input[*string]
	// One or more configuration blocks with distribution settings. Detailed below.
	//
	// The following arguments are optional:
	Distributions pulumix.Input[[]*DistributionConfigurationDistributionArgs]
	// Name of the distribution configuration.
	Name pulumix.Input[*string]
	// Key-value map of resource tags for the distribution configuration. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
}

func (DistributionConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*distributionConfigurationState)(nil)).Elem()
}

type distributionConfigurationArgs struct {
	// Description of the distribution configuration.
	Description *string `pulumi:"description"`
	// One or more configuration blocks with distribution settings. Detailed below.
	//
	// The following arguments are optional:
	Distributions []DistributionConfigurationDistribution `pulumi:"distributions"`
	// Name of the distribution configuration.
	Name *string `pulumi:"name"`
	// Key-value map of resource tags for the distribution configuration. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a DistributionConfiguration resource.
type DistributionConfigurationArgs struct {
	// Description of the distribution configuration.
	Description pulumix.Input[*string]
	// One or more configuration blocks with distribution settings. Detailed below.
	//
	// The following arguments are optional:
	Distributions pulumix.Input[[]*DistributionConfigurationDistributionArgs]
	// Name of the distribution configuration.
	Name pulumix.Input[*string]
	// Key-value map of resource tags for the distribution configuration. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (DistributionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*distributionConfigurationArgs)(nil)).Elem()
}

type DistributionConfigurationOutput struct{ *pulumi.OutputState }

func (DistributionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionConfiguration)(nil)).Elem()
}

func (o DistributionConfigurationOutput) ToDistributionConfigurationOutput() DistributionConfigurationOutput {
	return o
}

func (o DistributionConfigurationOutput) ToDistributionConfigurationOutputWithContext(ctx context.Context) DistributionConfigurationOutput {
	return o
}

func (o DistributionConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[DistributionConfiguration] {
	return pulumix.Output[DistributionConfiguration]{
		OutputState: o.OutputState,
	}
}

// (Required) Amazon Resource Name (ARN) of the distribution configuration.
func (o DistributionConfigurationOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[DistributionConfiguration](o, func(v DistributionConfiguration) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Date the distribution configuration was created.
func (o DistributionConfigurationOutput) DateCreated() pulumix.Output[string] {
	value := pulumix.Apply[DistributionConfiguration](o, func(v DistributionConfiguration) pulumix.Output[string] { return v.DateCreated })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Date the distribution configuration was updated.
func (o DistributionConfigurationOutput) DateUpdated() pulumix.Output[string] {
	value := pulumix.Apply[DistributionConfiguration](o, func(v DistributionConfiguration) pulumix.Output[string] { return v.DateUpdated })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Description of the distribution configuration.
func (o DistributionConfigurationOutput) Description() pulumix.Output[*string] {
	value := pulumix.Apply[DistributionConfiguration](o, func(v DistributionConfiguration) pulumix.Output[*string] { return v.Description })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// One or more configuration blocks with distribution settings. Detailed below.
//
// The following arguments are optional:
func (o DistributionConfigurationOutput) Distributions() pulumix.GArrayOutput[DistributionConfigurationDistribution, DistributionConfigurationDistributionOutput] {
	value := pulumix.Apply[DistributionConfiguration](o, func(v DistributionConfiguration) pulumix.GArrayOutput[DistributionConfigurationDistribution, DistributionConfigurationDistributionOutput] {
		return v.Distributions
	})
	unwrapped := pulumix.Flatten[[]DistributionConfigurationDistribution, pulumix.GArrayOutput[DistributionConfigurationDistribution, DistributionConfigurationDistributionOutput]](value)
	return pulumix.GArrayOutput[DistributionConfigurationDistribution, DistributionConfigurationDistributionOutput]{OutputState: unwrapped.OutputState}
}

// Name of the distribution configuration.
func (o DistributionConfigurationOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[DistributionConfiguration](o, func(v DistributionConfiguration) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Key-value map of resource tags for the distribution configuration. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o DistributionConfigurationOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[DistributionConfiguration](o, func(v DistributionConfiguration) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o DistributionConfigurationOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[DistributionConfiguration](o, func(v DistributionConfiguration) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(DistributionConfigurationOutput{})
}
