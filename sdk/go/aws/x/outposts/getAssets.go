// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package outposts

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Information about hardware assets in an Outpost.
func GetAssets(ctx *pulumi.Context, args *GetAssetsArgs, opts ...pulumi.InvokeOption) (*GetAssetsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetAssetsResult
	err := ctx.Invoke("aws:outposts/getAssets:getAssets", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAssets.
type GetAssetsArgs struct {
	// Outpost ARN.
	Arn string `pulumi:"arn"`
	// Filters by list of Host IDs of a Dedicated Host.
	HostIdFilters []string `pulumi:"hostIdFilters"`
	// Filters by list of state status. Valid values: "ACTIVE", "RETIRING".
	StatusIdFilters []string `pulumi:"statusIdFilters"`
}

// A collection of values returned by getAssets.
type GetAssetsResult struct {
	Arn string `pulumi:"arn"`
	// List of all the asset ids found. This data source will fail if none are found.
	AssetIds      []string `pulumi:"assetIds"`
	HostIdFilters []string `pulumi:"hostIdFilters"`
	// The provider-assigned unique ID for this managed resource.
	Id              string   `pulumi:"id"`
	StatusIdFilters []string `pulumi:"statusIdFilters"`
}

func GetAssetsOutput(ctx *pulumi.Context, args GetAssetsOutputArgs, opts ...pulumi.InvokeOption) GetAssetsResultOutput {
	outputResult := pulumix.ApplyErr[*GetAssetsArgs](args.ToOutput(), func(plainArgs *GetAssetsArgs) (*GetAssetsResult, error) {
		return GetAssets(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[GetAssetsResultOutput, *GetAssetsResult](outputResult)
}

// A collection of arguments for invoking getAssets.
type GetAssetsOutputArgs struct {
	// Outpost ARN.
	Arn pulumix.Input[string] `pulumi:"arn"`
	// Filters by list of Host IDs of a Dedicated Host.
	HostIdFilters pulumix.Input[[]string] `pulumi:"hostIdFilters"`
	// Filters by list of state status. Valid values: "ACTIVE", "RETIRING".
	StatusIdFilters pulumix.Input[[]string] `pulumi:"statusIdFilters"`
}

func (args GetAssetsOutputArgs) ToOutput() pulumix.Output[*GetAssetsArgs] {
	allArgs := pulumix.All(
		args.Arn.ToOutput(context.Background()).AsAny(),
		args.HostIdFilters.ToOutput(context.Background()).AsAny(),
		args.StatusIdFilters.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *GetAssetsArgs {
		return &GetAssetsArgs{
			Arn:             resolvedArgs[0].(string),
			HostIdFilters:   resolvedArgs[1].([]string),
			StatusIdFilters: resolvedArgs[2].([]string),
		}
	})
}

type GetAssetsResultOutput struct{ *pulumi.OutputState }

func (GetAssetsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAssetsResult)(nil)).Elem()
}

func (o GetAssetsResultOutput) ToOutput(context.Context) pulumix.Output[*GetAssetsResult] {
	return pulumix.Output[*GetAssetsResult]{
		OutputState: o.OutputState,
	}
}

func (o GetAssetsResultOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[*GetAssetsResult](o, func(v *GetAssetsResult) string { return v.Arn })
}

func (o GetAssetsResultOutput) AssetIds() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[*GetAssetsResult](o, func(v *GetAssetsResult) []string { return v.AssetIds })
	return pulumix.ArrayOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o GetAssetsResultOutput) HostIdFilters() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[*GetAssetsResult](o, func(v *GetAssetsResult) []string { return v.HostIdFilters })
	return pulumix.ArrayOutput[string]{
		OutputState: value.OutputState,
	}
}

func (o GetAssetsResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*GetAssetsResult](o, func(v *GetAssetsResult) string { return v.Id })
}

func (o GetAssetsResultOutput) StatusIdFilters() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[*GetAssetsResult](o, func(v *GetAssetsResult) []string { return v.StatusIdFilters })
	return pulumix.ArrayOutput[string]{
		OutputState: value.OutputState,
	}
}
