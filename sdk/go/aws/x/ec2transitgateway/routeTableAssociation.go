// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2transitgateway

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manages an EC2 Transit Gateway Route Table association.
type RouteTableAssociation struct {
	pulumi.CustomResourceState

	// Boolean whether the Gateway Attachment should remove any current Route Table association before associating with the specified Route Table. Default value: `false`. This argument is intended for use with EC2 Transit Gateways shared into the current account, otherwise the `transitGatewayDefaultRouteTableAssociation` argument of the `ec2transitgateway.VpcAttachment` resource should be used.
	ReplaceExistingAssociation pulumix.Output[*bool] `pulumi:"replaceExistingAssociation"`
	// Identifier of the resource
	ResourceId pulumix.Output[string] `pulumi:"resourceId"`
	// Type of the resource
	ResourceType pulumix.Output[string] `pulumi:"resourceType"`
	// Identifier of EC2 Transit Gateway Attachment.
	TransitGatewayAttachmentId pulumix.Output[string] `pulumi:"transitGatewayAttachmentId"`
	// Identifier of EC2 Transit Gateway Route Table.
	TransitGatewayRouteTableId pulumix.Output[string] `pulumi:"transitGatewayRouteTableId"`
}

// NewRouteTableAssociation registers a new resource with the given unique name, arguments, and options.
func NewRouteTableAssociation(ctx *pulumi.Context,
	name string, args *RouteTableAssociationArgs, opts ...pulumi.ResourceOption) (*RouteTableAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TransitGatewayAttachmentId == nil {
		return nil, errors.New("invalid value for required argument 'TransitGatewayAttachmentId'")
	}
	if args.TransitGatewayRouteTableId == nil {
		return nil, errors.New("invalid value for required argument 'TransitGatewayRouteTableId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RouteTableAssociation
	err := ctx.RegisterResource("aws:ec2transitgateway/routeTableAssociation:RouteTableAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRouteTableAssociation gets an existing RouteTableAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRouteTableAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RouteTableAssociationState, opts ...pulumi.ResourceOption) (*RouteTableAssociation, error) {
	var resource RouteTableAssociation
	err := ctx.ReadResource("aws:ec2transitgateway/routeTableAssociation:RouteTableAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RouteTableAssociation resources.
type routeTableAssociationState struct {
	// Boolean whether the Gateway Attachment should remove any current Route Table association before associating with the specified Route Table. Default value: `false`. This argument is intended for use with EC2 Transit Gateways shared into the current account, otherwise the `transitGatewayDefaultRouteTableAssociation` argument of the `ec2transitgateway.VpcAttachment` resource should be used.
	ReplaceExistingAssociation *bool `pulumi:"replaceExistingAssociation"`
	// Identifier of the resource
	ResourceId *string `pulumi:"resourceId"`
	// Type of the resource
	ResourceType *string `pulumi:"resourceType"`
	// Identifier of EC2 Transit Gateway Attachment.
	TransitGatewayAttachmentId *string `pulumi:"transitGatewayAttachmentId"`
	// Identifier of EC2 Transit Gateway Route Table.
	TransitGatewayRouteTableId *string `pulumi:"transitGatewayRouteTableId"`
}

type RouteTableAssociationState struct {
	// Boolean whether the Gateway Attachment should remove any current Route Table association before associating with the specified Route Table. Default value: `false`. This argument is intended for use with EC2 Transit Gateways shared into the current account, otherwise the `transitGatewayDefaultRouteTableAssociation` argument of the `ec2transitgateway.VpcAttachment` resource should be used.
	ReplaceExistingAssociation pulumix.Input[*bool]
	// Identifier of the resource
	ResourceId pulumix.Input[*string]
	// Type of the resource
	ResourceType pulumix.Input[*string]
	// Identifier of EC2 Transit Gateway Attachment.
	TransitGatewayAttachmentId pulumix.Input[*string]
	// Identifier of EC2 Transit Gateway Route Table.
	TransitGatewayRouteTableId pulumix.Input[*string]
}

func (RouteTableAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*routeTableAssociationState)(nil)).Elem()
}

type routeTableAssociationArgs struct {
	// Boolean whether the Gateway Attachment should remove any current Route Table association before associating with the specified Route Table. Default value: `false`. This argument is intended for use with EC2 Transit Gateways shared into the current account, otherwise the `transitGatewayDefaultRouteTableAssociation` argument of the `ec2transitgateway.VpcAttachment` resource should be used.
	ReplaceExistingAssociation *bool `pulumi:"replaceExistingAssociation"`
	// Identifier of EC2 Transit Gateway Attachment.
	TransitGatewayAttachmentId string `pulumi:"transitGatewayAttachmentId"`
	// Identifier of EC2 Transit Gateway Route Table.
	TransitGatewayRouteTableId string `pulumi:"transitGatewayRouteTableId"`
}

// The set of arguments for constructing a RouteTableAssociation resource.
type RouteTableAssociationArgs struct {
	// Boolean whether the Gateway Attachment should remove any current Route Table association before associating with the specified Route Table. Default value: `false`. This argument is intended for use with EC2 Transit Gateways shared into the current account, otherwise the `transitGatewayDefaultRouteTableAssociation` argument of the `ec2transitgateway.VpcAttachment` resource should be used.
	ReplaceExistingAssociation pulumix.Input[*bool]
	// Identifier of EC2 Transit Gateway Attachment.
	TransitGatewayAttachmentId pulumix.Input[string]
	// Identifier of EC2 Transit Gateway Route Table.
	TransitGatewayRouteTableId pulumix.Input[string]
}

func (RouteTableAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*routeTableAssociationArgs)(nil)).Elem()
}

type RouteTableAssociationOutput struct{ *pulumi.OutputState }

func (RouteTableAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableAssociation)(nil)).Elem()
}

func (o RouteTableAssociationOutput) ToRouteTableAssociationOutput() RouteTableAssociationOutput {
	return o
}

func (o RouteTableAssociationOutput) ToRouteTableAssociationOutputWithContext(ctx context.Context) RouteTableAssociationOutput {
	return o
}

func (o RouteTableAssociationOutput) ToOutput(ctx context.Context) pulumix.Output[RouteTableAssociation] {
	return pulumix.Output[RouteTableAssociation]{
		OutputState: o.OutputState,
	}
}

// Boolean whether the Gateway Attachment should remove any current Route Table association before associating with the specified Route Table. Default value: `false`. This argument is intended for use with EC2 Transit Gateways shared into the current account, otherwise the `transitGatewayDefaultRouteTableAssociation` argument of the `ec2transitgateway.VpcAttachment` resource should be used.
func (o RouteTableAssociationOutput) ReplaceExistingAssociation() pulumix.Output[*bool] {
	value := pulumix.Apply[RouteTableAssociation](o, func(v RouteTableAssociation) pulumix.Output[*bool] { return v.ReplaceExistingAssociation })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// Identifier of the resource
func (o RouteTableAssociationOutput) ResourceId() pulumix.Output[string] {
	value := pulumix.Apply[RouteTableAssociation](o, func(v RouteTableAssociation) pulumix.Output[string] { return v.ResourceId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Type of the resource
func (o RouteTableAssociationOutput) ResourceType() pulumix.Output[string] {
	value := pulumix.Apply[RouteTableAssociation](o, func(v RouteTableAssociation) pulumix.Output[string] { return v.ResourceType })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Identifier of EC2 Transit Gateway Attachment.
func (o RouteTableAssociationOutput) TransitGatewayAttachmentId() pulumix.Output[string] {
	value := pulumix.Apply[RouteTableAssociation](o, func(v RouteTableAssociation) pulumix.Output[string] { return v.TransitGatewayAttachmentId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Identifier of EC2 Transit Gateway Route Table.
func (o RouteTableAssociationOutput) TransitGatewayRouteTableId() pulumix.Output[string] {
	value := pulumix.Apply[RouteTableAssociation](o, func(v RouteTableAssociation) pulumix.Output[string] { return v.TransitGatewayRouteTableId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(RouteTableAssociationOutput{})
}
