// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mskconnect

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an Amazon MSK Connect Custom Plugin Resource.
type CustomPlugin struct {
	pulumi.CustomResourceState

	// the Amazon Resource Name (ARN) of the custom plugin.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The type of the plugin file. Allowed values are `ZIP` and `JAR`.
	ContentType pulumix.Output[string] `pulumi:"contentType"`
	// A summary description of the custom plugin.
	Description pulumix.Output[*string] `pulumi:"description"`
	// an ID of the latest successfully created revision of the custom plugin.
	LatestRevision pulumix.Output[int] `pulumi:"latestRevision"`
	// Information about the location of a custom plugin. See below.
	//
	// The following arguments are optional:
	Location pulumix.GPtrOutput[CustomPluginLocation, CustomPluginLocationOutput] `pulumi:"location"`
	// The name of the custom plugin..
	Name pulumix.Output[string] `pulumi:"name"`
	// the state of the custom plugin.
	State pulumix.Output[string] `pulumi:"state"`
}

// NewCustomPlugin registers a new resource with the given unique name, arguments, and options.
func NewCustomPlugin(ctx *pulumi.Context,
	name string, args *CustomPluginArgs, opts ...pulumi.ResourceOption) (*CustomPlugin, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ContentType == nil {
		return nil, errors.New("invalid value for required argument 'ContentType'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CustomPlugin
	err := ctx.RegisterResource("aws:mskconnect/customPlugin:CustomPlugin", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCustomPlugin gets an existing CustomPlugin resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCustomPlugin(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CustomPluginState, opts ...pulumi.ResourceOption) (*CustomPlugin, error) {
	var resource CustomPlugin
	err := ctx.ReadResource("aws:mskconnect/customPlugin:CustomPlugin", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CustomPlugin resources.
type customPluginState struct {
	// the Amazon Resource Name (ARN) of the custom plugin.
	Arn *string `pulumi:"arn"`
	// The type of the plugin file. Allowed values are `ZIP` and `JAR`.
	ContentType *string `pulumi:"contentType"`
	// A summary description of the custom plugin.
	Description *string `pulumi:"description"`
	// an ID of the latest successfully created revision of the custom plugin.
	LatestRevision *int `pulumi:"latestRevision"`
	// Information about the location of a custom plugin. See below.
	//
	// The following arguments are optional:
	Location *CustomPluginLocation `pulumi:"location"`
	// The name of the custom plugin..
	Name *string `pulumi:"name"`
	// the state of the custom plugin.
	State *string `pulumi:"state"`
}

type CustomPluginState struct {
	// the Amazon Resource Name (ARN) of the custom plugin.
	Arn pulumix.Input[*string]
	// The type of the plugin file. Allowed values are `ZIP` and `JAR`.
	ContentType pulumix.Input[*string]
	// A summary description of the custom plugin.
	Description pulumix.Input[*string]
	// an ID of the latest successfully created revision of the custom plugin.
	LatestRevision pulumix.Input[*int]
	// Information about the location of a custom plugin. See below.
	//
	// The following arguments are optional:
	Location pulumix.Input[*CustomPluginLocationArgs]
	// The name of the custom plugin..
	Name pulumix.Input[*string]
	// the state of the custom plugin.
	State pulumix.Input[*string]
}

func (CustomPluginState) ElementType() reflect.Type {
	return reflect.TypeOf((*customPluginState)(nil)).Elem()
}

type customPluginArgs struct {
	// The type of the plugin file. Allowed values are `ZIP` and `JAR`.
	ContentType string `pulumi:"contentType"`
	// A summary description of the custom plugin.
	Description *string `pulumi:"description"`
	// Information about the location of a custom plugin. See below.
	//
	// The following arguments are optional:
	Location CustomPluginLocation `pulumi:"location"`
	// The name of the custom plugin..
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a CustomPlugin resource.
type CustomPluginArgs struct {
	// The type of the plugin file. Allowed values are `ZIP` and `JAR`.
	ContentType pulumix.Input[string]
	// A summary description of the custom plugin.
	Description pulumix.Input[*string]
	// Information about the location of a custom plugin. See below.
	//
	// The following arguments are optional:
	Location pulumix.Input[*CustomPluginLocationArgs]
	// The name of the custom plugin..
	Name pulumix.Input[*string]
}

func (CustomPluginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*customPluginArgs)(nil)).Elem()
}

type CustomPluginOutput struct{ *pulumi.OutputState }

func (CustomPluginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomPlugin)(nil)).Elem()
}

func (o CustomPluginOutput) ToCustomPluginOutput() CustomPluginOutput {
	return o
}

func (o CustomPluginOutput) ToCustomPluginOutputWithContext(ctx context.Context) CustomPluginOutput {
	return o
}

func (o CustomPluginOutput) ToOutput(ctx context.Context) pulumix.Output[CustomPlugin] {
	return pulumix.Output[CustomPlugin]{
		OutputState: o.OutputState,
	}
}

// the Amazon Resource Name (ARN) of the custom plugin.
func (o CustomPluginOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[CustomPlugin](o, func(v CustomPlugin) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The type of the plugin file. Allowed values are `ZIP` and `JAR`.
func (o CustomPluginOutput) ContentType() pulumix.Output[string] {
	value := pulumix.Apply[CustomPlugin](o, func(v CustomPlugin) pulumix.Output[string] { return v.ContentType })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A summary description of the custom plugin.
func (o CustomPluginOutput) Description() pulumix.Output[*string] {
	value := pulumix.Apply[CustomPlugin](o, func(v CustomPlugin) pulumix.Output[*string] { return v.Description })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// an ID of the latest successfully created revision of the custom plugin.
func (o CustomPluginOutput) LatestRevision() pulumix.Output[int] {
	value := pulumix.Apply[CustomPlugin](o, func(v CustomPlugin) pulumix.Output[int] { return v.LatestRevision })
	return pulumix.Flatten[int, pulumix.Output[int]](value)
}

// Information about the location of a custom plugin. See below.
//
// The following arguments are optional:
func (o CustomPluginOutput) Location() pulumix.GPtrOutput[CustomPluginLocation, CustomPluginLocationOutput] {
	value := pulumix.Apply[CustomPlugin](o, func(v CustomPlugin) pulumix.GPtrOutput[CustomPluginLocation, CustomPluginLocationOutput] {
		return v.Location
	})
	unwrapped := pulumix.Flatten[*CustomPluginLocation, pulumix.GPtrOutput[CustomPluginLocation, CustomPluginLocationOutput]](value)
	return pulumix.GPtrOutput[CustomPluginLocation, CustomPluginLocationOutput]{OutputState: unwrapped.OutputState}
}

// The name of the custom plugin..
func (o CustomPluginOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[CustomPlugin](o, func(v CustomPlugin) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// the state of the custom plugin.
func (o CustomPluginOutput) State() pulumix.Output[string] {
	value := pulumix.Apply[CustomPlugin](o, func(v CustomPlugin) pulumix.Output[string] { return v.State })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(CustomPluginOutput{})
}
