// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fsx

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manages a FSx ONTAP Volume.
// See the [FSx ONTAP User Guide](https://docs.aws.amazon.com/fsx/latest/ONTAPGuide/managing-volumes.html) for more information.
type OntapVolume struct {
	pulumi.CustomResourceState

	// Amazon Resource Name of the volune.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// Describes the file system for the volume, e.g. `fs-12345679`
	FileSystemId pulumix.Output[string] `pulumi:"fileSystemId"`
	// Specifies the FlexCache endpoint type of the volume, Valid values are `NONE`, `ORIGIN`, `CACHE`. Default value is `NONE`. These can be set by the ONTAP CLI or API and are use with FlexCache feature.
	FlexcacheEndpointType pulumix.Output[string] `pulumi:"flexcacheEndpointType"`
	// Specifies the location in the storage virtual machine's namespace where the volume is mounted. The junctionPath must have a leading forward slash, such as `/vol3`
	JunctionPath pulumix.Output[*string] `pulumi:"junctionPath"`
	// The name of the Volume. You can use a maximum of 203 alphanumeric characters, plus the underscore (_) special character.
	Name pulumix.Output[string] `pulumi:"name"`
	// Specifies the type of volume, valid values are `RW`, `DP`. Default value is `RW`. These can be set by the ONTAP CLI or API. This setting is used as part of migration and replication [Migrating to Amazon FSx for NetApp ONTAP](https://docs.aws.amazon.com/fsx/latest/ONTAPGuide/migrating-fsx-ontap.html)
	OntapVolumeType pulumix.Output[string] `pulumi:"ontapVolumeType"`
	// Specifies the volume security style, Valid values are `UNIX`, `NTFS`, and `MIXED`.
	SecurityStyle pulumix.Output[string] `pulumi:"securityStyle"`
	// Specifies the size of the volume, in megabytes (MB), that you are creating.
	SizeInMegabytes pulumix.Output[int] `pulumi:"sizeInMegabytes"`
	// When enabled, will skip the default final backup taken when the volume is deleted. This configuration must be applied separately before attempting to delete the resource to have the desired behavior. Defaults to `false`.
	SkipFinalBackup pulumix.Output[*bool] `pulumi:"skipFinalBackup"`
	// Set to true to enable deduplication, compression, and compaction storage efficiency features on the volume.
	StorageEfficiencyEnabled pulumix.Output[*bool] `pulumi:"storageEfficiencyEnabled"`
	// Specifies the storage virtual machine in which to create the volume.
	StorageVirtualMachineId pulumix.Output[string] `pulumi:"storageVirtualMachineId"`
	// A map of tags to assign to the volume. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll       pulumix.MapOutput[string]                                                    `pulumi:"tagsAll"`
	TieringPolicy pulumix.GPtrOutput[OntapVolumeTieringPolicy, OntapVolumeTieringPolicyOutput] `pulumi:"tieringPolicy"`
	// The Volume's UUID (universally unique identifier).
	Uuid pulumix.Output[string] `pulumi:"uuid"`
	// The type of volume, currently the only valid value is `ONTAP`.
	VolumeType pulumix.Output[*string] `pulumi:"volumeType"`
}

// NewOntapVolume registers a new resource with the given unique name, arguments, and options.
func NewOntapVolume(ctx *pulumi.Context,
	name string, args *OntapVolumeArgs, opts ...pulumi.ResourceOption) (*OntapVolume, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.SizeInMegabytes == nil {
		return nil, errors.New("invalid value for required argument 'SizeInMegabytes'")
	}
	if args.StorageVirtualMachineId == nil {
		return nil, errors.New("invalid value for required argument 'StorageVirtualMachineId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource OntapVolume
	err := ctx.RegisterResource("aws:fsx/ontapVolume:OntapVolume", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOntapVolume gets an existing OntapVolume resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOntapVolume(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OntapVolumeState, opts ...pulumi.ResourceOption) (*OntapVolume, error) {
	var resource OntapVolume
	err := ctx.ReadResource("aws:fsx/ontapVolume:OntapVolume", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OntapVolume resources.
type ontapVolumeState struct {
	// Amazon Resource Name of the volune.
	Arn *string `pulumi:"arn"`
	// Describes the file system for the volume, e.g. `fs-12345679`
	FileSystemId *string `pulumi:"fileSystemId"`
	// Specifies the FlexCache endpoint type of the volume, Valid values are `NONE`, `ORIGIN`, `CACHE`. Default value is `NONE`. These can be set by the ONTAP CLI or API and are use with FlexCache feature.
	FlexcacheEndpointType *string `pulumi:"flexcacheEndpointType"`
	// Specifies the location in the storage virtual machine's namespace where the volume is mounted. The junctionPath must have a leading forward slash, such as `/vol3`
	JunctionPath *string `pulumi:"junctionPath"`
	// The name of the Volume. You can use a maximum of 203 alphanumeric characters, plus the underscore (_) special character.
	Name *string `pulumi:"name"`
	// Specifies the type of volume, valid values are `RW`, `DP`. Default value is `RW`. These can be set by the ONTAP CLI or API. This setting is used as part of migration and replication [Migrating to Amazon FSx for NetApp ONTAP](https://docs.aws.amazon.com/fsx/latest/ONTAPGuide/migrating-fsx-ontap.html)
	OntapVolumeType *string `pulumi:"ontapVolumeType"`
	// Specifies the volume security style, Valid values are `UNIX`, `NTFS`, and `MIXED`.
	SecurityStyle *string `pulumi:"securityStyle"`
	// Specifies the size of the volume, in megabytes (MB), that you are creating.
	SizeInMegabytes *int `pulumi:"sizeInMegabytes"`
	// When enabled, will skip the default final backup taken when the volume is deleted. This configuration must be applied separately before attempting to delete the resource to have the desired behavior. Defaults to `false`.
	SkipFinalBackup *bool `pulumi:"skipFinalBackup"`
	// Set to true to enable deduplication, compression, and compaction storage efficiency features on the volume.
	StorageEfficiencyEnabled *bool `pulumi:"storageEfficiencyEnabled"`
	// Specifies the storage virtual machine in which to create the volume.
	StorageVirtualMachineId *string `pulumi:"storageVirtualMachineId"`
	// A map of tags to assign to the volume. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll       map[string]string         `pulumi:"tagsAll"`
	TieringPolicy *OntapVolumeTieringPolicy `pulumi:"tieringPolicy"`
	// The Volume's UUID (universally unique identifier).
	Uuid *string `pulumi:"uuid"`
	// The type of volume, currently the only valid value is `ONTAP`.
	VolumeType *string `pulumi:"volumeType"`
}

type OntapVolumeState struct {
	// Amazon Resource Name of the volune.
	Arn pulumix.Input[*string]
	// Describes the file system for the volume, e.g. `fs-12345679`
	FileSystemId pulumix.Input[*string]
	// Specifies the FlexCache endpoint type of the volume, Valid values are `NONE`, `ORIGIN`, `CACHE`. Default value is `NONE`. These can be set by the ONTAP CLI or API and are use with FlexCache feature.
	FlexcacheEndpointType pulumix.Input[*string]
	// Specifies the location in the storage virtual machine's namespace where the volume is mounted. The junctionPath must have a leading forward slash, such as `/vol3`
	JunctionPath pulumix.Input[*string]
	// The name of the Volume. You can use a maximum of 203 alphanumeric characters, plus the underscore (_) special character.
	Name pulumix.Input[*string]
	// Specifies the type of volume, valid values are `RW`, `DP`. Default value is `RW`. These can be set by the ONTAP CLI or API. This setting is used as part of migration and replication [Migrating to Amazon FSx for NetApp ONTAP](https://docs.aws.amazon.com/fsx/latest/ONTAPGuide/migrating-fsx-ontap.html)
	OntapVolumeType pulumix.Input[*string]
	// Specifies the volume security style, Valid values are `UNIX`, `NTFS`, and `MIXED`.
	SecurityStyle pulumix.Input[*string]
	// Specifies the size of the volume, in megabytes (MB), that you are creating.
	SizeInMegabytes pulumix.Input[*int]
	// When enabled, will skip the default final backup taken when the volume is deleted. This configuration must be applied separately before attempting to delete the resource to have the desired behavior. Defaults to `false`.
	SkipFinalBackup pulumix.Input[*bool]
	// Set to true to enable deduplication, compression, and compaction storage efficiency features on the volume.
	StorageEfficiencyEnabled pulumix.Input[*bool]
	// Specifies the storage virtual machine in which to create the volume.
	StorageVirtualMachineId pulumix.Input[*string]
	// A map of tags to assign to the volume. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll       pulumix.Input[map[string]string]
	TieringPolicy pulumix.Input[*OntapVolumeTieringPolicyArgs]
	// The Volume's UUID (universally unique identifier).
	Uuid pulumix.Input[*string]
	// The type of volume, currently the only valid value is `ONTAP`.
	VolumeType pulumix.Input[*string]
}

func (OntapVolumeState) ElementType() reflect.Type {
	return reflect.TypeOf((*ontapVolumeState)(nil)).Elem()
}

type ontapVolumeArgs struct {
	// Specifies the location in the storage virtual machine's namespace where the volume is mounted. The junctionPath must have a leading forward slash, such as `/vol3`
	JunctionPath *string `pulumi:"junctionPath"`
	// The name of the Volume. You can use a maximum of 203 alphanumeric characters, plus the underscore (_) special character.
	Name *string `pulumi:"name"`
	// Specifies the type of volume, valid values are `RW`, `DP`. Default value is `RW`. These can be set by the ONTAP CLI or API. This setting is used as part of migration and replication [Migrating to Amazon FSx for NetApp ONTAP](https://docs.aws.amazon.com/fsx/latest/ONTAPGuide/migrating-fsx-ontap.html)
	OntapVolumeType *string `pulumi:"ontapVolumeType"`
	// Specifies the volume security style, Valid values are `UNIX`, `NTFS`, and `MIXED`.
	SecurityStyle *string `pulumi:"securityStyle"`
	// Specifies the size of the volume, in megabytes (MB), that you are creating.
	SizeInMegabytes int `pulumi:"sizeInMegabytes"`
	// When enabled, will skip the default final backup taken when the volume is deleted. This configuration must be applied separately before attempting to delete the resource to have the desired behavior. Defaults to `false`.
	SkipFinalBackup *bool `pulumi:"skipFinalBackup"`
	// Set to true to enable deduplication, compression, and compaction storage efficiency features on the volume.
	StorageEfficiencyEnabled *bool `pulumi:"storageEfficiencyEnabled"`
	// Specifies the storage virtual machine in which to create the volume.
	StorageVirtualMachineId string `pulumi:"storageVirtualMachineId"`
	// A map of tags to assign to the volume. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags          map[string]string         `pulumi:"tags"`
	TieringPolicy *OntapVolumeTieringPolicy `pulumi:"tieringPolicy"`
	// The type of volume, currently the only valid value is `ONTAP`.
	VolumeType *string `pulumi:"volumeType"`
}

// The set of arguments for constructing a OntapVolume resource.
type OntapVolumeArgs struct {
	// Specifies the location in the storage virtual machine's namespace where the volume is mounted. The junctionPath must have a leading forward slash, such as `/vol3`
	JunctionPath pulumix.Input[*string]
	// The name of the Volume. You can use a maximum of 203 alphanumeric characters, plus the underscore (_) special character.
	Name pulumix.Input[*string]
	// Specifies the type of volume, valid values are `RW`, `DP`. Default value is `RW`. These can be set by the ONTAP CLI or API. This setting is used as part of migration and replication [Migrating to Amazon FSx for NetApp ONTAP](https://docs.aws.amazon.com/fsx/latest/ONTAPGuide/migrating-fsx-ontap.html)
	OntapVolumeType pulumix.Input[*string]
	// Specifies the volume security style, Valid values are `UNIX`, `NTFS`, and `MIXED`.
	SecurityStyle pulumix.Input[*string]
	// Specifies the size of the volume, in megabytes (MB), that you are creating.
	SizeInMegabytes pulumix.Input[int]
	// When enabled, will skip the default final backup taken when the volume is deleted. This configuration must be applied separately before attempting to delete the resource to have the desired behavior. Defaults to `false`.
	SkipFinalBackup pulumix.Input[*bool]
	// Set to true to enable deduplication, compression, and compaction storage efficiency features on the volume.
	StorageEfficiencyEnabled pulumix.Input[*bool]
	// Specifies the storage virtual machine in which to create the volume.
	StorageVirtualMachineId pulumix.Input[string]
	// A map of tags to assign to the volume. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags          pulumix.Input[map[string]string]
	TieringPolicy pulumix.Input[*OntapVolumeTieringPolicyArgs]
	// The type of volume, currently the only valid value is `ONTAP`.
	VolumeType pulumix.Input[*string]
}

func (OntapVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ontapVolumeArgs)(nil)).Elem()
}

type OntapVolumeOutput struct{ *pulumi.OutputState }

func (OntapVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OntapVolume)(nil)).Elem()
}

func (o OntapVolumeOutput) ToOntapVolumeOutput() OntapVolumeOutput {
	return o
}

func (o OntapVolumeOutput) ToOntapVolumeOutputWithContext(ctx context.Context) OntapVolumeOutput {
	return o
}

func (o OntapVolumeOutput) ToOutput(ctx context.Context) pulumix.Output[OntapVolume] {
	return pulumix.Output[OntapVolume]{
		OutputState: o.OutputState,
	}
}

// Amazon Resource Name of the volune.
func (o OntapVolumeOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[OntapVolume](o, func(v OntapVolume) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Describes the file system for the volume, e.g. `fs-12345679`
func (o OntapVolumeOutput) FileSystemId() pulumix.Output[string] {
	value := pulumix.Apply[OntapVolume](o, func(v OntapVolume) pulumix.Output[string] { return v.FileSystemId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Specifies the FlexCache endpoint type of the volume, Valid values are `NONE`, `ORIGIN`, `CACHE`. Default value is `NONE`. These can be set by the ONTAP CLI or API and are use with FlexCache feature.
func (o OntapVolumeOutput) FlexcacheEndpointType() pulumix.Output[string] {
	value := pulumix.Apply[OntapVolume](o, func(v OntapVolume) pulumix.Output[string] { return v.FlexcacheEndpointType })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Specifies the location in the storage virtual machine's namespace where the volume is mounted. The junctionPath must have a leading forward slash, such as `/vol3`
func (o OntapVolumeOutput) JunctionPath() pulumix.Output[*string] {
	value := pulumix.Apply[OntapVolume](o, func(v OntapVolume) pulumix.Output[*string] { return v.JunctionPath })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The name of the Volume. You can use a maximum of 203 alphanumeric characters, plus the underscore (_) special character.
func (o OntapVolumeOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[OntapVolume](o, func(v OntapVolume) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Specifies the type of volume, valid values are `RW`, `DP`. Default value is `RW`. These can be set by the ONTAP CLI or API. This setting is used as part of migration and replication [Migrating to Amazon FSx for NetApp ONTAP](https://docs.aws.amazon.com/fsx/latest/ONTAPGuide/migrating-fsx-ontap.html)
func (o OntapVolumeOutput) OntapVolumeType() pulumix.Output[string] {
	value := pulumix.Apply[OntapVolume](o, func(v OntapVolume) pulumix.Output[string] { return v.OntapVolumeType })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Specifies the volume security style, Valid values are `UNIX`, `NTFS`, and `MIXED`.
func (o OntapVolumeOutput) SecurityStyle() pulumix.Output[string] {
	value := pulumix.Apply[OntapVolume](o, func(v OntapVolume) pulumix.Output[string] { return v.SecurityStyle })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Specifies the size of the volume, in megabytes (MB), that you are creating.
func (o OntapVolumeOutput) SizeInMegabytes() pulumix.Output[int] {
	value := pulumix.Apply[OntapVolume](o, func(v OntapVolume) pulumix.Output[int] { return v.SizeInMegabytes })
	return pulumix.Flatten[int, pulumix.Output[int]](value)
}

// When enabled, will skip the default final backup taken when the volume is deleted. This configuration must be applied separately before attempting to delete the resource to have the desired behavior. Defaults to `false`.
func (o OntapVolumeOutput) SkipFinalBackup() pulumix.Output[*bool] {
	value := pulumix.Apply[OntapVolume](o, func(v OntapVolume) pulumix.Output[*bool] { return v.SkipFinalBackup })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// Set to true to enable deduplication, compression, and compaction storage efficiency features on the volume.
func (o OntapVolumeOutput) StorageEfficiencyEnabled() pulumix.Output[*bool] {
	value := pulumix.Apply[OntapVolume](o, func(v OntapVolume) pulumix.Output[*bool] { return v.StorageEfficiencyEnabled })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// Specifies the storage virtual machine in which to create the volume.
func (o OntapVolumeOutput) StorageVirtualMachineId() pulumix.Output[string] {
	value := pulumix.Apply[OntapVolume](o, func(v OntapVolume) pulumix.Output[string] { return v.StorageVirtualMachineId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A map of tags to assign to the volume. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o OntapVolumeOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[OntapVolume](o, func(v OntapVolume) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o OntapVolumeOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[OntapVolume](o, func(v OntapVolume) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func (o OntapVolumeOutput) TieringPolicy() pulumix.GPtrOutput[OntapVolumeTieringPolicy, OntapVolumeTieringPolicyOutput] {
	value := pulumix.Apply[OntapVolume](o, func(v OntapVolume) pulumix.GPtrOutput[OntapVolumeTieringPolicy, OntapVolumeTieringPolicyOutput] {
		return v.TieringPolicy
	})
	unwrapped := pulumix.Flatten[*OntapVolumeTieringPolicy, pulumix.GPtrOutput[OntapVolumeTieringPolicy, OntapVolumeTieringPolicyOutput]](value)
	return pulumix.GPtrOutput[OntapVolumeTieringPolicy, OntapVolumeTieringPolicyOutput]{OutputState: unwrapped.OutputState}
}

// The Volume's UUID (universally unique identifier).
func (o OntapVolumeOutput) Uuid() pulumix.Output[string] {
	value := pulumix.Apply[OntapVolume](o, func(v OntapVolume) pulumix.Output[string] { return v.Uuid })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The type of volume, currently the only valid value is `ONTAP`.
func (o OntapVolumeOutput) VolumeType() pulumix.Output[*string] {
	value := pulumix.Apply[OntapVolume](o, func(v OntapVolume) pulumix.Output[*string] { return v.VolumeType })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

func init() {
	pulumi.RegisterOutputType(OntapVolumeOutput{})
}
