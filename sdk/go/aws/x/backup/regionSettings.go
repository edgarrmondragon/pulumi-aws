// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package backup

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an AWS Backup Region Settings resource.
type RegionSettings struct {
	pulumi.CustomResourceState

	// A map of services along with the management preferences for the Region. For more information, see the [AWS Documentation](https://docs.aws.amazon.com/aws-backup/latest/devguide/API_UpdateRegionSettings.html#API_UpdateRegionSettings_RequestSyntax).
	ResourceTypeManagementPreference pulumix.MapOutput[bool] `pulumi:"resourceTypeManagementPreference"`
	// A map of services along with the opt-in preferences for the Region.
	ResourceTypeOptInPreference pulumix.MapOutput[bool] `pulumi:"resourceTypeOptInPreference"`
}

// NewRegionSettings registers a new resource with the given unique name, arguments, and options.
func NewRegionSettings(ctx *pulumi.Context,
	name string, args *RegionSettingsArgs, opts ...pulumi.ResourceOption) (*RegionSettings, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceTypeOptInPreference == nil {
		return nil, errors.New("invalid value for required argument 'ResourceTypeOptInPreference'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RegionSettings
	err := ctx.RegisterResource("aws:backup/regionSettings:RegionSettings", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRegionSettings gets an existing RegionSettings resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRegionSettings(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RegionSettingsState, opts ...pulumi.ResourceOption) (*RegionSettings, error) {
	var resource RegionSettings
	err := ctx.ReadResource("aws:backup/regionSettings:RegionSettings", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RegionSettings resources.
type regionSettingsState struct {
	// A map of services along with the management preferences for the Region. For more information, see the [AWS Documentation](https://docs.aws.amazon.com/aws-backup/latest/devguide/API_UpdateRegionSettings.html#API_UpdateRegionSettings_RequestSyntax).
	ResourceTypeManagementPreference map[string]bool `pulumi:"resourceTypeManagementPreference"`
	// A map of services along with the opt-in preferences for the Region.
	ResourceTypeOptInPreference map[string]bool `pulumi:"resourceTypeOptInPreference"`
}

type RegionSettingsState struct {
	// A map of services along with the management preferences for the Region. For more information, see the [AWS Documentation](https://docs.aws.amazon.com/aws-backup/latest/devguide/API_UpdateRegionSettings.html#API_UpdateRegionSettings_RequestSyntax).
	ResourceTypeManagementPreference pulumix.Input[map[string]bool]
	// A map of services along with the opt-in preferences for the Region.
	ResourceTypeOptInPreference pulumix.Input[map[string]bool]
}

func (RegionSettingsState) ElementType() reflect.Type {
	return reflect.TypeOf((*regionSettingsState)(nil)).Elem()
}

type regionSettingsArgs struct {
	// A map of services along with the management preferences for the Region. For more information, see the [AWS Documentation](https://docs.aws.amazon.com/aws-backup/latest/devguide/API_UpdateRegionSettings.html#API_UpdateRegionSettings_RequestSyntax).
	ResourceTypeManagementPreference map[string]bool `pulumi:"resourceTypeManagementPreference"`
	// A map of services along with the opt-in preferences for the Region.
	ResourceTypeOptInPreference map[string]bool `pulumi:"resourceTypeOptInPreference"`
}

// The set of arguments for constructing a RegionSettings resource.
type RegionSettingsArgs struct {
	// A map of services along with the management preferences for the Region. For more information, see the [AWS Documentation](https://docs.aws.amazon.com/aws-backup/latest/devguide/API_UpdateRegionSettings.html#API_UpdateRegionSettings_RequestSyntax).
	ResourceTypeManagementPreference pulumix.Input[map[string]bool]
	// A map of services along with the opt-in preferences for the Region.
	ResourceTypeOptInPreference pulumix.Input[map[string]bool]
}

func (RegionSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*regionSettingsArgs)(nil)).Elem()
}

type RegionSettingsOutput struct{ *pulumi.OutputState }

func (RegionSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionSettings)(nil)).Elem()
}

func (o RegionSettingsOutput) ToRegionSettingsOutput() RegionSettingsOutput {
	return o
}

func (o RegionSettingsOutput) ToRegionSettingsOutputWithContext(ctx context.Context) RegionSettingsOutput {
	return o
}

func (o RegionSettingsOutput) ToOutput(ctx context.Context) pulumix.Output[RegionSettings] {
	return pulumix.Output[RegionSettings]{
		OutputState: o.OutputState,
	}
}

// A map of services along with the management preferences for the Region. For more information, see the [AWS Documentation](https://docs.aws.amazon.com/aws-backup/latest/devguide/API_UpdateRegionSettings.html#API_UpdateRegionSettings_RequestSyntax).
func (o RegionSettingsOutput) ResourceTypeManagementPreference() pulumix.MapOutput[bool] {
	value := pulumix.Apply[RegionSettings](o, func(v RegionSettings) pulumix.MapOutput[bool] { return v.ResourceTypeManagementPreference })
	unwrapped := pulumix.Flatten[map[string]bool, pulumix.MapOutput[bool]](value)
	return pulumix.MapOutput[bool]{OutputState: unwrapped.OutputState}
}

// A map of services along with the opt-in preferences for the Region.
func (o RegionSettingsOutput) ResourceTypeOptInPreference() pulumix.MapOutput[bool] {
	value := pulumix.Apply[RegionSettings](o, func(v RegionSettings) pulumix.MapOutput[bool] { return v.ResourceTypeOptInPreference })
	unwrapped := pulumix.Flatten[map[string]bool, pulumix.MapOutput[bool]](value)
	return pulumix.MapOutput[bool]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(RegionSettingsOutput{})
}
