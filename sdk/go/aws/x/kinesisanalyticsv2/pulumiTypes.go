// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kinesisanalyticsv2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type ApplicationApplicationConfiguration struct {
	// The code location and type parameters for the application.
	ApplicationCodeConfiguration ApplicationApplicationConfigurationApplicationCodeConfiguration `pulumi:"applicationCodeConfiguration"`
	// Describes whether snapshots are enabled for a Flink-based application.
	ApplicationSnapshotConfiguration *ApplicationApplicationConfigurationApplicationSnapshotConfiguration `pulumi:"applicationSnapshotConfiguration"`
	// Describes execution properties for a Flink-based application.
	EnvironmentProperties *ApplicationApplicationConfigurationEnvironmentProperties `pulumi:"environmentProperties"`
	// The configuration of a Flink-based application.
	FlinkApplicationConfiguration *ApplicationApplicationConfigurationFlinkApplicationConfiguration `pulumi:"flinkApplicationConfiguration"`
	// Describes the starting properties for a Flink-based application.
	RunConfiguration *ApplicationApplicationConfigurationRunConfiguration `pulumi:"runConfiguration"`
	// The configuration of a SQL-based application.
	SqlApplicationConfiguration *ApplicationApplicationConfigurationSqlApplicationConfiguration `pulumi:"sqlApplicationConfiguration"`
	// The VPC configuration of a Flink-based application.
	VpcConfiguration *ApplicationApplicationConfigurationVpcConfiguration `pulumi:"vpcConfiguration"`
}

type ApplicationApplicationConfigurationArgs struct {
	// The code location and type parameters for the application.
	ApplicationCodeConfiguration pulumix.Input[*ApplicationApplicationConfigurationApplicationCodeConfigurationArgs] `pulumi:"applicationCodeConfiguration"`
	// Describes whether snapshots are enabled for a Flink-based application.
	ApplicationSnapshotConfiguration pulumix.Input[*ApplicationApplicationConfigurationApplicationSnapshotConfigurationArgs] `pulumi:"applicationSnapshotConfiguration"`
	// Describes execution properties for a Flink-based application.
	EnvironmentProperties pulumix.Input[*ApplicationApplicationConfigurationEnvironmentPropertiesArgs] `pulumi:"environmentProperties"`
	// The configuration of a Flink-based application.
	FlinkApplicationConfiguration pulumix.Input[*ApplicationApplicationConfigurationFlinkApplicationConfigurationArgs] `pulumi:"flinkApplicationConfiguration"`
	// Describes the starting properties for a Flink-based application.
	RunConfiguration pulumix.Input[*ApplicationApplicationConfigurationRunConfigurationArgs] `pulumi:"runConfiguration"`
	// The configuration of a SQL-based application.
	SqlApplicationConfiguration pulumix.Input[*ApplicationApplicationConfigurationSqlApplicationConfigurationArgs] `pulumi:"sqlApplicationConfiguration"`
	// The VPC configuration of a Flink-based application.
	VpcConfiguration pulumix.Input[*ApplicationApplicationConfigurationVpcConfigurationArgs] `pulumi:"vpcConfiguration"`
}

func (ApplicationApplicationConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfiguration)(nil)).Elem()
}

func (i ApplicationApplicationConfigurationArgs) ToApplicationApplicationConfigurationOutput() ApplicationApplicationConfigurationOutput {
	return i.ToApplicationApplicationConfigurationOutputWithContext(context.Background())
}

func (i ApplicationApplicationConfigurationArgs) ToApplicationApplicationConfigurationOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationApplicationConfigurationOutput)
}

func (i *ApplicationApplicationConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*ApplicationApplicationConfigurationArgs] {
	return pulumix.Val(i)
}

type ApplicationApplicationConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationApplicationConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfiguration)(nil)).Elem()
}

func (o ApplicationApplicationConfigurationOutput) ToApplicationApplicationConfigurationOutput() ApplicationApplicationConfigurationOutput {
	return o
}

func (o ApplicationApplicationConfigurationOutput) ToApplicationApplicationConfigurationOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationOutput {
	return o
}

func (o ApplicationApplicationConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[ApplicationApplicationConfiguration] {
	return pulumix.Output[ApplicationApplicationConfiguration]{
		OutputState: o.OutputState,
	}
}

// The code location and type parameters for the application.
func (o ApplicationApplicationConfigurationOutput) ApplicationCodeConfiguration() pulumix.GPtrOutput[ApplicationApplicationConfigurationApplicationCodeConfiguration, ApplicationApplicationConfigurationApplicationCodeConfigurationOutput] {
	value := pulumix.Apply[ApplicationApplicationConfiguration](o, func(v ApplicationApplicationConfiguration) ApplicationApplicationConfigurationApplicationCodeConfiguration {
		return v.ApplicationCodeConfiguration
	})
	return pulumix.GPtrOutput[ApplicationApplicationConfigurationApplicationCodeConfiguration, ApplicationApplicationConfigurationApplicationCodeConfigurationOutput]{OutputState: value.OutputState}
}

// Describes whether snapshots are enabled for a Flink-based application.
func (o ApplicationApplicationConfigurationOutput) ApplicationSnapshotConfiguration() pulumix.GPtrOutput[ApplicationApplicationConfigurationApplicationSnapshotConfiguration, ApplicationApplicationConfigurationApplicationSnapshotConfigurationOutput] {
	value := pulumix.Apply[ApplicationApplicationConfiguration](o, func(v ApplicationApplicationConfiguration) *ApplicationApplicationConfigurationApplicationSnapshotConfiguration {
		return v.ApplicationSnapshotConfiguration
	})
	return pulumix.GPtrOutput[ApplicationApplicationConfigurationApplicationSnapshotConfiguration, ApplicationApplicationConfigurationApplicationSnapshotConfigurationOutput]{OutputState: value.OutputState}
}

// Describes execution properties for a Flink-based application.
func (o ApplicationApplicationConfigurationOutput) EnvironmentProperties() pulumix.GPtrOutput[ApplicationApplicationConfigurationEnvironmentProperties, ApplicationApplicationConfigurationEnvironmentPropertiesOutput] {
	value := pulumix.Apply[ApplicationApplicationConfiguration](o, func(v ApplicationApplicationConfiguration) *ApplicationApplicationConfigurationEnvironmentProperties {
		return v.EnvironmentProperties
	})
	return pulumix.GPtrOutput[ApplicationApplicationConfigurationEnvironmentProperties, ApplicationApplicationConfigurationEnvironmentPropertiesOutput]{OutputState: value.OutputState}
}

// The configuration of a Flink-based application.
func (o ApplicationApplicationConfigurationOutput) FlinkApplicationConfiguration() pulumix.GPtrOutput[ApplicationApplicationConfigurationFlinkApplicationConfiguration, ApplicationApplicationConfigurationFlinkApplicationConfigurationOutput] {
	value := pulumix.Apply[ApplicationApplicationConfiguration](o, func(v ApplicationApplicationConfiguration) *ApplicationApplicationConfigurationFlinkApplicationConfiguration {
		return v.FlinkApplicationConfiguration
	})
	return pulumix.GPtrOutput[ApplicationApplicationConfigurationFlinkApplicationConfiguration, ApplicationApplicationConfigurationFlinkApplicationConfigurationOutput]{OutputState: value.OutputState}
}

// Describes the starting properties for a Flink-based application.
func (o ApplicationApplicationConfigurationOutput) RunConfiguration() pulumix.GPtrOutput[ApplicationApplicationConfigurationRunConfiguration, ApplicationApplicationConfigurationRunConfigurationOutput] {
	value := pulumix.Apply[ApplicationApplicationConfiguration](o, func(v ApplicationApplicationConfiguration) *ApplicationApplicationConfigurationRunConfiguration {
		return v.RunConfiguration
	})
	return pulumix.GPtrOutput[ApplicationApplicationConfigurationRunConfiguration, ApplicationApplicationConfigurationRunConfigurationOutput]{OutputState: value.OutputState}
}

// The configuration of a SQL-based application.
func (o ApplicationApplicationConfigurationOutput) SqlApplicationConfiguration() pulumix.GPtrOutput[ApplicationApplicationConfigurationSqlApplicationConfiguration, ApplicationApplicationConfigurationSqlApplicationConfigurationOutput] {
	value := pulumix.Apply[ApplicationApplicationConfiguration](o, func(v ApplicationApplicationConfiguration) *ApplicationApplicationConfigurationSqlApplicationConfiguration {
		return v.SqlApplicationConfiguration
	})
	return pulumix.GPtrOutput[ApplicationApplicationConfigurationSqlApplicationConfiguration, ApplicationApplicationConfigurationSqlApplicationConfigurationOutput]{OutputState: value.OutputState}
}

// The VPC configuration of a Flink-based application.
func (o ApplicationApplicationConfigurationOutput) VpcConfiguration() pulumix.GPtrOutput[ApplicationApplicationConfigurationVpcConfiguration, ApplicationApplicationConfigurationVpcConfigurationOutput] {
	value := pulumix.Apply[ApplicationApplicationConfiguration](o, func(v ApplicationApplicationConfiguration) *ApplicationApplicationConfigurationVpcConfiguration {
		return v.VpcConfiguration
	})
	return pulumix.GPtrOutput[ApplicationApplicationConfigurationVpcConfiguration, ApplicationApplicationConfigurationVpcConfigurationOutput]{OutputState: value.OutputState}
}

type ApplicationApplicationConfigurationApplicationCodeConfiguration struct {
	// The location and type of the application code.
	CodeContent *ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContent `pulumi:"codeContent"`
	// Specifies whether the code content is in text or zip format. Valid values: `PLAINTEXT`, `ZIPFILE`.
	CodeContentType string `pulumi:"codeContentType"`
}

type ApplicationApplicationConfigurationApplicationCodeConfigurationArgs struct {
	// The location and type of the application code.
	CodeContent pulumix.Input[*ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentArgs] `pulumi:"codeContent"`
	// Specifies whether the code content is in text or zip format. Valid values: `PLAINTEXT`, `ZIPFILE`.
	CodeContentType pulumix.Input[string] `pulumi:"codeContentType"`
}

func (ApplicationApplicationConfigurationApplicationCodeConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationApplicationCodeConfiguration)(nil)).Elem()
}

func (i ApplicationApplicationConfigurationApplicationCodeConfigurationArgs) ToApplicationApplicationConfigurationApplicationCodeConfigurationOutput() ApplicationApplicationConfigurationApplicationCodeConfigurationOutput {
	return i.ToApplicationApplicationConfigurationApplicationCodeConfigurationOutputWithContext(context.Background())
}

func (i ApplicationApplicationConfigurationApplicationCodeConfigurationArgs) ToApplicationApplicationConfigurationApplicationCodeConfigurationOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationApplicationCodeConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationApplicationConfigurationApplicationCodeConfigurationOutput)
}

func (i *ApplicationApplicationConfigurationApplicationCodeConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*ApplicationApplicationConfigurationApplicationCodeConfigurationArgs] {
	return pulumix.Val(i)
}

type ApplicationApplicationConfigurationApplicationCodeConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationApplicationConfigurationApplicationCodeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationApplicationCodeConfiguration)(nil)).Elem()
}

func (o ApplicationApplicationConfigurationApplicationCodeConfigurationOutput) ToApplicationApplicationConfigurationApplicationCodeConfigurationOutput() ApplicationApplicationConfigurationApplicationCodeConfigurationOutput {
	return o
}

func (o ApplicationApplicationConfigurationApplicationCodeConfigurationOutput) ToApplicationApplicationConfigurationApplicationCodeConfigurationOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationApplicationCodeConfigurationOutput {
	return o
}

func (o ApplicationApplicationConfigurationApplicationCodeConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[ApplicationApplicationConfigurationApplicationCodeConfiguration] {
	return pulumix.Output[ApplicationApplicationConfigurationApplicationCodeConfiguration]{
		OutputState: o.OutputState,
	}
}

// The location and type of the application code.
func (o ApplicationApplicationConfigurationApplicationCodeConfigurationOutput) CodeContent() pulumix.GPtrOutput[ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContent, ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentOutput] {
	value := pulumix.Apply[ApplicationApplicationConfigurationApplicationCodeConfiguration](o, func(v ApplicationApplicationConfigurationApplicationCodeConfiguration) *ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContent {
		return v.CodeContent
	})
	return pulumix.GPtrOutput[ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContent, ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentOutput]{OutputState: value.OutputState}
}

// Specifies whether the code content is in text or zip format. Valid values: `PLAINTEXT`, `ZIPFILE`.
func (o ApplicationApplicationConfigurationApplicationCodeConfigurationOutput) CodeContentType() pulumix.Output[string] {
	return pulumix.Apply[ApplicationApplicationConfigurationApplicationCodeConfiguration](o, func(v ApplicationApplicationConfigurationApplicationCodeConfiguration) string {
		return v.CodeContentType
	})
}

type ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContent struct {
	// Information about the Amazon S3 bucket containing the application code.
	S3ContentLocation *ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocation `pulumi:"s3ContentLocation"`
	// The text-format code for the application.
	//
	// The `s3ContentLocation` object supports the following:
	TextContent *string `pulumi:"textContent"`
}

type ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentArgs struct {
	// Information about the Amazon S3 bucket containing the application code.
	S3ContentLocation pulumix.Input[*ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationArgs] `pulumi:"s3ContentLocation"`
	// The text-format code for the application.
	//
	// The `s3ContentLocation` object supports the following:
	TextContent pulumix.Input[*string] `pulumi:"textContent"`
}

func (ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContent)(nil)).Elem()
}

func (i ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentArgs) ToApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentOutput() ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentOutput {
	return i.ToApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentOutputWithContext(context.Background())
}

func (i ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentArgs) ToApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentOutput)
}

func (i *ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentArgs) ToOutput(ctx context.Context) pulumix.Output[*ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentArgs] {
	return pulumix.Val(i)
}

type ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentOutput struct{ *pulumi.OutputState }

func (ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContent)(nil)).Elem()
}

func (o ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentOutput) ToApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentOutput() ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentOutput {
	return o
}

func (o ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentOutput) ToApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentOutput {
	return o
}

func (o ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentOutput) ToOutput(ctx context.Context) pulumix.Output[ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContent] {
	return pulumix.Output[ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContent]{
		OutputState: o.OutputState,
	}
}

// Information about the Amazon S3 bucket containing the application code.
func (o ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentOutput) S3ContentLocation() pulumix.GPtrOutput[ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocation, ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationOutput] {
	value := pulumix.Apply[ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContent](o, func(v ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContent) *ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocation {
		return v.S3ContentLocation
	})
	return pulumix.GPtrOutput[ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocation, ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationOutput]{OutputState: value.OutputState}
}

// The text-format code for the application.
//
// The `s3ContentLocation` object supports the following:
func (o ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentOutput) TextContent() pulumix.Output[*string] {
	return pulumix.Apply[ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContent](o, func(v ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContent) *string {
		return v.TextContent
	})
}

type ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocation struct {
	// The ARN for the S3 bucket containing the application code.
	BucketArn string `pulumi:"bucketArn"`
	// The file key for the object containing the application code.
	FileKey string `pulumi:"fileKey"`
	// The version of the object containing the application code.
	ObjectVersion *string `pulumi:"objectVersion"`
}

type ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationArgs struct {
	// The ARN for the S3 bucket containing the application code.
	BucketArn pulumix.Input[string] `pulumi:"bucketArn"`
	// The file key for the object containing the application code.
	FileKey pulumix.Input[string] `pulumi:"fileKey"`
	// The version of the object containing the application code.
	ObjectVersion pulumix.Input[*string] `pulumi:"objectVersion"`
}

func (ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocation)(nil)).Elem()
}

func (i ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationArgs) ToApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationOutput() ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationOutput {
	return i.ToApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationOutputWithContext(context.Background())
}

func (i ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationArgs) ToApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationOutput)
}

func (i *ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationArgs) ToOutput(ctx context.Context) pulumix.Output[*ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationArgs] {
	return pulumix.Val(i)
}

type ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationOutput struct{ *pulumi.OutputState }

func (ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocation)(nil)).Elem()
}

func (o ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationOutput) ToApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationOutput() ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationOutput {
	return o
}

func (o ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationOutput) ToApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationOutput {
	return o
}

func (o ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationOutput) ToOutput(ctx context.Context) pulumix.Output[ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocation] {
	return pulumix.Output[ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocation]{
		OutputState: o.OutputState,
	}
}

// The ARN for the S3 bucket containing the application code.
func (o ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationOutput) BucketArn() pulumix.Output[string] {
	return pulumix.Apply[ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocation](o, func(v ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocation) string {
		return v.BucketArn
	})
}

// The file key for the object containing the application code.
func (o ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationOutput) FileKey() pulumix.Output[string] {
	return pulumix.Apply[ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocation](o, func(v ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocation) string {
		return v.FileKey
	})
}

// The version of the object containing the application code.
func (o ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationOutput) ObjectVersion() pulumix.Output[*string] {
	return pulumix.Apply[ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocation](o, func(v ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocation) *string {
		return v.ObjectVersion
	})
}

type ApplicationApplicationConfigurationApplicationSnapshotConfiguration struct {
	// Describes whether snapshots are enabled for a Flink-based Kinesis Data Analytics application.
	SnapshotsEnabled bool `pulumi:"snapshotsEnabled"`
}

type ApplicationApplicationConfigurationApplicationSnapshotConfigurationArgs struct {
	// Describes whether snapshots are enabled for a Flink-based Kinesis Data Analytics application.
	SnapshotsEnabled pulumix.Input[bool] `pulumi:"snapshotsEnabled"`
}

func (ApplicationApplicationConfigurationApplicationSnapshotConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationApplicationSnapshotConfiguration)(nil)).Elem()
}

func (i ApplicationApplicationConfigurationApplicationSnapshotConfigurationArgs) ToApplicationApplicationConfigurationApplicationSnapshotConfigurationOutput() ApplicationApplicationConfigurationApplicationSnapshotConfigurationOutput {
	return i.ToApplicationApplicationConfigurationApplicationSnapshotConfigurationOutputWithContext(context.Background())
}

func (i ApplicationApplicationConfigurationApplicationSnapshotConfigurationArgs) ToApplicationApplicationConfigurationApplicationSnapshotConfigurationOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationApplicationSnapshotConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationApplicationConfigurationApplicationSnapshotConfigurationOutput)
}

func (i *ApplicationApplicationConfigurationApplicationSnapshotConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*ApplicationApplicationConfigurationApplicationSnapshotConfigurationArgs] {
	return pulumix.Val(i)
}

type ApplicationApplicationConfigurationApplicationSnapshotConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationApplicationConfigurationApplicationSnapshotConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationApplicationSnapshotConfiguration)(nil)).Elem()
}

func (o ApplicationApplicationConfigurationApplicationSnapshotConfigurationOutput) ToApplicationApplicationConfigurationApplicationSnapshotConfigurationOutput() ApplicationApplicationConfigurationApplicationSnapshotConfigurationOutput {
	return o
}

func (o ApplicationApplicationConfigurationApplicationSnapshotConfigurationOutput) ToApplicationApplicationConfigurationApplicationSnapshotConfigurationOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationApplicationSnapshotConfigurationOutput {
	return o
}

func (o ApplicationApplicationConfigurationApplicationSnapshotConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[ApplicationApplicationConfigurationApplicationSnapshotConfiguration] {
	return pulumix.Output[ApplicationApplicationConfigurationApplicationSnapshotConfiguration]{
		OutputState: o.OutputState,
	}
}

// Describes whether snapshots are enabled for a Flink-based Kinesis Data Analytics application.
func (o ApplicationApplicationConfigurationApplicationSnapshotConfigurationOutput) SnapshotsEnabled() pulumix.Output[bool] {
	return pulumix.Apply[ApplicationApplicationConfigurationApplicationSnapshotConfiguration](o, func(v ApplicationApplicationConfigurationApplicationSnapshotConfiguration) bool {
		return v.SnapshotsEnabled
	})
}

type ApplicationApplicationConfigurationEnvironmentProperties struct {
	// Describes the execution property groups.
	PropertyGroups []ApplicationApplicationConfigurationEnvironmentPropertiesPropertyGroup `pulumi:"propertyGroups"`
}

type ApplicationApplicationConfigurationEnvironmentPropertiesArgs struct {
	// Describes the execution property groups.
	PropertyGroups pulumix.Input[[]*ApplicationApplicationConfigurationEnvironmentPropertiesPropertyGroupArgs] `pulumi:"propertyGroups"`
}

func (ApplicationApplicationConfigurationEnvironmentPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationEnvironmentProperties)(nil)).Elem()
}

func (i ApplicationApplicationConfigurationEnvironmentPropertiesArgs) ToApplicationApplicationConfigurationEnvironmentPropertiesOutput() ApplicationApplicationConfigurationEnvironmentPropertiesOutput {
	return i.ToApplicationApplicationConfigurationEnvironmentPropertiesOutputWithContext(context.Background())
}

func (i ApplicationApplicationConfigurationEnvironmentPropertiesArgs) ToApplicationApplicationConfigurationEnvironmentPropertiesOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationEnvironmentPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationApplicationConfigurationEnvironmentPropertiesOutput)
}

func (i *ApplicationApplicationConfigurationEnvironmentPropertiesArgs) ToOutput(ctx context.Context) pulumix.Output[*ApplicationApplicationConfigurationEnvironmentPropertiesArgs] {
	return pulumix.Val(i)
}

type ApplicationApplicationConfigurationEnvironmentPropertiesOutput struct{ *pulumi.OutputState }

func (ApplicationApplicationConfigurationEnvironmentPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationEnvironmentProperties)(nil)).Elem()
}

func (o ApplicationApplicationConfigurationEnvironmentPropertiesOutput) ToApplicationApplicationConfigurationEnvironmentPropertiesOutput() ApplicationApplicationConfigurationEnvironmentPropertiesOutput {
	return o
}

func (o ApplicationApplicationConfigurationEnvironmentPropertiesOutput) ToApplicationApplicationConfigurationEnvironmentPropertiesOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationEnvironmentPropertiesOutput {
	return o
}

func (o ApplicationApplicationConfigurationEnvironmentPropertiesOutput) ToOutput(ctx context.Context) pulumix.Output[ApplicationApplicationConfigurationEnvironmentProperties] {
	return pulumix.Output[ApplicationApplicationConfigurationEnvironmentProperties]{
		OutputState: o.OutputState,
	}
}

// Describes the execution property groups.
func (o ApplicationApplicationConfigurationEnvironmentPropertiesOutput) PropertyGroups() pulumix.GArrayOutput[ApplicationApplicationConfigurationEnvironmentPropertiesPropertyGroup, ApplicationApplicationConfigurationEnvironmentPropertiesPropertyGroupOutput] {
	value := pulumix.Apply[ApplicationApplicationConfigurationEnvironmentProperties](o, func(v ApplicationApplicationConfigurationEnvironmentProperties) []ApplicationApplicationConfigurationEnvironmentPropertiesPropertyGroup {
		return v.PropertyGroups
	})
	return pulumix.GArrayOutput[ApplicationApplicationConfigurationEnvironmentPropertiesPropertyGroup, ApplicationApplicationConfigurationEnvironmentPropertiesPropertyGroupOutput]{OutputState: value.OutputState}
}

type ApplicationApplicationConfigurationEnvironmentPropertiesPropertyGroup struct {
	// The key of the application execution property key-value map.
	PropertyGroupId string `pulumi:"propertyGroupId"`
	// Application execution property key-value map.
	PropertyMap map[string]string `pulumi:"propertyMap"`
}

type ApplicationApplicationConfigurationEnvironmentPropertiesPropertyGroupArgs struct {
	// The key of the application execution property key-value map.
	PropertyGroupId pulumix.Input[string] `pulumi:"propertyGroupId"`
	// Application execution property key-value map.
	PropertyMap pulumix.Input[map[string]string] `pulumi:"propertyMap"`
}

func (ApplicationApplicationConfigurationEnvironmentPropertiesPropertyGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationEnvironmentPropertiesPropertyGroup)(nil)).Elem()
}

func (i ApplicationApplicationConfigurationEnvironmentPropertiesPropertyGroupArgs) ToApplicationApplicationConfigurationEnvironmentPropertiesPropertyGroupOutput() ApplicationApplicationConfigurationEnvironmentPropertiesPropertyGroupOutput {
	return i.ToApplicationApplicationConfigurationEnvironmentPropertiesPropertyGroupOutputWithContext(context.Background())
}

func (i ApplicationApplicationConfigurationEnvironmentPropertiesPropertyGroupArgs) ToApplicationApplicationConfigurationEnvironmentPropertiesPropertyGroupOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationEnvironmentPropertiesPropertyGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationApplicationConfigurationEnvironmentPropertiesPropertyGroupOutput)
}

func (i *ApplicationApplicationConfigurationEnvironmentPropertiesPropertyGroupArgs) ToOutput(ctx context.Context) pulumix.Output[*ApplicationApplicationConfigurationEnvironmentPropertiesPropertyGroupArgs] {
	return pulumix.Val(i)
}

type ApplicationApplicationConfigurationEnvironmentPropertiesPropertyGroupOutput struct{ *pulumi.OutputState }

func (ApplicationApplicationConfigurationEnvironmentPropertiesPropertyGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationEnvironmentPropertiesPropertyGroup)(nil)).Elem()
}

func (o ApplicationApplicationConfigurationEnvironmentPropertiesPropertyGroupOutput) ToApplicationApplicationConfigurationEnvironmentPropertiesPropertyGroupOutput() ApplicationApplicationConfigurationEnvironmentPropertiesPropertyGroupOutput {
	return o
}

func (o ApplicationApplicationConfigurationEnvironmentPropertiesPropertyGroupOutput) ToApplicationApplicationConfigurationEnvironmentPropertiesPropertyGroupOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationEnvironmentPropertiesPropertyGroupOutput {
	return o
}

func (o ApplicationApplicationConfigurationEnvironmentPropertiesPropertyGroupOutput) ToOutput(ctx context.Context) pulumix.Output[ApplicationApplicationConfigurationEnvironmentPropertiesPropertyGroup] {
	return pulumix.Output[ApplicationApplicationConfigurationEnvironmentPropertiesPropertyGroup]{
		OutputState: o.OutputState,
	}
}

// The key of the application execution property key-value map.
func (o ApplicationApplicationConfigurationEnvironmentPropertiesPropertyGroupOutput) PropertyGroupId() pulumix.Output[string] {
	return pulumix.Apply[ApplicationApplicationConfigurationEnvironmentPropertiesPropertyGroup](o, func(v ApplicationApplicationConfigurationEnvironmentPropertiesPropertyGroup) string {
		return v.PropertyGroupId
	})
}

// Application execution property key-value map.
func (o ApplicationApplicationConfigurationEnvironmentPropertiesPropertyGroupOutput) PropertyMap() pulumix.MapOutput[string] {
	value := pulumix.Apply[ApplicationApplicationConfigurationEnvironmentPropertiesPropertyGroup](o, func(v ApplicationApplicationConfigurationEnvironmentPropertiesPropertyGroup) map[string]string {
		return v.PropertyMap
	})
	return pulumix.MapOutput[string]{OutputState: value.OutputState}
}

type ApplicationApplicationConfigurationFlinkApplicationConfiguration struct {
	// Describes an application's checkpointing configuration.
	CheckpointConfiguration *ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfiguration `pulumi:"checkpointConfiguration"`
	// Describes configuration parameters for CloudWatch logging for an application.
	MonitoringConfiguration *ApplicationApplicationConfigurationFlinkApplicationConfigurationMonitoringConfiguration `pulumi:"monitoringConfiguration"`
	// Describes parameters for how an application executes multiple tasks simultaneously.
	ParallelismConfiguration *ApplicationApplicationConfigurationFlinkApplicationConfigurationParallelismConfiguration `pulumi:"parallelismConfiguration"`
}

type ApplicationApplicationConfigurationFlinkApplicationConfigurationArgs struct {
	// Describes an application's checkpointing configuration.
	CheckpointConfiguration pulumix.Input[*ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationArgs] `pulumi:"checkpointConfiguration"`
	// Describes configuration parameters for CloudWatch logging for an application.
	MonitoringConfiguration pulumix.Input[*ApplicationApplicationConfigurationFlinkApplicationConfigurationMonitoringConfigurationArgs] `pulumi:"monitoringConfiguration"`
	// Describes parameters for how an application executes multiple tasks simultaneously.
	ParallelismConfiguration pulumix.Input[*ApplicationApplicationConfigurationFlinkApplicationConfigurationParallelismConfigurationArgs] `pulumi:"parallelismConfiguration"`
}

func (ApplicationApplicationConfigurationFlinkApplicationConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationFlinkApplicationConfiguration)(nil)).Elem()
}

func (i ApplicationApplicationConfigurationFlinkApplicationConfigurationArgs) ToApplicationApplicationConfigurationFlinkApplicationConfigurationOutput() ApplicationApplicationConfigurationFlinkApplicationConfigurationOutput {
	return i.ToApplicationApplicationConfigurationFlinkApplicationConfigurationOutputWithContext(context.Background())
}

func (i ApplicationApplicationConfigurationFlinkApplicationConfigurationArgs) ToApplicationApplicationConfigurationFlinkApplicationConfigurationOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationFlinkApplicationConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationApplicationConfigurationFlinkApplicationConfigurationOutput)
}

func (i *ApplicationApplicationConfigurationFlinkApplicationConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*ApplicationApplicationConfigurationFlinkApplicationConfigurationArgs] {
	return pulumix.Val(i)
}

type ApplicationApplicationConfigurationFlinkApplicationConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationApplicationConfigurationFlinkApplicationConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationFlinkApplicationConfiguration)(nil)).Elem()
}

func (o ApplicationApplicationConfigurationFlinkApplicationConfigurationOutput) ToApplicationApplicationConfigurationFlinkApplicationConfigurationOutput() ApplicationApplicationConfigurationFlinkApplicationConfigurationOutput {
	return o
}

func (o ApplicationApplicationConfigurationFlinkApplicationConfigurationOutput) ToApplicationApplicationConfigurationFlinkApplicationConfigurationOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationFlinkApplicationConfigurationOutput {
	return o
}

func (o ApplicationApplicationConfigurationFlinkApplicationConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[ApplicationApplicationConfigurationFlinkApplicationConfiguration] {
	return pulumix.Output[ApplicationApplicationConfigurationFlinkApplicationConfiguration]{
		OutputState: o.OutputState,
	}
}

// Describes an application's checkpointing configuration.
func (o ApplicationApplicationConfigurationFlinkApplicationConfigurationOutput) CheckpointConfiguration() pulumix.GPtrOutput[ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfiguration, ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationOutput] {
	value := pulumix.Apply[ApplicationApplicationConfigurationFlinkApplicationConfiguration](o, func(v ApplicationApplicationConfigurationFlinkApplicationConfiguration) *ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfiguration {
		return v.CheckpointConfiguration
	})
	return pulumix.GPtrOutput[ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfiguration, ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationOutput]{OutputState: value.OutputState}
}

// Describes configuration parameters for CloudWatch logging for an application.
func (o ApplicationApplicationConfigurationFlinkApplicationConfigurationOutput) MonitoringConfiguration() pulumix.GPtrOutput[ApplicationApplicationConfigurationFlinkApplicationConfigurationMonitoringConfiguration, ApplicationApplicationConfigurationFlinkApplicationConfigurationMonitoringConfigurationOutput] {
	value := pulumix.Apply[ApplicationApplicationConfigurationFlinkApplicationConfiguration](o, func(v ApplicationApplicationConfigurationFlinkApplicationConfiguration) *ApplicationApplicationConfigurationFlinkApplicationConfigurationMonitoringConfiguration {
		return v.MonitoringConfiguration
	})
	return pulumix.GPtrOutput[ApplicationApplicationConfigurationFlinkApplicationConfigurationMonitoringConfiguration, ApplicationApplicationConfigurationFlinkApplicationConfigurationMonitoringConfigurationOutput]{OutputState: value.OutputState}
}

// Describes parameters for how an application executes multiple tasks simultaneously.
func (o ApplicationApplicationConfigurationFlinkApplicationConfigurationOutput) ParallelismConfiguration() pulumix.GPtrOutput[ApplicationApplicationConfigurationFlinkApplicationConfigurationParallelismConfiguration, ApplicationApplicationConfigurationFlinkApplicationConfigurationParallelismConfigurationOutput] {
	value := pulumix.Apply[ApplicationApplicationConfigurationFlinkApplicationConfiguration](o, func(v ApplicationApplicationConfigurationFlinkApplicationConfiguration) *ApplicationApplicationConfigurationFlinkApplicationConfigurationParallelismConfiguration {
		return v.ParallelismConfiguration
	})
	return pulumix.GPtrOutput[ApplicationApplicationConfigurationFlinkApplicationConfigurationParallelismConfiguration, ApplicationApplicationConfigurationFlinkApplicationConfigurationParallelismConfigurationOutput]{OutputState: value.OutputState}
}

type ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfiguration struct {
	// Describes the interval in milliseconds between checkpoint operations.
	CheckpointInterval *int `pulumi:"checkpointInterval"`
	// Describes whether checkpointing is enabled for a Flink-based Kinesis Data Analytics application.
	CheckpointingEnabled *bool `pulumi:"checkpointingEnabled"`
	// Describes whether the application uses Kinesis Data Analytics' default checkpointing behavior. Valid values: `CUSTOM`, `DEFAULT`. Set this attribute to `CUSTOM` in order for any specified `checkpointingEnabled`, `checkpointInterval`, or `minPauseBetweenCheckpoints` attribute values to be effective. If this attribute is set to `DEFAULT`, the application will always use the following values:
	// * `checkpointingEnabled = true`
	// * `checkpointInterval = 60000`
	// * `minPauseBetweenCheckpoints = 5000`
	ConfigurationType string `pulumi:"configurationType"`
	// Describes the minimum time in milliseconds after a checkpoint operation completes that a new checkpoint operation can start.
	MinPauseBetweenCheckpoints *int `pulumi:"minPauseBetweenCheckpoints"`
}

type ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationArgs struct {
	// Describes the interval in milliseconds between checkpoint operations.
	CheckpointInterval pulumix.Input[*int] `pulumi:"checkpointInterval"`
	// Describes whether checkpointing is enabled for a Flink-based Kinesis Data Analytics application.
	CheckpointingEnabled pulumix.Input[*bool] `pulumi:"checkpointingEnabled"`
	// Describes whether the application uses Kinesis Data Analytics' default checkpointing behavior. Valid values: `CUSTOM`, `DEFAULT`. Set this attribute to `CUSTOM` in order for any specified `checkpointingEnabled`, `checkpointInterval`, or `minPauseBetweenCheckpoints` attribute values to be effective. If this attribute is set to `DEFAULT`, the application will always use the following values:
	// * `checkpointingEnabled = true`
	// * `checkpointInterval = 60000`
	// * `minPauseBetweenCheckpoints = 5000`
	ConfigurationType pulumix.Input[string] `pulumi:"configurationType"`
	// Describes the minimum time in milliseconds after a checkpoint operation completes that a new checkpoint operation can start.
	MinPauseBetweenCheckpoints pulumix.Input[*int] `pulumi:"minPauseBetweenCheckpoints"`
}

func (ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfiguration)(nil)).Elem()
}

func (i ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationArgs) ToApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationOutput() ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationOutput {
	return i.ToApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationOutputWithContext(context.Background())
}

func (i ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationArgs) ToApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationOutput)
}

func (i *ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationArgs] {
	return pulumix.Val(i)
}

type ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfiguration)(nil)).Elem()
}

func (o ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationOutput) ToApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationOutput() ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationOutput {
	return o
}

func (o ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationOutput) ToApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationOutput {
	return o
}

func (o ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfiguration] {
	return pulumix.Output[ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfiguration]{
		OutputState: o.OutputState,
	}
}

// Describes the interval in milliseconds between checkpoint operations.
func (o ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationOutput) CheckpointInterval() pulumix.Output[*int] {
	return pulumix.Apply[ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfiguration](o, func(v ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfiguration) *int {
		return v.CheckpointInterval
	})
}

// Describes whether checkpointing is enabled for a Flink-based Kinesis Data Analytics application.
func (o ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationOutput) CheckpointingEnabled() pulumix.Output[*bool] {
	return pulumix.Apply[ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfiguration](o, func(v ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfiguration) *bool {
		return v.CheckpointingEnabled
	})
}

// Describes whether the application uses Kinesis Data Analytics' default checkpointing behavior. Valid values: `CUSTOM`, `DEFAULT`. Set this attribute to `CUSTOM` in order for any specified `checkpointingEnabled`, `checkpointInterval`, or `minPauseBetweenCheckpoints` attribute values to be effective. If this attribute is set to `DEFAULT`, the application will always use the following values:
// * `checkpointingEnabled = true`
// * `checkpointInterval = 60000`
// * `minPauseBetweenCheckpoints = 5000`
func (o ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationOutput) ConfigurationType() pulumix.Output[string] {
	return pulumix.Apply[ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfiguration](o, func(v ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfiguration) string {
		return v.ConfigurationType
	})
}

// Describes the minimum time in milliseconds after a checkpoint operation completes that a new checkpoint operation can start.
func (o ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationOutput) MinPauseBetweenCheckpoints() pulumix.Output[*int] {
	return pulumix.Apply[ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfiguration](o, func(v ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfiguration) *int {
		return v.MinPauseBetweenCheckpoints
	})
}

type ApplicationApplicationConfigurationFlinkApplicationConfigurationMonitoringConfiguration struct {
	// Describes whether to use the default CloudWatch logging configuration for an application. Valid values: `CUSTOM`, `DEFAULT`. Set this attribute to `CUSTOM` in order for any specified `logLevel` or `metricsLevel` attribute values to be effective.
	ConfigurationType string `pulumi:"configurationType"`
	// Describes the verbosity of the CloudWatch Logs for an application. Valid values: `DEBUG`, `ERROR`, `INFO`, `WARN`.
	LogLevel *string `pulumi:"logLevel"`
	// Describes the granularity of the CloudWatch Logs for an application. Valid values: `APPLICATION`, `OPERATOR`, `PARALLELISM`, `TASK`.
	MetricsLevel *string `pulumi:"metricsLevel"`
}

type ApplicationApplicationConfigurationFlinkApplicationConfigurationMonitoringConfigurationArgs struct {
	// Describes whether to use the default CloudWatch logging configuration for an application. Valid values: `CUSTOM`, `DEFAULT`. Set this attribute to `CUSTOM` in order for any specified `logLevel` or `metricsLevel` attribute values to be effective.
	ConfigurationType pulumix.Input[string] `pulumi:"configurationType"`
	// Describes the verbosity of the CloudWatch Logs for an application. Valid values: `DEBUG`, `ERROR`, `INFO`, `WARN`.
	LogLevel pulumix.Input[*string] `pulumi:"logLevel"`
	// Describes the granularity of the CloudWatch Logs for an application. Valid values: `APPLICATION`, `OPERATOR`, `PARALLELISM`, `TASK`.
	MetricsLevel pulumix.Input[*string] `pulumi:"metricsLevel"`
}

func (ApplicationApplicationConfigurationFlinkApplicationConfigurationMonitoringConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationFlinkApplicationConfigurationMonitoringConfiguration)(nil)).Elem()
}

func (i ApplicationApplicationConfigurationFlinkApplicationConfigurationMonitoringConfigurationArgs) ToApplicationApplicationConfigurationFlinkApplicationConfigurationMonitoringConfigurationOutput() ApplicationApplicationConfigurationFlinkApplicationConfigurationMonitoringConfigurationOutput {
	return i.ToApplicationApplicationConfigurationFlinkApplicationConfigurationMonitoringConfigurationOutputWithContext(context.Background())
}

func (i ApplicationApplicationConfigurationFlinkApplicationConfigurationMonitoringConfigurationArgs) ToApplicationApplicationConfigurationFlinkApplicationConfigurationMonitoringConfigurationOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationFlinkApplicationConfigurationMonitoringConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationApplicationConfigurationFlinkApplicationConfigurationMonitoringConfigurationOutput)
}

func (i *ApplicationApplicationConfigurationFlinkApplicationConfigurationMonitoringConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*ApplicationApplicationConfigurationFlinkApplicationConfigurationMonitoringConfigurationArgs] {
	return pulumix.Val(i)
}

type ApplicationApplicationConfigurationFlinkApplicationConfigurationMonitoringConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationApplicationConfigurationFlinkApplicationConfigurationMonitoringConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationFlinkApplicationConfigurationMonitoringConfiguration)(nil)).Elem()
}

func (o ApplicationApplicationConfigurationFlinkApplicationConfigurationMonitoringConfigurationOutput) ToApplicationApplicationConfigurationFlinkApplicationConfigurationMonitoringConfigurationOutput() ApplicationApplicationConfigurationFlinkApplicationConfigurationMonitoringConfigurationOutput {
	return o
}

func (o ApplicationApplicationConfigurationFlinkApplicationConfigurationMonitoringConfigurationOutput) ToApplicationApplicationConfigurationFlinkApplicationConfigurationMonitoringConfigurationOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationFlinkApplicationConfigurationMonitoringConfigurationOutput {
	return o
}

func (o ApplicationApplicationConfigurationFlinkApplicationConfigurationMonitoringConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[ApplicationApplicationConfigurationFlinkApplicationConfigurationMonitoringConfiguration] {
	return pulumix.Output[ApplicationApplicationConfigurationFlinkApplicationConfigurationMonitoringConfiguration]{
		OutputState: o.OutputState,
	}
}

// Describes whether to use the default CloudWatch logging configuration for an application. Valid values: `CUSTOM`, `DEFAULT`. Set this attribute to `CUSTOM` in order for any specified `logLevel` or `metricsLevel` attribute values to be effective.
func (o ApplicationApplicationConfigurationFlinkApplicationConfigurationMonitoringConfigurationOutput) ConfigurationType() pulumix.Output[string] {
	return pulumix.Apply[ApplicationApplicationConfigurationFlinkApplicationConfigurationMonitoringConfiguration](o, func(v ApplicationApplicationConfigurationFlinkApplicationConfigurationMonitoringConfiguration) string {
		return v.ConfigurationType
	})
}

// Describes the verbosity of the CloudWatch Logs for an application. Valid values: `DEBUG`, `ERROR`, `INFO`, `WARN`.
func (o ApplicationApplicationConfigurationFlinkApplicationConfigurationMonitoringConfigurationOutput) LogLevel() pulumix.Output[*string] {
	return pulumix.Apply[ApplicationApplicationConfigurationFlinkApplicationConfigurationMonitoringConfiguration](o, func(v ApplicationApplicationConfigurationFlinkApplicationConfigurationMonitoringConfiguration) *string {
		return v.LogLevel
	})
}

// Describes the granularity of the CloudWatch Logs for an application. Valid values: `APPLICATION`, `OPERATOR`, `PARALLELISM`, `TASK`.
func (o ApplicationApplicationConfigurationFlinkApplicationConfigurationMonitoringConfigurationOutput) MetricsLevel() pulumix.Output[*string] {
	return pulumix.Apply[ApplicationApplicationConfigurationFlinkApplicationConfigurationMonitoringConfiguration](o, func(v ApplicationApplicationConfigurationFlinkApplicationConfigurationMonitoringConfiguration) *string {
		return v.MetricsLevel
	})
}

type ApplicationApplicationConfigurationFlinkApplicationConfigurationParallelismConfiguration struct {
	// Describes whether the Kinesis Data Analytics service can increase the parallelism of the application in response to increased throughput.
	AutoScalingEnabled *bool `pulumi:"autoScalingEnabled"`
	// Describes whether the application uses the default parallelism for the Kinesis Data Analytics service. Valid values: `CUSTOM`, `DEFAULT`. Set this attribute to `CUSTOM` in order for any specified `autoScalingEnabled`, `parallelism`, or `parallelismPerKpu` attribute values to be effective.
	ConfigurationType string `pulumi:"configurationType"`
	// Describes the initial number of parallel tasks that a Flink-based Kinesis Data Analytics application can perform.
	Parallelism *int `pulumi:"parallelism"`
	// Describes the number of parallel tasks that a Flink-based Kinesis Data Analytics application can perform per Kinesis Processing Unit (KPU) used by the application.
	ParallelismPerKpu *int `pulumi:"parallelismPerKpu"`
}

type ApplicationApplicationConfigurationFlinkApplicationConfigurationParallelismConfigurationArgs struct {
	// Describes whether the Kinesis Data Analytics service can increase the parallelism of the application in response to increased throughput.
	AutoScalingEnabled pulumix.Input[*bool] `pulumi:"autoScalingEnabled"`
	// Describes whether the application uses the default parallelism for the Kinesis Data Analytics service. Valid values: `CUSTOM`, `DEFAULT`. Set this attribute to `CUSTOM` in order for any specified `autoScalingEnabled`, `parallelism`, or `parallelismPerKpu` attribute values to be effective.
	ConfigurationType pulumix.Input[string] `pulumi:"configurationType"`
	// Describes the initial number of parallel tasks that a Flink-based Kinesis Data Analytics application can perform.
	Parallelism pulumix.Input[*int] `pulumi:"parallelism"`
	// Describes the number of parallel tasks that a Flink-based Kinesis Data Analytics application can perform per Kinesis Processing Unit (KPU) used by the application.
	ParallelismPerKpu pulumix.Input[*int] `pulumi:"parallelismPerKpu"`
}

func (ApplicationApplicationConfigurationFlinkApplicationConfigurationParallelismConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationFlinkApplicationConfigurationParallelismConfiguration)(nil)).Elem()
}

func (i ApplicationApplicationConfigurationFlinkApplicationConfigurationParallelismConfigurationArgs) ToApplicationApplicationConfigurationFlinkApplicationConfigurationParallelismConfigurationOutput() ApplicationApplicationConfigurationFlinkApplicationConfigurationParallelismConfigurationOutput {
	return i.ToApplicationApplicationConfigurationFlinkApplicationConfigurationParallelismConfigurationOutputWithContext(context.Background())
}

func (i ApplicationApplicationConfigurationFlinkApplicationConfigurationParallelismConfigurationArgs) ToApplicationApplicationConfigurationFlinkApplicationConfigurationParallelismConfigurationOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationFlinkApplicationConfigurationParallelismConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationApplicationConfigurationFlinkApplicationConfigurationParallelismConfigurationOutput)
}

func (i *ApplicationApplicationConfigurationFlinkApplicationConfigurationParallelismConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*ApplicationApplicationConfigurationFlinkApplicationConfigurationParallelismConfigurationArgs] {
	return pulumix.Val(i)
}

type ApplicationApplicationConfigurationFlinkApplicationConfigurationParallelismConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationApplicationConfigurationFlinkApplicationConfigurationParallelismConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationFlinkApplicationConfigurationParallelismConfiguration)(nil)).Elem()
}

func (o ApplicationApplicationConfigurationFlinkApplicationConfigurationParallelismConfigurationOutput) ToApplicationApplicationConfigurationFlinkApplicationConfigurationParallelismConfigurationOutput() ApplicationApplicationConfigurationFlinkApplicationConfigurationParallelismConfigurationOutput {
	return o
}

func (o ApplicationApplicationConfigurationFlinkApplicationConfigurationParallelismConfigurationOutput) ToApplicationApplicationConfigurationFlinkApplicationConfigurationParallelismConfigurationOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationFlinkApplicationConfigurationParallelismConfigurationOutput {
	return o
}

func (o ApplicationApplicationConfigurationFlinkApplicationConfigurationParallelismConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[ApplicationApplicationConfigurationFlinkApplicationConfigurationParallelismConfiguration] {
	return pulumix.Output[ApplicationApplicationConfigurationFlinkApplicationConfigurationParallelismConfiguration]{
		OutputState: o.OutputState,
	}
}

// Describes whether the Kinesis Data Analytics service can increase the parallelism of the application in response to increased throughput.
func (o ApplicationApplicationConfigurationFlinkApplicationConfigurationParallelismConfigurationOutput) AutoScalingEnabled() pulumix.Output[*bool] {
	return pulumix.Apply[ApplicationApplicationConfigurationFlinkApplicationConfigurationParallelismConfiguration](o, func(v ApplicationApplicationConfigurationFlinkApplicationConfigurationParallelismConfiguration) *bool {
		return v.AutoScalingEnabled
	})
}

// Describes whether the application uses the default parallelism for the Kinesis Data Analytics service. Valid values: `CUSTOM`, `DEFAULT`. Set this attribute to `CUSTOM` in order for any specified `autoScalingEnabled`, `parallelism`, or `parallelismPerKpu` attribute values to be effective.
func (o ApplicationApplicationConfigurationFlinkApplicationConfigurationParallelismConfigurationOutput) ConfigurationType() pulumix.Output[string] {
	return pulumix.Apply[ApplicationApplicationConfigurationFlinkApplicationConfigurationParallelismConfiguration](o, func(v ApplicationApplicationConfigurationFlinkApplicationConfigurationParallelismConfiguration) string {
		return v.ConfigurationType
	})
}

// Describes the initial number of parallel tasks that a Flink-based Kinesis Data Analytics application can perform.
func (o ApplicationApplicationConfigurationFlinkApplicationConfigurationParallelismConfigurationOutput) Parallelism() pulumix.Output[*int] {
	return pulumix.Apply[ApplicationApplicationConfigurationFlinkApplicationConfigurationParallelismConfiguration](o, func(v ApplicationApplicationConfigurationFlinkApplicationConfigurationParallelismConfiguration) *int {
		return v.Parallelism
	})
}

// Describes the number of parallel tasks that a Flink-based Kinesis Data Analytics application can perform per Kinesis Processing Unit (KPU) used by the application.
func (o ApplicationApplicationConfigurationFlinkApplicationConfigurationParallelismConfigurationOutput) ParallelismPerKpu() pulumix.Output[*int] {
	return pulumix.Apply[ApplicationApplicationConfigurationFlinkApplicationConfigurationParallelismConfiguration](o, func(v ApplicationApplicationConfigurationFlinkApplicationConfigurationParallelismConfiguration) *int {
		return v.ParallelismPerKpu
	})
}

type ApplicationApplicationConfigurationRunConfiguration struct {
	// The restore behavior of a restarting application.
	ApplicationRestoreConfiguration *ApplicationApplicationConfigurationRunConfigurationApplicationRestoreConfiguration `pulumi:"applicationRestoreConfiguration"`
	// The starting parameters for a Flink-based Kinesis Data Analytics application.
	FlinkRunConfiguration *ApplicationApplicationConfigurationRunConfigurationFlinkRunConfiguration `pulumi:"flinkRunConfiguration"`
}

type ApplicationApplicationConfigurationRunConfigurationArgs struct {
	// The restore behavior of a restarting application.
	ApplicationRestoreConfiguration pulumix.Input[*ApplicationApplicationConfigurationRunConfigurationApplicationRestoreConfigurationArgs] `pulumi:"applicationRestoreConfiguration"`
	// The starting parameters for a Flink-based Kinesis Data Analytics application.
	FlinkRunConfiguration pulumix.Input[*ApplicationApplicationConfigurationRunConfigurationFlinkRunConfigurationArgs] `pulumi:"flinkRunConfiguration"`
}

func (ApplicationApplicationConfigurationRunConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationRunConfiguration)(nil)).Elem()
}

func (i ApplicationApplicationConfigurationRunConfigurationArgs) ToApplicationApplicationConfigurationRunConfigurationOutput() ApplicationApplicationConfigurationRunConfigurationOutput {
	return i.ToApplicationApplicationConfigurationRunConfigurationOutputWithContext(context.Background())
}

func (i ApplicationApplicationConfigurationRunConfigurationArgs) ToApplicationApplicationConfigurationRunConfigurationOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationRunConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationApplicationConfigurationRunConfigurationOutput)
}

func (i *ApplicationApplicationConfigurationRunConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*ApplicationApplicationConfigurationRunConfigurationArgs] {
	return pulumix.Val(i)
}

type ApplicationApplicationConfigurationRunConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationApplicationConfigurationRunConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationRunConfiguration)(nil)).Elem()
}

func (o ApplicationApplicationConfigurationRunConfigurationOutput) ToApplicationApplicationConfigurationRunConfigurationOutput() ApplicationApplicationConfigurationRunConfigurationOutput {
	return o
}

func (o ApplicationApplicationConfigurationRunConfigurationOutput) ToApplicationApplicationConfigurationRunConfigurationOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationRunConfigurationOutput {
	return o
}

func (o ApplicationApplicationConfigurationRunConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[ApplicationApplicationConfigurationRunConfiguration] {
	return pulumix.Output[ApplicationApplicationConfigurationRunConfiguration]{
		OutputState: o.OutputState,
	}
}

// The restore behavior of a restarting application.
func (o ApplicationApplicationConfigurationRunConfigurationOutput) ApplicationRestoreConfiguration() pulumix.GPtrOutput[ApplicationApplicationConfigurationRunConfigurationApplicationRestoreConfiguration, ApplicationApplicationConfigurationRunConfigurationApplicationRestoreConfigurationOutput] {
	value := pulumix.Apply[ApplicationApplicationConfigurationRunConfiguration](o, func(v ApplicationApplicationConfigurationRunConfiguration) *ApplicationApplicationConfigurationRunConfigurationApplicationRestoreConfiguration {
		return v.ApplicationRestoreConfiguration
	})
	return pulumix.GPtrOutput[ApplicationApplicationConfigurationRunConfigurationApplicationRestoreConfiguration, ApplicationApplicationConfigurationRunConfigurationApplicationRestoreConfigurationOutput]{OutputState: value.OutputState}
}

// The starting parameters for a Flink-based Kinesis Data Analytics application.
func (o ApplicationApplicationConfigurationRunConfigurationOutput) FlinkRunConfiguration() pulumix.GPtrOutput[ApplicationApplicationConfigurationRunConfigurationFlinkRunConfiguration, ApplicationApplicationConfigurationRunConfigurationFlinkRunConfigurationOutput] {
	value := pulumix.Apply[ApplicationApplicationConfigurationRunConfiguration](o, func(v ApplicationApplicationConfigurationRunConfiguration) *ApplicationApplicationConfigurationRunConfigurationFlinkRunConfiguration {
		return v.FlinkRunConfiguration
	})
	return pulumix.GPtrOutput[ApplicationApplicationConfigurationRunConfigurationFlinkRunConfiguration, ApplicationApplicationConfigurationRunConfigurationFlinkRunConfigurationOutput]{OutputState: value.OutputState}
}

type ApplicationApplicationConfigurationRunConfigurationApplicationRestoreConfiguration struct {
	// Specifies how the application should be restored. Valid values: `RESTORE_FROM_CUSTOM_SNAPSHOT`, `RESTORE_FROM_LATEST_SNAPSHOT`, `SKIP_RESTORE_FROM_SNAPSHOT`.
	ApplicationRestoreType *string `pulumi:"applicationRestoreType"`
	// The identifier of an existing snapshot of application state to use to restart an application. The application uses this value if `RESTORE_FROM_CUSTOM_SNAPSHOT` is specified for `applicationRestoreType`.
	SnapshotName *string `pulumi:"snapshotName"`
}

type ApplicationApplicationConfigurationRunConfigurationApplicationRestoreConfigurationArgs struct {
	// Specifies how the application should be restored. Valid values: `RESTORE_FROM_CUSTOM_SNAPSHOT`, `RESTORE_FROM_LATEST_SNAPSHOT`, `SKIP_RESTORE_FROM_SNAPSHOT`.
	ApplicationRestoreType pulumix.Input[*string] `pulumi:"applicationRestoreType"`
	// The identifier of an existing snapshot of application state to use to restart an application. The application uses this value if `RESTORE_FROM_CUSTOM_SNAPSHOT` is specified for `applicationRestoreType`.
	SnapshotName pulumix.Input[*string] `pulumi:"snapshotName"`
}

func (ApplicationApplicationConfigurationRunConfigurationApplicationRestoreConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationRunConfigurationApplicationRestoreConfiguration)(nil)).Elem()
}

func (i ApplicationApplicationConfigurationRunConfigurationApplicationRestoreConfigurationArgs) ToApplicationApplicationConfigurationRunConfigurationApplicationRestoreConfigurationOutput() ApplicationApplicationConfigurationRunConfigurationApplicationRestoreConfigurationOutput {
	return i.ToApplicationApplicationConfigurationRunConfigurationApplicationRestoreConfigurationOutputWithContext(context.Background())
}

func (i ApplicationApplicationConfigurationRunConfigurationApplicationRestoreConfigurationArgs) ToApplicationApplicationConfigurationRunConfigurationApplicationRestoreConfigurationOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationRunConfigurationApplicationRestoreConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationApplicationConfigurationRunConfigurationApplicationRestoreConfigurationOutput)
}

func (i *ApplicationApplicationConfigurationRunConfigurationApplicationRestoreConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*ApplicationApplicationConfigurationRunConfigurationApplicationRestoreConfigurationArgs] {
	return pulumix.Val(i)
}

type ApplicationApplicationConfigurationRunConfigurationApplicationRestoreConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationApplicationConfigurationRunConfigurationApplicationRestoreConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationRunConfigurationApplicationRestoreConfiguration)(nil)).Elem()
}

func (o ApplicationApplicationConfigurationRunConfigurationApplicationRestoreConfigurationOutput) ToApplicationApplicationConfigurationRunConfigurationApplicationRestoreConfigurationOutput() ApplicationApplicationConfigurationRunConfigurationApplicationRestoreConfigurationOutput {
	return o
}

func (o ApplicationApplicationConfigurationRunConfigurationApplicationRestoreConfigurationOutput) ToApplicationApplicationConfigurationRunConfigurationApplicationRestoreConfigurationOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationRunConfigurationApplicationRestoreConfigurationOutput {
	return o
}

func (o ApplicationApplicationConfigurationRunConfigurationApplicationRestoreConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[ApplicationApplicationConfigurationRunConfigurationApplicationRestoreConfiguration] {
	return pulumix.Output[ApplicationApplicationConfigurationRunConfigurationApplicationRestoreConfiguration]{
		OutputState: o.OutputState,
	}
}

// Specifies how the application should be restored. Valid values: `RESTORE_FROM_CUSTOM_SNAPSHOT`, `RESTORE_FROM_LATEST_SNAPSHOT`, `SKIP_RESTORE_FROM_SNAPSHOT`.
func (o ApplicationApplicationConfigurationRunConfigurationApplicationRestoreConfigurationOutput) ApplicationRestoreType() pulumix.Output[*string] {
	return pulumix.Apply[ApplicationApplicationConfigurationRunConfigurationApplicationRestoreConfiguration](o, func(v ApplicationApplicationConfigurationRunConfigurationApplicationRestoreConfiguration) *string {
		return v.ApplicationRestoreType
	})
}

// The identifier of an existing snapshot of application state to use to restart an application. The application uses this value if `RESTORE_FROM_CUSTOM_SNAPSHOT` is specified for `applicationRestoreType`.
func (o ApplicationApplicationConfigurationRunConfigurationApplicationRestoreConfigurationOutput) SnapshotName() pulumix.Output[*string] {
	return pulumix.Apply[ApplicationApplicationConfigurationRunConfigurationApplicationRestoreConfiguration](o, func(v ApplicationApplicationConfigurationRunConfigurationApplicationRestoreConfiguration) *string {
		return v.SnapshotName
	})
}

type ApplicationApplicationConfigurationRunConfigurationFlinkRunConfiguration struct {
	// When restoring from a snapshot, specifies whether the runtime is allowed to skip a state that cannot be mapped to the new program. Default is `false`.
	AllowNonRestoredState *bool `pulumi:"allowNonRestoredState"`
}

type ApplicationApplicationConfigurationRunConfigurationFlinkRunConfigurationArgs struct {
	// When restoring from a snapshot, specifies whether the runtime is allowed to skip a state that cannot be mapped to the new program. Default is `false`.
	AllowNonRestoredState pulumix.Input[*bool] `pulumi:"allowNonRestoredState"`
}

func (ApplicationApplicationConfigurationRunConfigurationFlinkRunConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationRunConfigurationFlinkRunConfiguration)(nil)).Elem()
}

func (i ApplicationApplicationConfigurationRunConfigurationFlinkRunConfigurationArgs) ToApplicationApplicationConfigurationRunConfigurationFlinkRunConfigurationOutput() ApplicationApplicationConfigurationRunConfigurationFlinkRunConfigurationOutput {
	return i.ToApplicationApplicationConfigurationRunConfigurationFlinkRunConfigurationOutputWithContext(context.Background())
}

func (i ApplicationApplicationConfigurationRunConfigurationFlinkRunConfigurationArgs) ToApplicationApplicationConfigurationRunConfigurationFlinkRunConfigurationOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationRunConfigurationFlinkRunConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationApplicationConfigurationRunConfigurationFlinkRunConfigurationOutput)
}

func (i *ApplicationApplicationConfigurationRunConfigurationFlinkRunConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*ApplicationApplicationConfigurationRunConfigurationFlinkRunConfigurationArgs] {
	return pulumix.Val(i)
}

type ApplicationApplicationConfigurationRunConfigurationFlinkRunConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationApplicationConfigurationRunConfigurationFlinkRunConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationRunConfigurationFlinkRunConfiguration)(nil)).Elem()
}

func (o ApplicationApplicationConfigurationRunConfigurationFlinkRunConfigurationOutput) ToApplicationApplicationConfigurationRunConfigurationFlinkRunConfigurationOutput() ApplicationApplicationConfigurationRunConfigurationFlinkRunConfigurationOutput {
	return o
}

func (o ApplicationApplicationConfigurationRunConfigurationFlinkRunConfigurationOutput) ToApplicationApplicationConfigurationRunConfigurationFlinkRunConfigurationOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationRunConfigurationFlinkRunConfigurationOutput {
	return o
}

func (o ApplicationApplicationConfigurationRunConfigurationFlinkRunConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[ApplicationApplicationConfigurationRunConfigurationFlinkRunConfiguration] {
	return pulumix.Output[ApplicationApplicationConfigurationRunConfigurationFlinkRunConfiguration]{
		OutputState: o.OutputState,
	}
}

// When restoring from a snapshot, specifies whether the runtime is allowed to skip a state that cannot be mapped to the new program. Default is `false`.
func (o ApplicationApplicationConfigurationRunConfigurationFlinkRunConfigurationOutput) AllowNonRestoredState() pulumix.Output[*bool] {
	return pulumix.Apply[ApplicationApplicationConfigurationRunConfigurationFlinkRunConfiguration](o, func(v ApplicationApplicationConfigurationRunConfigurationFlinkRunConfiguration) *bool {
		return v.AllowNonRestoredState
	})
}

type ApplicationApplicationConfigurationSqlApplicationConfiguration struct {
	// The input stream used by the application.
	Input *ApplicationApplicationConfigurationSqlApplicationConfigurationInputType `pulumi:"input"`
	// The destination streams used by the application.
	Outputs []ApplicationApplicationConfigurationSqlApplicationConfigurationOutputType `pulumi:"outputs"`
	// The reference data source used by the application.
	ReferenceDataSource *ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSource `pulumi:"referenceDataSource"`
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationArgs struct {
	// The input stream used by the application.
	Input pulumix.Input[*ApplicationApplicationConfigurationSqlApplicationConfigurationInputTypeArgs] `pulumi:"input"`
	// The destination streams used by the application.
	Outputs pulumix.Input[[]*ApplicationApplicationConfigurationSqlApplicationConfigurationOutputTypeArgs] `pulumi:"outputs"`
	// The reference data source used by the application.
	ReferenceDataSource pulumix.Input[*ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceArgs] `pulumi:"referenceDataSource"`
}

func (ApplicationApplicationConfigurationSqlApplicationConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationSqlApplicationConfiguration)(nil)).Elem()
}

func (i ApplicationApplicationConfigurationSqlApplicationConfigurationArgs) ToApplicationApplicationConfigurationSqlApplicationConfigurationOutput() ApplicationApplicationConfigurationSqlApplicationConfigurationOutput {
	return i.ToApplicationApplicationConfigurationSqlApplicationConfigurationOutputWithContext(context.Background())
}

func (i ApplicationApplicationConfigurationSqlApplicationConfigurationArgs) ToApplicationApplicationConfigurationSqlApplicationConfigurationOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationSqlApplicationConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationApplicationConfigurationSqlApplicationConfigurationOutput)
}

func (i *ApplicationApplicationConfigurationSqlApplicationConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*ApplicationApplicationConfigurationSqlApplicationConfigurationArgs] {
	return pulumix.Val(i)
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationApplicationConfigurationSqlApplicationConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationSqlApplicationConfiguration)(nil)).Elem()
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationOutput) ToApplicationApplicationConfigurationSqlApplicationConfigurationOutput() ApplicationApplicationConfigurationSqlApplicationConfigurationOutput {
	return o
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationOutput) ToApplicationApplicationConfigurationSqlApplicationConfigurationOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationSqlApplicationConfigurationOutput {
	return o
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[ApplicationApplicationConfigurationSqlApplicationConfiguration] {
	return pulumix.Output[ApplicationApplicationConfigurationSqlApplicationConfiguration]{
		OutputState: o.OutputState,
	}
}

// The input stream used by the application.
func (o ApplicationApplicationConfigurationSqlApplicationConfigurationOutput) Input() pulumix.GPtrOutput[ApplicationApplicationConfigurationSqlApplicationConfigurationInputType, ApplicationApplicationConfigurationSqlApplicationConfigurationInputTypeOutput] {
	value := pulumix.Apply[ApplicationApplicationConfigurationSqlApplicationConfiguration](o, func(v ApplicationApplicationConfigurationSqlApplicationConfiguration) *ApplicationApplicationConfigurationSqlApplicationConfigurationInputType {
		return v.Input
	})
	return pulumix.GPtrOutput[ApplicationApplicationConfigurationSqlApplicationConfigurationInputType, ApplicationApplicationConfigurationSqlApplicationConfigurationInputTypeOutput]{OutputState: value.OutputState}
}

// The destination streams used by the application.
func (o ApplicationApplicationConfigurationSqlApplicationConfigurationOutput) Outputs() pulumix.GArrayOutput[ApplicationApplicationConfigurationSqlApplicationConfigurationOutputType, ApplicationApplicationConfigurationSqlApplicationConfigurationOutputTypeOutput] {
	value := pulumix.Apply[ApplicationApplicationConfigurationSqlApplicationConfiguration](o, func(v ApplicationApplicationConfigurationSqlApplicationConfiguration) []ApplicationApplicationConfigurationSqlApplicationConfigurationOutputType {
		return v.Outputs
	})
	return pulumix.GArrayOutput[ApplicationApplicationConfigurationSqlApplicationConfigurationOutputType, ApplicationApplicationConfigurationSqlApplicationConfigurationOutputTypeOutput]{OutputState: value.OutputState}
}

// The reference data source used by the application.
func (o ApplicationApplicationConfigurationSqlApplicationConfigurationOutput) ReferenceDataSource() pulumix.GPtrOutput[ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSource, ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceOutput] {
	value := pulumix.Apply[ApplicationApplicationConfigurationSqlApplicationConfiguration](o, func(v ApplicationApplicationConfigurationSqlApplicationConfiguration) *ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSource {
		return v.ReferenceDataSource
	})
	return pulumix.GPtrOutput[ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSource, ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceOutput]{OutputState: value.OutputState}
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationInputType struct {
	InAppStreamNames []string `pulumi:"inAppStreamNames"`
	InputId          *string  `pulumi:"inputId"`
	// Describes the number of in-application streams to create.
	InputParallelism *ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputParallelism `pulumi:"inputParallelism"`
	// The input processing configuration for the input.
	// An input processor transforms records as they are received from the stream, before the application's SQL code executes.
	InputProcessingConfiguration *ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfiguration `pulumi:"inputProcessingConfiguration"`
	// Describes the format of the data in the streaming source, and how each data element maps to corresponding columns in the in-application stream that is being created.
	InputSchema ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchema `pulumi:"inputSchema"`
	// The point at which the application starts processing records from the streaming source.
	InputStartingPositionConfigurations []ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputStartingPositionConfiguration `pulumi:"inputStartingPositionConfigurations"`
	// If the streaming source is a Kinesis Data Firehose delivery stream, identifies the delivery stream's ARN.
	KinesisFirehoseInput *ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisFirehoseInput `pulumi:"kinesisFirehoseInput"`
	// If the streaming source is a Kinesis data stream, identifies the stream's Amazon Resource Name (ARN).
	KinesisStreamsInput *ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisStreamsInput `pulumi:"kinesisStreamsInput"`
	// The name prefix to use when creating an in-application stream.
	NamePrefix string `pulumi:"namePrefix"`
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationInputTypeArgs struct {
	InAppStreamNames pulumix.Input[[]string] `pulumi:"inAppStreamNames"`
	InputId          pulumix.Input[*string]  `pulumi:"inputId"`
	// Describes the number of in-application streams to create.
	InputParallelism pulumix.Input[*ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputParallelismArgs] `pulumi:"inputParallelism"`
	// The input processing configuration for the input.
	// An input processor transforms records as they are received from the stream, before the application's SQL code executes.
	InputProcessingConfiguration pulumix.Input[*ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationArgs] `pulumi:"inputProcessingConfiguration"`
	// Describes the format of the data in the streaming source, and how each data element maps to corresponding columns in the in-application stream that is being created.
	InputSchema pulumix.Input[*ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaArgs] `pulumi:"inputSchema"`
	// The point at which the application starts processing records from the streaming source.
	InputStartingPositionConfigurations pulumix.Input[[]*ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputStartingPositionConfigurationArgs] `pulumi:"inputStartingPositionConfigurations"`
	// If the streaming source is a Kinesis Data Firehose delivery stream, identifies the delivery stream's ARN.
	KinesisFirehoseInput pulumix.Input[*ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisFirehoseInputArgs] `pulumi:"kinesisFirehoseInput"`
	// If the streaming source is a Kinesis data stream, identifies the stream's Amazon Resource Name (ARN).
	KinesisStreamsInput pulumix.Input[*ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisStreamsInputArgs] `pulumi:"kinesisStreamsInput"`
	// The name prefix to use when creating an in-application stream.
	NamePrefix pulumix.Input[string] `pulumi:"namePrefix"`
}

func (ApplicationApplicationConfigurationSqlApplicationConfigurationInputTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationSqlApplicationConfigurationInputType)(nil)).Elem()
}

func (i ApplicationApplicationConfigurationSqlApplicationConfigurationInputTypeArgs) ToApplicationApplicationConfigurationSqlApplicationConfigurationInputTypeOutput() ApplicationApplicationConfigurationSqlApplicationConfigurationInputTypeOutput {
	return i.ToApplicationApplicationConfigurationSqlApplicationConfigurationInputTypeOutputWithContext(context.Background())
}

func (i ApplicationApplicationConfigurationSqlApplicationConfigurationInputTypeArgs) ToApplicationApplicationConfigurationSqlApplicationConfigurationInputTypeOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationSqlApplicationConfigurationInputTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationApplicationConfigurationSqlApplicationConfigurationInputTypeOutput)
}

func (i *ApplicationApplicationConfigurationSqlApplicationConfigurationInputTypeArgs) ToOutput(ctx context.Context) pulumix.Output[*ApplicationApplicationConfigurationSqlApplicationConfigurationInputTypeArgs] {
	return pulumix.Val(i)
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationInputTypeOutput struct{ *pulumi.OutputState }

func (ApplicationApplicationConfigurationSqlApplicationConfigurationInputTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationSqlApplicationConfigurationInputType)(nil)).Elem()
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationInputTypeOutput) ToApplicationApplicationConfigurationSqlApplicationConfigurationInputTypeOutput() ApplicationApplicationConfigurationSqlApplicationConfigurationInputTypeOutput {
	return o
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationInputTypeOutput) ToApplicationApplicationConfigurationSqlApplicationConfigurationInputTypeOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationSqlApplicationConfigurationInputTypeOutput {
	return o
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationInputTypeOutput) ToOutput(ctx context.Context) pulumix.Output[ApplicationApplicationConfigurationSqlApplicationConfigurationInputType] {
	return pulumix.Output[ApplicationApplicationConfigurationSqlApplicationConfigurationInputType]{
		OutputState: o.OutputState,
	}
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationInputTypeOutput) InAppStreamNames() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[ApplicationApplicationConfigurationSqlApplicationConfigurationInputType](o, func(v ApplicationApplicationConfigurationSqlApplicationConfigurationInputType) []string {
		return v.InAppStreamNames
	})
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationInputTypeOutput) InputId() pulumix.Output[*string] {
	return pulumix.Apply[ApplicationApplicationConfigurationSqlApplicationConfigurationInputType](o, func(v ApplicationApplicationConfigurationSqlApplicationConfigurationInputType) *string {
		return v.InputId
	})
}

// Describes the number of in-application streams to create.
func (o ApplicationApplicationConfigurationSqlApplicationConfigurationInputTypeOutput) InputParallelism() pulumix.GPtrOutput[ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputParallelism, ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputParallelismOutput] {
	value := pulumix.Apply[ApplicationApplicationConfigurationSqlApplicationConfigurationInputType](o, func(v ApplicationApplicationConfigurationSqlApplicationConfigurationInputType) *ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputParallelism {
		return v.InputParallelism
	})
	return pulumix.GPtrOutput[ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputParallelism, ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputParallelismOutput]{OutputState: value.OutputState}
}

// The input processing configuration for the input.
// An input processor transforms records as they are received from the stream, before the application's SQL code executes.
func (o ApplicationApplicationConfigurationSqlApplicationConfigurationInputTypeOutput) InputProcessingConfiguration() pulumix.GPtrOutput[ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfiguration, ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationOutput] {
	value := pulumix.Apply[ApplicationApplicationConfigurationSqlApplicationConfigurationInputType](o, func(v ApplicationApplicationConfigurationSqlApplicationConfigurationInputType) *ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfiguration {
		return v.InputProcessingConfiguration
	})
	return pulumix.GPtrOutput[ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfiguration, ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationOutput]{OutputState: value.OutputState}
}

// Describes the format of the data in the streaming source, and how each data element maps to corresponding columns in the in-application stream that is being created.
func (o ApplicationApplicationConfigurationSqlApplicationConfigurationInputTypeOutput) InputSchema() pulumix.GPtrOutput[ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchema, ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaOutput] {
	value := pulumix.Apply[ApplicationApplicationConfigurationSqlApplicationConfigurationInputType](o, func(v ApplicationApplicationConfigurationSqlApplicationConfigurationInputType) ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchema {
		return v.InputSchema
	})
	return pulumix.GPtrOutput[ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchema, ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaOutput]{OutputState: value.OutputState}
}

// The point at which the application starts processing records from the streaming source.
func (o ApplicationApplicationConfigurationSqlApplicationConfigurationInputTypeOutput) InputStartingPositionConfigurations() pulumix.GArrayOutput[ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputStartingPositionConfiguration, ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputStartingPositionConfigurationOutput] {
	value := pulumix.Apply[ApplicationApplicationConfigurationSqlApplicationConfigurationInputType](o, func(v ApplicationApplicationConfigurationSqlApplicationConfigurationInputType) []ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputStartingPositionConfiguration {
		return v.InputStartingPositionConfigurations
	})
	return pulumix.GArrayOutput[ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputStartingPositionConfiguration, ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputStartingPositionConfigurationOutput]{OutputState: value.OutputState}
}

// If the streaming source is a Kinesis Data Firehose delivery stream, identifies the delivery stream's ARN.
func (o ApplicationApplicationConfigurationSqlApplicationConfigurationInputTypeOutput) KinesisFirehoseInput() pulumix.GPtrOutput[ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisFirehoseInput, ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisFirehoseInputOutput] {
	value := pulumix.Apply[ApplicationApplicationConfigurationSqlApplicationConfigurationInputType](o, func(v ApplicationApplicationConfigurationSqlApplicationConfigurationInputType) *ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisFirehoseInput {
		return v.KinesisFirehoseInput
	})
	return pulumix.GPtrOutput[ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisFirehoseInput, ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisFirehoseInputOutput]{OutputState: value.OutputState}
}

// If the streaming source is a Kinesis data stream, identifies the stream's Amazon Resource Name (ARN).
func (o ApplicationApplicationConfigurationSqlApplicationConfigurationInputTypeOutput) KinesisStreamsInput() pulumix.GPtrOutput[ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisStreamsInput, ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisStreamsInputOutput] {
	value := pulumix.Apply[ApplicationApplicationConfigurationSqlApplicationConfigurationInputType](o, func(v ApplicationApplicationConfigurationSqlApplicationConfigurationInputType) *ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisStreamsInput {
		return v.KinesisStreamsInput
	})
	return pulumix.GPtrOutput[ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisStreamsInput, ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisStreamsInputOutput]{OutputState: value.OutputState}
}

// The name prefix to use when creating an in-application stream.
func (o ApplicationApplicationConfigurationSqlApplicationConfigurationInputTypeOutput) NamePrefix() pulumix.Output[string] {
	return pulumix.Apply[ApplicationApplicationConfigurationSqlApplicationConfigurationInputType](o, func(v ApplicationApplicationConfigurationSqlApplicationConfigurationInputType) string {
		return v.NamePrefix
	})
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputParallelism struct {
	// The number of in-application streams to create.
	Count *int `pulumi:"count"`
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputParallelismArgs struct {
	// The number of in-application streams to create.
	Count pulumix.Input[*int] `pulumi:"count"`
}

func (ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputParallelismArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputParallelism)(nil)).Elem()
}

func (i ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputParallelismArgs) ToApplicationApplicationConfigurationSqlApplicationConfigurationInputInputParallelismOutput() ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputParallelismOutput {
	return i.ToApplicationApplicationConfigurationSqlApplicationConfigurationInputInputParallelismOutputWithContext(context.Background())
}

func (i ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputParallelismArgs) ToApplicationApplicationConfigurationSqlApplicationConfigurationInputInputParallelismOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputParallelismOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputParallelismOutput)
}

func (i *ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputParallelismArgs) ToOutput(ctx context.Context) pulumix.Output[*ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputParallelismArgs] {
	return pulumix.Val(i)
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputParallelismOutput struct{ *pulumi.OutputState }

func (ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputParallelismOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputParallelism)(nil)).Elem()
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputParallelismOutput) ToApplicationApplicationConfigurationSqlApplicationConfigurationInputInputParallelismOutput() ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputParallelismOutput {
	return o
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputParallelismOutput) ToApplicationApplicationConfigurationSqlApplicationConfigurationInputInputParallelismOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputParallelismOutput {
	return o
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputParallelismOutput) ToOutput(ctx context.Context) pulumix.Output[ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputParallelism] {
	return pulumix.Output[ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputParallelism]{
		OutputState: o.OutputState,
	}
}

// The number of in-application streams to create.
func (o ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputParallelismOutput) Count() pulumix.Output[*int] {
	return pulumix.Apply[ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputParallelism](o, func(v ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputParallelism) *int {
		return v.Count
	})
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfiguration struct {
	// Describes the Lambda function that is used to preprocess the records in the stream before being processed by your application code.
	InputLambdaProcessor ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationInputLambdaProcessor `pulumi:"inputLambdaProcessor"`
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationArgs struct {
	// Describes the Lambda function that is used to preprocess the records in the stream before being processed by your application code.
	InputLambdaProcessor pulumix.Input[*ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationInputLambdaProcessorArgs] `pulumi:"inputLambdaProcessor"`
}

func (ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfiguration)(nil)).Elem()
}

func (i ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationArgs) ToApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationOutput() ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationOutput {
	return i.ToApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationOutputWithContext(context.Background())
}

func (i ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationArgs) ToApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationOutput)
}

func (i *ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationArgs] {
	return pulumix.Val(i)
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfiguration)(nil)).Elem()
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationOutput) ToApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationOutput() ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationOutput {
	return o
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationOutput) ToApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationOutput {
	return o
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfiguration] {
	return pulumix.Output[ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfiguration]{
		OutputState: o.OutputState,
	}
}

// Describes the Lambda function that is used to preprocess the records in the stream before being processed by your application code.
func (o ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationOutput) InputLambdaProcessor() pulumix.GPtrOutput[ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationInputLambdaProcessor, ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationInputLambdaProcessorOutput] {
	value := pulumix.Apply[ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfiguration](o, func(v ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfiguration) ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationInputLambdaProcessor {
		return v.InputLambdaProcessor
	})
	return pulumix.GPtrOutput[ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationInputLambdaProcessor, ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationInputLambdaProcessorOutput]{OutputState: value.OutputState}
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationInputLambdaProcessor struct {
	// The ARN of the Lambda function that operates on records in the stream.
	ResourceArn string `pulumi:"resourceArn"`
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationInputLambdaProcessorArgs struct {
	// The ARN of the Lambda function that operates on records in the stream.
	ResourceArn pulumix.Input[string] `pulumi:"resourceArn"`
}

func (ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationInputLambdaProcessorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationInputLambdaProcessor)(nil)).Elem()
}

func (i ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationInputLambdaProcessorArgs) ToApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationInputLambdaProcessorOutput() ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationInputLambdaProcessorOutput {
	return i.ToApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationInputLambdaProcessorOutputWithContext(context.Background())
}

func (i ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationInputLambdaProcessorArgs) ToApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationInputLambdaProcessorOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationInputLambdaProcessorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationInputLambdaProcessorOutput)
}

func (i *ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationInputLambdaProcessorArgs) ToOutput(ctx context.Context) pulumix.Output[*ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationInputLambdaProcessorArgs] {
	return pulumix.Val(i)
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationInputLambdaProcessorOutput struct{ *pulumi.OutputState }

func (ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationInputLambdaProcessorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationInputLambdaProcessor)(nil)).Elem()
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationInputLambdaProcessorOutput) ToApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationInputLambdaProcessorOutput() ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationInputLambdaProcessorOutput {
	return o
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationInputLambdaProcessorOutput) ToApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationInputLambdaProcessorOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationInputLambdaProcessorOutput {
	return o
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationInputLambdaProcessorOutput) ToOutput(ctx context.Context) pulumix.Output[ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationInputLambdaProcessor] {
	return pulumix.Output[ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationInputLambdaProcessor]{
		OutputState: o.OutputState,
	}
}

// The ARN of the Lambda function that operates on records in the stream.
func (o ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationInputLambdaProcessorOutput) ResourceArn() pulumix.Output[string] {
	return pulumix.Apply[ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationInputLambdaProcessor](o, func(v ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationInputLambdaProcessor) string {
		return v.ResourceArn
	})
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchema struct {
	// Describes the mapping of each data element in the streaming source to the corresponding column in the in-application stream.
	RecordColumns []ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordColumn `pulumi:"recordColumns"`
	// Specifies the encoding of the records in the streaming source. For example, `UTF-8`.
	RecordEncoding *string `pulumi:"recordEncoding"`
	// Specifies the format of the records on the streaming source.
	RecordFormat ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormat `pulumi:"recordFormat"`
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaArgs struct {
	// Describes the mapping of each data element in the streaming source to the corresponding column in the in-application stream.
	RecordColumns pulumix.Input[[]*ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordColumnArgs] `pulumi:"recordColumns"`
	// Specifies the encoding of the records in the streaming source. For example, `UTF-8`.
	RecordEncoding pulumix.Input[*string] `pulumi:"recordEncoding"`
	// Specifies the format of the records on the streaming source.
	RecordFormat pulumix.Input[*ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatArgs] `pulumi:"recordFormat"`
}

func (ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchema)(nil)).Elem()
}

func (i ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaArgs) ToApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaOutput() ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaOutput {
	return i.ToApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaOutputWithContext(context.Background())
}

func (i ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaArgs) ToApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaOutput)
}

func (i *ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaArgs) ToOutput(ctx context.Context) pulumix.Output[*ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaArgs] {
	return pulumix.Val(i)
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaOutput struct{ *pulumi.OutputState }

func (ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchema)(nil)).Elem()
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaOutput) ToApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaOutput() ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaOutput {
	return o
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaOutput) ToApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaOutput {
	return o
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaOutput) ToOutput(ctx context.Context) pulumix.Output[ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchema] {
	return pulumix.Output[ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchema]{
		OutputState: o.OutputState,
	}
}

// Describes the mapping of each data element in the streaming source to the corresponding column in the in-application stream.
func (o ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaOutput) RecordColumns() pulumix.GArrayOutput[ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordColumn, ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordColumnOutput] {
	value := pulumix.Apply[ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchema](o, func(v ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchema) []ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordColumn {
		return v.RecordColumns
	})
	return pulumix.GArrayOutput[ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordColumn, ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordColumnOutput]{OutputState: value.OutputState}
}

// Specifies the encoding of the records in the streaming source. For example, `UTF-8`.
func (o ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaOutput) RecordEncoding() pulumix.Output[*string] {
	return pulumix.Apply[ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchema](o, func(v ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchema) *string {
		return v.RecordEncoding
	})
}

// Specifies the format of the records on the streaming source.
func (o ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaOutput) RecordFormat() pulumix.GPtrOutput[ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormat, ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatOutput] {
	value := pulumix.Apply[ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchema](o, func(v ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchema) ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormat {
		return v.RecordFormat
	})
	return pulumix.GPtrOutput[ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormat, ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatOutput]{OutputState: value.OutputState}
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordColumn struct {
	// A reference to the data element in the streaming input or the reference data source.
	Mapping *string `pulumi:"mapping"`
	// The name of the column that is created in the in-application input stream or reference table.
	Name string `pulumi:"name"`
	// The type of column created in the in-application input stream or reference table.
	SqlType string `pulumi:"sqlType"`
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordColumnArgs struct {
	// A reference to the data element in the streaming input or the reference data source.
	Mapping pulumix.Input[*string] `pulumi:"mapping"`
	// The name of the column that is created in the in-application input stream or reference table.
	Name pulumix.Input[string] `pulumi:"name"`
	// The type of column created in the in-application input stream or reference table.
	SqlType pulumix.Input[string] `pulumi:"sqlType"`
}

func (ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordColumnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordColumn)(nil)).Elem()
}

func (i ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordColumnArgs) ToApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordColumnOutput() ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordColumnOutput {
	return i.ToApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordColumnOutputWithContext(context.Background())
}

func (i ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordColumnArgs) ToApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordColumnOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordColumnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordColumnOutput)
}

func (i *ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordColumnArgs) ToOutput(ctx context.Context) pulumix.Output[*ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordColumnArgs] {
	return pulumix.Val(i)
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordColumnOutput struct{ *pulumi.OutputState }

func (ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordColumnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordColumn)(nil)).Elem()
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordColumnOutput) ToApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordColumnOutput() ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordColumnOutput {
	return o
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordColumnOutput) ToApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordColumnOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordColumnOutput {
	return o
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordColumnOutput) ToOutput(ctx context.Context) pulumix.Output[ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordColumn] {
	return pulumix.Output[ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordColumn]{
		OutputState: o.OutputState,
	}
}

// A reference to the data element in the streaming input or the reference data source.
func (o ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordColumnOutput) Mapping() pulumix.Output[*string] {
	return pulumix.Apply[ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordColumn](o, func(v ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordColumn) *string {
		return v.Mapping
	})
}

// The name of the column that is created in the in-application input stream or reference table.
func (o ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordColumnOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordColumn](o, func(v ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordColumn) string {
		return v.Name
	})
}

// The type of column created in the in-application input stream or reference table.
func (o ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordColumnOutput) SqlType() pulumix.Output[string] {
	return pulumix.Apply[ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordColumn](o, func(v ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordColumn) string {
		return v.SqlType
	})
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormat struct {
	// Provides additional mapping information specific to the record format (such as JSON, CSV, or record fields delimited by some delimiter) on the streaming source.
	MappingParameters ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParameters `pulumi:"mappingParameters"`
	// The type of record format. Valid values: `CSV`, `JSON`.
	RecordFormatType string `pulumi:"recordFormatType"`
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatArgs struct {
	// Provides additional mapping information specific to the record format (such as JSON, CSV, or record fields delimited by some delimiter) on the streaming source.
	MappingParameters pulumix.Input[*ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersArgs] `pulumi:"mappingParameters"`
	// The type of record format. Valid values: `CSV`, `JSON`.
	RecordFormatType pulumix.Input[string] `pulumi:"recordFormatType"`
}

func (ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormat)(nil)).Elem()
}

func (i ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatArgs) ToApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatOutput() ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatOutput {
	return i.ToApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatOutputWithContext(context.Background())
}

func (i ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatArgs) ToApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatOutput)
}

func (i *ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatArgs) ToOutput(ctx context.Context) pulumix.Output[*ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatArgs] {
	return pulumix.Val(i)
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatOutput struct{ *pulumi.OutputState }

func (ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormat)(nil)).Elem()
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatOutput) ToApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatOutput() ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatOutput {
	return o
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatOutput) ToApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatOutput {
	return o
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatOutput) ToOutput(ctx context.Context) pulumix.Output[ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormat] {
	return pulumix.Output[ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormat]{
		OutputState: o.OutputState,
	}
}

// Provides additional mapping information specific to the record format (such as JSON, CSV, or record fields delimited by some delimiter) on the streaming source.
func (o ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatOutput) MappingParameters() pulumix.GPtrOutput[ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParameters, ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersOutput] {
	value := pulumix.Apply[ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormat](o, func(v ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormat) ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParameters {
		return v.MappingParameters
	})
	return pulumix.GPtrOutput[ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParameters, ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersOutput]{OutputState: value.OutputState}
}

// The type of record format. Valid values: `CSV`, `JSON`.
func (o ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatOutput) RecordFormatType() pulumix.Output[string] {
	return pulumix.Apply[ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormat](o, func(v ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormat) string {
		return v.RecordFormatType
	})
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParameters struct {
	// Provides additional mapping information when the record format uses delimiters (for example, CSV).
	CsvMappingParameters *ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersCsvMappingParameters `pulumi:"csvMappingParameters"`
	// Provides additional mapping information when JSON is the record format on the streaming source.
	JsonMappingParameters *ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersJsonMappingParameters `pulumi:"jsonMappingParameters"`
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersArgs struct {
	// Provides additional mapping information when the record format uses delimiters (for example, CSV).
	CsvMappingParameters pulumix.Input[*ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersCsvMappingParametersArgs] `pulumi:"csvMappingParameters"`
	// Provides additional mapping information when JSON is the record format on the streaming source.
	JsonMappingParameters pulumix.Input[*ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersJsonMappingParametersArgs] `pulumi:"jsonMappingParameters"`
}

func (ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParameters)(nil)).Elem()
}

func (i ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersArgs) ToApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersOutput() ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersOutput {
	return i.ToApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersOutputWithContext(context.Background())
}

func (i ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersArgs) ToApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersOutput)
}

func (i *ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersArgs) ToOutput(ctx context.Context) pulumix.Output[*ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersArgs] {
	return pulumix.Val(i)
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersOutput struct{ *pulumi.OutputState }

func (ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParameters)(nil)).Elem()
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersOutput) ToApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersOutput() ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersOutput {
	return o
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersOutput) ToApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersOutput {
	return o
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersOutput) ToOutput(ctx context.Context) pulumix.Output[ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParameters] {
	return pulumix.Output[ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParameters]{
		OutputState: o.OutputState,
	}
}

// Provides additional mapping information when the record format uses delimiters (for example, CSV).
func (o ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersOutput) CsvMappingParameters() pulumix.GPtrOutput[ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersCsvMappingParameters, ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersCsvMappingParametersOutput] {
	value := pulumix.Apply[ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParameters](o, func(v ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParameters) *ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersCsvMappingParameters {
		return v.CsvMappingParameters
	})
	return pulumix.GPtrOutput[ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersCsvMappingParameters, ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersCsvMappingParametersOutput]{OutputState: value.OutputState}
}

// Provides additional mapping information when JSON is the record format on the streaming source.
func (o ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersOutput) JsonMappingParameters() pulumix.GPtrOutput[ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersJsonMappingParameters, ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersJsonMappingParametersOutput] {
	value := pulumix.Apply[ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParameters](o, func(v ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParameters) *ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersJsonMappingParameters {
		return v.JsonMappingParameters
	})
	return pulumix.GPtrOutput[ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersJsonMappingParameters, ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersJsonMappingParametersOutput]{OutputState: value.OutputState}
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersCsvMappingParameters struct {
	// The column delimiter. For example, in a CSV format, a comma (`,`) is the typical column delimiter.
	RecordColumnDelimiter string `pulumi:"recordColumnDelimiter"`
	// The row delimiter. For example, in a CSV format, `\n` is the typical row delimiter.
	RecordRowDelimiter string `pulumi:"recordRowDelimiter"`
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersCsvMappingParametersArgs struct {
	// The column delimiter. For example, in a CSV format, a comma (`,`) is the typical column delimiter.
	RecordColumnDelimiter pulumix.Input[string] `pulumi:"recordColumnDelimiter"`
	// The row delimiter. For example, in a CSV format, `\n` is the typical row delimiter.
	RecordRowDelimiter pulumix.Input[string] `pulumi:"recordRowDelimiter"`
}

func (ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersCsvMappingParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersCsvMappingParameters)(nil)).Elem()
}

func (i ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersCsvMappingParametersArgs) ToApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersCsvMappingParametersOutput() ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersCsvMappingParametersOutput {
	return i.ToApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersCsvMappingParametersOutputWithContext(context.Background())
}

func (i ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersCsvMappingParametersArgs) ToApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersCsvMappingParametersOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersCsvMappingParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersCsvMappingParametersOutput)
}

func (i *ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersCsvMappingParametersArgs) ToOutput(ctx context.Context) pulumix.Output[*ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersCsvMappingParametersArgs] {
	return pulumix.Val(i)
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersCsvMappingParametersOutput struct{ *pulumi.OutputState }

func (ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersCsvMappingParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersCsvMappingParameters)(nil)).Elem()
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersCsvMappingParametersOutput) ToApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersCsvMappingParametersOutput() ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersCsvMappingParametersOutput {
	return o
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersCsvMappingParametersOutput) ToApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersCsvMappingParametersOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersCsvMappingParametersOutput {
	return o
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersCsvMappingParametersOutput) ToOutput(ctx context.Context) pulumix.Output[ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersCsvMappingParameters] {
	return pulumix.Output[ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersCsvMappingParameters]{
		OutputState: o.OutputState,
	}
}

// The column delimiter. For example, in a CSV format, a comma (`,`) is the typical column delimiter.
func (o ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersCsvMappingParametersOutput) RecordColumnDelimiter() pulumix.Output[string] {
	return pulumix.Apply[ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersCsvMappingParameters](o, func(v ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersCsvMappingParameters) string {
		return v.RecordColumnDelimiter
	})
}

// The row delimiter. For example, in a CSV format, `\n` is the typical row delimiter.
func (o ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersCsvMappingParametersOutput) RecordRowDelimiter() pulumix.Output[string] {
	return pulumix.Apply[ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersCsvMappingParameters](o, func(v ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersCsvMappingParameters) string {
		return v.RecordRowDelimiter
	})
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersJsonMappingParameters struct {
	// The path to the top-level parent that contains the records.
	RecordRowPath string `pulumi:"recordRowPath"`
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersJsonMappingParametersArgs struct {
	// The path to the top-level parent that contains the records.
	RecordRowPath pulumix.Input[string] `pulumi:"recordRowPath"`
}

func (ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersJsonMappingParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersJsonMappingParameters)(nil)).Elem()
}

func (i ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersJsonMappingParametersArgs) ToApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersJsonMappingParametersOutput() ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersJsonMappingParametersOutput {
	return i.ToApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersJsonMappingParametersOutputWithContext(context.Background())
}

func (i ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersJsonMappingParametersArgs) ToApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersJsonMappingParametersOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersJsonMappingParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersJsonMappingParametersOutput)
}

func (i *ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersJsonMappingParametersArgs) ToOutput(ctx context.Context) pulumix.Output[*ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersJsonMappingParametersArgs] {
	return pulumix.Val(i)
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersJsonMappingParametersOutput struct{ *pulumi.OutputState }

func (ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersJsonMappingParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersJsonMappingParameters)(nil)).Elem()
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersJsonMappingParametersOutput) ToApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersJsonMappingParametersOutput() ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersJsonMappingParametersOutput {
	return o
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersJsonMappingParametersOutput) ToApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersJsonMappingParametersOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersJsonMappingParametersOutput {
	return o
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersJsonMappingParametersOutput) ToOutput(ctx context.Context) pulumix.Output[ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersJsonMappingParameters] {
	return pulumix.Output[ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersJsonMappingParameters]{
		OutputState: o.OutputState,
	}
}

// The path to the top-level parent that contains the records.
func (o ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersJsonMappingParametersOutput) RecordRowPath() pulumix.Output[string] {
	return pulumix.Apply[ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersJsonMappingParameters](o, func(v ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersJsonMappingParameters) string {
		return v.RecordRowPath
	})
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputStartingPositionConfiguration struct {
	// The starting position on the stream. Valid values: `LAST_STOPPED_POINT`, `NOW`, `TRIM_HORIZON`.
	InputStartingPosition *string `pulumi:"inputStartingPosition"`
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputStartingPositionConfigurationArgs struct {
	// The starting position on the stream. Valid values: `LAST_STOPPED_POINT`, `NOW`, `TRIM_HORIZON`.
	InputStartingPosition pulumix.Input[*string] `pulumi:"inputStartingPosition"`
}

func (ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputStartingPositionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputStartingPositionConfiguration)(nil)).Elem()
}

func (i ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputStartingPositionConfigurationArgs) ToApplicationApplicationConfigurationSqlApplicationConfigurationInputInputStartingPositionConfigurationOutput() ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputStartingPositionConfigurationOutput {
	return i.ToApplicationApplicationConfigurationSqlApplicationConfigurationInputInputStartingPositionConfigurationOutputWithContext(context.Background())
}

func (i ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputStartingPositionConfigurationArgs) ToApplicationApplicationConfigurationSqlApplicationConfigurationInputInputStartingPositionConfigurationOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputStartingPositionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputStartingPositionConfigurationOutput)
}

func (i *ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputStartingPositionConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputStartingPositionConfigurationArgs] {
	return pulumix.Val(i)
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputStartingPositionConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputStartingPositionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputStartingPositionConfiguration)(nil)).Elem()
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputStartingPositionConfigurationOutput) ToApplicationApplicationConfigurationSqlApplicationConfigurationInputInputStartingPositionConfigurationOutput() ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputStartingPositionConfigurationOutput {
	return o
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputStartingPositionConfigurationOutput) ToApplicationApplicationConfigurationSqlApplicationConfigurationInputInputStartingPositionConfigurationOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputStartingPositionConfigurationOutput {
	return o
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputStartingPositionConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputStartingPositionConfiguration] {
	return pulumix.Output[ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputStartingPositionConfiguration]{
		OutputState: o.OutputState,
	}
}

// The starting position on the stream. Valid values: `LAST_STOPPED_POINT`, `NOW`, `TRIM_HORIZON`.
func (o ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputStartingPositionConfigurationOutput) InputStartingPosition() pulumix.Output[*string] {
	return pulumix.Apply[ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputStartingPositionConfiguration](o, func(v ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputStartingPositionConfiguration) *string {
		return v.InputStartingPosition
	})
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisFirehoseInput struct {
	// The ARN of the delivery stream.
	ResourceArn string `pulumi:"resourceArn"`
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisFirehoseInputArgs struct {
	// The ARN of the delivery stream.
	ResourceArn pulumix.Input[string] `pulumi:"resourceArn"`
}

func (ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisFirehoseInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisFirehoseInput)(nil)).Elem()
}

func (i ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisFirehoseInputArgs) ToApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisFirehoseInputOutput() ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisFirehoseInputOutput {
	return i.ToApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisFirehoseInputOutputWithContext(context.Background())
}

func (i ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisFirehoseInputArgs) ToApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisFirehoseInputOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisFirehoseInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisFirehoseInputOutput)
}

func (i *ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisFirehoseInputArgs) ToOutput(ctx context.Context) pulumix.Output[*ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisFirehoseInputArgs] {
	return pulumix.Val(i)
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisFirehoseInputOutput struct{ *pulumi.OutputState }

func (ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisFirehoseInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisFirehoseInput)(nil)).Elem()
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisFirehoseInputOutput) ToApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisFirehoseInputOutput() ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisFirehoseInputOutput {
	return o
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisFirehoseInputOutput) ToApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisFirehoseInputOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisFirehoseInputOutput {
	return o
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisFirehoseInputOutput) ToOutput(ctx context.Context) pulumix.Output[ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisFirehoseInput] {
	return pulumix.Output[ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisFirehoseInput]{
		OutputState: o.OutputState,
	}
}

// The ARN of the delivery stream.
func (o ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisFirehoseInputOutput) ResourceArn() pulumix.Output[string] {
	return pulumix.Apply[ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisFirehoseInput](o, func(v ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisFirehoseInput) string {
		return v.ResourceArn
	})
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisStreamsInput struct {
	// The ARN of the input Kinesis data stream to read.
	ResourceArn string `pulumi:"resourceArn"`
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisStreamsInputArgs struct {
	// The ARN of the input Kinesis data stream to read.
	ResourceArn pulumix.Input[string] `pulumi:"resourceArn"`
}

func (ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisStreamsInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisStreamsInput)(nil)).Elem()
}

func (i ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisStreamsInputArgs) ToApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisStreamsInputOutput() ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisStreamsInputOutput {
	return i.ToApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisStreamsInputOutputWithContext(context.Background())
}

func (i ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisStreamsInputArgs) ToApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisStreamsInputOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisStreamsInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisStreamsInputOutput)
}

func (i *ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisStreamsInputArgs) ToOutput(ctx context.Context) pulumix.Output[*ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisStreamsInputArgs] {
	return pulumix.Val(i)
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisStreamsInputOutput struct{ *pulumi.OutputState }

func (ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisStreamsInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisStreamsInput)(nil)).Elem()
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisStreamsInputOutput) ToApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisStreamsInputOutput() ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisStreamsInputOutput {
	return o
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisStreamsInputOutput) ToApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisStreamsInputOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisStreamsInputOutput {
	return o
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisStreamsInputOutput) ToOutput(ctx context.Context) pulumix.Output[ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisStreamsInput] {
	return pulumix.Output[ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisStreamsInput]{
		OutputState: o.OutputState,
	}
}

// The ARN of the input Kinesis data stream to read.
func (o ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisStreamsInputOutput) ResourceArn() pulumix.Output[string] {
	return pulumix.Apply[ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisStreamsInput](o, func(v ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisStreamsInput) string {
		return v.ResourceArn
	})
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationOutputType struct {
	// Describes the data format when records are written to the destination.
	DestinationSchema ApplicationApplicationConfigurationSqlApplicationConfigurationOutputDestinationSchema `pulumi:"destinationSchema"`
	// Identifies a Kinesis Data Firehose delivery stream as the destination.
	KinesisFirehoseOutput *ApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisFirehoseOutput `pulumi:"kinesisFirehoseOutput"`
	// Identifies a Kinesis data stream as the destination.
	KinesisStreamsOutput *ApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisStreamsOutput `pulumi:"kinesisStreamsOutput"`
	// Identifies a Lambda function as the destination.
	LambdaOutput *ApplicationApplicationConfigurationSqlApplicationConfigurationOutputLambdaOutput `pulumi:"lambdaOutput"`
	// The name of the in-application stream.
	Name     string  `pulumi:"name"`
	OutputId *string `pulumi:"outputId"`
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationOutputTypeArgs struct {
	// Describes the data format when records are written to the destination.
	DestinationSchema pulumix.Input[*ApplicationApplicationConfigurationSqlApplicationConfigurationOutputDestinationSchemaArgs] `pulumi:"destinationSchema"`
	// Identifies a Kinesis Data Firehose delivery stream as the destination.
	KinesisFirehoseOutput pulumix.Input[*ApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisFirehoseOutputArgs] `pulumi:"kinesisFirehoseOutput"`
	// Identifies a Kinesis data stream as the destination.
	KinesisStreamsOutput pulumix.Input[*ApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisStreamsOutputArgs] `pulumi:"kinesisStreamsOutput"`
	// Identifies a Lambda function as the destination.
	LambdaOutput pulumix.Input[*ApplicationApplicationConfigurationSqlApplicationConfigurationOutputLambdaOutputArgs] `pulumi:"lambdaOutput"`
	// The name of the in-application stream.
	Name     pulumix.Input[string]  `pulumi:"name"`
	OutputId pulumix.Input[*string] `pulumi:"outputId"`
}

func (ApplicationApplicationConfigurationSqlApplicationConfigurationOutputTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationSqlApplicationConfigurationOutputType)(nil)).Elem()
}

func (i ApplicationApplicationConfigurationSqlApplicationConfigurationOutputTypeArgs) ToApplicationApplicationConfigurationSqlApplicationConfigurationOutputTypeOutput() ApplicationApplicationConfigurationSqlApplicationConfigurationOutputTypeOutput {
	return i.ToApplicationApplicationConfigurationSqlApplicationConfigurationOutputTypeOutputWithContext(context.Background())
}

func (i ApplicationApplicationConfigurationSqlApplicationConfigurationOutputTypeArgs) ToApplicationApplicationConfigurationSqlApplicationConfigurationOutputTypeOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationSqlApplicationConfigurationOutputTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationApplicationConfigurationSqlApplicationConfigurationOutputTypeOutput)
}

func (i *ApplicationApplicationConfigurationSqlApplicationConfigurationOutputTypeArgs) ToOutput(ctx context.Context) pulumix.Output[*ApplicationApplicationConfigurationSqlApplicationConfigurationOutputTypeArgs] {
	return pulumix.Val(i)
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationOutputTypeOutput struct{ *pulumi.OutputState }

func (ApplicationApplicationConfigurationSqlApplicationConfigurationOutputTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationSqlApplicationConfigurationOutputType)(nil)).Elem()
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationOutputTypeOutput) ToApplicationApplicationConfigurationSqlApplicationConfigurationOutputTypeOutput() ApplicationApplicationConfigurationSqlApplicationConfigurationOutputTypeOutput {
	return o
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationOutputTypeOutput) ToApplicationApplicationConfigurationSqlApplicationConfigurationOutputTypeOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationSqlApplicationConfigurationOutputTypeOutput {
	return o
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationOutputTypeOutput) ToOutput(ctx context.Context) pulumix.Output[ApplicationApplicationConfigurationSqlApplicationConfigurationOutputType] {
	return pulumix.Output[ApplicationApplicationConfigurationSqlApplicationConfigurationOutputType]{
		OutputState: o.OutputState,
	}
}

// Describes the data format when records are written to the destination.
func (o ApplicationApplicationConfigurationSqlApplicationConfigurationOutputTypeOutput) DestinationSchema() pulumix.GPtrOutput[ApplicationApplicationConfigurationSqlApplicationConfigurationOutputDestinationSchema, ApplicationApplicationConfigurationSqlApplicationConfigurationOutputDestinationSchemaOutput] {
	value := pulumix.Apply[ApplicationApplicationConfigurationSqlApplicationConfigurationOutputType](o, func(v ApplicationApplicationConfigurationSqlApplicationConfigurationOutputType) ApplicationApplicationConfigurationSqlApplicationConfigurationOutputDestinationSchema {
		return v.DestinationSchema
	})
	return pulumix.GPtrOutput[ApplicationApplicationConfigurationSqlApplicationConfigurationOutputDestinationSchema, ApplicationApplicationConfigurationSqlApplicationConfigurationOutputDestinationSchemaOutput]{OutputState: value.OutputState}
}

// Identifies a Kinesis Data Firehose delivery stream as the destination.
func (o ApplicationApplicationConfigurationSqlApplicationConfigurationOutputTypeOutput) KinesisFirehoseOutput() pulumix.GPtrOutput[ApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisFirehoseOutput, ApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisFirehoseOutputOutput] {
	value := pulumix.Apply[ApplicationApplicationConfigurationSqlApplicationConfigurationOutputType](o, func(v ApplicationApplicationConfigurationSqlApplicationConfigurationOutputType) *ApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisFirehoseOutput {
		return v.KinesisFirehoseOutput
	})
	return pulumix.GPtrOutput[ApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisFirehoseOutput, ApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisFirehoseOutputOutput]{OutputState: value.OutputState}
}

// Identifies a Kinesis data stream as the destination.
func (o ApplicationApplicationConfigurationSqlApplicationConfigurationOutputTypeOutput) KinesisStreamsOutput() pulumix.GPtrOutput[ApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisStreamsOutput, ApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisStreamsOutputOutput] {
	value := pulumix.Apply[ApplicationApplicationConfigurationSqlApplicationConfigurationOutputType](o, func(v ApplicationApplicationConfigurationSqlApplicationConfigurationOutputType) *ApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisStreamsOutput {
		return v.KinesisStreamsOutput
	})
	return pulumix.GPtrOutput[ApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisStreamsOutput, ApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisStreamsOutputOutput]{OutputState: value.OutputState}
}

// Identifies a Lambda function as the destination.
func (o ApplicationApplicationConfigurationSqlApplicationConfigurationOutputTypeOutput) LambdaOutput() pulumix.GPtrOutput[ApplicationApplicationConfigurationSqlApplicationConfigurationOutputLambdaOutput, ApplicationApplicationConfigurationSqlApplicationConfigurationOutputLambdaOutputOutput] {
	value := pulumix.Apply[ApplicationApplicationConfigurationSqlApplicationConfigurationOutputType](o, func(v ApplicationApplicationConfigurationSqlApplicationConfigurationOutputType) *ApplicationApplicationConfigurationSqlApplicationConfigurationOutputLambdaOutput {
		return v.LambdaOutput
	})
	return pulumix.GPtrOutput[ApplicationApplicationConfigurationSqlApplicationConfigurationOutputLambdaOutput, ApplicationApplicationConfigurationSqlApplicationConfigurationOutputLambdaOutputOutput]{OutputState: value.OutputState}
}

// The name of the in-application stream.
func (o ApplicationApplicationConfigurationSqlApplicationConfigurationOutputTypeOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[ApplicationApplicationConfigurationSqlApplicationConfigurationOutputType](o, func(v ApplicationApplicationConfigurationSqlApplicationConfigurationOutputType) string { return v.Name })
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationOutputTypeOutput) OutputId() pulumix.Output[*string] {
	return pulumix.Apply[ApplicationApplicationConfigurationSqlApplicationConfigurationOutputType](o, func(v ApplicationApplicationConfigurationSqlApplicationConfigurationOutputType) *string {
		return v.OutputId
	})
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationOutputDestinationSchema struct {
	// Specifies the format of the records on the output stream. Valid values: `CSV`, `JSON`.
	RecordFormatType string `pulumi:"recordFormatType"`
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationOutputDestinationSchemaArgs struct {
	// Specifies the format of the records on the output stream. Valid values: `CSV`, `JSON`.
	RecordFormatType pulumix.Input[string] `pulumi:"recordFormatType"`
}

func (ApplicationApplicationConfigurationSqlApplicationConfigurationOutputDestinationSchemaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationSqlApplicationConfigurationOutputDestinationSchema)(nil)).Elem()
}

func (i ApplicationApplicationConfigurationSqlApplicationConfigurationOutputDestinationSchemaArgs) ToApplicationApplicationConfigurationSqlApplicationConfigurationOutputDestinationSchemaOutput() ApplicationApplicationConfigurationSqlApplicationConfigurationOutputDestinationSchemaOutput {
	return i.ToApplicationApplicationConfigurationSqlApplicationConfigurationOutputDestinationSchemaOutputWithContext(context.Background())
}

func (i ApplicationApplicationConfigurationSqlApplicationConfigurationOutputDestinationSchemaArgs) ToApplicationApplicationConfigurationSqlApplicationConfigurationOutputDestinationSchemaOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationSqlApplicationConfigurationOutputDestinationSchemaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationApplicationConfigurationSqlApplicationConfigurationOutputDestinationSchemaOutput)
}

func (i *ApplicationApplicationConfigurationSqlApplicationConfigurationOutputDestinationSchemaArgs) ToOutput(ctx context.Context) pulumix.Output[*ApplicationApplicationConfigurationSqlApplicationConfigurationOutputDestinationSchemaArgs] {
	return pulumix.Val(i)
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationOutputDestinationSchemaOutput struct{ *pulumi.OutputState }

func (ApplicationApplicationConfigurationSqlApplicationConfigurationOutputDestinationSchemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationSqlApplicationConfigurationOutputDestinationSchema)(nil)).Elem()
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationOutputDestinationSchemaOutput) ToApplicationApplicationConfigurationSqlApplicationConfigurationOutputDestinationSchemaOutput() ApplicationApplicationConfigurationSqlApplicationConfigurationOutputDestinationSchemaOutput {
	return o
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationOutputDestinationSchemaOutput) ToApplicationApplicationConfigurationSqlApplicationConfigurationOutputDestinationSchemaOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationSqlApplicationConfigurationOutputDestinationSchemaOutput {
	return o
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationOutputDestinationSchemaOutput) ToOutput(ctx context.Context) pulumix.Output[ApplicationApplicationConfigurationSqlApplicationConfigurationOutputDestinationSchema] {
	return pulumix.Output[ApplicationApplicationConfigurationSqlApplicationConfigurationOutputDestinationSchema]{
		OutputState: o.OutputState,
	}
}

// Specifies the format of the records on the output stream. Valid values: `CSV`, `JSON`.
func (o ApplicationApplicationConfigurationSqlApplicationConfigurationOutputDestinationSchemaOutput) RecordFormatType() pulumix.Output[string] {
	return pulumix.Apply[ApplicationApplicationConfigurationSqlApplicationConfigurationOutputDestinationSchema](o, func(v ApplicationApplicationConfigurationSqlApplicationConfigurationOutputDestinationSchema) string {
		return v.RecordFormatType
	})
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisFirehoseOutput struct {
	// The ARN of the destination delivery stream to write to.
	ResourceArn string `pulumi:"resourceArn"`
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisFirehoseOutputArgs struct {
	// The ARN of the destination delivery stream to write to.
	ResourceArn pulumix.Input[string] `pulumi:"resourceArn"`
}

func (ApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisFirehoseOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisFirehoseOutput)(nil)).Elem()
}

func (i ApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisFirehoseOutputArgs) ToApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisFirehoseOutputOutput() ApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisFirehoseOutputOutput {
	return i.ToApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisFirehoseOutputOutputWithContext(context.Background())
}

func (i ApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisFirehoseOutputArgs) ToApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisFirehoseOutputOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisFirehoseOutputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisFirehoseOutputOutput)
}

func (i *ApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisFirehoseOutputArgs) ToOutput(ctx context.Context) pulumix.Output[*ApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisFirehoseOutputArgs] {
	return pulumix.Val(i)
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisFirehoseOutputOutput struct{ *pulumi.OutputState }

func (ApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisFirehoseOutputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisFirehoseOutput)(nil)).Elem()
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisFirehoseOutputOutput) ToApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisFirehoseOutputOutput() ApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisFirehoseOutputOutput {
	return o
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisFirehoseOutputOutput) ToApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisFirehoseOutputOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisFirehoseOutputOutput {
	return o
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisFirehoseOutputOutput) ToOutput(ctx context.Context) pulumix.Output[ApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisFirehoseOutput] {
	return pulumix.Output[ApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisFirehoseOutput]{
		OutputState: o.OutputState,
	}
}

// The ARN of the destination delivery stream to write to.
func (o ApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisFirehoseOutputOutput) ResourceArn() pulumix.Output[string] {
	return pulumix.Apply[ApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisFirehoseOutput](o, func(v ApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisFirehoseOutput) string {
		return v.ResourceArn
	})
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisStreamsOutput struct {
	// The ARN of the destination Kinesis data stream to write to.
	ResourceArn string `pulumi:"resourceArn"`
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisStreamsOutputArgs struct {
	// The ARN of the destination Kinesis data stream to write to.
	ResourceArn pulumix.Input[string] `pulumi:"resourceArn"`
}

func (ApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisStreamsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisStreamsOutput)(nil)).Elem()
}

func (i ApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisStreamsOutputArgs) ToApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisStreamsOutputOutput() ApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisStreamsOutputOutput {
	return i.ToApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisStreamsOutputOutputWithContext(context.Background())
}

func (i ApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisStreamsOutputArgs) ToApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisStreamsOutputOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisStreamsOutputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisStreamsOutputOutput)
}

func (i *ApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisStreamsOutputArgs) ToOutput(ctx context.Context) pulumix.Output[*ApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisStreamsOutputArgs] {
	return pulumix.Val(i)
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisStreamsOutputOutput struct{ *pulumi.OutputState }

func (ApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisStreamsOutputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisStreamsOutput)(nil)).Elem()
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisStreamsOutputOutput) ToApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisStreamsOutputOutput() ApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisStreamsOutputOutput {
	return o
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisStreamsOutputOutput) ToApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisStreamsOutputOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisStreamsOutputOutput {
	return o
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisStreamsOutputOutput) ToOutput(ctx context.Context) pulumix.Output[ApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisStreamsOutput] {
	return pulumix.Output[ApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisStreamsOutput]{
		OutputState: o.OutputState,
	}
}

// The ARN of the destination Kinesis data stream to write to.
func (o ApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisStreamsOutputOutput) ResourceArn() pulumix.Output[string] {
	return pulumix.Apply[ApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisStreamsOutput](o, func(v ApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisStreamsOutput) string {
		return v.ResourceArn
	})
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationOutputLambdaOutput struct {
	// The ARN of the destination Lambda function to write to.
	ResourceArn string `pulumi:"resourceArn"`
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationOutputLambdaOutputArgs struct {
	// The ARN of the destination Lambda function to write to.
	ResourceArn pulumix.Input[string] `pulumi:"resourceArn"`
}

func (ApplicationApplicationConfigurationSqlApplicationConfigurationOutputLambdaOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationSqlApplicationConfigurationOutputLambdaOutput)(nil)).Elem()
}

func (i ApplicationApplicationConfigurationSqlApplicationConfigurationOutputLambdaOutputArgs) ToApplicationApplicationConfigurationSqlApplicationConfigurationOutputLambdaOutputOutput() ApplicationApplicationConfigurationSqlApplicationConfigurationOutputLambdaOutputOutput {
	return i.ToApplicationApplicationConfigurationSqlApplicationConfigurationOutputLambdaOutputOutputWithContext(context.Background())
}

func (i ApplicationApplicationConfigurationSqlApplicationConfigurationOutputLambdaOutputArgs) ToApplicationApplicationConfigurationSqlApplicationConfigurationOutputLambdaOutputOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationSqlApplicationConfigurationOutputLambdaOutputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationApplicationConfigurationSqlApplicationConfigurationOutputLambdaOutputOutput)
}

func (i *ApplicationApplicationConfigurationSqlApplicationConfigurationOutputLambdaOutputArgs) ToOutput(ctx context.Context) pulumix.Output[*ApplicationApplicationConfigurationSqlApplicationConfigurationOutputLambdaOutputArgs] {
	return pulumix.Val(i)
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationOutputLambdaOutputOutput struct{ *pulumi.OutputState }

func (ApplicationApplicationConfigurationSqlApplicationConfigurationOutputLambdaOutputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationSqlApplicationConfigurationOutputLambdaOutput)(nil)).Elem()
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationOutputLambdaOutputOutput) ToApplicationApplicationConfigurationSqlApplicationConfigurationOutputLambdaOutputOutput() ApplicationApplicationConfigurationSqlApplicationConfigurationOutputLambdaOutputOutput {
	return o
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationOutputLambdaOutputOutput) ToApplicationApplicationConfigurationSqlApplicationConfigurationOutputLambdaOutputOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationSqlApplicationConfigurationOutputLambdaOutputOutput {
	return o
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationOutputLambdaOutputOutput) ToOutput(ctx context.Context) pulumix.Output[ApplicationApplicationConfigurationSqlApplicationConfigurationOutputLambdaOutput] {
	return pulumix.Output[ApplicationApplicationConfigurationSqlApplicationConfigurationOutputLambdaOutput]{
		OutputState: o.OutputState,
	}
}

// The ARN of the destination Lambda function to write to.
func (o ApplicationApplicationConfigurationSqlApplicationConfigurationOutputLambdaOutputOutput) ResourceArn() pulumix.Output[string] {
	return pulumix.Apply[ApplicationApplicationConfigurationSqlApplicationConfigurationOutputLambdaOutput](o, func(v ApplicationApplicationConfigurationSqlApplicationConfigurationOutputLambdaOutput) string {
		return v.ResourceArn
	})
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSource struct {
	ReferenceId *string `pulumi:"referenceId"`
	// Describes the format of the data in the streaming source, and how each data element maps to corresponding columns created in the in-application stream.
	ReferenceSchema ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchema `pulumi:"referenceSchema"`
	// Identifies the S3 bucket and object that contains the reference data.
	S3ReferenceDataSource ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSource `pulumi:"s3ReferenceDataSource"`
	// The name of the in-application table to create.
	TableName string `pulumi:"tableName"`
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceArgs struct {
	ReferenceId pulumix.Input[*string] `pulumi:"referenceId"`
	// Describes the format of the data in the streaming source, and how each data element maps to corresponding columns created in the in-application stream.
	ReferenceSchema pulumix.Input[*ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaArgs] `pulumi:"referenceSchema"`
	// Identifies the S3 bucket and object that contains the reference data.
	S3ReferenceDataSource pulumix.Input[*ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceArgs] `pulumi:"s3ReferenceDataSource"`
	// The name of the in-application table to create.
	TableName pulumix.Input[string] `pulumi:"tableName"`
}

func (ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSource)(nil)).Elem()
}

func (i ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceArgs) ToApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceOutput() ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceOutput {
	return i.ToApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceOutputWithContext(context.Background())
}

func (i ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceArgs) ToApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceOutput)
}

func (i *ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceArgs) ToOutput(ctx context.Context) pulumix.Output[*ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceArgs] {
	return pulumix.Val(i)
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceOutput struct{ *pulumi.OutputState }

func (ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSource)(nil)).Elem()
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceOutput) ToApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceOutput() ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceOutput {
	return o
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceOutput) ToApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceOutput {
	return o
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceOutput) ToOutput(ctx context.Context) pulumix.Output[ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSource] {
	return pulumix.Output[ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSource]{
		OutputState: o.OutputState,
	}
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceOutput) ReferenceId() pulumix.Output[*string] {
	return pulumix.Apply[ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSource](o, func(v ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSource) *string {
		return v.ReferenceId
	})
}

// Describes the format of the data in the streaming source, and how each data element maps to corresponding columns created in the in-application stream.
func (o ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceOutput) ReferenceSchema() pulumix.GPtrOutput[ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchema, ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaOutput] {
	value := pulumix.Apply[ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSource](o, func(v ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSource) ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchema {
		return v.ReferenceSchema
	})
	return pulumix.GPtrOutput[ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchema, ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaOutput]{OutputState: value.OutputState}
}

// Identifies the S3 bucket and object that contains the reference data.
func (o ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceOutput) S3ReferenceDataSource() pulumix.GPtrOutput[ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSource, ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceOutput] {
	value := pulumix.Apply[ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSource](o, func(v ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSource) ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSource {
		return v.S3ReferenceDataSource
	})
	return pulumix.GPtrOutput[ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSource, ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceOutput]{OutputState: value.OutputState}
}

// The name of the in-application table to create.
func (o ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceOutput) TableName() pulumix.Output[string] {
	return pulumix.Apply[ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSource](o, func(v ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSource) string {
		return v.TableName
	})
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchema struct {
	// Describes the mapping of each data element in the streaming source to the corresponding column in the in-application stream.
	RecordColumns []ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordColumn `pulumi:"recordColumns"`
	// Specifies the encoding of the records in the streaming source. For example, `UTF-8`.
	//
	// The `s3ReferenceDataSource` object supports the following:
	RecordEncoding *string `pulumi:"recordEncoding"`
	// Specifies the format of the records on the streaming source.
	RecordFormat ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormat `pulumi:"recordFormat"`
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaArgs struct {
	// Describes the mapping of each data element in the streaming source to the corresponding column in the in-application stream.
	RecordColumns pulumix.Input[[]*ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordColumnArgs] `pulumi:"recordColumns"`
	// Specifies the encoding of the records in the streaming source. For example, `UTF-8`.
	//
	// The `s3ReferenceDataSource` object supports the following:
	RecordEncoding pulumix.Input[*string] `pulumi:"recordEncoding"`
	// Specifies the format of the records on the streaming source.
	RecordFormat pulumix.Input[*ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatArgs] `pulumi:"recordFormat"`
}

func (ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchema)(nil)).Elem()
}

func (i ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaArgs) ToApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaOutput() ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaOutput {
	return i.ToApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaOutputWithContext(context.Background())
}

func (i ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaArgs) ToApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaOutput)
}

func (i *ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaArgs) ToOutput(ctx context.Context) pulumix.Output[*ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaArgs] {
	return pulumix.Val(i)
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaOutput struct{ *pulumi.OutputState }

func (ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchema)(nil)).Elem()
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaOutput) ToApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaOutput() ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaOutput {
	return o
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaOutput) ToApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaOutput {
	return o
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaOutput) ToOutput(ctx context.Context) pulumix.Output[ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchema] {
	return pulumix.Output[ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchema]{
		OutputState: o.OutputState,
	}
}

// Describes the mapping of each data element in the streaming source to the corresponding column in the in-application stream.
func (o ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaOutput) RecordColumns() pulumix.GArrayOutput[ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordColumn, ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordColumnOutput] {
	value := pulumix.Apply[ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchema](o, func(v ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchema) []ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordColumn {
		return v.RecordColumns
	})
	return pulumix.GArrayOutput[ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordColumn, ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordColumnOutput]{OutputState: value.OutputState}
}

// Specifies the encoding of the records in the streaming source. For example, `UTF-8`.
//
// The `s3ReferenceDataSource` object supports the following:
func (o ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaOutput) RecordEncoding() pulumix.Output[*string] {
	return pulumix.Apply[ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchema](o, func(v ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchema) *string {
		return v.RecordEncoding
	})
}

// Specifies the format of the records on the streaming source.
func (o ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaOutput) RecordFormat() pulumix.GPtrOutput[ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormat, ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatOutput] {
	value := pulumix.Apply[ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchema](o, func(v ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchema) ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormat {
		return v.RecordFormat
	})
	return pulumix.GPtrOutput[ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormat, ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatOutput]{OutputState: value.OutputState}
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordColumn struct {
	// A reference to the data element in the streaming input or the reference data source.
	Mapping *string `pulumi:"mapping"`
	// The name of the column that is created in the in-application input stream or reference table.
	Name string `pulumi:"name"`
	// The type of column created in the in-application input stream or reference table.
	SqlType string `pulumi:"sqlType"`
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordColumnArgs struct {
	// A reference to the data element in the streaming input or the reference data source.
	Mapping pulumix.Input[*string] `pulumi:"mapping"`
	// The name of the column that is created in the in-application input stream or reference table.
	Name pulumix.Input[string] `pulumi:"name"`
	// The type of column created in the in-application input stream or reference table.
	SqlType pulumix.Input[string] `pulumi:"sqlType"`
}

func (ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordColumnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordColumn)(nil)).Elem()
}

func (i ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordColumnArgs) ToApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordColumnOutput() ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordColumnOutput {
	return i.ToApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordColumnOutputWithContext(context.Background())
}

func (i ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordColumnArgs) ToApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordColumnOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordColumnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordColumnOutput)
}

func (i *ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordColumnArgs) ToOutput(ctx context.Context) pulumix.Output[*ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordColumnArgs] {
	return pulumix.Val(i)
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordColumnOutput struct{ *pulumi.OutputState }

func (ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordColumnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordColumn)(nil)).Elem()
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordColumnOutput) ToApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordColumnOutput() ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordColumnOutput {
	return o
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordColumnOutput) ToApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordColumnOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordColumnOutput {
	return o
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordColumnOutput) ToOutput(ctx context.Context) pulumix.Output[ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordColumn] {
	return pulumix.Output[ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordColumn]{
		OutputState: o.OutputState,
	}
}

// A reference to the data element in the streaming input or the reference data source.
func (o ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordColumnOutput) Mapping() pulumix.Output[*string] {
	return pulumix.Apply[ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordColumn](o, func(v ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordColumn) *string {
		return v.Mapping
	})
}

// The name of the column that is created in the in-application input stream or reference table.
func (o ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordColumnOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordColumn](o, func(v ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordColumn) string {
		return v.Name
	})
}

// The type of column created in the in-application input stream or reference table.
func (o ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordColumnOutput) SqlType() pulumix.Output[string] {
	return pulumix.Apply[ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordColumn](o, func(v ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordColumn) string {
		return v.SqlType
	})
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormat struct {
	// Provides additional mapping information specific to the record format (such as JSON, CSV, or record fields delimited by some delimiter) on the streaming source.
	MappingParameters ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParameters `pulumi:"mappingParameters"`
	// The type of record format. Valid values: `CSV`, `JSON`.
	RecordFormatType string `pulumi:"recordFormatType"`
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatArgs struct {
	// Provides additional mapping information specific to the record format (such as JSON, CSV, or record fields delimited by some delimiter) on the streaming source.
	MappingParameters pulumix.Input[*ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersArgs] `pulumi:"mappingParameters"`
	// The type of record format. Valid values: `CSV`, `JSON`.
	RecordFormatType pulumix.Input[string] `pulumi:"recordFormatType"`
}

func (ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormat)(nil)).Elem()
}

func (i ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatArgs) ToApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatOutput() ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatOutput {
	return i.ToApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatOutputWithContext(context.Background())
}

func (i ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatArgs) ToApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatOutput)
}

func (i *ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatArgs) ToOutput(ctx context.Context) pulumix.Output[*ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatArgs] {
	return pulumix.Val(i)
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatOutput struct{ *pulumi.OutputState }

func (ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormat)(nil)).Elem()
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatOutput) ToApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatOutput() ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatOutput {
	return o
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatOutput) ToApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatOutput {
	return o
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatOutput) ToOutput(ctx context.Context) pulumix.Output[ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormat] {
	return pulumix.Output[ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormat]{
		OutputState: o.OutputState,
	}
}

// Provides additional mapping information specific to the record format (such as JSON, CSV, or record fields delimited by some delimiter) on the streaming source.
func (o ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatOutput) MappingParameters() pulumix.GPtrOutput[ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParameters, ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersOutput] {
	value := pulumix.Apply[ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormat](o, func(v ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormat) ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParameters {
		return v.MappingParameters
	})
	return pulumix.GPtrOutput[ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParameters, ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersOutput]{OutputState: value.OutputState}
}

// The type of record format. Valid values: `CSV`, `JSON`.
func (o ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatOutput) RecordFormatType() pulumix.Output[string] {
	return pulumix.Apply[ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormat](o, func(v ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormat) string {
		return v.RecordFormatType
	})
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParameters struct {
	// Provides additional mapping information when the record format uses delimiters (for example, CSV).
	CsvMappingParameters *ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersCsvMappingParameters `pulumi:"csvMappingParameters"`
	// Provides additional mapping information when JSON is the record format on the streaming source.
	JsonMappingParameters *ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersJsonMappingParameters `pulumi:"jsonMappingParameters"`
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersArgs struct {
	// Provides additional mapping information when the record format uses delimiters (for example, CSV).
	CsvMappingParameters pulumix.Input[*ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersCsvMappingParametersArgs] `pulumi:"csvMappingParameters"`
	// Provides additional mapping information when JSON is the record format on the streaming source.
	JsonMappingParameters pulumix.Input[*ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersJsonMappingParametersArgs] `pulumi:"jsonMappingParameters"`
}

func (ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParameters)(nil)).Elem()
}

func (i ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersArgs) ToApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersOutput() ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersOutput {
	return i.ToApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersOutputWithContext(context.Background())
}

func (i ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersArgs) ToApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersOutput)
}

func (i *ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersArgs) ToOutput(ctx context.Context) pulumix.Output[*ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersArgs] {
	return pulumix.Val(i)
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersOutput struct{ *pulumi.OutputState }

func (ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParameters)(nil)).Elem()
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersOutput) ToApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersOutput() ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersOutput {
	return o
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersOutput) ToApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersOutput {
	return o
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersOutput) ToOutput(ctx context.Context) pulumix.Output[ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParameters] {
	return pulumix.Output[ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParameters]{
		OutputState: o.OutputState,
	}
}

// Provides additional mapping information when the record format uses delimiters (for example, CSV).
func (o ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersOutput) CsvMappingParameters() pulumix.GPtrOutput[ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersCsvMappingParameters, ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersCsvMappingParametersOutput] {
	value := pulumix.Apply[ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParameters](o, func(v ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParameters) *ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersCsvMappingParameters {
		return v.CsvMappingParameters
	})
	return pulumix.GPtrOutput[ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersCsvMappingParameters, ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersCsvMappingParametersOutput]{OutputState: value.OutputState}
}

// Provides additional mapping information when JSON is the record format on the streaming source.
func (o ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersOutput) JsonMappingParameters() pulumix.GPtrOutput[ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersJsonMappingParameters, ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersJsonMappingParametersOutput] {
	value := pulumix.Apply[ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParameters](o, func(v ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParameters) *ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersJsonMappingParameters {
		return v.JsonMappingParameters
	})
	return pulumix.GPtrOutput[ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersJsonMappingParameters, ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersJsonMappingParametersOutput]{OutputState: value.OutputState}
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersCsvMappingParameters struct {
	// The column delimiter. For example, in a CSV format, a comma (`,`) is the typical column delimiter.
	RecordColumnDelimiter string `pulumi:"recordColumnDelimiter"`
	// The row delimiter. For example, in a CSV format, `\n` is the typical row delimiter.
	RecordRowDelimiter string `pulumi:"recordRowDelimiter"`
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersCsvMappingParametersArgs struct {
	// The column delimiter. For example, in a CSV format, a comma (`,`) is the typical column delimiter.
	RecordColumnDelimiter pulumix.Input[string] `pulumi:"recordColumnDelimiter"`
	// The row delimiter. For example, in a CSV format, `\n` is the typical row delimiter.
	RecordRowDelimiter pulumix.Input[string] `pulumi:"recordRowDelimiter"`
}

func (ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersCsvMappingParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersCsvMappingParameters)(nil)).Elem()
}

func (i ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersCsvMappingParametersArgs) ToApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersCsvMappingParametersOutput() ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersCsvMappingParametersOutput {
	return i.ToApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersCsvMappingParametersOutputWithContext(context.Background())
}

func (i ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersCsvMappingParametersArgs) ToApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersCsvMappingParametersOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersCsvMappingParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersCsvMappingParametersOutput)
}

func (i *ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersCsvMappingParametersArgs) ToOutput(ctx context.Context) pulumix.Output[*ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersCsvMappingParametersArgs] {
	return pulumix.Val(i)
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersCsvMappingParametersOutput struct{ *pulumi.OutputState }

func (ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersCsvMappingParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersCsvMappingParameters)(nil)).Elem()
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersCsvMappingParametersOutput) ToApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersCsvMappingParametersOutput() ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersCsvMappingParametersOutput {
	return o
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersCsvMappingParametersOutput) ToApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersCsvMappingParametersOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersCsvMappingParametersOutput {
	return o
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersCsvMappingParametersOutput) ToOutput(ctx context.Context) pulumix.Output[ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersCsvMappingParameters] {
	return pulumix.Output[ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersCsvMappingParameters]{
		OutputState: o.OutputState,
	}
}

// The column delimiter. For example, in a CSV format, a comma (`,`) is the typical column delimiter.
func (o ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersCsvMappingParametersOutput) RecordColumnDelimiter() pulumix.Output[string] {
	return pulumix.Apply[ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersCsvMappingParameters](o, func(v ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersCsvMappingParameters) string {
		return v.RecordColumnDelimiter
	})
}

// The row delimiter. For example, in a CSV format, `\n` is the typical row delimiter.
func (o ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersCsvMappingParametersOutput) RecordRowDelimiter() pulumix.Output[string] {
	return pulumix.Apply[ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersCsvMappingParameters](o, func(v ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersCsvMappingParameters) string {
		return v.RecordRowDelimiter
	})
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersJsonMappingParameters struct {
	// The path to the top-level parent that contains the records.
	RecordRowPath string `pulumi:"recordRowPath"`
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersJsonMappingParametersArgs struct {
	// The path to the top-level parent that contains the records.
	RecordRowPath pulumix.Input[string] `pulumi:"recordRowPath"`
}

func (ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersJsonMappingParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersJsonMappingParameters)(nil)).Elem()
}

func (i ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersJsonMappingParametersArgs) ToApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersJsonMappingParametersOutput() ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersJsonMappingParametersOutput {
	return i.ToApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersJsonMappingParametersOutputWithContext(context.Background())
}

func (i ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersJsonMappingParametersArgs) ToApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersJsonMappingParametersOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersJsonMappingParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersJsonMappingParametersOutput)
}

func (i *ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersJsonMappingParametersArgs) ToOutput(ctx context.Context) pulumix.Output[*ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersJsonMappingParametersArgs] {
	return pulumix.Val(i)
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersJsonMappingParametersOutput struct{ *pulumi.OutputState }

func (ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersJsonMappingParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersJsonMappingParameters)(nil)).Elem()
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersJsonMappingParametersOutput) ToApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersJsonMappingParametersOutput() ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersJsonMappingParametersOutput {
	return o
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersJsonMappingParametersOutput) ToApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersJsonMappingParametersOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersJsonMappingParametersOutput {
	return o
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersJsonMappingParametersOutput) ToOutput(ctx context.Context) pulumix.Output[ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersJsonMappingParameters] {
	return pulumix.Output[ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersJsonMappingParameters]{
		OutputState: o.OutputState,
	}
}

// The path to the top-level parent that contains the records.
func (o ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersJsonMappingParametersOutput) RecordRowPath() pulumix.Output[string] {
	return pulumix.Apply[ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersJsonMappingParameters](o, func(v ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersJsonMappingParameters) string {
		return v.RecordRowPath
	})
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSource struct {
	// The ARN for the S3 bucket containing the application code.
	BucketArn string `pulumi:"bucketArn"`
	// The file key for the object containing the application code.
	FileKey string `pulumi:"fileKey"`
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceArgs struct {
	// The ARN for the S3 bucket containing the application code.
	BucketArn pulumix.Input[string] `pulumi:"bucketArn"`
	// The file key for the object containing the application code.
	FileKey pulumix.Input[string] `pulumi:"fileKey"`
}

func (ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSource)(nil)).Elem()
}

func (i ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceArgs) ToApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceOutput() ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceOutput {
	return i.ToApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceOutputWithContext(context.Background())
}

func (i ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceArgs) ToApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceOutput)
}

func (i *ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceArgs) ToOutput(ctx context.Context) pulumix.Output[*ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceArgs] {
	return pulumix.Val(i)
}

type ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceOutput struct{ *pulumi.OutputState }

func (ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSource)(nil)).Elem()
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceOutput) ToApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceOutput() ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceOutput {
	return o
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceOutput) ToApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceOutput {
	return o
}

func (o ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceOutput) ToOutput(ctx context.Context) pulumix.Output[ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSource] {
	return pulumix.Output[ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSource]{
		OutputState: o.OutputState,
	}
}

// The ARN for the S3 bucket containing the application code.
func (o ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceOutput) BucketArn() pulumix.Output[string] {
	return pulumix.Apply[ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSource](o, func(v ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSource) string {
		return v.BucketArn
	})
}

// The file key for the object containing the application code.
func (o ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceOutput) FileKey() pulumix.Output[string] {
	return pulumix.Apply[ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSource](o, func(v ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSource) string {
		return v.FileKey
	})
}

type ApplicationApplicationConfigurationVpcConfiguration struct {
	// The Security Group IDs used by the VPC configuration.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// The Subnet IDs used by the VPC configuration.
	SubnetIds          []string `pulumi:"subnetIds"`
	VpcConfigurationId *string  `pulumi:"vpcConfigurationId"`
	VpcId              *string  `pulumi:"vpcId"`
}

type ApplicationApplicationConfigurationVpcConfigurationArgs struct {
	// The Security Group IDs used by the VPC configuration.
	SecurityGroupIds pulumix.Input[[]string] `pulumi:"securityGroupIds"`
	// The Subnet IDs used by the VPC configuration.
	SubnetIds          pulumix.Input[[]string] `pulumi:"subnetIds"`
	VpcConfigurationId pulumix.Input[*string]  `pulumi:"vpcConfigurationId"`
	VpcId              pulumix.Input[*string]  `pulumi:"vpcId"`
}

func (ApplicationApplicationConfigurationVpcConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationVpcConfiguration)(nil)).Elem()
}

func (i ApplicationApplicationConfigurationVpcConfigurationArgs) ToApplicationApplicationConfigurationVpcConfigurationOutput() ApplicationApplicationConfigurationVpcConfigurationOutput {
	return i.ToApplicationApplicationConfigurationVpcConfigurationOutputWithContext(context.Background())
}

func (i ApplicationApplicationConfigurationVpcConfigurationArgs) ToApplicationApplicationConfigurationVpcConfigurationOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationVpcConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationApplicationConfigurationVpcConfigurationOutput)
}

func (i *ApplicationApplicationConfigurationVpcConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[*ApplicationApplicationConfigurationVpcConfigurationArgs] {
	return pulumix.Val(i)
}

type ApplicationApplicationConfigurationVpcConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationApplicationConfigurationVpcConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationApplicationConfigurationVpcConfiguration)(nil)).Elem()
}

func (o ApplicationApplicationConfigurationVpcConfigurationOutput) ToApplicationApplicationConfigurationVpcConfigurationOutput() ApplicationApplicationConfigurationVpcConfigurationOutput {
	return o
}

func (o ApplicationApplicationConfigurationVpcConfigurationOutput) ToApplicationApplicationConfigurationVpcConfigurationOutputWithContext(ctx context.Context) ApplicationApplicationConfigurationVpcConfigurationOutput {
	return o
}

func (o ApplicationApplicationConfigurationVpcConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[ApplicationApplicationConfigurationVpcConfiguration] {
	return pulumix.Output[ApplicationApplicationConfigurationVpcConfiguration]{
		OutputState: o.OutputState,
	}
}

// The Security Group IDs used by the VPC configuration.
func (o ApplicationApplicationConfigurationVpcConfigurationOutput) SecurityGroupIds() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[ApplicationApplicationConfigurationVpcConfiguration](o, func(v ApplicationApplicationConfigurationVpcConfiguration) []string { return v.SecurityGroupIds })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

// The Subnet IDs used by the VPC configuration.
func (o ApplicationApplicationConfigurationVpcConfigurationOutput) SubnetIds() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[ApplicationApplicationConfigurationVpcConfiguration](o, func(v ApplicationApplicationConfigurationVpcConfiguration) []string { return v.SubnetIds })
	return pulumix.ArrayOutput[string]{OutputState: value.OutputState}
}

func (o ApplicationApplicationConfigurationVpcConfigurationOutput) VpcConfigurationId() pulumix.Output[*string] {
	return pulumix.Apply[ApplicationApplicationConfigurationVpcConfiguration](o, func(v ApplicationApplicationConfigurationVpcConfiguration) *string { return v.VpcConfigurationId })
}

func (o ApplicationApplicationConfigurationVpcConfigurationOutput) VpcId() pulumix.Output[*string] {
	return pulumix.Apply[ApplicationApplicationConfigurationVpcConfiguration](o, func(v ApplicationApplicationConfigurationVpcConfiguration) *string { return v.VpcId })
}

type ApplicationCloudwatchLoggingOptions struct {
	CloudwatchLoggingOptionId *string `pulumi:"cloudwatchLoggingOptionId"`
	// The ARN of the CloudWatch log stream to receive application messages.
	LogStreamArn string `pulumi:"logStreamArn"`
}

type ApplicationCloudwatchLoggingOptionsArgs struct {
	CloudwatchLoggingOptionId pulumix.Input[*string] `pulumi:"cloudwatchLoggingOptionId"`
	// The ARN of the CloudWatch log stream to receive application messages.
	LogStreamArn pulumix.Input[string] `pulumi:"logStreamArn"`
}

func (ApplicationCloudwatchLoggingOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationCloudwatchLoggingOptions)(nil)).Elem()
}

func (i ApplicationCloudwatchLoggingOptionsArgs) ToApplicationCloudwatchLoggingOptionsOutput() ApplicationCloudwatchLoggingOptionsOutput {
	return i.ToApplicationCloudwatchLoggingOptionsOutputWithContext(context.Background())
}

func (i ApplicationCloudwatchLoggingOptionsArgs) ToApplicationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) ApplicationCloudwatchLoggingOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationCloudwatchLoggingOptionsOutput)
}

func (i *ApplicationCloudwatchLoggingOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[*ApplicationCloudwatchLoggingOptionsArgs] {
	return pulumix.Val(i)
}

type ApplicationCloudwatchLoggingOptionsOutput struct{ *pulumi.OutputState }

func (ApplicationCloudwatchLoggingOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationCloudwatchLoggingOptions)(nil)).Elem()
}

func (o ApplicationCloudwatchLoggingOptionsOutput) ToApplicationCloudwatchLoggingOptionsOutput() ApplicationCloudwatchLoggingOptionsOutput {
	return o
}

func (o ApplicationCloudwatchLoggingOptionsOutput) ToApplicationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) ApplicationCloudwatchLoggingOptionsOutput {
	return o
}

func (o ApplicationCloudwatchLoggingOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[ApplicationCloudwatchLoggingOptions] {
	return pulumix.Output[ApplicationCloudwatchLoggingOptions]{
		OutputState: o.OutputState,
	}
}

func (o ApplicationCloudwatchLoggingOptionsOutput) CloudwatchLoggingOptionId() pulumix.Output[*string] {
	return pulumix.Apply[ApplicationCloudwatchLoggingOptions](o, func(v ApplicationCloudwatchLoggingOptions) *string { return v.CloudwatchLoggingOptionId })
}

// The ARN of the CloudWatch log stream to receive application messages.
func (o ApplicationCloudwatchLoggingOptionsOutput) LogStreamArn() pulumix.Output[string] {
	return pulumix.Apply[ApplicationCloudwatchLoggingOptions](o, func(v ApplicationCloudwatchLoggingOptions) string { return v.LogStreamArn })
}

func init() {
	pulumi.RegisterOutputType(ApplicationApplicationConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationApplicationConfigurationApplicationCodeConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentOutput{})
	pulumi.RegisterOutputType(ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationOutput{})
	pulumi.RegisterOutputType(ApplicationApplicationConfigurationApplicationSnapshotConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationApplicationConfigurationEnvironmentPropertiesOutput{})
	pulumi.RegisterOutputType(ApplicationApplicationConfigurationEnvironmentPropertiesPropertyGroupOutput{})
	pulumi.RegisterOutputType(ApplicationApplicationConfigurationFlinkApplicationConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationApplicationConfigurationFlinkApplicationConfigurationMonitoringConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationApplicationConfigurationFlinkApplicationConfigurationParallelismConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationApplicationConfigurationRunConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationApplicationConfigurationRunConfigurationApplicationRestoreConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationApplicationConfigurationRunConfigurationFlinkRunConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationApplicationConfigurationSqlApplicationConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationApplicationConfigurationSqlApplicationConfigurationInputTypeOutput{})
	pulumi.RegisterOutputType(ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputParallelismOutput{})
	pulumi.RegisterOutputType(ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputProcessingConfigurationInputLambdaProcessorOutput{})
	pulumi.RegisterOutputType(ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaOutput{})
	pulumi.RegisterOutputType(ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordColumnOutput{})
	pulumi.RegisterOutputType(ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatOutput{})
	pulumi.RegisterOutputType(ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersOutput{})
	pulumi.RegisterOutputType(ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersCsvMappingParametersOutput{})
	pulumi.RegisterOutputType(ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersJsonMappingParametersOutput{})
	pulumi.RegisterOutputType(ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputStartingPositionConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisFirehoseInputOutput{})
	pulumi.RegisterOutputType(ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisStreamsInputOutput{})
	pulumi.RegisterOutputType(ApplicationApplicationConfigurationSqlApplicationConfigurationOutputTypeOutput{})
	pulumi.RegisterOutputType(ApplicationApplicationConfigurationSqlApplicationConfigurationOutputDestinationSchemaOutput{})
	pulumi.RegisterOutputType(ApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisFirehoseOutputOutput{})
	pulumi.RegisterOutputType(ApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisStreamsOutputOutput{})
	pulumi.RegisterOutputType(ApplicationApplicationConfigurationSqlApplicationConfigurationOutputLambdaOutputOutput{})
	pulumi.RegisterOutputType(ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceOutput{})
	pulumi.RegisterOutputType(ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaOutput{})
	pulumi.RegisterOutputType(ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordColumnOutput{})
	pulumi.RegisterOutputType(ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatOutput{})
	pulumi.RegisterOutputType(ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersOutput{})
	pulumi.RegisterOutputType(ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersCsvMappingParametersOutput{})
	pulumi.RegisterOutputType(ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersJsonMappingParametersOutput{})
	pulumi.RegisterOutputType(ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceOutput{})
	pulumi.RegisterOutputType(ApplicationApplicationConfigurationVpcConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationCloudwatchLoggingOptionsOutput{})
}
