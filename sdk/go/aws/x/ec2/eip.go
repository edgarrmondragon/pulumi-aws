// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an Elastic IP resource.
//
// > **Note:** EIP may require IGW to exist prior to association. Use `dependsOn` to set an explicit dependency on the IGW.
//
// > **Note:** Do not use `networkInterface` to associate the EIP to `lb.LoadBalancer` or `ec2.NatGateway` resources. Instead use the `allocationId` available in those resources to allow AWS to manage the association, otherwise you will see `AuthFailure` errors.
type Eip struct {
	pulumi.CustomResourceState

	// IP address from an EC2 BYOIP pool. This option is only available for VPC EIPs.
	Address pulumix.Output[*string] `pulumi:"address"`
	// ID that AWS assigns to represent the allocation of the Elastic IP address for use with instances in a VPC.
	AllocationId pulumix.Output[string] `pulumi:"allocationId"`
	// User-specified primary or secondary private IP address to associate with the Elastic IP address. If no private IP address is specified, the Elastic IP address is associated with the primary private IP address.
	AssociateWithPrivateIp pulumix.Output[*string] `pulumi:"associateWithPrivateIp"`
	// ID representing the association of the address with an instance in a VPC.
	AssociationId pulumix.Output[string] `pulumi:"associationId"`
	// Carrier IP address.
	CarrierIp pulumix.Output[string] `pulumi:"carrierIp"`
	// Customer owned IP.
	CustomerOwnedIp pulumix.Output[string] `pulumi:"customerOwnedIp"`
	// ID  of a customer-owned address pool. For more on customer owned IP addressed check out [Customer-owned IP addresses guide](https://docs.aws.amazon.com/outposts/latest/userguide/outposts-networking-components.html#ip-addressing).
	CustomerOwnedIpv4Pool pulumix.Output[*string] `pulumi:"customerOwnedIpv4Pool"`
	// Indicates if this EIP is for use in VPC (`vpc`).
	Domain pulumix.Output[string] `pulumi:"domain"`
	// EC2 instance ID.
	Instance pulumix.Output[string] `pulumi:"instance"`
	// Location from which the IP address is advertised. Use this parameter to limit the address to this location.
	NetworkBorderGroup pulumix.Output[string] `pulumi:"networkBorderGroup"`
	// Network interface ID to associate with.
	NetworkInterface pulumix.Output[string] `pulumi:"networkInterface"`
	// The Private DNS associated with the Elastic IP address (if in VPC).
	PrivateDns pulumix.Output[string] `pulumi:"privateDns"`
	// Contains the private IP address (if in VPC).
	PrivateIp pulumix.Output[string] `pulumi:"privateIp"`
	// Public DNS associated with the Elastic IP address.
	PublicDns pulumix.Output[string] `pulumi:"publicDns"`
	// Contains the public IP address.
	PublicIp pulumix.Output[string] `pulumi:"publicIp"`
	// EC2 IPv4 address pool identifier or `amazon`.
	// This option is only available for VPC EIPs.
	PublicIpv4Pool pulumix.Output[string] `pulumi:"publicIpv4Pool"`
	// Map of tags to assign to the resource. Tags can only be applied to EIPs in a VPC. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// Boolean if the EIP is in a VPC or not. Use `domain` instead.
	// Defaults to `true` unless the region supports EC2-Classic.
	//
	// > **NOTE:** You can specify either the `instance` ID or the `networkInterface` ID, but not both. Including both will **not** return an error from the AWS API, but will have undefined behavior. See the relevant [AssociateAddress API Call][1] for more information.
	//
	// > **NOTE:** Specifying both `publicIpv4Pool` and `address` won't cause an error but `address` will be used in the
	// case both options are defined as the api only requires one or the other.
	//
	// Deprecated: use domain attribute instead
	Vpc pulumix.Output[bool] `pulumi:"vpc"`
}

// NewEip registers a new resource with the given unique name, arguments, and options.
func NewEip(ctx *pulumi.Context,
	name string, args *EipArgs, opts ...pulumi.ResourceOption) (*Eip, error) {
	if args == nil {
		args = &EipArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Eip
	err := ctx.RegisterResource("aws:ec2/eip:Eip", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEip gets an existing Eip resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEip(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EipState, opts ...pulumi.ResourceOption) (*Eip, error) {
	var resource Eip
	err := ctx.ReadResource("aws:ec2/eip:Eip", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Eip resources.
type eipState struct {
	// IP address from an EC2 BYOIP pool. This option is only available for VPC EIPs.
	Address *string `pulumi:"address"`
	// ID that AWS assigns to represent the allocation of the Elastic IP address for use with instances in a VPC.
	AllocationId *string `pulumi:"allocationId"`
	// User-specified primary or secondary private IP address to associate with the Elastic IP address. If no private IP address is specified, the Elastic IP address is associated with the primary private IP address.
	AssociateWithPrivateIp *string `pulumi:"associateWithPrivateIp"`
	// ID representing the association of the address with an instance in a VPC.
	AssociationId *string `pulumi:"associationId"`
	// Carrier IP address.
	CarrierIp *string `pulumi:"carrierIp"`
	// Customer owned IP.
	CustomerOwnedIp *string `pulumi:"customerOwnedIp"`
	// ID  of a customer-owned address pool. For more on customer owned IP addressed check out [Customer-owned IP addresses guide](https://docs.aws.amazon.com/outposts/latest/userguide/outposts-networking-components.html#ip-addressing).
	CustomerOwnedIpv4Pool *string `pulumi:"customerOwnedIpv4Pool"`
	// Indicates if this EIP is for use in VPC (`vpc`).
	Domain *string `pulumi:"domain"`
	// EC2 instance ID.
	Instance *string `pulumi:"instance"`
	// Location from which the IP address is advertised. Use this parameter to limit the address to this location.
	NetworkBorderGroup *string `pulumi:"networkBorderGroup"`
	// Network interface ID to associate with.
	NetworkInterface *string `pulumi:"networkInterface"`
	// The Private DNS associated with the Elastic IP address (if in VPC).
	PrivateDns *string `pulumi:"privateDns"`
	// Contains the private IP address (if in VPC).
	PrivateIp *string `pulumi:"privateIp"`
	// Public DNS associated with the Elastic IP address.
	PublicDns *string `pulumi:"publicDns"`
	// Contains the public IP address.
	PublicIp *string `pulumi:"publicIp"`
	// EC2 IPv4 address pool identifier or `amazon`.
	// This option is only available for VPC EIPs.
	PublicIpv4Pool *string `pulumi:"publicIpv4Pool"`
	// Map of tags to assign to the resource. Tags can only be applied to EIPs in a VPC. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// Boolean if the EIP is in a VPC or not. Use `domain` instead.
	// Defaults to `true` unless the region supports EC2-Classic.
	//
	// > **NOTE:** You can specify either the `instance` ID or the `networkInterface` ID, but not both. Including both will **not** return an error from the AWS API, but will have undefined behavior. See the relevant [AssociateAddress API Call][1] for more information.
	//
	// > **NOTE:** Specifying both `publicIpv4Pool` and `address` won't cause an error but `address` will be used in the
	// case both options are defined as the api only requires one or the other.
	//
	// Deprecated: use domain attribute instead
	Vpc *bool `pulumi:"vpc"`
}

type EipState struct {
	// IP address from an EC2 BYOIP pool. This option is only available for VPC EIPs.
	Address pulumix.Input[*string]
	// ID that AWS assigns to represent the allocation of the Elastic IP address for use with instances in a VPC.
	AllocationId pulumix.Input[*string]
	// User-specified primary or secondary private IP address to associate with the Elastic IP address. If no private IP address is specified, the Elastic IP address is associated with the primary private IP address.
	AssociateWithPrivateIp pulumix.Input[*string]
	// ID representing the association of the address with an instance in a VPC.
	AssociationId pulumix.Input[*string]
	// Carrier IP address.
	CarrierIp pulumix.Input[*string]
	// Customer owned IP.
	CustomerOwnedIp pulumix.Input[*string]
	// ID  of a customer-owned address pool. For more on customer owned IP addressed check out [Customer-owned IP addresses guide](https://docs.aws.amazon.com/outposts/latest/userguide/outposts-networking-components.html#ip-addressing).
	CustomerOwnedIpv4Pool pulumix.Input[*string]
	// Indicates if this EIP is for use in VPC (`vpc`).
	Domain pulumix.Input[*string]
	// EC2 instance ID.
	Instance pulumix.Input[*string]
	// Location from which the IP address is advertised. Use this parameter to limit the address to this location.
	NetworkBorderGroup pulumix.Input[*string]
	// Network interface ID to associate with.
	NetworkInterface pulumix.Input[*string]
	// The Private DNS associated with the Elastic IP address (if in VPC).
	PrivateDns pulumix.Input[*string]
	// Contains the private IP address (if in VPC).
	PrivateIp pulumix.Input[*string]
	// Public DNS associated with the Elastic IP address.
	PublicDns pulumix.Input[*string]
	// Contains the public IP address.
	PublicIp pulumix.Input[*string]
	// EC2 IPv4 address pool identifier or `amazon`.
	// This option is only available for VPC EIPs.
	PublicIpv4Pool pulumix.Input[*string]
	// Map of tags to assign to the resource. Tags can only be applied to EIPs in a VPC. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// Boolean if the EIP is in a VPC or not. Use `domain` instead.
	// Defaults to `true` unless the region supports EC2-Classic.
	//
	// > **NOTE:** You can specify either the `instance` ID or the `networkInterface` ID, but not both. Including both will **not** return an error from the AWS API, but will have undefined behavior. See the relevant [AssociateAddress API Call][1] for more information.
	//
	// > **NOTE:** Specifying both `publicIpv4Pool` and `address` won't cause an error but `address` will be used in the
	// case both options are defined as the api only requires one or the other.
	//
	// Deprecated: use domain attribute instead
	Vpc pulumix.Input[*bool]
}

func (EipState) ElementType() reflect.Type {
	return reflect.TypeOf((*eipState)(nil)).Elem()
}

type eipArgs struct {
	// IP address from an EC2 BYOIP pool. This option is only available for VPC EIPs.
	Address *string `pulumi:"address"`
	// User-specified primary or secondary private IP address to associate with the Elastic IP address. If no private IP address is specified, the Elastic IP address is associated with the primary private IP address.
	AssociateWithPrivateIp *string `pulumi:"associateWithPrivateIp"`
	// ID  of a customer-owned address pool. For more on customer owned IP addressed check out [Customer-owned IP addresses guide](https://docs.aws.amazon.com/outposts/latest/userguide/outposts-networking-components.html#ip-addressing).
	CustomerOwnedIpv4Pool *string `pulumi:"customerOwnedIpv4Pool"`
	// Indicates if this EIP is for use in VPC (`vpc`).
	Domain *string `pulumi:"domain"`
	// EC2 instance ID.
	Instance *string `pulumi:"instance"`
	// Location from which the IP address is advertised. Use this parameter to limit the address to this location.
	NetworkBorderGroup *string `pulumi:"networkBorderGroup"`
	// Network interface ID to associate with.
	NetworkInterface *string `pulumi:"networkInterface"`
	// EC2 IPv4 address pool identifier or `amazon`.
	// This option is only available for VPC EIPs.
	PublicIpv4Pool *string `pulumi:"publicIpv4Pool"`
	// Map of tags to assign to the resource. Tags can only be applied to EIPs in a VPC. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Boolean if the EIP is in a VPC or not. Use `domain` instead.
	// Defaults to `true` unless the region supports EC2-Classic.
	//
	// > **NOTE:** You can specify either the `instance` ID or the `networkInterface` ID, but not both. Including both will **not** return an error from the AWS API, but will have undefined behavior. See the relevant [AssociateAddress API Call][1] for more information.
	//
	// > **NOTE:** Specifying both `publicIpv4Pool` and `address` won't cause an error but `address` will be used in the
	// case both options are defined as the api only requires one or the other.
	//
	// Deprecated: use domain attribute instead
	Vpc *bool `pulumi:"vpc"`
}

// The set of arguments for constructing a Eip resource.
type EipArgs struct {
	// IP address from an EC2 BYOIP pool. This option is only available for VPC EIPs.
	Address pulumix.Input[*string]
	// User-specified primary or secondary private IP address to associate with the Elastic IP address. If no private IP address is specified, the Elastic IP address is associated with the primary private IP address.
	AssociateWithPrivateIp pulumix.Input[*string]
	// ID  of a customer-owned address pool. For more on customer owned IP addressed check out [Customer-owned IP addresses guide](https://docs.aws.amazon.com/outposts/latest/userguide/outposts-networking-components.html#ip-addressing).
	CustomerOwnedIpv4Pool pulumix.Input[*string]
	// Indicates if this EIP is for use in VPC (`vpc`).
	Domain pulumix.Input[*string]
	// EC2 instance ID.
	Instance pulumix.Input[*string]
	// Location from which the IP address is advertised. Use this parameter to limit the address to this location.
	NetworkBorderGroup pulumix.Input[*string]
	// Network interface ID to associate with.
	NetworkInterface pulumix.Input[*string]
	// EC2 IPv4 address pool identifier or `amazon`.
	// This option is only available for VPC EIPs.
	PublicIpv4Pool pulumix.Input[*string]
	// Map of tags to assign to the resource. Tags can only be applied to EIPs in a VPC. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// Boolean if the EIP is in a VPC or not. Use `domain` instead.
	// Defaults to `true` unless the region supports EC2-Classic.
	//
	// > **NOTE:** You can specify either the `instance` ID or the `networkInterface` ID, but not both. Including both will **not** return an error from the AWS API, but will have undefined behavior. See the relevant [AssociateAddress API Call][1] for more information.
	//
	// > **NOTE:** Specifying both `publicIpv4Pool` and `address` won't cause an error but `address` will be used in the
	// case both options are defined as the api only requires one or the other.
	//
	// Deprecated: use domain attribute instead
	Vpc pulumix.Input[*bool]
}

func (EipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*eipArgs)(nil)).Elem()
}

type EipOutput struct{ *pulumi.OutputState }

func (EipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Eip)(nil)).Elem()
}

func (o EipOutput) ToEipOutput() EipOutput {
	return o
}

func (o EipOutput) ToEipOutputWithContext(ctx context.Context) EipOutput {
	return o
}

func (o EipOutput) ToOutput(ctx context.Context) pulumix.Output[Eip] {
	return pulumix.Output[Eip]{
		OutputState: o.OutputState,
	}
}

// IP address from an EC2 BYOIP pool. This option is only available for VPC EIPs.
func (o EipOutput) Address() pulumix.Output[*string] {
	value := pulumix.Apply[Eip](o, func(v Eip) pulumix.Output[*string] { return v.Address })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// ID that AWS assigns to represent the allocation of the Elastic IP address for use with instances in a VPC.
func (o EipOutput) AllocationId() pulumix.Output[string] {
	value := pulumix.Apply[Eip](o, func(v Eip) pulumix.Output[string] { return v.AllocationId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// User-specified primary or secondary private IP address to associate with the Elastic IP address. If no private IP address is specified, the Elastic IP address is associated with the primary private IP address.
func (o EipOutput) AssociateWithPrivateIp() pulumix.Output[*string] {
	value := pulumix.Apply[Eip](o, func(v Eip) pulumix.Output[*string] { return v.AssociateWithPrivateIp })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// ID representing the association of the address with an instance in a VPC.
func (o EipOutput) AssociationId() pulumix.Output[string] {
	value := pulumix.Apply[Eip](o, func(v Eip) pulumix.Output[string] { return v.AssociationId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Carrier IP address.
func (o EipOutput) CarrierIp() pulumix.Output[string] {
	value := pulumix.Apply[Eip](o, func(v Eip) pulumix.Output[string] { return v.CarrierIp })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Customer owned IP.
func (o EipOutput) CustomerOwnedIp() pulumix.Output[string] {
	value := pulumix.Apply[Eip](o, func(v Eip) pulumix.Output[string] { return v.CustomerOwnedIp })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// ID  of a customer-owned address pool. For more on customer owned IP addressed check out [Customer-owned IP addresses guide](https://docs.aws.amazon.com/outposts/latest/userguide/outposts-networking-components.html#ip-addressing).
func (o EipOutput) CustomerOwnedIpv4Pool() pulumix.Output[*string] {
	value := pulumix.Apply[Eip](o, func(v Eip) pulumix.Output[*string] { return v.CustomerOwnedIpv4Pool })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Indicates if this EIP is for use in VPC (`vpc`).
func (o EipOutput) Domain() pulumix.Output[string] {
	value := pulumix.Apply[Eip](o, func(v Eip) pulumix.Output[string] { return v.Domain })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// EC2 instance ID.
func (o EipOutput) Instance() pulumix.Output[string] {
	value := pulumix.Apply[Eip](o, func(v Eip) pulumix.Output[string] { return v.Instance })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Location from which the IP address is advertised. Use this parameter to limit the address to this location.
func (o EipOutput) NetworkBorderGroup() pulumix.Output[string] {
	value := pulumix.Apply[Eip](o, func(v Eip) pulumix.Output[string] { return v.NetworkBorderGroup })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Network interface ID to associate with.
func (o EipOutput) NetworkInterface() pulumix.Output[string] {
	value := pulumix.Apply[Eip](o, func(v Eip) pulumix.Output[string] { return v.NetworkInterface })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The Private DNS associated with the Elastic IP address (if in VPC).
func (o EipOutput) PrivateDns() pulumix.Output[string] {
	value := pulumix.Apply[Eip](o, func(v Eip) pulumix.Output[string] { return v.PrivateDns })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Contains the private IP address (if in VPC).
func (o EipOutput) PrivateIp() pulumix.Output[string] {
	value := pulumix.Apply[Eip](o, func(v Eip) pulumix.Output[string] { return v.PrivateIp })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Public DNS associated with the Elastic IP address.
func (o EipOutput) PublicDns() pulumix.Output[string] {
	value := pulumix.Apply[Eip](o, func(v Eip) pulumix.Output[string] { return v.PublicDns })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Contains the public IP address.
func (o EipOutput) PublicIp() pulumix.Output[string] {
	value := pulumix.Apply[Eip](o, func(v Eip) pulumix.Output[string] { return v.PublicIp })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// EC2 IPv4 address pool identifier or `amazon`.
// This option is only available for VPC EIPs.
func (o EipOutput) PublicIpv4Pool() pulumix.Output[string] {
	value := pulumix.Apply[Eip](o, func(v Eip) pulumix.Output[string] { return v.PublicIpv4Pool })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Map of tags to assign to the resource. Tags can only be applied to EIPs in a VPC. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o EipOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Eip](o, func(v Eip) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o EipOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[Eip](o, func(v Eip) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Boolean if the EIP is in a VPC or not. Use `domain` instead.
// Defaults to `true` unless the region supports EC2-Classic.
//
// > **NOTE:** You can specify either the `instance` ID or the `networkInterface` ID, but not both. Including both will **not** return an error from the AWS API, but will have undefined behavior. See the relevant [AssociateAddress API Call][1] for more information.
//
// > **NOTE:** Specifying both `publicIpv4Pool` and `address` won't cause an error but `address` will be used in the
// case both options are defined as the api only requires one or the other.
//
// Deprecated: use domain attribute instead
func (o EipOutput) Vpc() pulumix.Output[bool] {
	value := pulumix.Apply[Eip](o, func(v Eip) pulumix.Output[bool] { return v.Vpc })
	return pulumix.Flatten[bool, pulumix.Output[bool]](value)
}

func init() {
	pulumi.RegisterOutputType(EipOutput{})
}
