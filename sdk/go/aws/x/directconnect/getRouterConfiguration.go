// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package directconnect

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Data source for retrieving Router Configuration instructions for a given AWS Direct Connect Virtual Interface and Router Type.
func GetRouterConfiguration(ctx *pulumi.Context, args *GetRouterConfigurationArgs, opts ...pulumi.InvokeOption) (*GetRouterConfigurationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetRouterConfigurationResult
	err := ctx.Invoke("aws:directconnect/getRouterConfiguration:getRouterConfiguration", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRouterConfiguration.
type GetRouterConfigurationArgs struct {
	// ID of the Router Type. For example: `CiscoSystemsInc-2900SeriesRouters-IOS124`
	//
	// There is currently no AWS API to retrieve the full list of `routerTypeIdentifier` values. Here is a list of known `RouterType` objects that can be used:
	//
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		return nil
	// 	})
	// }
	// ```
	RouterTypeIdentifier string `pulumi:"routerTypeIdentifier"`
	// ID of the Direct Connect Virtual Interface
	VirtualInterfaceId string `pulumi:"virtualInterfaceId"`
}

// A collection of values returned by getRouterConfiguration.
type GetRouterConfigurationResult struct {
	// Instructions for configuring your router
	CustomerRouterConfig string `pulumi:"customerRouterConfig"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Router type identifier
	RouterTypeIdentifier string `pulumi:"routerTypeIdentifier"`
	// Block of the router type details
	Routers              []GetRouterConfigurationRouter `pulumi:"routers"`
	VirtualInterfaceId   string                         `pulumi:"virtualInterfaceId"`
	VirtualInterfaceName string                         `pulumi:"virtualInterfaceName"`
}

func GetRouterConfigurationOutput(ctx *pulumi.Context, args GetRouterConfigurationOutputArgs, opts ...pulumi.InvokeOption) GetRouterConfigurationResultOutput {
	outputResult := pulumix.ApplyErr[*GetRouterConfigurationArgs](args.ToOutput(), func(plainArgs *GetRouterConfigurationArgs) (*GetRouterConfigurationResult, error) {
		return GetRouterConfiguration(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[GetRouterConfigurationResultOutput, *GetRouterConfigurationResult](outputResult)
}

// A collection of arguments for invoking getRouterConfiguration.
type GetRouterConfigurationOutputArgs struct {
	// ID of the Router Type. For example: `CiscoSystemsInc-2900SeriesRouters-IOS124`
	//
	// There is currently no AWS API to retrieve the full list of `routerTypeIdentifier` values. Here is a list of known `RouterType` objects that can be used:
	//
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		return nil
	// 	})
	// }
	// ```
	RouterTypeIdentifier pulumix.Input[string] `pulumi:"routerTypeIdentifier"`
	// ID of the Direct Connect Virtual Interface
	VirtualInterfaceId pulumix.Input[string] `pulumi:"virtualInterfaceId"`
}

func (args GetRouterConfigurationOutputArgs) ToOutput() pulumix.Output[*GetRouterConfigurationArgs] {
	allArgs := pulumix.All(
		args.RouterTypeIdentifier.ToOutput(context.Background()).AsAny(),
		args.VirtualInterfaceId.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *GetRouterConfigurationArgs {
		return &GetRouterConfigurationArgs{
			RouterTypeIdentifier: resolvedArgs[0].(string),
			VirtualInterfaceId:   resolvedArgs[1].(string),
		}
	})
}

type GetRouterConfigurationResultOutput struct{ *pulumi.OutputState }

func (GetRouterConfigurationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouterConfigurationResult)(nil)).Elem()
}

func (o GetRouterConfigurationResultOutput) ToOutput(context.Context) pulumix.Output[*GetRouterConfigurationResult] {
	return pulumix.Output[*GetRouterConfigurationResult]{
		OutputState: o.OutputState,
	}
}

func (o GetRouterConfigurationResultOutput) CustomerRouterConfig() pulumix.Output[string] {
	return pulumix.Apply[*GetRouterConfigurationResult](o, func(v *GetRouterConfigurationResult) string { return v.CustomerRouterConfig })
}

func (o GetRouterConfigurationResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*GetRouterConfigurationResult](o, func(v *GetRouterConfigurationResult) string { return v.Id })
}

func (o GetRouterConfigurationResultOutput) RouterTypeIdentifier() pulumix.Output[string] {
	return pulumix.Apply[*GetRouterConfigurationResult](o, func(v *GetRouterConfigurationResult) string { return v.RouterTypeIdentifier })
}

func (o GetRouterConfigurationResultOutput) Routers() pulumix.GArrayOutput[GetRouterConfigurationRouter, GetRouterConfigurationRouterOutput] {
	value := pulumix.Apply[*GetRouterConfigurationResult](o, func(v *GetRouterConfigurationResult) []GetRouterConfigurationRouter { return v.Routers })
	return pulumix.GArrayOutput[GetRouterConfigurationRouter, GetRouterConfigurationRouterOutput]{
		OutputState: value.OutputState,
	}
}

func (o GetRouterConfigurationResultOutput) VirtualInterfaceId() pulumix.Output[string] {
	return pulumix.Apply[*GetRouterConfigurationResult](o, func(v *GetRouterConfigurationResult) string { return v.VirtualInterfaceId })
}

func (o GetRouterConfigurationResultOutput) VirtualInterfaceName() pulumix.Output[string] {
	return pulumix.Apply[*GetRouterConfigurationResult](o, func(v *GetRouterConfigurationResult) string { return v.VirtualInterfaceName })
}
