// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package outposts

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Information about Outposts Instance Types.
func GetOutpostInstanceTypes(ctx *pulumi.Context, args *GetOutpostInstanceTypesArgs, opts ...pulumi.InvokeOption) (*GetOutpostInstanceTypesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetOutpostInstanceTypesResult
	err := ctx.Invoke("aws:outposts/getOutpostInstanceTypes:getOutpostInstanceTypes", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getOutpostInstanceTypes.
type GetOutpostInstanceTypesArgs struct {
	// Outpost ARN.
	Arn string `pulumi:"arn"`
}

// A collection of values returned by getOutpostInstanceTypes.
type GetOutpostInstanceTypesResult struct {
	Arn string `pulumi:"arn"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Set of instance types.
	InstanceTypes []string `pulumi:"instanceTypes"`
}

func GetOutpostInstanceTypesOutput(ctx *pulumi.Context, args GetOutpostInstanceTypesOutputArgs, opts ...pulumi.InvokeOption) GetOutpostInstanceTypesResultOutput {
	outputResult := pulumix.ApplyErr[*GetOutpostInstanceTypesArgs](args.ToOutput(), func(plainArgs *GetOutpostInstanceTypesArgs) (*GetOutpostInstanceTypesResult, error) {
		return GetOutpostInstanceTypes(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[GetOutpostInstanceTypesResultOutput, *GetOutpostInstanceTypesResult](outputResult)
}

// A collection of arguments for invoking getOutpostInstanceTypes.
type GetOutpostInstanceTypesOutputArgs struct {
	// Outpost ARN.
	Arn pulumix.Input[string] `pulumi:"arn"`
}

func (args GetOutpostInstanceTypesOutputArgs) ToOutput() pulumix.Output[*GetOutpostInstanceTypesArgs] {
	allArgs := pulumix.All(
		args.Arn.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *GetOutpostInstanceTypesArgs {
		return &GetOutpostInstanceTypesArgs{
			Arn: resolvedArgs[0].(string),
		}
	})
}

type GetOutpostInstanceTypesResultOutput struct{ *pulumi.OutputState }

func (GetOutpostInstanceTypesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOutpostInstanceTypesResult)(nil)).Elem()
}

func (o GetOutpostInstanceTypesResultOutput) ToOutput(context.Context) pulumix.Output[*GetOutpostInstanceTypesResult] {
	return pulumix.Output[*GetOutpostInstanceTypesResult]{
		OutputState: o.OutputState,
	}
}

func (o GetOutpostInstanceTypesResultOutput) Arn() pulumix.Output[string] {
	return pulumix.Apply[*GetOutpostInstanceTypesResult](o, func(v *GetOutpostInstanceTypesResult) string { return v.Arn })
}

func (o GetOutpostInstanceTypesResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*GetOutpostInstanceTypesResult](o, func(v *GetOutpostInstanceTypesResult) string { return v.Id })
}

func (o GetOutpostInstanceTypesResultOutput) InstanceTypes() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[*GetOutpostInstanceTypesResult](o, func(v *GetOutpostInstanceTypesResult) []string { return v.InstanceTypes })
	return pulumix.ArrayOutput[string]{
		OutputState: value.OutputState,
	}
}
