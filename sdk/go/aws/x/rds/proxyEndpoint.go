// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an RDS DB proxy endpoint resource. For additional information, see the [RDS User Guide](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-proxy-endpoints.html).
type ProxyEndpoint struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) for the proxy endpoint.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The identifier for the proxy endpoint. An identifier must begin with a letter and must contain only ASCII letters, digits, and hyphens; it can't end with a hyphen or contain two consecutive hyphens.
	DbProxyEndpointName pulumix.Output[string] `pulumi:"dbProxyEndpointName"`
	// The name of the DB proxy associated with the DB proxy endpoint that you create.
	DbProxyName pulumix.Output[string] `pulumi:"dbProxyName"`
	// The endpoint that you can use to connect to the proxy. You include the endpoint value in the connection string for a database client application.
	Endpoint pulumix.Output[string] `pulumi:"endpoint"`
	// Indicates whether this endpoint is the default endpoint for the associated DB proxy.
	IsDefault pulumix.Output[bool] `pulumi:"isDefault"`
	// A mapping of tags to assign to the resource.
	Tags    pulumix.MapOutput[string] `pulumi:"tags"`
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// Indicates whether the DB proxy endpoint can be used for read/write or read-only operations. The default is `READ_WRITE`. Valid values are `READ_WRITE` and `READ_ONLY`.
	TargetRole pulumix.Output[*string] `pulumi:"targetRole"`
	// The VPC ID of the DB proxy endpoint.
	VpcId pulumix.Output[string] `pulumi:"vpcId"`
	// One or more VPC security group IDs to associate with the new proxy.
	VpcSecurityGroupIds pulumix.ArrayOutput[string] `pulumi:"vpcSecurityGroupIds"`
	// One or more VPC subnet IDs to associate with the new proxy.
	VpcSubnetIds pulumix.ArrayOutput[string] `pulumi:"vpcSubnetIds"`
}

// NewProxyEndpoint registers a new resource with the given unique name, arguments, and options.
func NewProxyEndpoint(ctx *pulumi.Context,
	name string, args *ProxyEndpointArgs, opts ...pulumi.ResourceOption) (*ProxyEndpoint, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DbProxyEndpointName == nil {
		return nil, errors.New("invalid value for required argument 'DbProxyEndpointName'")
	}
	if args.DbProxyName == nil {
		return nil, errors.New("invalid value for required argument 'DbProxyName'")
	}
	if args.VpcSubnetIds == nil {
		return nil, errors.New("invalid value for required argument 'VpcSubnetIds'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ProxyEndpoint
	err := ctx.RegisterResource("aws:rds/proxyEndpoint:ProxyEndpoint", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProxyEndpoint gets an existing ProxyEndpoint resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProxyEndpoint(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProxyEndpointState, opts ...pulumi.ResourceOption) (*ProxyEndpoint, error) {
	var resource ProxyEndpoint
	err := ctx.ReadResource("aws:rds/proxyEndpoint:ProxyEndpoint", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ProxyEndpoint resources.
type proxyEndpointState struct {
	// The Amazon Resource Name (ARN) for the proxy endpoint.
	Arn *string `pulumi:"arn"`
	// The identifier for the proxy endpoint. An identifier must begin with a letter and must contain only ASCII letters, digits, and hyphens; it can't end with a hyphen or contain two consecutive hyphens.
	DbProxyEndpointName *string `pulumi:"dbProxyEndpointName"`
	// The name of the DB proxy associated with the DB proxy endpoint that you create.
	DbProxyName *string `pulumi:"dbProxyName"`
	// The endpoint that you can use to connect to the proxy. You include the endpoint value in the connection string for a database client application.
	Endpoint *string `pulumi:"endpoint"`
	// Indicates whether this endpoint is the default endpoint for the associated DB proxy.
	IsDefault *bool `pulumi:"isDefault"`
	// A mapping of tags to assign to the resource.
	Tags    map[string]string `pulumi:"tags"`
	TagsAll map[string]string `pulumi:"tagsAll"`
	// Indicates whether the DB proxy endpoint can be used for read/write or read-only operations. The default is `READ_WRITE`. Valid values are `READ_WRITE` and `READ_ONLY`.
	TargetRole *string `pulumi:"targetRole"`
	// The VPC ID of the DB proxy endpoint.
	VpcId *string `pulumi:"vpcId"`
	// One or more VPC security group IDs to associate with the new proxy.
	VpcSecurityGroupIds []string `pulumi:"vpcSecurityGroupIds"`
	// One or more VPC subnet IDs to associate with the new proxy.
	VpcSubnetIds []string `pulumi:"vpcSubnetIds"`
}

type ProxyEndpointState struct {
	// The Amazon Resource Name (ARN) for the proxy endpoint.
	Arn pulumix.Input[*string]
	// The identifier for the proxy endpoint. An identifier must begin with a letter and must contain only ASCII letters, digits, and hyphens; it can't end with a hyphen or contain two consecutive hyphens.
	DbProxyEndpointName pulumix.Input[*string]
	// The name of the DB proxy associated with the DB proxy endpoint that you create.
	DbProxyName pulumix.Input[*string]
	// The endpoint that you can use to connect to the proxy. You include the endpoint value in the connection string for a database client application.
	Endpoint pulumix.Input[*string]
	// Indicates whether this endpoint is the default endpoint for the associated DB proxy.
	IsDefault pulumix.Input[*bool]
	// A mapping of tags to assign to the resource.
	Tags    pulumix.Input[map[string]string]
	TagsAll pulumix.Input[map[string]string]
	// Indicates whether the DB proxy endpoint can be used for read/write or read-only operations. The default is `READ_WRITE`. Valid values are `READ_WRITE` and `READ_ONLY`.
	TargetRole pulumix.Input[*string]
	// The VPC ID of the DB proxy endpoint.
	VpcId pulumix.Input[*string]
	// One or more VPC security group IDs to associate with the new proxy.
	VpcSecurityGroupIds pulumix.Input[[]string]
	// One or more VPC subnet IDs to associate with the new proxy.
	VpcSubnetIds pulumix.Input[[]string]
}

func (ProxyEndpointState) ElementType() reflect.Type {
	return reflect.TypeOf((*proxyEndpointState)(nil)).Elem()
}

type proxyEndpointArgs struct {
	// The identifier for the proxy endpoint. An identifier must begin with a letter and must contain only ASCII letters, digits, and hyphens; it can't end with a hyphen or contain two consecutive hyphens.
	DbProxyEndpointName string `pulumi:"dbProxyEndpointName"`
	// The name of the DB proxy associated with the DB proxy endpoint that you create.
	DbProxyName string `pulumi:"dbProxyName"`
	// A mapping of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
	// Indicates whether the DB proxy endpoint can be used for read/write or read-only operations. The default is `READ_WRITE`. Valid values are `READ_WRITE` and `READ_ONLY`.
	TargetRole *string `pulumi:"targetRole"`
	// One or more VPC security group IDs to associate with the new proxy.
	VpcSecurityGroupIds []string `pulumi:"vpcSecurityGroupIds"`
	// One or more VPC subnet IDs to associate with the new proxy.
	VpcSubnetIds []string `pulumi:"vpcSubnetIds"`
}

// The set of arguments for constructing a ProxyEndpoint resource.
type ProxyEndpointArgs struct {
	// The identifier for the proxy endpoint. An identifier must begin with a letter and must contain only ASCII letters, digits, and hyphens; it can't end with a hyphen or contain two consecutive hyphens.
	DbProxyEndpointName pulumix.Input[string]
	// The name of the DB proxy associated with the DB proxy endpoint that you create.
	DbProxyName pulumix.Input[string]
	// A mapping of tags to assign to the resource.
	Tags pulumix.Input[map[string]string]
	// Indicates whether the DB proxy endpoint can be used for read/write or read-only operations. The default is `READ_WRITE`. Valid values are `READ_WRITE` and `READ_ONLY`.
	TargetRole pulumix.Input[*string]
	// One or more VPC security group IDs to associate with the new proxy.
	VpcSecurityGroupIds pulumix.Input[[]string]
	// One or more VPC subnet IDs to associate with the new proxy.
	VpcSubnetIds pulumix.Input[[]string]
}

func (ProxyEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*proxyEndpointArgs)(nil)).Elem()
}

type ProxyEndpointOutput struct{ *pulumi.OutputState }

func (ProxyEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyEndpoint)(nil)).Elem()
}

func (o ProxyEndpointOutput) ToProxyEndpointOutput() ProxyEndpointOutput {
	return o
}

func (o ProxyEndpointOutput) ToProxyEndpointOutputWithContext(ctx context.Context) ProxyEndpointOutput {
	return o
}

func (o ProxyEndpointOutput) ToOutput(ctx context.Context) pulumix.Output[ProxyEndpoint] {
	return pulumix.Output[ProxyEndpoint]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) for the proxy endpoint.
func (o ProxyEndpointOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[ProxyEndpoint](o, func(v ProxyEndpoint) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The identifier for the proxy endpoint. An identifier must begin with a letter and must contain only ASCII letters, digits, and hyphens; it can't end with a hyphen or contain two consecutive hyphens.
func (o ProxyEndpointOutput) DbProxyEndpointName() pulumix.Output[string] {
	value := pulumix.Apply[ProxyEndpoint](o, func(v ProxyEndpoint) pulumix.Output[string] { return v.DbProxyEndpointName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The name of the DB proxy associated with the DB proxy endpoint that you create.
func (o ProxyEndpointOutput) DbProxyName() pulumix.Output[string] {
	value := pulumix.Apply[ProxyEndpoint](o, func(v ProxyEndpoint) pulumix.Output[string] { return v.DbProxyName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The endpoint that you can use to connect to the proxy. You include the endpoint value in the connection string for a database client application.
func (o ProxyEndpointOutput) Endpoint() pulumix.Output[string] {
	value := pulumix.Apply[ProxyEndpoint](o, func(v ProxyEndpoint) pulumix.Output[string] { return v.Endpoint })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Indicates whether this endpoint is the default endpoint for the associated DB proxy.
func (o ProxyEndpointOutput) IsDefault() pulumix.Output[bool] {
	value := pulumix.Apply[ProxyEndpoint](o, func(v ProxyEndpoint) pulumix.Output[bool] { return v.IsDefault })
	return pulumix.Flatten[bool, pulumix.Output[bool]](value)
}

// A mapping of tags to assign to the resource.
func (o ProxyEndpointOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[ProxyEndpoint](o, func(v ProxyEndpoint) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func (o ProxyEndpointOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[ProxyEndpoint](o, func(v ProxyEndpoint) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Indicates whether the DB proxy endpoint can be used for read/write or read-only operations. The default is `READ_WRITE`. Valid values are `READ_WRITE` and `READ_ONLY`.
func (o ProxyEndpointOutput) TargetRole() pulumix.Output[*string] {
	value := pulumix.Apply[ProxyEndpoint](o, func(v ProxyEndpoint) pulumix.Output[*string] { return v.TargetRole })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The VPC ID of the DB proxy endpoint.
func (o ProxyEndpointOutput) VpcId() pulumix.Output[string] {
	value := pulumix.Apply[ProxyEndpoint](o, func(v ProxyEndpoint) pulumix.Output[string] { return v.VpcId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// One or more VPC security group IDs to associate with the new proxy.
func (o ProxyEndpointOutput) VpcSecurityGroupIds() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[ProxyEndpoint](o, func(v ProxyEndpoint) pulumix.ArrayOutput[string] { return v.VpcSecurityGroupIds })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// One or more VPC subnet IDs to associate with the new proxy.
func (o ProxyEndpointOutput) VpcSubnetIds() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[ProxyEndpoint](o, func(v ProxyEndpoint) pulumix.ArrayOutput[string] { return v.VpcSubnetIds })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(ProxyEndpointOutput{})
}
