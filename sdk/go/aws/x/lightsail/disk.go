// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package lightsail

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a Lightsail Disk resource.
type Disk struct {
	pulumi.CustomResourceState

	// The ARN of the Lightsail load balancer.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The Availability Zone in which to create your disk.
	AvailabilityZone pulumix.Output[string] `pulumi:"availabilityZone"`
	// The timestamp when the load balancer was created.
	CreatedAt pulumix.Output[string] `pulumi:"createdAt"`
	// The name of the Lightsail load balancer.
	Name pulumix.Output[string] `pulumi:"name"`
	// The instance port the load balancer will connect.
	SizeInGb pulumix.Output[int] `pulumi:"sizeInGb"`
	// The support code for the disk. Include this code in your email to support when you have questions about a disk in Lightsail. This code enables our support team to look up your Lightsail information more easily.
	SupportCode pulumix.Output[string] `pulumi:"supportCode"`
	// A map of tags to assign to the resource. To create a key-only tag, use an empty string as the value. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
}

// NewDisk registers a new resource with the given unique name, arguments, and options.
func NewDisk(ctx *pulumi.Context,
	name string, args *DiskArgs, opts ...pulumi.ResourceOption) (*Disk, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AvailabilityZone == nil {
		return nil, errors.New("invalid value for required argument 'AvailabilityZone'")
	}
	if args.SizeInGb == nil {
		return nil, errors.New("invalid value for required argument 'SizeInGb'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Disk
	err := ctx.RegisterResource("aws:lightsail/disk:Disk", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDisk gets an existing Disk resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDisk(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DiskState, opts ...pulumi.ResourceOption) (*Disk, error) {
	var resource Disk
	err := ctx.ReadResource("aws:lightsail/disk:Disk", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Disk resources.
type diskState struct {
	// The ARN of the Lightsail load balancer.
	Arn *string `pulumi:"arn"`
	// The Availability Zone in which to create your disk.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// The timestamp when the load balancer was created.
	CreatedAt *string `pulumi:"createdAt"`
	// The name of the Lightsail load balancer.
	Name *string `pulumi:"name"`
	// The instance port the load balancer will connect.
	SizeInGb *int `pulumi:"sizeInGb"`
	// The support code for the disk. Include this code in your email to support when you have questions about a disk in Lightsail. This code enables our support team to look up your Lightsail information more easily.
	SupportCode *string `pulumi:"supportCode"`
	// A map of tags to assign to the resource. To create a key-only tag, use an empty string as the value. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type DiskState struct {
	// The ARN of the Lightsail load balancer.
	Arn pulumix.Input[*string]
	// The Availability Zone in which to create your disk.
	AvailabilityZone pulumix.Input[*string]
	// The timestamp when the load balancer was created.
	CreatedAt pulumix.Input[*string]
	// The name of the Lightsail load balancer.
	Name pulumix.Input[*string]
	// The instance port the load balancer will connect.
	SizeInGb pulumix.Input[*int]
	// The support code for the disk. Include this code in your email to support when you have questions about a disk in Lightsail. This code enables our support team to look up your Lightsail information more easily.
	SupportCode pulumix.Input[*string]
	// A map of tags to assign to the resource. To create a key-only tag, use an empty string as the value. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
}

func (DiskState) ElementType() reflect.Type {
	return reflect.TypeOf((*diskState)(nil)).Elem()
}

type diskArgs struct {
	// The Availability Zone in which to create your disk.
	AvailabilityZone string `pulumi:"availabilityZone"`
	// The name of the Lightsail load balancer.
	Name *string `pulumi:"name"`
	// The instance port the load balancer will connect.
	SizeInGb int `pulumi:"sizeInGb"`
	// A map of tags to assign to the resource. To create a key-only tag, use an empty string as the value. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Disk resource.
type DiskArgs struct {
	// The Availability Zone in which to create your disk.
	AvailabilityZone pulumix.Input[string]
	// The name of the Lightsail load balancer.
	Name pulumix.Input[*string]
	// The instance port the load balancer will connect.
	SizeInGb pulumix.Input[int]
	// A map of tags to assign to the resource. To create a key-only tag, use an empty string as the value. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (DiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*diskArgs)(nil)).Elem()
}

type DiskOutput struct{ *pulumi.OutputState }

func (DiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Disk)(nil)).Elem()
}

func (o DiskOutput) ToDiskOutput() DiskOutput {
	return o
}

func (o DiskOutput) ToDiskOutputWithContext(ctx context.Context) DiskOutput {
	return o
}

func (o DiskOutput) ToOutput(ctx context.Context) pulumix.Output[Disk] {
	return pulumix.Output[Disk]{
		OutputState: o.OutputState,
	}
}

// The ARN of the Lightsail load balancer.
func (o DiskOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Disk](o, func(v Disk) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The Availability Zone in which to create your disk.
func (o DiskOutput) AvailabilityZone() pulumix.Output[string] {
	value := pulumix.Apply[Disk](o, func(v Disk) pulumix.Output[string] { return v.AvailabilityZone })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The timestamp when the load balancer was created.
func (o DiskOutput) CreatedAt() pulumix.Output[string] {
	value := pulumix.Apply[Disk](o, func(v Disk) pulumix.Output[string] { return v.CreatedAt })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The name of the Lightsail load balancer.
func (o DiskOutput) Name() pulumix.Output[string] {
	value := pulumix.Apply[Disk](o, func(v Disk) pulumix.Output[string] { return v.Name })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The instance port the load balancer will connect.
func (o DiskOutput) SizeInGb() pulumix.Output[int] {
	value := pulumix.Apply[Disk](o, func(v Disk) pulumix.Output[int] { return v.SizeInGb })
	return pulumix.Flatten[int, pulumix.Output[int]](value)
}

// The support code for the disk. Include this code in your email to support when you have questions about a disk in Lightsail. This code enables our support team to look up your Lightsail information more easily.
func (o DiskOutput) SupportCode() pulumix.Output[string] {
	value := pulumix.Apply[Disk](o, func(v Disk) pulumix.Output[string] { return v.SupportCode })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A map of tags to assign to the resource. To create a key-only tag, use an empty string as the value. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o DiskOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Disk](o, func(v Disk) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o DiskOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[Disk](o, func(v Disk) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(DiskOutput{})
}
