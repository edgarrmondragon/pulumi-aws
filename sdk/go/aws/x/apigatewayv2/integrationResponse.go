// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apigatewayv2

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manages an Amazon API Gateway Version 2 integration response.
// More information can be found in the [Amazon API Gateway Developer Guide](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api.html).
type IntegrationResponse struct {
	pulumi.CustomResourceState

	// API identifier.
	ApiId pulumix.Output[string] `pulumi:"apiId"`
	// How to handle response payload content type conversions. Valid values: `CONVERT_TO_BINARY`, `CONVERT_TO_TEXT`.
	ContentHandlingStrategy pulumix.Output[*string] `pulumi:"contentHandlingStrategy"`
	// Identifier of the `apigatewayv2.Integration`.
	IntegrationId pulumix.Output[string] `pulumi:"integrationId"`
	// Integration response key.
	IntegrationResponseKey pulumix.Output[string] `pulumi:"integrationResponseKey"`
	// Map of Velocity templates that are applied on the request payload based on the value of the Content-Type header sent by the client.
	ResponseTemplates pulumix.MapOutput[string] `pulumi:"responseTemplates"`
	// The [template selection expression](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-template-selection-expressions) for the integration response.
	TemplateSelectionExpression pulumix.Output[*string] `pulumi:"templateSelectionExpression"`
}

// NewIntegrationResponse registers a new resource with the given unique name, arguments, and options.
func NewIntegrationResponse(ctx *pulumi.Context,
	name string, args *IntegrationResponseArgs, opts ...pulumi.ResourceOption) (*IntegrationResponse, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApiId == nil {
		return nil, errors.New("invalid value for required argument 'ApiId'")
	}
	if args.IntegrationId == nil {
		return nil, errors.New("invalid value for required argument 'IntegrationId'")
	}
	if args.IntegrationResponseKey == nil {
		return nil, errors.New("invalid value for required argument 'IntegrationResponseKey'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource IntegrationResponse
	err := ctx.RegisterResource("aws:apigatewayv2/integrationResponse:IntegrationResponse", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIntegrationResponse gets an existing IntegrationResponse resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIntegrationResponse(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IntegrationResponseState, opts ...pulumi.ResourceOption) (*IntegrationResponse, error) {
	var resource IntegrationResponse
	err := ctx.ReadResource("aws:apigatewayv2/integrationResponse:IntegrationResponse", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IntegrationResponse resources.
type integrationResponseState struct {
	// API identifier.
	ApiId *string `pulumi:"apiId"`
	// How to handle response payload content type conversions. Valid values: `CONVERT_TO_BINARY`, `CONVERT_TO_TEXT`.
	ContentHandlingStrategy *string `pulumi:"contentHandlingStrategy"`
	// Identifier of the `apigatewayv2.Integration`.
	IntegrationId *string `pulumi:"integrationId"`
	// Integration response key.
	IntegrationResponseKey *string `pulumi:"integrationResponseKey"`
	// Map of Velocity templates that are applied on the request payload based on the value of the Content-Type header sent by the client.
	ResponseTemplates map[string]string `pulumi:"responseTemplates"`
	// The [template selection expression](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-template-selection-expressions) for the integration response.
	TemplateSelectionExpression *string `pulumi:"templateSelectionExpression"`
}

type IntegrationResponseState struct {
	// API identifier.
	ApiId pulumix.Input[*string]
	// How to handle response payload content type conversions. Valid values: `CONVERT_TO_BINARY`, `CONVERT_TO_TEXT`.
	ContentHandlingStrategy pulumix.Input[*string]
	// Identifier of the `apigatewayv2.Integration`.
	IntegrationId pulumix.Input[*string]
	// Integration response key.
	IntegrationResponseKey pulumix.Input[*string]
	// Map of Velocity templates that are applied on the request payload based on the value of the Content-Type header sent by the client.
	ResponseTemplates pulumix.Input[map[string]string]
	// The [template selection expression](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-template-selection-expressions) for the integration response.
	TemplateSelectionExpression pulumix.Input[*string]
}

func (IntegrationResponseState) ElementType() reflect.Type {
	return reflect.TypeOf((*integrationResponseState)(nil)).Elem()
}

type integrationResponseArgs struct {
	// API identifier.
	ApiId string `pulumi:"apiId"`
	// How to handle response payload content type conversions. Valid values: `CONVERT_TO_BINARY`, `CONVERT_TO_TEXT`.
	ContentHandlingStrategy *string `pulumi:"contentHandlingStrategy"`
	// Identifier of the `apigatewayv2.Integration`.
	IntegrationId string `pulumi:"integrationId"`
	// Integration response key.
	IntegrationResponseKey string `pulumi:"integrationResponseKey"`
	// Map of Velocity templates that are applied on the request payload based on the value of the Content-Type header sent by the client.
	ResponseTemplates map[string]string `pulumi:"responseTemplates"`
	// The [template selection expression](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-template-selection-expressions) for the integration response.
	TemplateSelectionExpression *string `pulumi:"templateSelectionExpression"`
}

// The set of arguments for constructing a IntegrationResponse resource.
type IntegrationResponseArgs struct {
	// API identifier.
	ApiId pulumix.Input[string]
	// How to handle response payload content type conversions. Valid values: `CONVERT_TO_BINARY`, `CONVERT_TO_TEXT`.
	ContentHandlingStrategy pulumix.Input[*string]
	// Identifier of the `apigatewayv2.Integration`.
	IntegrationId pulumix.Input[string]
	// Integration response key.
	IntegrationResponseKey pulumix.Input[string]
	// Map of Velocity templates that are applied on the request payload based on the value of the Content-Type header sent by the client.
	ResponseTemplates pulumix.Input[map[string]string]
	// The [template selection expression](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-template-selection-expressions) for the integration response.
	TemplateSelectionExpression pulumix.Input[*string]
}

func (IntegrationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*integrationResponseArgs)(nil)).Elem()
}

type IntegrationResponseOutput struct{ *pulumi.OutputState }

func (IntegrationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationResponse)(nil)).Elem()
}

func (o IntegrationResponseOutput) ToIntegrationResponseOutput() IntegrationResponseOutput {
	return o
}

func (o IntegrationResponseOutput) ToIntegrationResponseOutputWithContext(ctx context.Context) IntegrationResponseOutput {
	return o
}

func (o IntegrationResponseOutput) ToOutput(ctx context.Context) pulumix.Output[IntegrationResponse] {
	return pulumix.Output[IntegrationResponse]{
		OutputState: o.OutputState,
	}
}

// API identifier.
func (o IntegrationResponseOutput) ApiId() pulumix.Output[string] {
	value := pulumix.Apply[IntegrationResponse](o, func(v IntegrationResponse) pulumix.Output[string] { return v.ApiId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// How to handle response payload content type conversions. Valid values: `CONVERT_TO_BINARY`, `CONVERT_TO_TEXT`.
func (o IntegrationResponseOutput) ContentHandlingStrategy() pulumix.Output[*string] {
	value := pulumix.Apply[IntegrationResponse](o, func(v IntegrationResponse) pulumix.Output[*string] { return v.ContentHandlingStrategy })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Identifier of the `apigatewayv2.Integration`.
func (o IntegrationResponseOutput) IntegrationId() pulumix.Output[string] {
	value := pulumix.Apply[IntegrationResponse](o, func(v IntegrationResponse) pulumix.Output[string] { return v.IntegrationId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Integration response key.
func (o IntegrationResponseOutput) IntegrationResponseKey() pulumix.Output[string] {
	value := pulumix.Apply[IntegrationResponse](o, func(v IntegrationResponse) pulumix.Output[string] { return v.IntegrationResponseKey })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Map of Velocity templates that are applied on the request payload based on the value of the Content-Type header sent by the client.
func (o IntegrationResponseOutput) ResponseTemplates() pulumix.MapOutput[string] {
	value := pulumix.Apply[IntegrationResponse](o, func(v IntegrationResponse) pulumix.MapOutput[string] { return v.ResponseTemplates })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// The [template selection expression](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-template-selection-expressions) for the integration response.
func (o IntegrationResponseOutput) TemplateSelectionExpression() pulumix.Output[*string] {
	value := pulumix.Apply[IntegrationResponse](o, func(v IntegrationResponse) pulumix.Output[*string] { return v.TemplateSelectionExpression })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

func init() {
	pulumi.RegisterOutputType(IntegrationResponseOutput{})
}
