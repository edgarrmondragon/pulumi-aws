// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fsx

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manages an Amazon FSx for OpenZFS file system.
// See the [FSx OpenZFS User Guide](https://docs.aws.amazon.com/fsx/latest/OpenZFSGuide/what-is-fsx.html) for more information.
type OpenZfsFileSystem struct {
	pulumi.CustomResourceState

	// Amazon Resource Name of the file system.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The number of days to retain automatic backups. Setting this to 0 disables automatic backups. You can retain automatic backups for a maximum of 90 days.
	AutomaticBackupRetentionDays pulumix.Output[*int] `pulumi:"automaticBackupRetentionDays"`
	// The ID of the source backup to create the filesystem from.
	BackupId pulumix.Output[*string] `pulumi:"backupId"`
	// A boolean flag indicating whether tags for the file system should be copied to backups. The default value is false.
	CopyTagsToBackups pulumix.Output[*bool] `pulumi:"copyTagsToBackups"`
	// A boolean flag indicating whether tags for the file system should be copied to snapshots. The default value is false.
	CopyTagsToVolumes pulumix.Output[*bool] `pulumi:"copyTagsToVolumes"`
	// A recurring daily time, in the format HH:MM. HH is the zero-padded hour of the day (0-23), and MM is the zero-padded minute of the hour. For example, 05:00 specifies 5 AM daily. Requires `automaticBackupRetentionDays` to be set.
	DailyAutomaticBackupStartTime pulumix.Output[string] `pulumi:"dailyAutomaticBackupStartTime"`
	// The filesystem deployment type. Valid values: `SINGLE_AZ_1`, `SINGLE_AZ_2` and `MULTI_AZ_1`.
	DeploymentType pulumix.Output[string] `pulumi:"deploymentType"`
	// The SSD IOPS configuration for the Amazon FSx for OpenZFS file system. See Disk Iops Configuration below.
	DiskIopsConfiguration pulumix.GPtrOutput[OpenZfsFileSystemDiskIopsConfiguration, OpenZfsFileSystemDiskIopsConfigurationOutput] `pulumi:"diskIopsConfiguration"`
	// DNS name for the file system, e.g., `fs-12345678.fsx.us-west-2.amazonaws.com`
	DnsName pulumix.Output[string] `pulumi:"dnsName"`
	// (Multi-AZ only) Specifies the IP address range in which the endpoints to access your file system will be created.
	EndpointIpAddressRange pulumix.Output[string] `pulumi:"endpointIpAddressRange"`
	// ARN for the KMS Key to encrypt the file system at rest, Defaults to an AWS managed KMS Key.
	KmsKeyId pulumix.Output[string] `pulumi:"kmsKeyId"`
	// Set of Elastic Network Interface identifiers from which the file system is accessible The first network interface returned is the primary network interface.
	NetworkInterfaceIds pulumix.ArrayOutput[string] `pulumi:"networkInterfaceIds"`
	// AWS account identifier that created the file system.
	OwnerId pulumix.Output[string] `pulumi:"ownerId"`
	// (Multi-AZ only) Required when `deploymentType` is set to `MULTI_AZ_1`. This specifies the subnet in which you want the preferred file server to be located.
	PreferredSubnetId pulumix.Output[*string] `pulumi:"preferredSubnetId"`
	// The configuration for the root volume of the file system. All other volumes are children or the root volume. See Root Volume Configuration below.
	RootVolumeConfiguration pulumix.GPtrOutput[OpenZfsFileSystemRootVolumeConfiguration, OpenZfsFileSystemRootVolumeConfigurationOutput] `pulumi:"rootVolumeConfiguration"`
	// Identifier of the root volume, e.g., `fsvol-12345678`
	RootVolumeId pulumix.Output[string] `pulumi:"rootVolumeId"`
	// (Multi-AZ only) Specifies the route tables in which Amazon FSx creates the rules for routing traffic to the correct file server. You should specify all virtual private cloud (VPC) route tables associated with the subnets in which your clients are located. By default, Amazon FSx selects your VPC's default route table.
	RouteTableIds pulumix.ArrayOutput[string] `pulumi:"routeTableIds"`
	// A list of IDs for the security groups that apply to the specified network interfaces created for file system access. These security groups will apply to all network interfaces.
	SecurityGroupIds pulumix.ArrayOutput[string] `pulumi:"securityGroupIds"`
	// The storage capacity (GiB) of the file system. Valid values between `64` and `524288`.
	StorageCapacity pulumix.Output[*int] `pulumi:"storageCapacity"`
	// The filesystem storage type. Only `SSD` is supported.
	StorageType pulumix.Output[*string] `pulumi:"storageType"`
	// A list of IDs for the subnets that the file system will be accessible from.
	SubnetIds pulumix.Output[string] `pulumi:"subnetIds"`
	// A map of tags to assign to the file system. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// Throughput (MB/s) of the file system. Valid values depend on `deploymentType`. Must be one of `64`, `128`, `256`, `512`, `1024`, `2048`, `3072`, `4096` for `SINGLE_AZ_1`. Must be one of `160`, `320`, `640`, `1280`, `2560`, `3840`, `5120`, `7680`, `10240` for `SINGLE_AZ_2`.
	ThroughputCapacity pulumix.Output[int] `pulumi:"throughputCapacity"`
	// Identifier of the Virtual Private Cloud for the file system.
	VpcId pulumix.Output[string] `pulumi:"vpcId"`
	// The preferred start time (in `d:HH:MM` format) to perform weekly maintenance, in the UTC time zone.
	WeeklyMaintenanceStartTime pulumix.Output[string] `pulumi:"weeklyMaintenanceStartTime"`
}

// NewOpenZfsFileSystem registers a new resource with the given unique name, arguments, and options.
func NewOpenZfsFileSystem(ctx *pulumi.Context,
	name string, args *OpenZfsFileSystemArgs, opts ...pulumi.ResourceOption) (*OpenZfsFileSystem, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DeploymentType == nil {
		return nil, errors.New("invalid value for required argument 'DeploymentType'")
	}
	if args.SubnetIds == nil {
		return nil, errors.New("invalid value for required argument 'SubnetIds'")
	}
	if args.ThroughputCapacity == nil {
		return nil, errors.New("invalid value for required argument 'ThroughputCapacity'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource OpenZfsFileSystem
	err := ctx.RegisterResource("aws:fsx/openZfsFileSystem:OpenZfsFileSystem", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOpenZfsFileSystem gets an existing OpenZfsFileSystem resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOpenZfsFileSystem(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OpenZfsFileSystemState, opts ...pulumi.ResourceOption) (*OpenZfsFileSystem, error) {
	var resource OpenZfsFileSystem
	err := ctx.ReadResource("aws:fsx/openZfsFileSystem:OpenZfsFileSystem", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OpenZfsFileSystem resources.
type openZfsFileSystemState struct {
	// Amazon Resource Name of the file system.
	Arn *string `pulumi:"arn"`
	// The number of days to retain automatic backups. Setting this to 0 disables automatic backups. You can retain automatic backups for a maximum of 90 days.
	AutomaticBackupRetentionDays *int `pulumi:"automaticBackupRetentionDays"`
	// The ID of the source backup to create the filesystem from.
	BackupId *string `pulumi:"backupId"`
	// A boolean flag indicating whether tags for the file system should be copied to backups. The default value is false.
	CopyTagsToBackups *bool `pulumi:"copyTagsToBackups"`
	// A boolean flag indicating whether tags for the file system should be copied to snapshots. The default value is false.
	CopyTagsToVolumes *bool `pulumi:"copyTagsToVolumes"`
	// A recurring daily time, in the format HH:MM. HH is the zero-padded hour of the day (0-23), and MM is the zero-padded minute of the hour. For example, 05:00 specifies 5 AM daily. Requires `automaticBackupRetentionDays` to be set.
	DailyAutomaticBackupStartTime *string `pulumi:"dailyAutomaticBackupStartTime"`
	// The filesystem deployment type. Valid values: `SINGLE_AZ_1`, `SINGLE_AZ_2` and `MULTI_AZ_1`.
	DeploymentType *string `pulumi:"deploymentType"`
	// The SSD IOPS configuration for the Amazon FSx for OpenZFS file system. See Disk Iops Configuration below.
	DiskIopsConfiguration *OpenZfsFileSystemDiskIopsConfiguration `pulumi:"diskIopsConfiguration"`
	// DNS name for the file system, e.g., `fs-12345678.fsx.us-west-2.amazonaws.com`
	DnsName *string `pulumi:"dnsName"`
	// (Multi-AZ only) Specifies the IP address range in which the endpoints to access your file system will be created.
	EndpointIpAddressRange *string `pulumi:"endpointIpAddressRange"`
	// ARN for the KMS Key to encrypt the file system at rest, Defaults to an AWS managed KMS Key.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// Set of Elastic Network Interface identifiers from which the file system is accessible The first network interface returned is the primary network interface.
	NetworkInterfaceIds []string `pulumi:"networkInterfaceIds"`
	// AWS account identifier that created the file system.
	OwnerId *string `pulumi:"ownerId"`
	// (Multi-AZ only) Required when `deploymentType` is set to `MULTI_AZ_1`. This specifies the subnet in which you want the preferred file server to be located.
	PreferredSubnetId *string `pulumi:"preferredSubnetId"`
	// The configuration for the root volume of the file system. All other volumes are children or the root volume. See Root Volume Configuration below.
	RootVolumeConfiguration *OpenZfsFileSystemRootVolumeConfiguration `pulumi:"rootVolumeConfiguration"`
	// Identifier of the root volume, e.g., `fsvol-12345678`
	RootVolumeId *string `pulumi:"rootVolumeId"`
	// (Multi-AZ only) Specifies the route tables in which Amazon FSx creates the rules for routing traffic to the correct file server. You should specify all virtual private cloud (VPC) route tables associated with the subnets in which your clients are located. By default, Amazon FSx selects your VPC's default route table.
	RouteTableIds []string `pulumi:"routeTableIds"`
	// A list of IDs for the security groups that apply to the specified network interfaces created for file system access. These security groups will apply to all network interfaces.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// The storage capacity (GiB) of the file system. Valid values between `64` and `524288`.
	StorageCapacity *int `pulumi:"storageCapacity"`
	// The filesystem storage type. Only `SSD` is supported.
	StorageType *string `pulumi:"storageType"`
	// A list of IDs for the subnets that the file system will be accessible from.
	SubnetIds *string `pulumi:"subnetIds"`
	// A map of tags to assign to the file system. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// Throughput (MB/s) of the file system. Valid values depend on `deploymentType`. Must be one of `64`, `128`, `256`, `512`, `1024`, `2048`, `3072`, `4096` for `SINGLE_AZ_1`. Must be one of `160`, `320`, `640`, `1280`, `2560`, `3840`, `5120`, `7680`, `10240` for `SINGLE_AZ_2`.
	ThroughputCapacity *int `pulumi:"throughputCapacity"`
	// Identifier of the Virtual Private Cloud for the file system.
	VpcId *string `pulumi:"vpcId"`
	// The preferred start time (in `d:HH:MM` format) to perform weekly maintenance, in the UTC time zone.
	WeeklyMaintenanceStartTime *string `pulumi:"weeklyMaintenanceStartTime"`
}

type OpenZfsFileSystemState struct {
	// Amazon Resource Name of the file system.
	Arn pulumix.Input[*string]
	// The number of days to retain automatic backups. Setting this to 0 disables automatic backups. You can retain automatic backups for a maximum of 90 days.
	AutomaticBackupRetentionDays pulumix.Input[*int]
	// The ID of the source backup to create the filesystem from.
	BackupId pulumix.Input[*string]
	// A boolean flag indicating whether tags for the file system should be copied to backups. The default value is false.
	CopyTagsToBackups pulumix.Input[*bool]
	// A boolean flag indicating whether tags for the file system should be copied to snapshots. The default value is false.
	CopyTagsToVolumes pulumix.Input[*bool]
	// A recurring daily time, in the format HH:MM. HH is the zero-padded hour of the day (0-23), and MM is the zero-padded minute of the hour. For example, 05:00 specifies 5 AM daily. Requires `automaticBackupRetentionDays` to be set.
	DailyAutomaticBackupStartTime pulumix.Input[*string]
	// The filesystem deployment type. Valid values: `SINGLE_AZ_1`, `SINGLE_AZ_2` and `MULTI_AZ_1`.
	DeploymentType pulumix.Input[*string]
	// The SSD IOPS configuration for the Amazon FSx for OpenZFS file system. See Disk Iops Configuration below.
	DiskIopsConfiguration pulumix.Input[*OpenZfsFileSystemDiskIopsConfigurationArgs]
	// DNS name for the file system, e.g., `fs-12345678.fsx.us-west-2.amazonaws.com`
	DnsName pulumix.Input[*string]
	// (Multi-AZ only) Specifies the IP address range in which the endpoints to access your file system will be created.
	EndpointIpAddressRange pulumix.Input[*string]
	// ARN for the KMS Key to encrypt the file system at rest, Defaults to an AWS managed KMS Key.
	KmsKeyId pulumix.Input[*string]
	// Set of Elastic Network Interface identifiers from which the file system is accessible The first network interface returned is the primary network interface.
	NetworkInterfaceIds pulumix.Input[[]string]
	// AWS account identifier that created the file system.
	OwnerId pulumix.Input[*string]
	// (Multi-AZ only) Required when `deploymentType` is set to `MULTI_AZ_1`. This specifies the subnet in which you want the preferred file server to be located.
	PreferredSubnetId pulumix.Input[*string]
	// The configuration for the root volume of the file system. All other volumes are children or the root volume. See Root Volume Configuration below.
	RootVolumeConfiguration pulumix.Input[*OpenZfsFileSystemRootVolumeConfigurationArgs]
	// Identifier of the root volume, e.g., `fsvol-12345678`
	RootVolumeId pulumix.Input[*string]
	// (Multi-AZ only) Specifies the route tables in which Amazon FSx creates the rules for routing traffic to the correct file server. You should specify all virtual private cloud (VPC) route tables associated with the subnets in which your clients are located. By default, Amazon FSx selects your VPC's default route table.
	RouteTableIds pulumix.Input[[]string]
	// A list of IDs for the security groups that apply to the specified network interfaces created for file system access. These security groups will apply to all network interfaces.
	SecurityGroupIds pulumix.Input[[]string]
	// The storage capacity (GiB) of the file system. Valid values between `64` and `524288`.
	StorageCapacity pulumix.Input[*int]
	// The filesystem storage type. Only `SSD` is supported.
	StorageType pulumix.Input[*string]
	// A list of IDs for the subnets that the file system will be accessible from.
	SubnetIds pulumix.Input[*string]
	// A map of tags to assign to the file system. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// Throughput (MB/s) of the file system. Valid values depend on `deploymentType`. Must be one of `64`, `128`, `256`, `512`, `1024`, `2048`, `3072`, `4096` for `SINGLE_AZ_1`. Must be one of `160`, `320`, `640`, `1280`, `2560`, `3840`, `5120`, `7680`, `10240` for `SINGLE_AZ_2`.
	ThroughputCapacity pulumix.Input[*int]
	// Identifier of the Virtual Private Cloud for the file system.
	VpcId pulumix.Input[*string]
	// The preferred start time (in `d:HH:MM` format) to perform weekly maintenance, in the UTC time zone.
	WeeklyMaintenanceStartTime pulumix.Input[*string]
}

func (OpenZfsFileSystemState) ElementType() reflect.Type {
	return reflect.TypeOf((*openZfsFileSystemState)(nil)).Elem()
}

type openZfsFileSystemArgs struct {
	// The number of days to retain automatic backups. Setting this to 0 disables automatic backups. You can retain automatic backups for a maximum of 90 days.
	AutomaticBackupRetentionDays *int `pulumi:"automaticBackupRetentionDays"`
	// The ID of the source backup to create the filesystem from.
	BackupId *string `pulumi:"backupId"`
	// A boolean flag indicating whether tags for the file system should be copied to backups. The default value is false.
	CopyTagsToBackups *bool `pulumi:"copyTagsToBackups"`
	// A boolean flag indicating whether tags for the file system should be copied to snapshots. The default value is false.
	CopyTagsToVolumes *bool `pulumi:"copyTagsToVolumes"`
	// A recurring daily time, in the format HH:MM. HH is the zero-padded hour of the day (0-23), and MM is the zero-padded minute of the hour. For example, 05:00 specifies 5 AM daily. Requires `automaticBackupRetentionDays` to be set.
	DailyAutomaticBackupStartTime *string `pulumi:"dailyAutomaticBackupStartTime"`
	// The filesystem deployment type. Valid values: `SINGLE_AZ_1`, `SINGLE_AZ_2` and `MULTI_AZ_1`.
	DeploymentType string `pulumi:"deploymentType"`
	// The SSD IOPS configuration for the Amazon FSx for OpenZFS file system. See Disk Iops Configuration below.
	DiskIopsConfiguration *OpenZfsFileSystemDiskIopsConfiguration `pulumi:"diskIopsConfiguration"`
	// (Multi-AZ only) Specifies the IP address range in which the endpoints to access your file system will be created.
	EndpointIpAddressRange *string `pulumi:"endpointIpAddressRange"`
	// ARN for the KMS Key to encrypt the file system at rest, Defaults to an AWS managed KMS Key.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// (Multi-AZ only) Required when `deploymentType` is set to `MULTI_AZ_1`. This specifies the subnet in which you want the preferred file server to be located.
	PreferredSubnetId *string `pulumi:"preferredSubnetId"`
	// The configuration for the root volume of the file system. All other volumes are children or the root volume. See Root Volume Configuration below.
	RootVolumeConfiguration *OpenZfsFileSystemRootVolumeConfiguration `pulumi:"rootVolumeConfiguration"`
	// (Multi-AZ only) Specifies the route tables in which Amazon FSx creates the rules for routing traffic to the correct file server. You should specify all virtual private cloud (VPC) route tables associated with the subnets in which your clients are located. By default, Amazon FSx selects your VPC's default route table.
	RouteTableIds []string `pulumi:"routeTableIds"`
	// A list of IDs for the security groups that apply to the specified network interfaces created for file system access. These security groups will apply to all network interfaces.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// The storage capacity (GiB) of the file system. Valid values between `64` and `524288`.
	StorageCapacity *int `pulumi:"storageCapacity"`
	// The filesystem storage type. Only `SSD` is supported.
	StorageType *string `pulumi:"storageType"`
	// A list of IDs for the subnets that the file system will be accessible from.
	SubnetIds string `pulumi:"subnetIds"`
	// A map of tags to assign to the file system. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Throughput (MB/s) of the file system. Valid values depend on `deploymentType`. Must be one of `64`, `128`, `256`, `512`, `1024`, `2048`, `3072`, `4096` for `SINGLE_AZ_1`. Must be one of `160`, `320`, `640`, `1280`, `2560`, `3840`, `5120`, `7680`, `10240` for `SINGLE_AZ_2`.
	ThroughputCapacity int `pulumi:"throughputCapacity"`
	// The preferred start time (in `d:HH:MM` format) to perform weekly maintenance, in the UTC time zone.
	WeeklyMaintenanceStartTime *string `pulumi:"weeklyMaintenanceStartTime"`
}

// The set of arguments for constructing a OpenZfsFileSystem resource.
type OpenZfsFileSystemArgs struct {
	// The number of days to retain automatic backups. Setting this to 0 disables automatic backups. You can retain automatic backups for a maximum of 90 days.
	AutomaticBackupRetentionDays pulumix.Input[*int]
	// The ID of the source backup to create the filesystem from.
	BackupId pulumix.Input[*string]
	// A boolean flag indicating whether tags for the file system should be copied to backups. The default value is false.
	CopyTagsToBackups pulumix.Input[*bool]
	// A boolean flag indicating whether tags for the file system should be copied to snapshots. The default value is false.
	CopyTagsToVolumes pulumix.Input[*bool]
	// A recurring daily time, in the format HH:MM. HH is the zero-padded hour of the day (0-23), and MM is the zero-padded minute of the hour. For example, 05:00 specifies 5 AM daily. Requires `automaticBackupRetentionDays` to be set.
	DailyAutomaticBackupStartTime pulumix.Input[*string]
	// The filesystem deployment type. Valid values: `SINGLE_AZ_1`, `SINGLE_AZ_2` and `MULTI_AZ_1`.
	DeploymentType pulumix.Input[string]
	// The SSD IOPS configuration for the Amazon FSx for OpenZFS file system. See Disk Iops Configuration below.
	DiskIopsConfiguration pulumix.Input[*OpenZfsFileSystemDiskIopsConfigurationArgs]
	// (Multi-AZ only) Specifies the IP address range in which the endpoints to access your file system will be created.
	EndpointIpAddressRange pulumix.Input[*string]
	// ARN for the KMS Key to encrypt the file system at rest, Defaults to an AWS managed KMS Key.
	KmsKeyId pulumix.Input[*string]
	// (Multi-AZ only) Required when `deploymentType` is set to `MULTI_AZ_1`. This specifies the subnet in which you want the preferred file server to be located.
	PreferredSubnetId pulumix.Input[*string]
	// The configuration for the root volume of the file system. All other volumes are children or the root volume. See Root Volume Configuration below.
	RootVolumeConfiguration pulumix.Input[*OpenZfsFileSystemRootVolumeConfigurationArgs]
	// (Multi-AZ only) Specifies the route tables in which Amazon FSx creates the rules for routing traffic to the correct file server. You should specify all virtual private cloud (VPC) route tables associated with the subnets in which your clients are located. By default, Amazon FSx selects your VPC's default route table.
	RouteTableIds pulumix.Input[[]string]
	// A list of IDs for the security groups that apply to the specified network interfaces created for file system access. These security groups will apply to all network interfaces.
	SecurityGroupIds pulumix.Input[[]string]
	// The storage capacity (GiB) of the file system. Valid values between `64` and `524288`.
	StorageCapacity pulumix.Input[*int]
	// The filesystem storage type. Only `SSD` is supported.
	StorageType pulumix.Input[*string]
	// A list of IDs for the subnets that the file system will be accessible from.
	SubnetIds pulumix.Input[string]
	// A map of tags to assign to the file system. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// Throughput (MB/s) of the file system. Valid values depend on `deploymentType`. Must be one of `64`, `128`, `256`, `512`, `1024`, `2048`, `3072`, `4096` for `SINGLE_AZ_1`. Must be one of `160`, `320`, `640`, `1280`, `2560`, `3840`, `5120`, `7680`, `10240` for `SINGLE_AZ_2`.
	ThroughputCapacity pulumix.Input[int]
	// The preferred start time (in `d:HH:MM` format) to perform weekly maintenance, in the UTC time zone.
	WeeklyMaintenanceStartTime pulumix.Input[*string]
}

func (OpenZfsFileSystemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*openZfsFileSystemArgs)(nil)).Elem()
}

type OpenZfsFileSystemOutput struct{ *pulumi.OutputState }

func (OpenZfsFileSystemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenZfsFileSystem)(nil)).Elem()
}

func (o OpenZfsFileSystemOutput) ToOpenZfsFileSystemOutput() OpenZfsFileSystemOutput {
	return o
}

func (o OpenZfsFileSystemOutput) ToOpenZfsFileSystemOutputWithContext(ctx context.Context) OpenZfsFileSystemOutput {
	return o
}

func (o OpenZfsFileSystemOutput) ToOutput(ctx context.Context) pulumix.Output[OpenZfsFileSystem] {
	return pulumix.Output[OpenZfsFileSystem]{
		OutputState: o.OutputState,
	}
}

// Amazon Resource Name of the file system.
func (o OpenZfsFileSystemOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[OpenZfsFileSystem](o, func(v OpenZfsFileSystem) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The number of days to retain automatic backups. Setting this to 0 disables automatic backups. You can retain automatic backups for a maximum of 90 days.
func (o OpenZfsFileSystemOutput) AutomaticBackupRetentionDays() pulumix.Output[*int] {
	value := pulumix.Apply[OpenZfsFileSystem](o, func(v OpenZfsFileSystem) pulumix.Output[*int] { return v.AutomaticBackupRetentionDays })
	return pulumix.Flatten[*int, pulumix.Output[*int]](value)
}

// The ID of the source backup to create the filesystem from.
func (o OpenZfsFileSystemOutput) BackupId() pulumix.Output[*string] {
	value := pulumix.Apply[OpenZfsFileSystem](o, func(v OpenZfsFileSystem) pulumix.Output[*string] { return v.BackupId })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// A boolean flag indicating whether tags for the file system should be copied to backups. The default value is false.
func (o OpenZfsFileSystemOutput) CopyTagsToBackups() pulumix.Output[*bool] {
	value := pulumix.Apply[OpenZfsFileSystem](o, func(v OpenZfsFileSystem) pulumix.Output[*bool] { return v.CopyTagsToBackups })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// A boolean flag indicating whether tags for the file system should be copied to snapshots. The default value is false.
func (o OpenZfsFileSystemOutput) CopyTagsToVolumes() pulumix.Output[*bool] {
	value := pulumix.Apply[OpenZfsFileSystem](o, func(v OpenZfsFileSystem) pulumix.Output[*bool] { return v.CopyTagsToVolumes })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// A recurring daily time, in the format HH:MM. HH is the zero-padded hour of the day (0-23), and MM is the zero-padded minute of the hour. For example, 05:00 specifies 5 AM daily. Requires `automaticBackupRetentionDays` to be set.
func (o OpenZfsFileSystemOutput) DailyAutomaticBackupStartTime() pulumix.Output[string] {
	value := pulumix.Apply[OpenZfsFileSystem](o, func(v OpenZfsFileSystem) pulumix.Output[string] { return v.DailyAutomaticBackupStartTime })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The filesystem deployment type. Valid values: `SINGLE_AZ_1`, `SINGLE_AZ_2` and `MULTI_AZ_1`.
func (o OpenZfsFileSystemOutput) DeploymentType() pulumix.Output[string] {
	value := pulumix.Apply[OpenZfsFileSystem](o, func(v OpenZfsFileSystem) pulumix.Output[string] { return v.DeploymentType })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The SSD IOPS configuration for the Amazon FSx for OpenZFS file system. See Disk Iops Configuration below.
func (o OpenZfsFileSystemOutput) DiskIopsConfiguration() pulumix.GPtrOutput[OpenZfsFileSystemDiskIopsConfiguration, OpenZfsFileSystemDiskIopsConfigurationOutput] {
	value := pulumix.Apply[OpenZfsFileSystem](o, func(v OpenZfsFileSystem) pulumix.GPtrOutput[OpenZfsFileSystemDiskIopsConfiguration, OpenZfsFileSystemDiskIopsConfigurationOutput] {
		return v.DiskIopsConfiguration
	})
	unwrapped := pulumix.Flatten[*OpenZfsFileSystemDiskIopsConfiguration, pulumix.GPtrOutput[OpenZfsFileSystemDiskIopsConfiguration, OpenZfsFileSystemDiskIopsConfigurationOutput]](value)
	return pulumix.GPtrOutput[OpenZfsFileSystemDiskIopsConfiguration, OpenZfsFileSystemDiskIopsConfigurationOutput]{OutputState: unwrapped.OutputState}
}

// DNS name for the file system, e.g., `fs-12345678.fsx.us-west-2.amazonaws.com`
func (o OpenZfsFileSystemOutput) DnsName() pulumix.Output[string] {
	value := pulumix.Apply[OpenZfsFileSystem](o, func(v OpenZfsFileSystem) pulumix.Output[string] { return v.DnsName })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// (Multi-AZ only) Specifies the IP address range in which the endpoints to access your file system will be created.
func (o OpenZfsFileSystemOutput) EndpointIpAddressRange() pulumix.Output[string] {
	value := pulumix.Apply[OpenZfsFileSystem](o, func(v OpenZfsFileSystem) pulumix.Output[string] { return v.EndpointIpAddressRange })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// ARN for the KMS Key to encrypt the file system at rest, Defaults to an AWS managed KMS Key.
func (o OpenZfsFileSystemOutput) KmsKeyId() pulumix.Output[string] {
	value := pulumix.Apply[OpenZfsFileSystem](o, func(v OpenZfsFileSystem) pulumix.Output[string] { return v.KmsKeyId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Set of Elastic Network Interface identifiers from which the file system is accessible The first network interface returned is the primary network interface.
func (o OpenZfsFileSystemOutput) NetworkInterfaceIds() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[OpenZfsFileSystem](o, func(v OpenZfsFileSystem) pulumix.ArrayOutput[string] { return v.NetworkInterfaceIds })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// AWS account identifier that created the file system.
func (o OpenZfsFileSystemOutput) OwnerId() pulumix.Output[string] {
	value := pulumix.Apply[OpenZfsFileSystem](o, func(v OpenZfsFileSystem) pulumix.Output[string] { return v.OwnerId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// (Multi-AZ only) Required when `deploymentType` is set to `MULTI_AZ_1`. This specifies the subnet in which you want the preferred file server to be located.
func (o OpenZfsFileSystemOutput) PreferredSubnetId() pulumix.Output[*string] {
	value := pulumix.Apply[OpenZfsFileSystem](o, func(v OpenZfsFileSystem) pulumix.Output[*string] { return v.PreferredSubnetId })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The configuration for the root volume of the file system. All other volumes are children or the root volume. See Root Volume Configuration below.
func (o OpenZfsFileSystemOutput) RootVolumeConfiguration() pulumix.GPtrOutput[OpenZfsFileSystemRootVolumeConfiguration, OpenZfsFileSystemRootVolumeConfigurationOutput] {
	value := pulumix.Apply[OpenZfsFileSystem](o, func(v OpenZfsFileSystem) pulumix.GPtrOutput[OpenZfsFileSystemRootVolumeConfiguration, OpenZfsFileSystemRootVolumeConfigurationOutput] {
		return v.RootVolumeConfiguration
	})
	unwrapped := pulumix.Flatten[*OpenZfsFileSystemRootVolumeConfiguration, pulumix.GPtrOutput[OpenZfsFileSystemRootVolumeConfiguration, OpenZfsFileSystemRootVolumeConfigurationOutput]](value)
	return pulumix.GPtrOutput[OpenZfsFileSystemRootVolumeConfiguration, OpenZfsFileSystemRootVolumeConfigurationOutput]{OutputState: unwrapped.OutputState}
}

// Identifier of the root volume, e.g., `fsvol-12345678`
func (o OpenZfsFileSystemOutput) RootVolumeId() pulumix.Output[string] {
	value := pulumix.Apply[OpenZfsFileSystem](o, func(v OpenZfsFileSystem) pulumix.Output[string] { return v.RootVolumeId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// (Multi-AZ only) Specifies the route tables in which Amazon FSx creates the rules for routing traffic to the correct file server. You should specify all virtual private cloud (VPC) route tables associated with the subnets in which your clients are located. By default, Amazon FSx selects your VPC's default route table.
func (o OpenZfsFileSystemOutput) RouteTableIds() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[OpenZfsFileSystem](o, func(v OpenZfsFileSystem) pulumix.ArrayOutput[string] { return v.RouteTableIds })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// A list of IDs for the security groups that apply to the specified network interfaces created for file system access. These security groups will apply to all network interfaces.
func (o OpenZfsFileSystemOutput) SecurityGroupIds() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[OpenZfsFileSystem](o, func(v OpenZfsFileSystem) pulumix.ArrayOutput[string] { return v.SecurityGroupIds })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// The storage capacity (GiB) of the file system. Valid values between `64` and `524288`.
func (o OpenZfsFileSystemOutput) StorageCapacity() pulumix.Output[*int] {
	value := pulumix.Apply[OpenZfsFileSystem](o, func(v OpenZfsFileSystem) pulumix.Output[*int] { return v.StorageCapacity })
	return pulumix.Flatten[*int, pulumix.Output[*int]](value)
}

// The filesystem storage type. Only `SSD` is supported.
func (o OpenZfsFileSystemOutput) StorageType() pulumix.Output[*string] {
	value := pulumix.Apply[OpenZfsFileSystem](o, func(v OpenZfsFileSystem) pulumix.Output[*string] { return v.StorageType })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// A list of IDs for the subnets that the file system will be accessible from.
func (o OpenZfsFileSystemOutput) SubnetIds() pulumix.Output[string] {
	value := pulumix.Apply[OpenZfsFileSystem](o, func(v OpenZfsFileSystem) pulumix.Output[string] { return v.SubnetIds })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// A map of tags to assign to the file system. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o OpenZfsFileSystemOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[OpenZfsFileSystem](o, func(v OpenZfsFileSystem) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o OpenZfsFileSystemOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[OpenZfsFileSystem](o, func(v OpenZfsFileSystem) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Throughput (MB/s) of the file system. Valid values depend on `deploymentType`. Must be one of `64`, `128`, `256`, `512`, `1024`, `2048`, `3072`, `4096` for `SINGLE_AZ_1`. Must be one of `160`, `320`, `640`, `1280`, `2560`, `3840`, `5120`, `7680`, `10240` for `SINGLE_AZ_2`.
func (o OpenZfsFileSystemOutput) ThroughputCapacity() pulumix.Output[int] {
	value := pulumix.Apply[OpenZfsFileSystem](o, func(v OpenZfsFileSystem) pulumix.Output[int] { return v.ThroughputCapacity })
	return pulumix.Flatten[int, pulumix.Output[int]](value)
}

// Identifier of the Virtual Private Cloud for the file system.
func (o OpenZfsFileSystemOutput) VpcId() pulumix.Output[string] {
	value := pulumix.Apply[OpenZfsFileSystem](o, func(v OpenZfsFileSystem) pulumix.Output[string] { return v.VpcId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The preferred start time (in `d:HH:MM` format) to perform weekly maintenance, in the UTC time zone.
func (o OpenZfsFileSystemOutput) WeeklyMaintenanceStartTime() pulumix.Output[string] {
	value := pulumix.Apply[OpenZfsFileSystem](o, func(v OpenZfsFileSystem) pulumix.Output[string] { return v.WeeklyMaintenanceStartTime })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(OpenZfsFileSystemOutput{})
}
