// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appconfig

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an AppConfig Deployment resource for an `appconfig.Application` resource.
type Deployment struct {
	pulumi.CustomResourceState

	// Application ID. Must be between 4 and 7 characters in length.
	ApplicationId pulumix.Output[string] `pulumi:"applicationId"`
	// ARN of the AppConfig Deployment.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// Configuration profile ID. Must be between 4 and 7 characters in length.
	ConfigurationProfileId pulumix.Output[string] `pulumi:"configurationProfileId"`
	// Configuration version to deploy. Can be at most 1024 characters.
	ConfigurationVersion pulumix.Output[string] `pulumi:"configurationVersion"`
	// Deployment number.
	DeploymentNumber pulumix.Output[int] `pulumi:"deploymentNumber"`
	// Deployment strategy ID or name of a predefined deployment strategy. See [Predefined Deployment Strategies](https://docs.aws.amazon.com/appconfig/latest/userguide/appconfig-creating-deployment-strategy.html#appconfig-creating-deployment-strategy-predefined) for more details.
	DeploymentStrategyId pulumix.Output[string] `pulumi:"deploymentStrategyId"`
	// Description of the deployment. Can be at most 1024 characters.
	Description pulumix.Output[*string] `pulumi:"description"`
	// Environment ID. Must be between 4 and 7 characters in length.
	EnvironmentId pulumix.Output[string] `pulumi:"environmentId"`
	// State of the deployment.
	State pulumix.Output[string] `pulumi:"state"`
	// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
}

// NewDeployment registers a new resource with the given unique name, arguments, and options.
func NewDeployment(ctx *pulumi.Context,
	name string, args *DeploymentArgs, opts ...pulumi.ResourceOption) (*Deployment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApplicationId == nil {
		return nil, errors.New("invalid value for required argument 'ApplicationId'")
	}
	if args.ConfigurationProfileId == nil {
		return nil, errors.New("invalid value for required argument 'ConfigurationProfileId'")
	}
	if args.ConfigurationVersion == nil {
		return nil, errors.New("invalid value for required argument 'ConfigurationVersion'")
	}
	if args.DeploymentStrategyId == nil {
		return nil, errors.New("invalid value for required argument 'DeploymentStrategyId'")
	}
	if args.EnvironmentId == nil {
		return nil, errors.New("invalid value for required argument 'EnvironmentId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Deployment
	err := ctx.RegisterResource("aws:appconfig/deployment:Deployment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDeployment gets an existing Deployment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDeployment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DeploymentState, opts ...pulumi.ResourceOption) (*Deployment, error) {
	var resource Deployment
	err := ctx.ReadResource("aws:appconfig/deployment:Deployment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Deployment resources.
type deploymentState struct {
	// Application ID. Must be between 4 and 7 characters in length.
	ApplicationId *string `pulumi:"applicationId"`
	// ARN of the AppConfig Deployment.
	Arn *string `pulumi:"arn"`
	// Configuration profile ID. Must be between 4 and 7 characters in length.
	ConfigurationProfileId *string `pulumi:"configurationProfileId"`
	// Configuration version to deploy. Can be at most 1024 characters.
	ConfigurationVersion *string `pulumi:"configurationVersion"`
	// Deployment number.
	DeploymentNumber *int `pulumi:"deploymentNumber"`
	// Deployment strategy ID or name of a predefined deployment strategy. See [Predefined Deployment Strategies](https://docs.aws.amazon.com/appconfig/latest/userguide/appconfig-creating-deployment-strategy.html#appconfig-creating-deployment-strategy-predefined) for more details.
	DeploymentStrategyId *string `pulumi:"deploymentStrategyId"`
	// Description of the deployment. Can be at most 1024 characters.
	Description *string `pulumi:"description"`
	// Environment ID. Must be between 4 and 7 characters in length.
	EnvironmentId *string `pulumi:"environmentId"`
	// State of the deployment.
	State *string `pulumi:"state"`
	// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type DeploymentState struct {
	// Application ID. Must be between 4 and 7 characters in length.
	ApplicationId pulumix.Input[*string]
	// ARN of the AppConfig Deployment.
	Arn pulumix.Input[*string]
	// Configuration profile ID. Must be between 4 and 7 characters in length.
	ConfigurationProfileId pulumix.Input[*string]
	// Configuration version to deploy. Can be at most 1024 characters.
	ConfigurationVersion pulumix.Input[*string]
	// Deployment number.
	DeploymentNumber pulumix.Input[*int]
	// Deployment strategy ID or name of a predefined deployment strategy. See [Predefined Deployment Strategies](https://docs.aws.amazon.com/appconfig/latest/userguide/appconfig-creating-deployment-strategy.html#appconfig-creating-deployment-strategy-predefined) for more details.
	DeploymentStrategyId pulumix.Input[*string]
	// Description of the deployment. Can be at most 1024 characters.
	Description pulumix.Input[*string]
	// Environment ID. Must be between 4 and 7 characters in length.
	EnvironmentId pulumix.Input[*string]
	// State of the deployment.
	State pulumix.Input[*string]
	// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
}

func (DeploymentState) ElementType() reflect.Type {
	return reflect.TypeOf((*deploymentState)(nil)).Elem()
}

type deploymentArgs struct {
	// Application ID. Must be between 4 and 7 characters in length.
	ApplicationId string `pulumi:"applicationId"`
	// Configuration profile ID. Must be between 4 and 7 characters in length.
	ConfigurationProfileId string `pulumi:"configurationProfileId"`
	// Configuration version to deploy. Can be at most 1024 characters.
	ConfigurationVersion string `pulumi:"configurationVersion"`
	// Deployment strategy ID or name of a predefined deployment strategy. See [Predefined Deployment Strategies](https://docs.aws.amazon.com/appconfig/latest/userguide/appconfig-creating-deployment-strategy.html#appconfig-creating-deployment-strategy-predefined) for more details.
	DeploymentStrategyId string `pulumi:"deploymentStrategyId"`
	// Description of the deployment. Can be at most 1024 characters.
	Description *string `pulumi:"description"`
	// Environment ID. Must be between 4 and 7 characters in length.
	EnvironmentId string `pulumi:"environmentId"`
	// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Deployment resource.
type DeploymentArgs struct {
	// Application ID. Must be between 4 and 7 characters in length.
	ApplicationId pulumix.Input[string]
	// Configuration profile ID. Must be between 4 and 7 characters in length.
	ConfigurationProfileId pulumix.Input[string]
	// Configuration version to deploy. Can be at most 1024 characters.
	ConfigurationVersion pulumix.Input[string]
	// Deployment strategy ID or name of a predefined deployment strategy. See [Predefined Deployment Strategies](https://docs.aws.amazon.com/appconfig/latest/userguide/appconfig-creating-deployment-strategy.html#appconfig-creating-deployment-strategy-predefined) for more details.
	DeploymentStrategyId pulumix.Input[string]
	// Description of the deployment. Can be at most 1024 characters.
	Description pulumix.Input[*string]
	// Environment ID. Must be between 4 and 7 characters in length.
	EnvironmentId pulumix.Input[string]
	// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (DeploymentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*deploymentArgs)(nil)).Elem()
}

type DeploymentOutput struct{ *pulumi.OutputState }

func (DeploymentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Deployment)(nil)).Elem()
}

func (o DeploymentOutput) ToDeploymentOutput() DeploymentOutput {
	return o
}

func (o DeploymentOutput) ToDeploymentOutputWithContext(ctx context.Context) DeploymentOutput {
	return o
}

func (o DeploymentOutput) ToOutput(ctx context.Context) pulumix.Output[Deployment] {
	return pulumix.Output[Deployment]{
		OutputState: o.OutputState,
	}
}

// Application ID. Must be between 4 and 7 characters in length.
func (o DeploymentOutput) ApplicationId() pulumix.Output[string] {
	value := pulumix.Apply[Deployment](o, func(v Deployment) pulumix.Output[string] { return v.ApplicationId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// ARN of the AppConfig Deployment.
func (o DeploymentOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[Deployment](o, func(v Deployment) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Configuration profile ID. Must be between 4 and 7 characters in length.
func (o DeploymentOutput) ConfigurationProfileId() pulumix.Output[string] {
	value := pulumix.Apply[Deployment](o, func(v Deployment) pulumix.Output[string] { return v.ConfigurationProfileId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Configuration version to deploy. Can be at most 1024 characters.
func (o DeploymentOutput) ConfigurationVersion() pulumix.Output[string] {
	value := pulumix.Apply[Deployment](o, func(v Deployment) pulumix.Output[string] { return v.ConfigurationVersion })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Deployment number.
func (o DeploymentOutput) DeploymentNumber() pulumix.Output[int] {
	value := pulumix.Apply[Deployment](o, func(v Deployment) pulumix.Output[int] { return v.DeploymentNumber })
	return pulumix.Flatten[int, pulumix.Output[int]](value)
}

// Deployment strategy ID or name of a predefined deployment strategy. See [Predefined Deployment Strategies](https://docs.aws.amazon.com/appconfig/latest/userguide/appconfig-creating-deployment-strategy.html#appconfig-creating-deployment-strategy-predefined) for more details.
func (o DeploymentOutput) DeploymentStrategyId() pulumix.Output[string] {
	value := pulumix.Apply[Deployment](o, func(v Deployment) pulumix.Output[string] { return v.DeploymentStrategyId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Description of the deployment. Can be at most 1024 characters.
func (o DeploymentOutput) Description() pulumix.Output[*string] {
	value := pulumix.Apply[Deployment](o, func(v Deployment) pulumix.Output[*string] { return v.Description })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Environment ID. Must be between 4 and 7 characters in length.
func (o DeploymentOutput) EnvironmentId() pulumix.Output[string] {
	value := pulumix.Apply[Deployment](o, func(v Deployment) pulumix.Output[string] { return v.EnvironmentId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// State of the deployment.
func (o DeploymentOutput) State() pulumix.Output[string] {
	value := pulumix.Apply[Deployment](o, func(v Deployment) pulumix.Output[string] { return v.State })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o DeploymentOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[Deployment](o, func(v Deployment) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o DeploymentOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[Deployment](o, func(v Deployment) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(DeploymentOutput{})
}
