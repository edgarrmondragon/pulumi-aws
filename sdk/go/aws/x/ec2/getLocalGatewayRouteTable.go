// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides details about an EC2 Local Gateway Route Table.
//
// This data source can prove useful when a module accepts a local gateway route table id as
// an input variable and needs to, for example, find the associated Outpost or Local Gateway.
func GetLocalGatewayRouteTable(ctx *pulumi.Context, args *GetLocalGatewayRouteTableArgs, opts ...pulumi.InvokeOption) (*GetLocalGatewayRouteTableResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetLocalGatewayRouteTableResult
	err := ctx.Invoke("aws:ec2/getLocalGatewayRouteTable:getLocalGatewayRouteTable", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLocalGatewayRouteTable.
type GetLocalGatewayRouteTableArgs struct {
	Filters []GetLocalGatewayRouteTableFilter `pulumi:"filters"`
	// ID of the specific local gateway route table to retrieve.
	LocalGatewayId *string `pulumi:"localGatewayId"`
	// Local Gateway Route Table Id assigned to desired local gateway route table
	LocalGatewayRouteTableId *string `pulumi:"localGatewayRouteTableId"`
	// ARN of the Outpost the local gateway route table is associated with.
	OutpostArn *string `pulumi:"outpostArn"`
	// State of the local gateway route table.
	State *string `pulumi:"state"`
	// Mapping of tags, each pair of which must exactly match
	// a pair on the desired local gateway route table.
	//
	// More complex filters can be expressed using one or more `filter` sub-blocks,
	// which take the following arguments:
	Tags map[string]string `pulumi:"tags"`
}

// A collection of values returned by getLocalGatewayRouteTable.
type GetLocalGatewayRouteTableResult struct {
	Filters []GetLocalGatewayRouteTableFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id                       string            `pulumi:"id"`
	LocalGatewayId           string            `pulumi:"localGatewayId"`
	LocalGatewayRouteTableId string            `pulumi:"localGatewayRouteTableId"`
	OutpostArn               string            `pulumi:"outpostArn"`
	State                    string            `pulumi:"state"`
	Tags                     map[string]string `pulumi:"tags"`
}

func GetLocalGatewayRouteTableOutput(ctx *pulumi.Context, args GetLocalGatewayRouteTableOutputArgs, opts ...pulumi.InvokeOption) GetLocalGatewayRouteTableResultOutput {
	outputResult := pulumix.ApplyErr[*GetLocalGatewayRouteTableArgs](args.ToOutput(), func(plainArgs *GetLocalGatewayRouteTableArgs) (*GetLocalGatewayRouteTableResult, error) {
		return GetLocalGatewayRouteTable(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[GetLocalGatewayRouteTableResultOutput, *GetLocalGatewayRouteTableResult](outputResult)
}

// A collection of arguments for invoking getLocalGatewayRouteTable.
type GetLocalGatewayRouteTableOutputArgs struct {
	Filters pulumix.Input[[]*GetLocalGatewayRouteTableFilterArgs] `pulumi:"filters"`
	// ID of the specific local gateway route table to retrieve.
	LocalGatewayId pulumix.Input[*string] `pulumi:"localGatewayId"`
	// Local Gateway Route Table Id assigned to desired local gateway route table
	LocalGatewayRouteTableId pulumix.Input[*string] `pulumi:"localGatewayRouteTableId"`
	// ARN of the Outpost the local gateway route table is associated with.
	OutpostArn pulumix.Input[*string] `pulumi:"outpostArn"`
	// State of the local gateway route table.
	State pulumix.Input[*string] `pulumi:"state"`
	// Mapping of tags, each pair of which must exactly match
	// a pair on the desired local gateway route table.
	//
	// More complex filters can be expressed using one or more `filter` sub-blocks,
	// which take the following arguments:
	Tags pulumix.Input[map[string]string] `pulumi:"tags"`
}

func (args GetLocalGatewayRouteTableOutputArgs) ToOutput() pulumix.Output[*GetLocalGatewayRouteTableArgs] {
	allArgs := pulumix.All(
		args.Filters.ToOutput(context.Background()).AsAny(),
		args.LocalGatewayId.ToOutput(context.Background()).AsAny(),
		args.LocalGatewayRouteTableId.ToOutput(context.Background()).AsAny(),
		args.OutpostArn.ToOutput(context.Background()).AsAny(),
		args.State.ToOutput(context.Background()).AsAny(),
		args.Tags.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *GetLocalGatewayRouteTableArgs {
		return &GetLocalGatewayRouteTableArgs{
			Filters:                  resolvedArgs[0].([]GetLocalGatewayRouteTableFilter),
			LocalGatewayId:           resolvedArgs[1].(*string),
			LocalGatewayRouteTableId: resolvedArgs[2].(*string),
			OutpostArn:               resolvedArgs[3].(*string),
			State:                    resolvedArgs[4].(*string),
			Tags:                     resolvedArgs[5].(map[string]string),
		}
	})
}

type GetLocalGatewayRouteTableResultOutput struct{ *pulumi.OutputState }

func (GetLocalGatewayRouteTableResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocalGatewayRouteTableResult)(nil)).Elem()
}

func (o GetLocalGatewayRouteTableResultOutput) ToOutput(context.Context) pulumix.Output[*GetLocalGatewayRouteTableResult] {
	return pulumix.Output[*GetLocalGatewayRouteTableResult]{
		OutputState: o.OutputState,
	}
}

func (o GetLocalGatewayRouteTableResultOutput) Filters() pulumix.GArrayOutput[GetLocalGatewayRouteTableFilter, GetLocalGatewayRouteTableFilterOutput] {
	value := pulumix.Apply[*GetLocalGatewayRouteTableResult](o, func(v *GetLocalGatewayRouteTableResult) []GetLocalGatewayRouteTableFilter { return v.Filters })
	return pulumix.GArrayOutput[GetLocalGatewayRouteTableFilter, GetLocalGatewayRouteTableFilterOutput]{
		OutputState: value.OutputState,
	}
}

func (o GetLocalGatewayRouteTableResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*GetLocalGatewayRouteTableResult](o, func(v *GetLocalGatewayRouteTableResult) string { return v.Id })
}

func (o GetLocalGatewayRouteTableResultOutput) LocalGatewayId() pulumix.Output[string] {
	return pulumix.Apply[*GetLocalGatewayRouteTableResult](o, func(v *GetLocalGatewayRouteTableResult) string { return v.LocalGatewayId })
}

func (o GetLocalGatewayRouteTableResultOutput) LocalGatewayRouteTableId() pulumix.Output[string] {
	return pulumix.Apply[*GetLocalGatewayRouteTableResult](o, func(v *GetLocalGatewayRouteTableResult) string { return v.LocalGatewayRouteTableId })
}

func (o GetLocalGatewayRouteTableResultOutput) OutpostArn() pulumix.Output[string] {
	return pulumix.Apply[*GetLocalGatewayRouteTableResult](o, func(v *GetLocalGatewayRouteTableResult) string { return v.OutpostArn })
}

func (o GetLocalGatewayRouteTableResultOutput) State() pulumix.Output[string] {
	return pulumix.Apply[*GetLocalGatewayRouteTableResult](o, func(v *GetLocalGatewayRouteTableResult) string { return v.State })
}

func (o GetLocalGatewayRouteTableResultOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[*GetLocalGatewayRouteTableResult](o, func(v *GetLocalGatewayRouteTableResult) map[string]string { return v.Tags })
	return pulumix.MapOutput[string]{
		OutputState: value.OutputState,
	}
}
