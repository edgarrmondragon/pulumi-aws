// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package wafregional

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// `wafregional.IpSet` Retrieves a WAF Regional IP Set Resource Id.
func GetIpset(ctx *pulumi.Context, args *GetIpsetArgs, opts ...pulumi.InvokeOption) (*GetIpsetResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetIpsetResult
	err := ctx.Invoke("aws:wafregional/getIpset:getIpset", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getIpset.
type GetIpsetArgs struct {
	// Name of the WAF Regional IP set.
	Name string `pulumi:"name"`
}

// A collection of values returned by getIpset.
type GetIpsetResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

func GetIpsetOutput(ctx *pulumi.Context, args GetIpsetOutputArgs, opts ...pulumi.InvokeOption) GetIpsetResultOutput {
	outputResult := pulumix.ApplyErr[*GetIpsetArgs](args.ToOutput(), func(plainArgs *GetIpsetArgs) (*GetIpsetResult, error) {
		return GetIpset(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[GetIpsetResultOutput, *GetIpsetResult](outputResult)
}

// A collection of arguments for invoking getIpset.
type GetIpsetOutputArgs struct {
	// Name of the WAF Regional IP set.
	Name pulumix.Input[string] `pulumi:"name"`
}

func (args GetIpsetOutputArgs) ToOutput() pulumix.Output[*GetIpsetArgs] {
	allArgs := pulumix.All(
		args.Name.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *GetIpsetArgs {
		return &GetIpsetArgs{
			Name: resolvedArgs[0].(string),
		}
	})
}

type GetIpsetResultOutput struct{ *pulumi.OutputState }

func (GetIpsetResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpsetResult)(nil)).Elem()
}

func (o GetIpsetResultOutput) ToOutput(context.Context) pulumix.Output[*GetIpsetResult] {
	return pulumix.Output[*GetIpsetResult]{
		OutputState: o.OutputState,
	}
}

func (o GetIpsetResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*GetIpsetResult](o, func(v *GetIpsetResult) string { return v.Id })
}

func (o GetIpsetResultOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[*GetIpsetResult](o, func(v *GetIpsetResult) string { return v.Name })
}
