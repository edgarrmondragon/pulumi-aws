// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package lex

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides details about a specific Amazon Lex Slot Type.
func LookupSlotType(ctx *pulumi.Context, args *LookupSlotTypeArgs, opts ...pulumi.InvokeOption) (*LookupSlotTypeResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSlotTypeResult
	err := ctx.Invoke("aws:lex/getSlotType:getSlotType", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSlotType.
type LookupSlotTypeArgs struct {
	// Name of the slot type. The name is case sensitive.
	Name string `pulumi:"name"`
	// Version of the slot type.
	Version *string `pulumi:"version"`
}

// A collection of values returned by getSlotType.
type LookupSlotTypeResult struct {
	// Checksum identifying the version of the slot type that was created. The checksum is
	// not included as an argument because the resource will add it automatically when updating the slot type.
	Checksum string `pulumi:"checksum"`
	// Date when the slot type version was created.
	CreatedDate string `pulumi:"createdDate"`
	// Description of the slot type.
	Description string `pulumi:"description"`
	// Set of EnumerationValue objects that defines the values that
	// the slot type can take. Each value can have a set of synonyms, which are additional values that help
	// train the machine learning model about the values that it resolves for a slot.
	EnumerationValues []GetSlotTypeEnumerationValue `pulumi:"enumerationValues"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Date when the $LATEST version of this slot type was updated.
	LastUpdatedDate string `pulumi:"lastUpdatedDate"`
	// Name of the slot type. The name is not case sensitive.
	Name string `pulumi:"name"`
	// Determines the slot resolution strategy that Amazon Lex
	// uses to return slot type values. `ORIGINAL_VALUE` returns the value entered by the user if the user
	// value is similar to the slot value. `TOP_RESOLUTION` returns the first value in the resolution list
	// if there is a resolution list for the slot, otherwise null is returned.
	ValueSelectionStrategy string `pulumi:"valueSelectionStrategy"`
	// Version of the slot type.
	Version *string `pulumi:"version"`
}

func LookupSlotTypeOutput(ctx *pulumi.Context, args LookupSlotTypeOutputArgs, opts ...pulumi.InvokeOption) LookupSlotTypeResultOutput {
	outputResult := pulumix.ApplyErr[*LookupSlotTypeArgs](args.ToOutput(), func(plainArgs *LookupSlotTypeArgs) (*LookupSlotTypeResult, error) {
		return LookupSlotType(ctx, plainArgs, opts...)
	})

	return pulumix.Cast[LookupSlotTypeResultOutput, *LookupSlotTypeResult](outputResult)
}

// A collection of arguments for invoking getSlotType.
type LookupSlotTypeOutputArgs struct {
	// Name of the slot type. The name is case sensitive.
	Name pulumix.Input[string] `pulumi:"name"`
	// Version of the slot type.
	Version pulumix.Input[*string] `pulumi:"version"`
}

func (args LookupSlotTypeOutputArgs) ToOutput() pulumix.Output[*LookupSlotTypeArgs] {
	allArgs := pulumix.All(
		args.Name.ToOutput(context.Background()).AsAny(),
		args.Version.ToOutput(context.Background()).AsAny())
	return pulumix.Apply[[]any](allArgs, func(resolvedArgs []interface{}) *LookupSlotTypeArgs {
		return &LookupSlotTypeArgs{
			Name:    resolvedArgs[0].(string),
			Version: resolvedArgs[1].(*string),
		}
	})
}

type LookupSlotTypeResultOutput struct{ *pulumi.OutputState }

func (LookupSlotTypeResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSlotTypeResult)(nil)).Elem()
}

func (o LookupSlotTypeResultOutput) ToOutput(context.Context) pulumix.Output[*LookupSlotTypeResult] {
	return pulumix.Output[*LookupSlotTypeResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupSlotTypeResultOutput) Checksum() pulumix.Output[string] {
	return pulumix.Apply[*LookupSlotTypeResult](o, func(v *LookupSlotTypeResult) string { return v.Checksum })
}

func (o LookupSlotTypeResultOutput) CreatedDate() pulumix.Output[string] {
	return pulumix.Apply[*LookupSlotTypeResult](o, func(v *LookupSlotTypeResult) string { return v.CreatedDate })
}

func (o LookupSlotTypeResultOutput) Description() pulumix.Output[string] {
	return pulumix.Apply[*LookupSlotTypeResult](o, func(v *LookupSlotTypeResult) string { return v.Description })
}

func (o LookupSlotTypeResultOutput) EnumerationValues() pulumix.GArrayOutput[GetSlotTypeEnumerationValue, GetSlotTypeEnumerationValueOutput] {
	value := pulumix.Apply[*LookupSlotTypeResult](o, func(v *LookupSlotTypeResult) []GetSlotTypeEnumerationValue { return v.EnumerationValues })
	return pulumix.GArrayOutput[GetSlotTypeEnumerationValue, GetSlotTypeEnumerationValueOutput]{
		OutputState: value.OutputState,
	}
}

func (o LookupSlotTypeResultOutput) Id() pulumix.Output[string] {
	return pulumix.Apply[*LookupSlotTypeResult](o, func(v *LookupSlotTypeResult) string { return v.Id })
}

func (o LookupSlotTypeResultOutput) LastUpdatedDate() pulumix.Output[string] {
	return pulumix.Apply[*LookupSlotTypeResult](o, func(v *LookupSlotTypeResult) string { return v.LastUpdatedDate })
}

func (o LookupSlotTypeResultOutput) Name() pulumix.Output[string] {
	return pulumix.Apply[*LookupSlotTypeResult](o, func(v *LookupSlotTypeResult) string { return v.Name })
}

func (o LookupSlotTypeResultOutput) ValueSelectionStrategy() pulumix.Output[string] {
	return pulumix.Apply[*LookupSlotTypeResult](o, func(v *LookupSlotTypeResult) string { return v.ValueSelectionStrategy })
}

func (o LookupSlotTypeResultOutput) Version() pulumix.Output[*string] {
	return pulumix.Apply[*LookupSlotTypeResult](o, func(v *LookupSlotTypeResult) *string { return v.Version })
}
