// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a customer gateway inside a VPC. These objects can be connected to VPN gateways via VPN connections, and allow you to establish tunnels between your network and the VPC.
type CustomerGateway struct {
	pulumi.CustomResourceState

	// The ARN of the customer gateway.
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The gateway's Border Gateway Protocol (BGP) Autonomous System Number (ASN).
	BgpAsn pulumix.Output[string] `pulumi:"bgpAsn"`
	// The Amazon Resource Name (ARN) for the customer gateway certificate.
	CertificateArn pulumix.Output[*string] `pulumi:"certificateArn"`
	// A name for the customer gateway device.
	DeviceName pulumix.Output[*string] `pulumi:"deviceName"`
	// The IPv4 address for the customer gateway device's outside interface.
	IpAddress pulumix.Output[*string] `pulumi:"ipAddress"`
	// Tags to apply to the gateway. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
	// The type of customer gateway. The only type AWS
	// supports at this time is "ipsec.1".
	Type pulumix.Output[string] `pulumi:"type"`
}

// NewCustomerGateway registers a new resource with the given unique name, arguments, and options.
func NewCustomerGateway(ctx *pulumi.Context,
	name string, args *CustomerGatewayArgs, opts ...pulumi.ResourceOption) (*CustomerGateway, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BgpAsn == nil {
		return nil, errors.New("invalid value for required argument 'BgpAsn'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CustomerGateway
	err := ctx.RegisterResource("aws:ec2/customerGateway:CustomerGateway", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCustomerGateway gets an existing CustomerGateway resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCustomerGateway(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CustomerGatewayState, opts ...pulumi.ResourceOption) (*CustomerGateway, error) {
	var resource CustomerGateway
	err := ctx.ReadResource("aws:ec2/customerGateway:CustomerGateway", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CustomerGateway resources.
type customerGatewayState struct {
	// The ARN of the customer gateway.
	Arn *string `pulumi:"arn"`
	// The gateway's Border Gateway Protocol (BGP) Autonomous System Number (ASN).
	BgpAsn *string `pulumi:"bgpAsn"`
	// The Amazon Resource Name (ARN) for the customer gateway certificate.
	CertificateArn *string `pulumi:"certificateArn"`
	// A name for the customer gateway device.
	DeviceName *string `pulumi:"deviceName"`
	// The IPv4 address for the customer gateway device's outside interface.
	IpAddress *string `pulumi:"ipAddress"`
	// Tags to apply to the gateway. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// The type of customer gateway. The only type AWS
	// supports at this time is "ipsec.1".
	Type *string `pulumi:"type"`
}

type CustomerGatewayState struct {
	// The ARN of the customer gateway.
	Arn pulumix.Input[*string]
	// The gateway's Border Gateway Protocol (BGP) Autonomous System Number (ASN).
	BgpAsn pulumix.Input[*string]
	// The Amazon Resource Name (ARN) for the customer gateway certificate.
	CertificateArn pulumix.Input[*string]
	// A name for the customer gateway device.
	DeviceName pulumix.Input[*string]
	// The IPv4 address for the customer gateway device's outside interface.
	IpAddress pulumix.Input[*string]
	// Tags to apply to the gateway. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
	// The type of customer gateway. The only type AWS
	// supports at this time is "ipsec.1".
	Type pulumix.Input[*string]
}

func (CustomerGatewayState) ElementType() reflect.Type {
	return reflect.TypeOf((*customerGatewayState)(nil)).Elem()
}

type customerGatewayArgs struct {
	// The gateway's Border Gateway Protocol (BGP) Autonomous System Number (ASN).
	BgpAsn string `pulumi:"bgpAsn"`
	// The Amazon Resource Name (ARN) for the customer gateway certificate.
	CertificateArn *string `pulumi:"certificateArn"`
	// A name for the customer gateway device.
	DeviceName *string `pulumi:"deviceName"`
	// The IPv4 address for the customer gateway device's outside interface.
	IpAddress *string `pulumi:"ipAddress"`
	// Tags to apply to the gateway. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// The type of customer gateway. The only type AWS
	// supports at this time is "ipsec.1".
	Type string `pulumi:"type"`
}

// The set of arguments for constructing a CustomerGateway resource.
type CustomerGatewayArgs struct {
	// The gateway's Border Gateway Protocol (BGP) Autonomous System Number (ASN).
	BgpAsn pulumix.Input[string]
	// The Amazon Resource Name (ARN) for the customer gateway certificate.
	CertificateArn pulumix.Input[*string]
	// A name for the customer gateway device.
	DeviceName pulumix.Input[*string]
	// The IPv4 address for the customer gateway device's outside interface.
	IpAddress pulumix.Input[*string]
	// Tags to apply to the gateway. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// The type of customer gateway. The only type AWS
	// supports at this time is "ipsec.1".
	Type pulumix.Input[string]
}

func (CustomerGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*customerGatewayArgs)(nil)).Elem()
}

type CustomerGatewayOutput struct{ *pulumi.OutputState }

func (CustomerGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomerGateway)(nil)).Elem()
}

func (o CustomerGatewayOutput) ToCustomerGatewayOutput() CustomerGatewayOutput {
	return o
}

func (o CustomerGatewayOutput) ToCustomerGatewayOutputWithContext(ctx context.Context) CustomerGatewayOutput {
	return o
}

func (o CustomerGatewayOutput) ToOutput(ctx context.Context) pulumix.Output[CustomerGateway] {
	return pulumix.Output[CustomerGateway]{
		OutputState: o.OutputState,
	}
}

// The ARN of the customer gateway.
func (o CustomerGatewayOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[CustomerGateway](o, func(v CustomerGateway) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The gateway's Border Gateway Protocol (BGP) Autonomous System Number (ASN).
func (o CustomerGatewayOutput) BgpAsn() pulumix.Output[string] {
	value := pulumix.Apply[CustomerGateway](o, func(v CustomerGateway) pulumix.Output[string] { return v.BgpAsn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The Amazon Resource Name (ARN) for the customer gateway certificate.
func (o CustomerGatewayOutput) CertificateArn() pulumix.Output[*string] {
	value := pulumix.Apply[CustomerGateway](o, func(v CustomerGateway) pulumix.Output[*string] { return v.CertificateArn })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// A name for the customer gateway device.
func (o CustomerGatewayOutput) DeviceName() pulumix.Output[*string] {
	value := pulumix.Apply[CustomerGateway](o, func(v CustomerGateway) pulumix.Output[*string] { return v.DeviceName })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// The IPv4 address for the customer gateway device's outside interface.
func (o CustomerGatewayOutput) IpAddress() pulumix.Output[*string] {
	value := pulumix.Apply[CustomerGateway](o, func(v CustomerGateway) pulumix.Output[*string] { return v.IpAddress })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// Tags to apply to the gateway. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o CustomerGatewayOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[CustomerGateway](o, func(v CustomerGateway) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o CustomerGatewayOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[CustomerGateway](o, func(v CustomerGateway) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// The type of customer gateway. The only type AWS
// supports at this time is "ipsec.1".
func (o CustomerGatewayOutput) Type() pulumix.Output[string] {
	value := pulumix.Apply[CustomerGateway](o, func(v CustomerGateway) pulumix.Output[string] { return v.Type })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

func init() {
	pulumi.RegisterOutputType(CustomerGatewayOutput{})
}
