// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networkmanager

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a core network resource.
type CoreNetwork struct {
	pulumi.CustomResourceState

	// Core Network Amazon Resource Name (ARN).
	Arn pulumix.Output[string] `pulumi:"arn"`
	// The base policy created by setting the `createBasePolicy` argument to `true` requires a region to be set in the `edge-locations`, `location` key. If `basePolicyRegion` is not specified, the region used in the base policy defaults to the region specified in the `provider` block.
	//
	// Deprecated: Use the base_policy_regions argument instead. This argument will be removed in the next major version of the provider.
	BasePolicyRegion pulumix.Output[*string] `pulumi:"basePolicyRegion"`
	// A list of regions to add to the base policy. The base policy created by setting the `createBasePolicy` argument to `true` requires one or more regions to be set in the `edge-locations`, `location` key. If `basePolicyRegions` is not specified, the region used in the base policy defaults to the region specified in the `provider` block.
	BasePolicyRegions pulumix.ArrayOutput[string] `pulumi:"basePolicyRegions"`
	// Specifies whether to create a base policy when a core network is created or updated. A base policy is created and set to `LIVE` to allow attachments to the core network (e.g. VPC Attachments) before applying a policy document provided using the `networkmanager.CoreNetworkPolicyAttachment` resource. This base policy is needed if your core network does not have any `LIVE` policies and your policy document has static routes pointing to VPC attachments and you want to attach your VPCs to the core network before applying the desired policy document. Valid values are `true` or `false`. An example of this Pulumi snippet can be found above for VPC Attachment in a single region and for VPC Attachment multi-region. An example base policy is shown below. This base policy is overridden with the policy that you specify in the `networkmanager.CoreNetworkPolicyAttachment` resource.
	//
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		return nil
	// 	})
	// }
	// ```
	CreateBasePolicy pulumix.Output[*bool] `pulumi:"createBasePolicy"`
	// Timestamp when a core network was created.
	CreatedAt pulumix.Output[string] `pulumi:"createdAt"`
	// Description of the Core Network.
	Description pulumix.Output[*string] `pulumi:"description"`
	// One or more blocks detailing the edges within a core network. Detailed below.
	Edges pulumix.GArrayOutput[CoreNetworkEdge, CoreNetworkEdgeOutput] `pulumi:"edges"`
	// The ID of the global network that a core network will be a part of.
	GlobalNetworkId pulumix.Output[string] `pulumi:"globalNetworkId"`
	// One or more blocks detailing the segments within a core network. Detailed below.
	Segments pulumix.GArrayOutput[CoreNetworkSegment, CoreNetworkSegmentOutput] `pulumi:"segments"`
	// Current state of a core network.
	State pulumix.Output[string] `pulumi:"state"`
	// Key-value tags for the Core Network. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.MapOutput[string] `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.MapOutput[string] `pulumi:"tagsAll"`
}

// NewCoreNetwork registers a new resource with the given unique name, arguments, and options.
func NewCoreNetwork(ctx *pulumi.Context,
	name string, args *CoreNetworkArgs, opts ...pulumi.ResourceOption) (*CoreNetwork, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.GlobalNetworkId == nil {
		return nil, errors.New("invalid value for required argument 'GlobalNetworkId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CoreNetwork
	err := ctx.RegisterResource("aws:networkmanager/coreNetwork:CoreNetwork", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCoreNetwork gets an existing CoreNetwork resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCoreNetwork(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CoreNetworkState, opts ...pulumi.ResourceOption) (*CoreNetwork, error) {
	var resource CoreNetwork
	err := ctx.ReadResource("aws:networkmanager/coreNetwork:CoreNetwork", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CoreNetwork resources.
type coreNetworkState struct {
	// Core Network Amazon Resource Name (ARN).
	Arn *string `pulumi:"arn"`
	// The base policy created by setting the `createBasePolicy` argument to `true` requires a region to be set in the `edge-locations`, `location` key. If `basePolicyRegion` is not specified, the region used in the base policy defaults to the region specified in the `provider` block.
	//
	// Deprecated: Use the base_policy_regions argument instead. This argument will be removed in the next major version of the provider.
	BasePolicyRegion *string `pulumi:"basePolicyRegion"`
	// A list of regions to add to the base policy. The base policy created by setting the `createBasePolicy` argument to `true` requires one or more regions to be set in the `edge-locations`, `location` key. If `basePolicyRegions` is not specified, the region used in the base policy defaults to the region specified in the `provider` block.
	BasePolicyRegions []string `pulumi:"basePolicyRegions"`
	// Specifies whether to create a base policy when a core network is created or updated. A base policy is created and set to `LIVE` to allow attachments to the core network (e.g. VPC Attachments) before applying a policy document provided using the `networkmanager.CoreNetworkPolicyAttachment` resource. This base policy is needed if your core network does not have any `LIVE` policies and your policy document has static routes pointing to VPC attachments and you want to attach your VPCs to the core network before applying the desired policy document. Valid values are `true` or `false`. An example of this Pulumi snippet can be found above for VPC Attachment in a single region and for VPC Attachment multi-region. An example base policy is shown below. This base policy is overridden with the policy that you specify in the `networkmanager.CoreNetworkPolicyAttachment` resource.
	//
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		return nil
	// 	})
	// }
	// ```
	CreateBasePolicy *bool `pulumi:"createBasePolicy"`
	// Timestamp when a core network was created.
	CreatedAt *string `pulumi:"createdAt"`
	// Description of the Core Network.
	Description *string `pulumi:"description"`
	// One or more blocks detailing the edges within a core network. Detailed below.
	Edges []CoreNetworkEdge `pulumi:"edges"`
	// The ID of the global network that a core network will be a part of.
	GlobalNetworkId *string `pulumi:"globalNetworkId"`
	// One or more blocks detailing the segments within a core network. Detailed below.
	Segments []CoreNetworkSegment `pulumi:"segments"`
	// Current state of a core network.
	State *string `pulumi:"state"`
	// Key-value tags for the Core Network. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type CoreNetworkState struct {
	// Core Network Amazon Resource Name (ARN).
	Arn pulumix.Input[*string]
	// The base policy created by setting the `createBasePolicy` argument to `true` requires a region to be set in the `edge-locations`, `location` key. If `basePolicyRegion` is not specified, the region used in the base policy defaults to the region specified in the `provider` block.
	//
	// Deprecated: Use the base_policy_regions argument instead. This argument will be removed in the next major version of the provider.
	BasePolicyRegion pulumix.Input[*string]
	// A list of regions to add to the base policy. The base policy created by setting the `createBasePolicy` argument to `true` requires one or more regions to be set in the `edge-locations`, `location` key. If `basePolicyRegions` is not specified, the region used in the base policy defaults to the region specified in the `provider` block.
	BasePolicyRegions pulumix.Input[[]string]
	// Specifies whether to create a base policy when a core network is created or updated. A base policy is created and set to `LIVE` to allow attachments to the core network (e.g. VPC Attachments) before applying a policy document provided using the `networkmanager.CoreNetworkPolicyAttachment` resource. This base policy is needed if your core network does not have any `LIVE` policies and your policy document has static routes pointing to VPC attachments and you want to attach your VPCs to the core network before applying the desired policy document. Valid values are `true` or `false`. An example of this Pulumi snippet can be found above for VPC Attachment in a single region and for VPC Attachment multi-region. An example base policy is shown below. This base policy is overridden with the policy that you specify in the `networkmanager.CoreNetworkPolicyAttachment` resource.
	//
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		return nil
	// 	})
	// }
	// ```
	CreateBasePolicy pulumix.Input[*bool]
	// Timestamp when a core network was created.
	CreatedAt pulumix.Input[*string]
	// Description of the Core Network.
	Description pulumix.Input[*string]
	// One or more blocks detailing the edges within a core network. Detailed below.
	Edges pulumix.Input[[]*CoreNetworkEdgeArgs]
	// The ID of the global network that a core network will be a part of.
	GlobalNetworkId pulumix.Input[*string]
	// One or more blocks detailing the segments within a core network. Detailed below.
	Segments pulumix.Input[[]*CoreNetworkSegmentArgs]
	// Current state of a core network.
	State pulumix.Input[*string]
	// Key-value tags for the Core Network. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumix.Input[map[string]string]
}

func (CoreNetworkState) ElementType() reflect.Type {
	return reflect.TypeOf((*coreNetworkState)(nil)).Elem()
}

type coreNetworkArgs struct {
	// The base policy created by setting the `createBasePolicy` argument to `true` requires a region to be set in the `edge-locations`, `location` key. If `basePolicyRegion` is not specified, the region used in the base policy defaults to the region specified in the `provider` block.
	//
	// Deprecated: Use the base_policy_regions argument instead. This argument will be removed in the next major version of the provider.
	BasePolicyRegion *string `pulumi:"basePolicyRegion"`
	// A list of regions to add to the base policy. The base policy created by setting the `createBasePolicy` argument to `true` requires one or more regions to be set in the `edge-locations`, `location` key. If `basePolicyRegions` is not specified, the region used in the base policy defaults to the region specified in the `provider` block.
	BasePolicyRegions []string `pulumi:"basePolicyRegions"`
	// Specifies whether to create a base policy when a core network is created or updated. A base policy is created and set to `LIVE` to allow attachments to the core network (e.g. VPC Attachments) before applying a policy document provided using the `networkmanager.CoreNetworkPolicyAttachment` resource. This base policy is needed if your core network does not have any `LIVE` policies and your policy document has static routes pointing to VPC attachments and you want to attach your VPCs to the core network before applying the desired policy document. Valid values are `true` or `false`. An example of this Pulumi snippet can be found above for VPC Attachment in a single region and for VPC Attachment multi-region. An example base policy is shown below. This base policy is overridden with the policy that you specify in the `networkmanager.CoreNetworkPolicyAttachment` resource.
	//
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		return nil
	// 	})
	// }
	// ```
	CreateBasePolicy *bool `pulumi:"createBasePolicy"`
	// Description of the Core Network.
	Description *string `pulumi:"description"`
	// The ID of the global network that a core network will be a part of.
	GlobalNetworkId string `pulumi:"globalNetworkId"`
	// Key-value tags for the Core Network. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a CoreNetwork resource.
type CoreNetworkArgs struct {
	// The base policy created by setting the `createBasePolicy` argument to `true` requires a region to be set in the `edge-locations`, `location` key. If `basePolicyRegion` is not specified, the region used in the base policy defaults to the region specified in the `provider` block.
	//
	// Deprecated: Use the base_policy_regions argument instead. This argument will be removed in the next major version of the provider.
	BasePolicyRegion pulumix.Input[*string]
	// A list of regions to add to the base policy. The base policy created by setting the `createBasePolicy` argument to `true` requires one or more regions to be set in the `edge-locations`, `location` key. If `basePolicyRegions` is not specified, the region used in the base policy defaults to the region specified in the `provider` block.
	BasePolicyRegions pulumix.Input[[]string]
	// Specifies whether to create a base policy when a core network is created or updated. A base policy is created and set to `LIVE` to allow attachments to the core network (e.g. VPC Attachments) before applying a policy document provided using the `networkmanager.CoreNetworkPolicyAttachment` resource. This base policy is needed if your core network does not have any `LIVE` policies and your policy document has static routes pointing to VPC attachments and you want to attach your VPCs to the core network before applying the desired policy document. Valid values are `true` or `false`. An example of this Pulumi snippet can be found above for VPC Attachment in a single region and for VPC Attachment multi-region. An example base policy is shown below. This base policy is overridden with the policy that you specify in the `networkmanager.CoreNetworkPolicyAttachment` resource.
	//
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		return nil
	// 	})
	// }
	// ```
	CreateBasePolicy pulumix.Input[*bool]
	// Description of the Core Network.
	Description pulumix.Input[*string]
	// The ID of the global network that a core network will be a part of.
	GlobalNetworkId pulumix.Input[string]
	// Key-value tags for the Core Network. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumix.Input[map[string]string]
}

func (CoreNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*coreNetworkArgs)(nil)).Elem()
}

type CoreNetworkOutput struct{ *pulumi.OutputState }

func (CoreNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CoreNetwork)(nil)).Elem()
}

func (o CoreNetworkOutput) ToCoreNetworkOutput() CoreNetworkOutput {
	return o
}

func (o CoreNetworkOutput) ToCoreNetworkOutputWithContext(ctx context.Context) CoreNetworkOutput {
	return o
}

func (o CoreNetworkOutput) ToOutput(ctx context.Context) pulumix.Output[CoreNetwork] {
	return pulumix.Output[CoreNetwork]{
		OutputState: o.OutputState,
	}
}

// Core Network Amazon Resource Name (ARN).
func (o CoreNetworkOutput) Arn() pulumix.Output[string] {
	value := pulumix.Apply[CoreNetwork](o, func(v CoreNetwork) pulumix.Output[string] { return v.Arn })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// The base policy created by setting the `createBasePolicy` argument to `true` requires a region to be set in the `edge-locations`, `location` key. If `basePolicyRegion` is not specified, the region used in the base policy defaults to the region specified in the `provider` block.
//
// Deprecated: Use the base_policy_regions argument instead. This argument will be removed in the next major version of the provider.
func (o CoreNetworkOutput) BasePolicyRegion() pulumix.Output[*string] {
	value := pulumix.Apply[CoreNetwork](o, func(v CoreNetwork) pulumix.Output[*string] { return v.BasePolicyRegion })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// A list of regions to add to the base policy. The base policy created by setting the `createBasePolicy` argument to `true` requires one or more regions to be set in the `edge-locations`, `location` key. If `basePolicyRegions` is not specified, the region used in the base policy defaults to the region specified in the `provider` block.
func (o CoreNetworkOutput) BasePolicyRegions() pulumix.ArrayOutput[string] {
	value := pulumix.Apply[CoreNetwork](o, func(v CoreNetwork) pulumix.ArrayOutput[string] { return v.BasePolicyRegions })
	unwrapped := pulumix.Flatten[[]string, pulumix.ArrayOutput[string]](value)
	return pulumix.ArrayOutput[string]{OutputState: unwrapped.OutputState}
}

// Specifies whether to create a base policy when a core network is created or updated. A base policy is created and set to `LIVE` to allow attachments to the core network (e.g. VPC Attachments) before applying a policy document provided using the `networkmanager.CoreNetworkPolicyAttachment` resource. This base policy is needed if your core network does not have any `LIVE` policies and your policy document has static routes pointing to VPC attachments and you want to attach your VPCs to the core network before applying the desired policy document. Valid values are `true` or `false`. An example of this Pulumi snippet can be found above for VPC Attachment in a single region and for VPC Attachment multi-region. An example base policy is shown below. This base policy is overridden with the policy that you specify in the `networkmanager.CoreNetworkPolicyAttachment` resource.
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			return nil
//		})
//	}
//
// ```
func (o CoreNetworkOutput) CreateBasePolicy() pulumix.Output[*bool] {
	value := pulumix.Apply[CoreNetwork](o, func(v CoreNetwork) pulumix.Output[*bool] { return v.CreateBasePolicy })
	return pulumix.Flatten[*bool, pulumix.Output[*bool]](value)
}

// Timestamp when a core network was created.
func (o CoreNetworkOutput) CreatedAt() pulumix.Output[string] {
	value := pulumix.Apply[CoreNetwork](o, func(v CoreNetwork) pulumix.Output[string] { return v.CreatedAt })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Description of the Core Network.
func (o CoreNetworkOutput) Description() pulumix.Output[*string] {
	value := pulumix.Apply[CoreNetwork](o, func(v CoreNetwork) pulumix.Output[*string] { return v.Description })
	return pulumix.Flatten[*string, pulumix.Output[*string]](value)
}

// One or more blocks detailing the edges within a core network. Detailed below.
func (o CoreNetworkOutput) Edges() pulumix.GArrayOutput[CoreNetworkEdge, CoreNetworkEdgeOutput] {
	value := pulumix.Apply[CoreNetwork](o, func(v CoreNetwork) pulumix.GArrayOutput[CoreNetworkEdge, CoreNetworkEdgeOutput] { return v.Edges })
	unwrapped := pulumix.Flatten[[]CoreNetworkEdge, pulumix.GArrayOutput[CoreNetworkEdge, CoreNetworkEdgeOutput]](value)
	return pulumix.GArrayOutput[CoreNetworkEdge, CoreNetworkEdgeOutput]{OutputState: unwrapped.OutputState}
}

// The ID of the global network that a core network will be a part of.
func (o CoreNetworkOutput) GlobalNetworkId() pulumix.Output[string] {
	value := pulumix.Apply[CoreNetwork](o, func(v CoreNetwork) pulumix.Output[string] { return v.GlobalNetworkId })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// One or more blocks detailing the segments within a core network. Detailed below.
func (o CoreNetworkOutput) Segments() pulumix.GArrayOutput[CoreNetworkSegment, CoreNetworkSegmentOutput] {
	value := pulumix.Apply[CoreNetwork](o, func(v CoreNetwork) pulumix.GArrayOutput[CoreNetworkSegment, CoreNetworkSegmentOutput] {
		return v.Segments
	})
	unwrapped := pulumix.Flatten[[]CoreNetworkSegment, pulumix.GArrayOutput[CoreNetworkSegment, CoreNetworkSegmentOutput]](value)
	return pulumix.GArrayOutput[CoreNetworkSegment, CoreNetworkSegmentOutput]{OutputState: unwrapped.OutputState}
}

// Current state of a core network.
func (o CoreNetworkOutput) State() pulumix.Output[string] {
	value := pulumix.Apply[CoreNetwork](o, func(v CoreNetwork) pulumix.Output[string] { return v.State })
	return pulumix.Flatten[string, pulumix.Output[string]](value)
}

// Key-value tags for the Core Network. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o CoreNetworkOutput) Tags() pulumix.MapOutput[string] {
	value := pulumix.Apply[CoreNetwork](o, func(v CoreNetwork) pulumix.MapOutput[string] { return v.Tags })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o CoreNetworkOutput) TagsAll() pulumix.MapOutput[string] {
	value := pulumix.Apply[CoreNetwork](o, func(v CoreNetwork) pulumix.MapOutput[string] { return v.TagsAll })
	unwrapped := pulumix.Flatten[map[string]string, pulumix.MapOutput[string]](value)
	return pulumix.MapOutput[string]{OutputState: unwrapped.OutputState}
}

func init() {
	pulumi.RegisterOutputType(CoreNetworkOutput{})
}
